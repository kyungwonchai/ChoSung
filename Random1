이 문제를 해결하기 위해 다음과 같은 접근 방식을 사용할 수 있습니다:

전체 텍스트를 한 줄씩 검사합니다.
각 줄에서 rf-로 시작하지만 공백 4칸 뒤에 세미콜론이 아닌 다른 문자로 끝나는 줄을 찾아냅니다.
해당 줄을 리스트에 저장합니다.
리스트에 저장된 각 항목을 메시지 박스에서 줄바꿈으로 출력합니다.
여기 C# 코드 예제가 있습니다:

csharp
코드 복사
using System;
using System.Collections.Generic;
using System.Text.RegularExpressions;
using System.Windows.Forms; // 메시지 박스를 사용하기 위해 필요

class Program
{
    static void Main()
    {
        string[] lines = {
            "scgfsg    rf-sc-frsrf-rewt-;sg-gds-gsd-gdsg-",
            "tewtwt   rf-gds-gd-sgs-gs-g    ;fdsfdsf",
            "rf-gdsg-ds-gdsg    :something else",
            "another line",
            "rf-something    text    ;more text"
        };

        string pattern = @"\brf-.*[\s]{4}(?!;).*$";
        List<string> invalidLines = new List<string>();

        foreach (var line in lines)
        {
            if (Regex.IsMatch(line, pattern))
            {
                invalidLines.Add(line);
            }
        }

        if (invalidLines.Count > 0)
        {
            string message = string.Join(Environment.NewLine, invalidLines);
            MessageBox.Show(message, "Invalid Lines Found");
        }
        else
        {
            MessageBox.Show("No invalid lines found.", "Validation Result");
        }
    }
}
코드 설명:
lines 배열: 예제 데이터를 포함한 문자열 배열입니다. 실제 상황에서는 이 부분을 파일 읽기나 다른 방법으로 데이터를 읽어오는 부분으로 대체할 수 있습니다.

pattern: 정규식 패턴으로, rf-로 시작하지만 공백 4칸 뒤에 세미콜론이 아닌 다른 문자가 나오는 줄을 찾습니다.

\brf-: rf-로 시작하는 문자열을 찾습니다.
.*[\s]{4}: rf- 뒤에 어떤 문자들이 오고 공백 4칸이 있는 것을 찾습니다.
(?!;): 공백 4칸 뒤에 ;가 아닌 다른 문자가 오는 것을 확인합니다.
.*$: 줄 끝까지 매칭합니다.
invalidLines 리스트: 조건에 맞는 줄들을 저장합니다.

foreach 루프: 각 줄을 순회하면서 정규식에 맞는 줄을 찾고, 찾은 줄을 invalidLines 리스트에 추가합니다.

MessageBox.Show: 리스트에 저장된 내용을 메시지 박스로 출력합니다. string.Join(Environment.NewLine, invalidLines)를 사용하여 각 줄을 줄바꿈으로 연결해줍니다.

결과:
코드가 실행되면, rf-로 시작하고 공백 4칸 뒤에 ;가 아닌 다른 문자로 끝나는 줄들이 메시지 박스에 각각 한 줄씩 표시됩니다.
메시지 박스는 리스트에 저장된 항목 수에 따라 여러 줄로 표시됩니다.
이렇게 하면 원하는 조건에 맞지 않는 줄을 찾아 메시지 박스로 출력할 수 있습니다