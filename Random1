파이썬에서 특정 경로의 하위 디렉토리를 포함한 모든 .txt 파일을 찾아, 해당 파일 이름들을 c:\122.csv 파일에 저장하는 코드를 작성하려면 아래와 같은 방식으로 접근할 수 있습니다. 주석을 통해 자세한 설명을 덧붙였으니 참고






나의 말:
파일 마지막 쓰기된 시간 순으로 가져와야되 기록상으로 그리고 기로갈떄도 적어주고 컬럼에다가
ChatGPT의 말:
ChatGPT
아래 코드는 c:\1234\123 하위의 모든 .txt 파일을 파일이 마지막으로 수정된 시간을 기준으로 정렬한 후, 그 파일 경로와 마지막 수정 시간을 c:\122.csv에 저장하는 코드입니다.

python
코드 복사
import os
import csv
from datetime import datetime

# 탐색할 디렉토리 경로
directory_path = r'c:\1234\123'

# 저장할 CSV 파일 경로
csv_file_path = r'c:\122.csv'

# 모든 .txt 파일을 탐색하고, 파일 경로와 수정 시간 정보를 저장할 리스트
file_info_list = []

# os.walk를 사용하여 하위 폴더를 포함한 모든 파일을 검색
for root, dirs, files in os.walk(directory_path):
    for file in files:
        if file.endswith('.txt'):  # .txt 파일만 처리
            file_path = os.path.join(root, file)  # 전체 파일 경로
            file_mod_time = os.path.getmtime(file_path)  # 파일의 마지막 수정 시간 (Unix 타임스탬프)
            file_info_list.append((file_path, file_mod_time))

# 수정 시간을 기준으로 파일 정보 리스트를 정렬 (오름차순)
file_info_list.sort(key=lambda x: x[1])

# CSV 파일에 기록 (경로, 마지막 수정 시간 컬럼을 작성)
with open(csv_file_path, mode='w', newline='', encoding='utf-8') as file:
    writer = csv.writer(file)
    # CSV 헤더 작성
    writer.writerow(['File Path', 'Last Modified Time'])
    
    # 각 파일의 경로와 수정 시간을 기록
    for file_info in file_info_list:
        file_path, mod_time = file_info
        # 수정 시간을 사람이 읽을 수 있는 형식으로 변환
        mod_time_str = datetime.fromtimestamp(mod_time).strftime('%Y-%m-%d %H:%M:%S')
        writer.writerow([file_path, mod_time_str])

print(f'파일 경로와 마지막 수정 시간을 {csv_file_path}에 성공적으로 저장했습니다.')
설명:
os.walk(): 지정한 경로(c:\1234\123)의 모든 하위 폴더를 포함하여 .txt 파일을 찾습니다.
getmtime(): 각 파일의 마지막 수정 시간을 가져옵니다.
정렬: 파일 수정 시간을 기준으로 오름차순으로 파일을 정렬합니다.
CSV 기록: 파일 경로와 수정 시간을 c:\122.csv에 저장합니다. 수정 시간은 YYYY-MM-DD HH:MM:SS 형식으로 변환됩니다.
이 코드를 실행하면 c:\122.csv 파일에 모든 .txt 파일의 경로와 수정 시간이 기록됩니다.











ChatGPT는 실수를 할 수 있습니다. 중요한 정보를 확인하세요.