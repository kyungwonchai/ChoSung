원하는 방식에 맞춰 단순하게 코드 수정해드리겠습니다. IP를 리스트로 관리하고, 특정 IP가 해당 리스트에 포함되는지 확인하여 IsVisible 속성만 제어하는 방식으로 작성하겠습니다.

1. XAML에서 직접 IsVisible을 조절할 수 있도록 BoolToVisibilityConverter를 사용하기
필요한 코드만 제공하겠습니다. 아래처럼 리스트와 IP를 받아 IsVisible 속성에 바인딩할 수 있게 간단하게 구성했습니다.

Step 1: MainWindow.xaml에 BoolToVisibilityConverter 추가
xml
코드 복사
<Window x:Class="YourNamespace.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:YourNamespace"
        Title="MainWindow" Height="350" Width="525">
    <Window.Resources>
        <!-- Boolean 값을 Visibility로 변환 -->
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
    </Window.Resources>
    
    <Grid DataContext="{Binding}">
        <!-- IP가 리스트에 있으면 보이도록 Visibility 설정 -->
        <TextBlock Text="This is visible if IP is allowed" 
                   Visibility="{Binding IsIpVisible, Converter={StaticResource BoolToVisibilityConverter}}"/>
    </Grid>
</Window>
Step 2: ViewModel에 리스트와 IsIpVisible 속성 추가
IsIpVisible 속성에 IP가 포함되어 있을 때만 true 값을 할당하도록 합니다.

csharp
코드 복사
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Runtime.CompilerServices;

public class MainViewModel : INotifyPropertyChanged
{
    private bool _isIpVisible;
    public ObservableCollection<string> AllowedIPs { get; set; }

    public bool IsIpVisible
    {
        get => _isIpVisible;
        set
        {
            _isIpVisible = value;
            OnPropertyChanged();
        }
    }

    public MainViewModel()
    {
        // 허용된 IP 리스트를 초기화합니다.
        AllowedIPs = new ObservableCollection<string> { "192.168.0.1", "10.0.0.1" };
    }

    // IP가 포함되어 있는지 확인하여 IsIpVisible을 설정하는 메서드
    public void CheckIpVisibility(string currentIP)
    {
        IsIpVisible = AllowedIPs.Contains(currentIP);
    }

    public event PropertyChangedEventHandler PropertyChanged;

    protected void OnPropertyChanged([CallerMemberName] string propertyName = null)
    {
        PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
    }
}
Step 3: MainWindow.xaml.cs에서 IP 확인 후 CheckIpVisibility 호출
문서를 열 때 IP를 확인한 후, CheckIpVisibility 메서드를 호출하여 IsIpVisible 속성을 업데이트합니다.

csharp
코드 복사
public partial class MainWindow : Window
{
    private MainViewModel ViewModel { get; set; }

    public MainWindow()
    {
        InitializeComponent();
        ViewModel = new MainViewModel();
        DataContext = ViewModel;

        // 예시 IP (문서를 열 때 실제 IP를 가져와서 사용)
        string currentIP = "192.168.0.1";
        ViewModel.CheckIpVisibility(currentIP);
    }