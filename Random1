evExpress의 ExportToXlsx 메소드와 XlsxExportOptionsEx 클래스를 사용하여 WPF에서 GridControl 데이터를 Excel로 내보내고, 인쇄 설정을 조정하는 예제 코드를 제공하겠습니다. 이 코드는 데이터를 Excel 파일로 내보내는 과정을 보여줍니다. 그러나, Excel 파일의 인쇄 설정(가로 방향, 한 화면에 모두 들어오도록 등)을 직접 조정하는 것은 ExportToXlsx 메소드를 사용하는 과정에서는 직접적으로 수행할 수 없습니다. Excel 파일 내보내기 후, Excel 자동화 라이브러리(예: Microsoft Office Interop Excel)를 사용하여 파일을 열고 인쇄 설정을 변경해야 합니다.

다음은 GridControl의 데이터를 Excel로 내보내고, 시트 이름을 "ABC"로 설정하는 예제 코드입니다:

csharp
Copy code
using DevExpress.Export;
using DevExpress.Xpf.Grid;

// gridControl이 여러분의 GridControl 컴포넌트의 인스턴스라고 가정합니다.
// filePath는 내보낼 파일의 경로입니다.

var options = new XlsxExportOptionsEx();
options.ExportType = ExportType.WYSIWYG;
options.SheetName = "ABC";

gridControl.View.ExportToXlsx("yourFilePath.xlsx", options);
위 코드에서 ExportType 속성을 ExportType.WYSIWYG로 설정하면, 사용자에게 보이는 그대로의 방식으로 데이터가 Excel에 내보내집니다. 그러나 Excel로 내보낸 후의 가로 방향 인쇄 설정 및 인쇄 영역 지정은 Excel 파일을 별도로 처리해야 합니다.

Excel 파일을 다루는 데는 여러 방법이 있지만, 여기에서는 Microsoft Office Interop Excel 라이브러리를 사용하는 방법에 대한 예시는 직접 제공하지 않습니다. 이는 추가적인 설정과 Microsoft Office의 설치가 필요하기 때문입니다. 만약 Excel 파일의 인쇄 설정을 프로그램에서 조정하려면, 해당 라이브러리의 문서를 참조하거나, Open XML SDK 또는 ClosedXML과 같은 라이브러리를 사용하는 방법을 고려할 수 있습니다.

Excel 파일을 조작하고 인쇄 설정을 변경하는 것은 복잡할 수 있으므로, 구체적인 코드 예시가 필요한 경우에는 해당 기술의 공식 문서나 커뮤니티 포럼에서 추가적인 정보를 찾는 것을 추천합니