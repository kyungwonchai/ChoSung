using DevExpress.XtraBars;
using DevExpress.XtraBars.Ribbon;
using DevExpress.XtraEditors;
using System;
using System.Collections.Generic;
using System.Drawing;
using System.Windows.Forms;

private Panel filteredItemsPanel; // 필터링된 아이템을 표시할 패널
private bool isSearchBarFocused; // 서치바(검색 상자) 포커스 상태를 나타내는 변수

private void SearchControl1_TextChanged(object sender, EventArgs e)
{
    string searchText = SearchControl1.Text.ToLower();

    // 패널이 존재하는 경우 기존 패널 제거
    if (filteredItemsPanel != null)
    {
        this.Controls.Remove(filteredItemsPanel);
        filteredItemsPanel.Dispose();
    }

    // 필터링된 아이템을 수집합니다.
    List<BarItem> filteredItems = new List<BarItem>();

    foreach (RibbonPage page in ribbonControl1.Pages)
    {
        foreach (RibbonPageGroup group in page.Groups)
        {
            foreach (BarItemLink itemLink in group.ItemLinks)
            {
                BarItem item = itemLink.Item;
                if (item != null && item.Caption.ToLower().Contains(searchText))
                {
                    filteredItems.Add(item);
                }
            }
        }
    }

    // 필터링된 아이템이 있는 경우에만 패널을 생성하여 아이템 목록을 표시합니다.
    if (filteredItems.Count > 0)
    {
        // 패널 생성
        filteredItemsPanel = new Panel();
        filteredItemsPanel.BorderStyle = BorderStyle.FixedSingle;
        filteredItemsPanel.Width = SearchControl1.Width;
        filteredItemsPanel.Location = new Point(SearchControl1.Left, SearchControl1.Bottom + 5);
        filteredItemsPanel.BackColor = SystemColors.Info;
        filteredItemsPanel.AutoScroll = true;

        // 아이템 목록을 표시합니다.
        for (int i = 0; i < filteredItems.Count; i++)
        {
            BarItem item = filteredItems[i];
            string caption = item.Caption;

            Button button = new Button();
            button.Text = caption;
            button.Width = filteredItemsPanel.Width - 10;
            button.Location = new Point(5, i * 25 + 5);
            button.Click += (s, args) => HandleItemClick(item); // 아이템 클릭 시 처리할 이벤트 핸들러를 지정합니다.

            filteredItemsPanel.Controls.Add(button);
        }

        // 패널을 Form에 추가합니다.
        this.Controls.Add(filteredItemsPanel);
    }
}

private void HandleItemClick(BarItem item)
{
    // 클릭한 아이템에 대한 동작을 처리합니다.
    MessageBox.Show($"Clicked: {item.Caption}");
}

private void SearchControl1_Enter(object sender, EventArgs e)
{
    isSearchBarFocused = true;
}

private void SearchControl1_Leave(object sender, EventArgs e)
{
    isSearchBarFocused = false;

    // 패널
