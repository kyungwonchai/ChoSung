andler는 타입이 다름!
네가 btn.ItemClick += config.OnClickAction; 이렇게 했는데,
오류 이유: OnClickAction은 Action 타입이고, ItemClick은 ItemClickEventHandler 타입이라서 직접 할당이 불가능함.

✅ 해결 방법
DevExpress의 ItemClickEventHandler는 다음과 같은 시그니처를 가짐:

csharp
코드 복사
void(object sender, ItemClickEventArgs e)
하지만 Action은 인자가 없는 void() 형태이므로, 타입이 다름.
👉 해결 방법: OnClickAction을 ItemClickEventHandler 형식으로 래핑해줘야 함.

✅ 방법 1: 람다식으로 해결 (가장 간단함)
csharp
코드 복사
btn.ItemClick += (s, e) => config.OnClickAction?.Invoke();
✔ 이렇게 하면 OnClickAction을 DevExpress 이벤트와 연결 가능!

✅ 방법 2: 별도 이벤트 핸들러 함수로 해결
csharp
코드 복사
private void Button_ItemClick(object sender, ItemClickEventArgs e)
{
    config.OnClickAction?.Invoke(); // OnClickAction 실행
}

// 연결
btn.ItemClick += Button_ItemClick;
✔ OnClickAction을 ItemClick 이벤트에 적용하는 별도 핸들러를 만든 것!

✅ 방법 3: OnClickAction 타입을 ItemClickEventHandler로 변경 (추천 X)
csharp
코드 복사
public ItemClickEventHandler OnClickAction { get; set; }

// 설정
config.OnClickAction = (s, e) => Console.WriteLine("버튼 클릭됨!");

// 연결
btn.ItemClick += config.OnClickAction;
❌ 단점:
OnClickAction을 Action으로 두고 싶은데 ItemClickEventHandler로 변경하면 범용성이 떨어짐.

🎯 결론
✔ 오류 이유: Action과 ItemClickEventHandler 타입이 달라서 직접 할당 불가능.
✔ 해결법 1 (추천): btn.ItemClick += (s, e) => config.OnClickAction?.Invoke();
✔ 해결법 2: 별도 이벤트 핸들러 함수 만들어서 btn.ItemClick += Button_ItemClick;
✔ 해결법 3 (비추천): OnClickAction을 ItemClickEventHandler로 변경 (범용성 낮아짐).