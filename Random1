PF에서 트레이 아이콘을 추가하고 솔루션 상의 .ico 파일을 아이콘 모양으로 지정하는 방법과 프로그램이 예기치 않게 종료되었을 때 트레이 아이콘을 파괴하는 방법에 대해 설명하겠습니다.

트레이 아이콘 추가 및 .ico 파일 지정
NotifyIcon 추가: NotifyIcon을 사용하여 트레이 아이콘을 추가합니다. WPF에는 NotifyIcon 컨트롤이 기본적으로 포함되어 있지 않으므로 Windows Forms를 사용해야 합니다.

리소스 추가: .ico 파일을 프로젝트 리소스로 추가합니다. 프로젝트의 Properties 폴더 안에 Resources.resx 파일을 열고 .ico 파일을 추가합니다.

트레이 아이콘 설정:

csharp
코드 복사
using System;
using System.Windows;
using System.Windows.Forms; // Windows Forms 사용을 위해 추가
using System.Drawing; // Icon 사용을 위해 추가

namespace YourNamespace
{
    public partial class MainWindow : Window
    {
        private NotifyIcon _notifyIcon;

        public MainWindow()
        {
            InitializeComponent();
            InitializeTrayIcon();
        }

        private void InitializeTrayIcon()
        {
            _notifyIcon = new NotifyIcon();
            _notifyIcon.Icon = new Icon("pack://application:,,,/YourNamespace;component/Resources/youricon.ico"); // 아이콘 파일 경로 지정
            _notifyIcon.Visible = true;
            _notifyIcon.DoubleClick += NotifyIcon_DoubleClick;
        }

        private void NotifyIcon_DoubleClick(object sender, EventArgs e)
        {
            // 트레이 아이콘 더블 클릭 시 동작할 코드
            this.Show();
            this.WindowState = WindowState.Normal;
        }

        protected override void OnClosed(EventArgs e)
        {
            _notifyIcon.Dispose(); // 트레이 아이콘 파괴
            base.OnClosed(e);
        }
    }
}
예기치 않게 종료될 때 트레이 아이콘 제거
프로그램이 예기치 않게 종료되거나 exit(0) 등의 호출로 종료될 때 트레이 아이콘을 제거하기 위해, 애플리케이션 종료 시 이벤트를 처리하여 NotifyIcon을 명시적으로 삭제해야 합니다.

App.xaml.cs에서 종료 이벤트 처리:
csharp
코드 복사
using System;
using System.Windows;

namespace YourNamespace
{
    public partial class App : Application
    {
        private NotifyIcon _notifyIcon;

        protected override void OnStartup(StartupEventArgs e)
        {
            base.OnStartup(e);

            MainWindow mainWindow = new MainWindow();
            _notifyIcon = mainWindow.NotifyIcon; // 메인 윈도우의 NotifyIcon 참조

            AppDomain.CurrentDomain.ProcessExit += new EventHandler(OnProcessExit);
            this.Exit += new ExitEventHandler(OnApplicationExit);
        }

        private void OnApplicationExit(object sender, ExitEventArgs e)
        {
            if (_notifyIcon != null)
            {
                _notifyIcon.Visible = false;
                _notifyIcon.Dispose();
            }
        }

        private void OnProcessExit(object sender, EventArgs e)
        {
            if (_notifyIcon != null)
            {
                _notifyIcon.Visible = false;
                _notifyIcon.Dispose();
            }
        }
    }
}
위의 코드는 애플리케이션이 종료될 때 트레이 아이콘을 제거합니다. App.xaml.cs에서 NotifyIcon을 참조하고 애플리케이션 종료 이벤트(Exit)와 프로세스 종료 이벤트(ProcessExit)를 처리하여 트레이 아이콘을 명시적으로 삭제합니다.

이렇게 하면 프로그램이 정상적으로 종료되거나 예기치 않게 종료될 때 트레이 아이콘이 올바르게 제거됩니다