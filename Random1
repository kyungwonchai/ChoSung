래는 지정된 디자이너 파일에서 리본 컨트롤 안의 리본 페이지, 리본 그룹, 버튼 정보 등을 추출하여 CSV로 저장하는 Python 코드입니다. 디자이너 파일 경로를 읽고, 해당 내용을 분석한 후 요구된 정보를 CSV로 출력합니다.

Python 코드
python
코드 복사
import csv

def extract_ribbon_details(input_file, output_file):
    # 리본 데이터 저장용 리스트
    ribbon_data = []

    try:
        with open(input_file, 'r', encoding='utf-8') as file:
            lines = file.readlines()

        current_page = None
        current_group = None

        for line in lines:
            stripped_line = line.strip()
            
            # 리본 페이지 이름 탐지
            if 'RibbonPage' in stripped_line and 'Text =' in stripped_line:
                current_page = stripped_line.split('Text =')[1].strip().strip('"')
            
            # 리본 그룹 이름 탐지
            elif 'RibbonPageGroup' in stripped_line and 'Text =' in stripped_line:
                current_group = stripped_line.split('Text =')[1].strip().strip('"')
            
            # 버튼 정보 탐지
            elif 'BarButtonItem' in stripped_line:
                button_name = stripped_line.split('Name =')[1].strip().strip('"') if 'Name =' in stripped_line else 'Unknown'
                tag_name = None
                icon_path = None
                tooltip = None
                action_function = None
                style = None

                # 해당 버튼 관련 속성 탐색
                for i in range(1, 10):
                    if len(lines) > lines.index(line) + i:
                        sub_line = lines[lines.index(line) + i].strip()

                        if 'Tag =' in sub_line:
                            tag_name = sub_line.split('=')[1].strip().strip('"')
                        elif 'ImageOptions.Image =' in sub_line:
                            icon_path = sub_line.split('=')[1].strip().strip('"')
                        elif 'Hint =' in sub_line:
                            tooltip = sub_line.split('=')[1].strip().strip('"')
                        elif 'ItemClick += ' in sub_line:
                            action_function = sub_line.split('+=')
                            action_function = action_function[1].strip().strip(';').strip()
                        elif 'Style =' in sub_line:
                            style = sub_line.split('=')[1].strip().strip(';').strip()
                    
                    # 다음 버튼 탐지 시 중지
                    if 'BarButtonItem' in sub_line:
                        break
                
                # 데이터 추가
                ribbon_data.append([
                    current_page, current_group, button_name,
                    tag_name, icon_path, tooltip, action_function, style
                ])
        
        # CSV 파일 저장
        with open(output_file, 'w', newline='', encoding='utf-8') as csvfile:
            csvwriter = csv.writer(csvfile)
            # 헤더 작성
            csvwriter.writerow([
                'Page Name', 'Group Name', 'Button Name',
                'Tag Name', 'Icon Path', 'Tooltip',
                'Action Function', 'Ribbon Item Style'
            ])
            # 데이터 작성
            csvwriter.writerows(ribbon_data)

        print(f"리본 데이터를 {output_file} 파일에 성공적으로 저장했습니다.")
    
    except Exception as e:
        print(f"오류 발생: {e}")

# 실행
input_path = r"C:\agent\txt1.txt"  # 디자이너 파일 경로
output_path = r"C:\agent\ribbon_data.csv"  # 출력 CSV 경로
extract_ribbon_details(input_path, output_path)
코드 설명
디자이너 파일 읽기:

C:\agent\txt1.txt에서 내용을 읽습니다.
RibbonPage, RibbonPageGroup, BarButtonItem를 기반으로 관련 정보를 탐색합니다.
리본 구성 요소 파싱:

페이지 이름: RibbonPage의 Text 속성에서 추출.
그룹 이름: RibbonPageGroup의 Text 속성에서 추출.
버튼 속성: BarButtonItem에서 Name, Tag, ImageOptions.Image, Hint, ItemClick 등을 추출.
CSV 파일 생성:

ribbon_data.csv 파일에 추출된 데이터를 저장.
CSV 형식의 열에는 페이지 이름, 그룹 이름, 버튼 이름, 태그, 아이콘 경로, 툴팁, 액션 함수, 스타일 등이 포함됩니다.
사용 방법:

위 코드를 실행하면 지정된 디자이너 파일을 읽고 C:\agent\ribbon_data.csv에 저장된 결과를 확인할 수 있습니다.
출력 예시 (ribbon_data.csv)
csv
코드 복사
Page Name,Group Name,Button Name,Tag Name,Icon Path,Tooltip,Action Function,Ribbon Item Style