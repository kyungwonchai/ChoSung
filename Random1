ess에서 모든 폼과 모듈의 VBA 코드를 한 번에 텍스트 파일로 저장하는 방법은 VBA 스크립트를 작성하여 사용하는 것입니다. 이 방법을 사용하면 각 개체를 순회하면서 코드를 추출하여 지정된 폴더에 텍스트 파일로 저장할 수 있습니다.

VBA 코드로 모든 폼 및 모듈 코드 내보내기
아래 VBA 코드를 Access의 새 모듈에 복사하여 붙여넣은 후 실행하면 됩니다.

VBA

Sub ExportAllVBACodeToTextFiles()

    Dim obj As AccessObject
    Dim db As DAO.Database
    Dim doc As DAO.Document
    Dim fso As Object 'Scripting.FileSystemObject
    Dim ts As Object 'Scripting.TextStream
    Dim sExportFolder As String
    Dim sFileName As String
    Dim sModuleName As String
    Dim mdl As Module

    ' 내보낼 폴더 선택 (예: C:\AccessVBACode\)
    ' 폴더가 존재하지 않으면 생성됩니다.
    sExportFolder = "C:\AccessVBACode\"

    Set fso = CreateObject("Scripting.FileSystemObject")

    ' 폴더가 없으면 생성
    If Not fso.FolderExists(sExportFolder) Then
        fso.CreateFolder sExportFolder
    End If

    Set db = CurrentDb

    ' 모든 폼의 VBA 코드 내보내기
    For Each obj In db.Containers("Forms").Documents
        sFileName = sExportFolder & "Form_" & obj.Name & ".txt"
        Set ts = fso.CreateTextFile(sFileName, True) ' True는 덮어쓰기 허용

        On Error Resume Next ' 폼에 코드가 없는 경우 오류 방지
        Set mdl = Forms(obj.Name).Module
        If Err.Number = 0 Then
            If mdl.CountOfLines > 0 Then
                ts.Write mdl.Lines(1, mdl.CountOfLines)
            Else
                ts.Write "' No VBA code in this form."
            End If
        Else
            ts.Write "' Error accessing module or no VBA code."
            Err.Clear
        End If
        On Error GoTo 0
        ts.Close
        Debug.Print obj.Name & " (폼) 코드 내보내기 완료."
    Next obj

    ' 모든 표준 모듈의 VBA 코드 내보내기
    For Each obj In CurrentProject.AllModules
        If Not obj.Name Like "Form_*" And Not obj.Name Like "Report_*" Then ' 폼/보고서 모듈 제외
            sModuleName = obj.Name
            sFileName = sExportFolder & "Module_" & sModuleName & ".txt"
            Set ts = fso.CreateTextFile(sFileName, True)

            On Error Resume Next ' 모듈에 코드가 없는 경우 오류 방지 (일반적으로 발생하지 않음)
            Set mdl = Modules(sModuleName)
            If Err.Number = 0 Then
                If mdl.CountOfLines > 0 Then
                    ts.Write mdl.Lines(1, mdl.CountOfLines)
                Else
                    ts.Write "' No VBA code in this module."
                End If
            Else
                ts.Write "' Error accessing module."
                Err.Clear
            End If
            On Error GoTo 0
            ts.Close
            Debug.Print sModuleName & " (모듈) 코드 내보내기 완료."
        End If
    Next obj

    Set ts = Nothing
    Set fso = Nothing
    Set db = Nothing

    MsgBox "모든 VBA 코드 내보내기가 완료되었습니다." & vbCrLf & "저장된 폴더: " & sExportFolder, vbInformation

End Sub
코드 사용 방법:
VBA 편집기 열기: Access에서 Alt + F11 키를 눌러 VBA 편집기를 엽니다.
새 모듈 삽입: VBA 편집기 메뉴에서 삽입(Insert) > 모듈(Module)을 선택합니다.
코드 붙여넣기: 위에 제공된 VBA 코드를 복사하여 새 모듈 창에 붙여넣습니다.
저장 폴더 경로 수정 (선택 사항): 코드 상단의 sExportFolder = "C:\AccessVBACode\" 부분을 원하는 폴더 경로로 변경할 수 있습니다. 지정한 폴더가 존재하지 않으면 스크립트가 자동으로 생성합니다.
스크립트 실행: VBA 편집기에서 F5 키를 누르거나, 메뉴에서 실행(Run) > Sub/사용자 정의 폼 실행(Run Sub/UserForm)을 선택하여 ExportAllVBACodeToTextFiles 매크로를 실행합니다.
결과 확인: 실행이 완료되면 지정한 폴더에 각 폼과 모듈의 VBA 코드가 .txt 파일로 저장된 것을 확인할 수 있습니다.
주의사항:
참조 라이브러리: 이 코드는 Microsoft DAO 3.6 Object Library (또는 상위 버전)와 Microsoft Scripting Runtime 라이브러리가 필요할 수 있습니다. VBA 편집기의 도구(Tools) > 참조(References)에서 해당 라이브러리가 선택되어 있는지 확인하세요. 대부분의 경우 기본적으로 활성화되어 있습니다.
오류 처리: 코드에는 기본적인 오류 처리 (On Error Resume Next)가 포함되어 있어, VBA 코드가 없는 폼이나 모듈에서 오류가 발생하는 것을 방지합니다.
파일 덮어쓰기: 스크립트를 다시 실행하면 기존에 생성된 텍스트 파일을 덮어씁니다. 필요하다면 백업 후 실행하세요.