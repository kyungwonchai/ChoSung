네, C#에서 지정한 형식의 로그 메시지를 분석하기 위한 정규식을 설계하는 것을 도와드릴 수 있습니다. 제공해주신 예시를 토대로 필요한 부분을 추출하는 정규식을 만들어 보겠습니다.

시간과 "PCB Move InputJig" 감지하기:

로그 시작이 시간으로 시작하며 "[hh:mm:ss]" 형식을 따릅니다.
이후 "PCB Move InputJig" 문자열이 따라옵니다.
"Site"와 숫자 추출하기:

"Site"라는 문자 다음에 숫자가 하나 이상 오는 패턴을 감지합니다. 예를 들어 "Site1" 또는 "Site16".
콜론(:)으로 구분된 숫자와 문자열 조합 추출하기:

각 조합은 "숫자:문자열" 형식을 따르며, 여러 조합이 쉼표(,)로 구분되어 나열됩니다.
위의 조건들을 모두 만족하는 정규식을 C#에서 사용하기 위해 다음과 같이 구성할 수 있습니다.

csharp
코드 복사
using System;
using System.Text.RegularExpressions;

class Program
{
    static void Main()
    {
        string log = "[09:12:22] PCB Move InputJig, Site16: 1:gs5t32gs,2:tgrw43gs,9:53g3235,11:512521gdsg";
        
        // 정규식 패턴
        string pattern = @"^\[(\d{2}:\d{2}:\d{2})\] PCB Move InputJig, Site(\d+): ((\d+:[^,]+,?)+)";
        
        // 정규식 매칭
        Match match = Regex.Match(log, pattern);
        if (match.Success)
        {
            Console.WriteLine("Time: " + match.Groups[1].Value);
            Console.WriteLine("Site Number: " + match.Groups[2].Value);
            
            // 숫자:문자열 조합 추출
            string details = match.Groups[3].Value;
            string[] parts = details.Split(',');
            foreach (var part in parts)
            {
                Console.WriteLine("Detail: " + part.Trim());
            }
        }
        else
        {
            Console.WriteLine("No match found.");
        }
    }
}
이 코드는 다음을 수행합니다:

주어진 로그 문자열에 대해 정규식을 적용하여 시간, "Site" 뒤의 숫자, 그리고 콜론으로 구분된 숫자와 문자열 조합을 추출합니다.
추출된 각 부분은 콘솔에 출력됩니다.
위의 정규식은 기본적인 로그 형식에 맞추어져 있으며, 로그 형식이 변동되면 정규식도 그에 맞추어 조정해야 합니다.