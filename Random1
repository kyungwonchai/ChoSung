losedXML와 같은 서드파티 라이브러리를 사용할 수 있습니다. 여기서는 Microsoft.Office.Interop.Excel를 사용한 예제 코드를 제공하겠습니다.

아래의 코드는 P3부터 시작하여 D열의 데이터가 있는 마지막 행까지 순회하며, P열에 3글자 이상인 값이 있으면 해당 행의 F열과 B열의 값을 VFF와 BFF 변수에 저장하고 콘솔에 출력합니다.

csharp
Copy code
using System;
using Excel = Microsoft.Office.Interop.Excel;

class Program
{
    static void Main()
    {
        // Excel 애플리케이션 개체를 생성합니다.
        Excel.Application xlApp = new Excel.Application();

        // 엑셀 파일을 엽니다. 'path_to_excel_file'를 실제 파일 경로로 교체하세요.
        Excel.Workbook xlWorkbook = xlApp.Workbooks.Open(@"path_to_excel_file");
        Excel._Worksheet xlWorksheet = xlWorkbook.Sheets[1];
        Excel.Range xlRange = xlWorksheet.UsedRange;

        int rowCount = xlRange.Rows.Count;

        // P3부터 D열의 데이터가 끝나는 지점까지 반복합니다.
        for (int row = 3; row <= rowCount; row++)
        {
            if ((xlRange.Cells[row, "D"] as Excel.Range).Value2 != null)
            {
                string pValue = (xlRange.Cells[row, "P"] as Excel.Range).Value2.ToString();
                
                // P열에 값이 3글자 이상인 경우
                if (pValue.Length >= 3)
                {
                    string VFF = (xlRange.Cells[row, "F"] as Excel.Range).Value2.ToString();
                    string BFF = (xlRange.Cells[row, "B"] as Excel.Range).Value2.ToString();

                    // 콘솔에 출력합니다.
                    Console.WriteLine($"VFF: {VFF}, BFF: {BFF}");
                }
            }
            else
            {
                // D열에 데이터가 없으면 루프를 종료합니다.
                break;
            }
        }

        // 엑셀 파일을 닫고, 애플리케이션을 종료합니다.
        xlWorkbook.Close(false);
        xlApp.Quit();

        // COM 객체를 해제합니다.
        System.Runtime.InteropServices.Marshal.ReleaseComObject(xlApp);
    }
}
이 코드는 Excel이 설치된 Windows 환경에서만 작동하며, Microsoft.Office.