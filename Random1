 문제: st.dataframe() 의 높이를 제한 없이 표시하기 (스크롤 없이 모든 행 표시)
Streamlit의 st.dataframe()은 기본적으로 테이블 높이가 제한되기 때문에 모든 행을 표시하지 못하고 스크롤이 발생합니다.
이를 해결하려면 height 옵션을 최대값으로 설정하거나, CSS로 컨테이너의 높이를 조정해야 합니다.

✅ 코드 수정: create_dataframe() 함수 수정하기
python
코드 복사
import streamlit as st
import pymssql
import pandas as pd

# MSSQL 서버 연결 설정 함수
def get_connection():
    return pymssql.connect(
        server="YOUR_SERVER",
        user="YOUR_USER",
        password="YOUR_PASSWORD",
        database="YOUR_DATABASE"
    )

# Get_min_bestdifferent 프로시저 호출 함수 (cursor.fetchall() 방식)
def fetch_main_data():
    conn = get_connection()
    cursor = conn.cursor()
    cursor.execute("EXEC Get_min_bestdifferent")
    rows = cursor.fetchall()
    conn.close()
    return rows

# DataFrame 생성 함수 (전체 높이 사용)
def create_dataframe(rows):
    original_columns = [
        "group1", "line1", "model1", "type1", "ecn1", "edition1",
        "ACT2_1", "ACT2_2", "ACT2_3", "ACT2_4",
        "ACT2_5", "ACT2_6", "ACT2_7", "ACT2_8"
    ]

    new_columns = [
        "group1", "line1", "model1", "type1", "ecn1", "edition1",
        "MC1", "MC2", "MC3", "MC4", "MC5", "MC6", "MC7", "MC8"
    ]

    df = pd.DataFrame(rows, columns=original_columns)
    df.columns = new_columns

    mc_columns = [f"MC{i}" for i in range(1, 9)]
    df[mc_columns] = df[mc_columns].astype(float).round(2)

    return df

# Streamlit 앱 구성
def main():
    st.set_page_config(page_title="MC1 ~ MC8 Data Table", layout="wide")
    st.title("MC1 ~ MC8 Data Table - Fullscreen Mode")

    # CSS 스타일 추가 (전체 화면 사용)
    st.markdown("""
        <style>
            .css-1oe6wy4 {
                max-width: 100%;
            }
            .css-18e3th9 {
                padding-top: 0rem;
                padding-bottom: 0rem;
            }
            .block-container {
                padding: 0;
                margin: 0;
                height: 100vh;
                width: 100%;
            }
            .stDataFrame {
                height: 100vh !important;
                width: 100% !important;
            }
        </style>
    """, unsafe_allow_html=True)

    rows = fetch_main_data()
    if not rows:
        st.error("데이터를 가져오지 못했습니다. 프로시저 또는 데이터베이스 연결을 확인하세요.")
    else:
        df = create_dataframe(rows)

        tabs = st.tabs(["메인 테이블", "탭2", "탭3"])

        with tabs[0]:
            st.subheader("메인 테이블 - 전체 화면 표시")
            st.dataframe(df, use_container_width=True, height=3000)  # 높이를 크게 설정하여 모든 데이터 표시

        with tabs[1]:
            st.subheader("탭 2 내용")
            st.write("여기는 탭 2 입니다.")

        with tabs[2]:
            st.subheader("탭 3 내용")
            st.write("여기는 탭 3 입니다.")

if __name__ == "__main__":
    main()
✅ 코드 설명
create_dataframe() 함수 수정

DataFrame을 만드는 과정은 동일하나, 표시할 때 높이를 크게 설정합니다.

st.dataframe() 호출 시 height=3000 으로 설정하여 화면 전체 크기 사용.

CSS 스타일 추가 (st.markdown())

css
코드 복사
.stDataFrame {
    height: 100vh !important;
    width: 100% !important;
}
100vh로 설정하여 화면의 세로 길이를 최대한 활용합니다.

st.dataframe() 사용 시 height 값 설정

python
코드 복사
st.dataframe(df, use_container_width=True, height=3000)
height 값을 크게 설정하여 화면에 더 많은 데이터가 표시되도록 함.

📌 설치 필요 라이브러리
bash
코드 복사
pip install streamlit pymssql pandas
📌 Streamlit 실행 방법
bash
코드 복사
streamlit run your_script_name.py
🔥 결과
테이블이 화면 전체를 차지하도록 확장됩니다.

st.dataframe()의 높이 값이 크게 설정되었기 때문에, 데이터가 스크롤 없이 표시됩니다.