이드 스튜디오 Hedgehog에서 JCIFS 라이브러리를 사용하여 안드로이드 앱을 개발하고, 이를 통해 윈도우 공유 폴더에 파일을 저장하는 방법을 단계별로 설명드리겠습니다. 마지막에는 APK 파일을 생성하는 방법도 포함하겠습니다.

1. 안드로이드 스튜디오 설정
1.1. 프로젝트 생성
안드로이드 스튜디오를 열고 New Project를 선택합니다.
Empty Activity를 선택하고 프로젝트 이름과 저장 위치를 지정한 후 Finish를 클릭합니다.
1.2. build.gradle 파일 수정
app/build.gradle 파일을 열고 dependencies 섹션에 JCIFS 라이브러리를 추가합니다:

gradle
코드 복사
dependencies {
    implementation 'org.samba.jcifs:jcifs:1.3.19'
}
프로젝트를 동기화합니다. 이를 위해 우측 상단에 있는 Sync Now 버튼을 클릭합니다.

2. 안드로이드 앱 코드 작성
2.1. MainActivity 코드 수정
MainActivity.kt 파일을 열고 다음 코드를 작성합니다:

kotlin
코드 복사
import android.os.Bundle
import android.util.Log
import androidx.appcompat.app.AppCompatActivity
import jcifs.context.BaseContext
import jcifs.context.SingletonContext
import jcifs.smb.NtlmPasswordAuthenticator
import jcifs.smb.SmbFile
import jcifs.smb.SmbFileOutputStream
import java.io.OutputStreamWriter

class MainActivity : AppCompatActivity() {

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        // 새로운 스레드에서 실행해야 합니다.
        Thread {
            try {
                saveFileToSharedFolder("192.168.102.1", "shared_folder", "username", "password", "test.txt", "Hello, World!")
            } catch (e: Exception) {
                e.printStackTrace()
            }
        }.start()
    }

    @Throws(Exception::class)
    private fun saveFileToSharedFolder(
        ip: String,
        sharedFolderName: String,
        username: String,
        password: String,
        fileName: String,
        fileContent: String
    ) {
        val auth = NtlmPasswordAuthenticator(username, password)
        val context = SingletonContext(
            BaseContext(
                jcifs.CIFSContext.DEFAULT.setCredentials(auth)
            )
        )

        val path = "smb://$ip/$sharedFolderName/$fileName"
        val smbFile = SmbFile(path, context)

        SmbFileOutputStream(smbFile).use { outputStream ->
            OutputStreamWriter(outputStream).use { writer ->
                writer.write(fileContent)
                writer.flush()
            }
        }

        Log.i("SMB", "File saved successfully to $path")
    }
}
3. APK 생성 및 설치
3.1. APK 파일 생성
메뉴에서 Build > Build Bundle(s) / APK(s) > Build APK(s)를 클릭합니다.
빌드가 완료되면 오른쪽 하단에 APK 파일 경로가 표시됩니다. locate를 클릭하여 파일 위치를 확인합니다.
3.2. APK 파일 설치
APK 파일을 안드로이드 디바이스에 복사합니다. 이를 위해 USB 케이블을 사용하거나 클라우드 스토리지를 이용할 수 있습니다.
디바이스에서 APK 파일을 찾아 설치합니다. 디바이스 설정에서 Unknown sources를 허용해야 할 수 있습니다.
4. 디버깅 및 테스트
앱을 실행하고 로그를 확인하여 파일이 성공적으로 공유 폴더에 저장되었는지 확인합니다.
안드로이드 스튜디오에서 Logcat 창을 열어 SMB 태그로 로그를 필터링합니다.
이 단계를 통해 안드로이드 스튜디오 Hedgehog에서 JCIFS 라이브러리를 사용하여 윈도우 공유 폴더에 파일을 저장하는 안드로이드 앱을 개발하고, APK 파일을 생성하여 디바이스에 설치할 수 있습니다.






