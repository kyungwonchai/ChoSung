아래는 요청 사항에 따라 작성한 VBA 코드입니다. 이 코드는 첫 번째 루프에서 생성된 딕셔너리를 기반으로, 두 번째 루프에서 조건을 확인하여 값을 채우는 작업을 수행합니다.

코드 설명:
첫 번째 루프:

딕셔너리를 생성하여 C열과 D열 값을 기반으로 데이터를 저장합니다.
두 번째 루프:

병합된 C열과 D열 셀의 조건을 확인합니다.
C열 배경색이 B4의 배경색과 같으면 이전 C열 값을 기억하고 딕셔너리에서 값을 가져옵니다.
/와 +를 포함한 값을 처리하여 필요한 계산을 수행합니다.
+와 괄호 처리:

+로 나누어 각각의 값을 순회하며 합산합니다.
괄호 안의 값이 포함된 딕셔너리 키를 추출하고, 해당 키들의 합산을 구합니다.
vba
코드 복사
Sub ProcessAndFillMergedCells()
    Dim lastRow As Long
    Dim currentRow As Long
    Dim dict As Object
    Dim t1 As String
    Dim key As String
    Dim combinedKey As String
    Dim col As Integer
    Dim tempArr As Variant
    Dim b4Color As Long

    ' 딕셔너리 생성
    Set dict = CreateObject("Scripting.Dictionary")

    ' C3부터 B100000의 마지막 행까지 확인
    lastRow = 주차2_시트.Cells(주차2_시트.Rows.Count, "B").End(xlUp).Row

    ' 초기 t1 값
    t1 = ""

    ' B4의 배경색 가져오기
    b4Color = 주차2_시트.Range("B4").Interior.Color

    ' 첫 번째 루프: 딕셔너리 생성
    For currentRow = 3 To lastRow
        Dim cValue As String
        Dim dValue As String

        cValue = Trim(주차2_시트.Cells(currentRow, "C").Value)
        dValue = Trim(주차2_시트.Cells(currentRow, "D").Value)

        ' C열 값이 빈 값이 아니면 t1 업데이트
        If cValue <> "" Then
            t1 = cValue
        End If

        ' D열에서 키 추출
        key = GetKey(dValue)

        ' t1과 키를 묶어서 새로운 키 생성
        If t1 <> "" And key <> "" Then
            combinedKey = t1 & "_" & key

            ' 딕셔너리에 키가 없으면 초기화
            If Not dict.exists(combinedKey) Then
                dict(combinedKey) = Array(0, 0, 0, 0, 0, 0) ' F~K 열 초기값
            End If

            ' 딕셔너리에서 배열 복사
            tempArr = dict(combinedKey)

            ' F~K 열 값을 배열에 합산
            For col = 1 To 6
                tempArr(col - 1) = tempArr(col - 1) + Val(주차2_시트.Cells(currentRow, 6 + col).Value)
            Next col

            ' 수정된 배열을 다시 딕셔너리에 저장
            dict(combinedKey) = tempArr
        End If
    Next currentRow

    ' 두 번째 루프: 병합된 셀 처리 및 F~K 열 채우기
    For currentRow = 3 To lastRow
        Dim mergeCValue As String
        Dim mergeDValue As String
        Dim mergeKeys As Variant
        Dim partKey As String
        Dim totalArr(0 To 5) As Double
        Dim splitValues() As String
        Dim innerKey As String

        ' 병합된 C열 및 D열 처리
        If 주차2_시트.Cells(currentRow, "C").MergeCells Then
            mergeCValue = Trim(주차2_시트.Cells(currentRow, "C").Value)
            mergeDValue = Trim(주차2_시트.Cells(currentRow, "D").Value)

            ' C열 배경색이 B4와 같은 경우
            If 주차2_시트.Cells(currentRow, "C").Interior.Color = b4Color Then
                ' C열 값에 +가 포함된 경우 처리
                If InStr(mergeCValue, "+") > 0 Then
                    splitValues = Split(mergeCValue, "+")
                    For Each partKey In splitValues
                        partKey = Trim(partKey)

                        ' 키의 _ 좌측값을 추출하여 합산
                        If dict.exists(partKey & "_") Then
                            For col = 0 To 5
                                totalArr(col) = totalArr(col) + dict(partKey & "_")(col)
                            Next col
                        End If

                        ' 키의 괄호 값을 포함하여 합산
                        If InStr(partKey, "(") > 0 Then
                            Dim baseKey As String
                            Dim bracketContent As String
                            Dim items() As String
                            baseKey = Left(partKey, InStr(partKey, "(") - 1)
                            bracketContent = Mid(partKey, InStr(partKey, "(") + 1, Len(partKey) - InStr(partKey, "(") - 1)
                            items = Split(bracketContent, "/")
                            For Each innerKey In items
                                innerKey = Trim(innerKey)
                                If dict.exists(baseKey & "_" & innerKey) Then
                                    For col = 0 To 5
                                        totalArr(col) = totalArr(col) + dict(baseKey & "_" & innerKey)(col)
                                    Next col
                                End If
                            Next innerKey
                        End If
                    Next partKey
                Else
                    ' +가 없는 경우 단일 키로 합산
                    If dict.exists(mergeCValue & "_") Then
                        For col = 0 To 5
                            totalArr(col) = totalArr(col) + dict(mergeCValue & "_")(col)
                        Next col
                    End If
                End If

                ' 결과를 F~K 열에 채우기
                For col = 0 To 5
                    주차2_시트.Cells(currentRow, 6 + col).Value = totalArr(col)
                Next col
            End If
        End If
    Next currentRow

    MsgBox "작업 완료!", vbInformation
End Sub

' 키를 추출하는 함수
Function GetKey(value As String) As String
    Dim i As Long
    Dim char As String
    Dim keyStart As Long
    Dim keyEnd As Long

    keyStart = 0
    keyEnd = InStr(1, value, "/") - 1 ' / 위치 전까지

    If keyEnd > 0 Then
        For i = keyEnd To 1 Step -1
            char = Mid(value, i, 1)
            ' 첫 번째 영어 문자를 발견한 위치
            If char Like "[A-Za-z]" Then
                keyStart = i
                Exit For
            End If
        Next i
    End If

    ' 키 추출
    If keyStart > 0 And keyEnd > 0 Then
        GetKey = Mid(value, keyStart, keyEnd - keyStart + 1)
    Else
        GetKey = "" ' 키가 없으면 빈 문자열 반환
    End If
End Function
주요 구현
첫 번째 루프:

딕셔너리를 생성하고 C와 D열 값을 기반으로 F~K 열의 데이터를 저장.
두 번째 루프:

병합된 셀의 조건(C 열 배경색, D열 키) 확인.
/, +, 괄호를 처리하여 키를 생성하고 값을 합산.
결과 출력:
