press 22.2 WPF ChartControl을 사용하여 MS SQL Server에서 데이터를 가져와서 막대 차트에 라인별로 T와 B의 합계 수량을 다른 색깔의 막대로 표시하는 예제 코드를 제공하겠습니다. 이 예제에서는 MS SQL 데이터베이스에서 데이터를 가져오고, DevExpress의 ChartControl을 사용하여 차트를 생성합니다.

데이터베이스 테이블 구조 가정
sql
Copy code
CREATE TABLE SalesData (
    LineName VARCHAR(50),
    ProductType CHAR(1), -- 'B' 또는 'T'
    Quantity INT
)
WPF XAML 코드
xml
Copy code
<Window x:Class="YourNamespace.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/charts"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="MainWindow" Height="350" Width="525">
    <Grid>
        <dxc:ChartControl Name="chartControl">
            <dxc:ChartControl.Diagram>
                <dxc:XYDiagram2D>
                    <dxc:BarSideBySideSeries2D DisplayName="B" ArgumentDataMember="LineName" ValueDataMember="BQuantity">
                        <dxc:BarSideBySideSeries2D.Model>
                            <dxc:Bar2DModel/>
                        </dxc:BarSideBySideSeries2D.Model>
                    </dxc:BarSideBySideSeries2D>
                    <dxc:BarSideBySideSeries2D DisplayName="T" ArgumentDataMember="LineName" ValueDataMember="TQuantity">
                        <dxc:BarSideBySideSeries2D.Model>
                            <dxc:Bar2DModel/>
                        </dxc:BarSideBySideSeries2D.Model>
                    </dxc:BarSideBySideSeries2D>
                </dxc:XYDiagram2D>
            </dxc:ChartControl.Diagram>
        </dxc:ChartControl>
    </Grid>
</Window>
C# 코드 (MainWindow.xaml.cs)
csharp
Copy code
using System.Data.SqlClient;
using System.Windows;
using DevExpress.Xpf.Charts;
using System.Data;

namespace YourNamespace
{
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
            LoadChartData();
        }

        private void LoadChartData()
        {
            string connectionString = "Your Connection String Here";
            string query = "SELECT LineName, ProductType, SUM(Quantity) AS TotalQuantity FROM SalesData GROUP BY LineName, ProductType";

            using (SqlConnection conn = new SqlConnection(connectionString))
            {
                SqlCommand cmd = new SqlCommand(query, conn);
                SqlDataAdapter adapter = new SqlDataAdapter(cmd);
                DataTable dt = new DataTable();
                adapter.Fill(dt);

                DataTable chartData = new DataTable();
                chartData.Columns.Add("LineName", typeof(string));
                chartData.Columns.Add("BQuantity", typeof(int));
                chartData.Columns.Add("TQuantity", typeof(int));

                foreach (DataRow row in dt.Rows)
                {
                    string lineName = row["LineName"].ToString();
                    string productType = row["ProductType"].ToString();
                    int totalQuantity = (int)row["TotalQuantity"];

                    DataRow chartRow = chartData.Rows.Find(lineName);
                    if (chartRow == null)
                    {
                        chartRow = chartData.NewRow();
                        chartRow["LineName"] = lineName;
                        chartData.Rows.Add(chartRow);
                    }

                    chartRow[productType == "B" ? "BQuantity" : "TQuantity"] = totalQuantity;
                }

                chartControl.DataSource = chartData;
            }
        }
    }
}
