이 눈에 보이는데도 찾을 수 없는 이유는 종종 보이지 않는 특수문자, 공백, 또는 Excel의 날짜와 텍스트 간의 형식 차이 때문일 수 있습니다. 아래는 VBA를 사용하여 보이지 않는 특수문자와 공백을 제거하고, 텍스트로 변환한 뒤 검색하는 방법입니다.

수정된 코드 (공백 및 특수문자 제거 포함)
vba
코드 복사
Sub FindMatchingDateWithCleanup()
    Dim ws As Worksheet
    Dim searchValue As String
    Dim searchRange As Range
    Dim resultCell As Range
    Dim resultAddress As String
    Dim cellValue As String
    
    ' 현재 워크시트 참조
    Set ws = ThisWorkbook.Sheets("Sheet1") ' 원하는 시트 이름으로 변경하세요
    
    ' 검색할 값 설정 (일반 서식 셀에 입력된 값, 공백 및 특수문자 제거)
    searchValue = CleanString(ws.Range("B1").Value)
    
    ' 검색 범위 설정 (A열 전체)
    Set searchRange = ws.Range("A:A")
    
    ' A열에서 값 검색
    For Each cell In searchRange
        If IsEmpty(cell.Value) Then Exit For ' 비어있는 셀 이후에는 검색 중지
        cellValue = CleanString(cell.Value) ' 셀 값 클린업
        If cellValue = searchValue Then
            resultAddress = cell.Address
            MsgBox "일치하는 날짜를 찾았습니다: " & resultAddress
            Exit Sub
        End If
    Next cell
    
    ' 일치하는 값이 없을 경우
    MsgBox "일치하는 날짜를 찾을 수 없습니다."
End Sub

' 문자열을 정리하는 함수 (공백 및 특수문자 제거)
Function CleanString(ByVal txt As String) As String
    Dim regex As Object
    Set regex = CreateObject("VBScript.RegExp")
    
    ' 공백 제거
    txt = Trim(txt)
    
    ' 특수문자 제거 (정규식 사용)
    With regex
        .Pattern = "[^\w\d\s-]" ' 알파벳, 숫자, 공백, 하이픈(-)만 허용
        .Global = True
        CleanString = .Replace(txt, "")
    End With
End Function
주요 수정 사항
CleanString 함수:

문자열에서 공백(Trim)과 보이지 않는 특수문자를 제거합니다.
정규식(Regular Expression)을 사용하여 알파벳, 숫자, 공백, 하이픈 외의 모든 문자를 제거합니다.
셀 값 정리:

CleanString을 통해 검색할 값(searchValue)과 범위 내의 각 셀 값을 비교합니다.
루프 검색:

Range.Find 대신 직접 루프를 돌면서 값을 비교합니다.
IsEmpty를 사용해 값이 없는 경우 검색을 종료합니다.
특수문자가 있을 가능성
Excel은 보이지 않는 문자를 포함한 데이터를 그대로 표시할 수 있습니다. 예를 들어:
공백 문자 (\t, \n, \r)
유니코드 제어 문자
비표시 특수문자(예: BOM)
테스트 방법
값 정리:
B1 셀에 있는 값과 A열의 값이 같은 형식인지 확인하세요.
코드 실행:
코드를 실행해 검색 결과를 확인하세요.
문제가 지속될 경우: