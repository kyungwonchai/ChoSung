Express GridControl에서 선택된 행을 삭제하는 기능을 추가하려면, GridControl의 선택된 행을 가져와서 DataTable에서 해당 행을 삭제하고, 변경 사항을 데이터베이스에 반영해야 합니다.

다음은 이를 구현하는 방법을 보여주는 예제입니다.

먼저, XAML 파일에서 GridControl과 삭제 버튼을 설정합니다:

xml
코드 복사
<Window x:Class="WpfApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
        Title="MainWindow" Height="450" Width="800">
    <Grid>
        <dxg:GridControl x:Name="gridControl" AutoGenerateColumns="AddNew"
                         ItemsSource="{Binding DataTable}"
                         AllowEditing="True">
            <dxg:GridControl.View>
                <dxg:TableView AutoWidth="True" NewItemRowPosition="Top"/>
            </dxg:GridControl.View>
        </dxg:GridControl>
        <Button Content="Delete Row" HorizontalAlignment="Left" VerticalAlignment="Bottom" Click="DeleteRow_Click"/>
    </Grid>
</Window>
다음으로, C# 코드에서 선택된 행을 삭제하는 기능을 추가합니다:

csharp
코드 복사
using DevExpress.Xpf.Grid;
using System.Data;
using System.Data.SqlClient;
using System.Windows;

namespace WpfApp
{
    public partial class MainWindow : Window
    {
        public DataTable DataTable { get; set; }
        private SqlDataAdapter dataAdapter;
        private SqlConnection connection;

        public MainWindow()
        {
            InitializeComponent();
            DataContext = this;
            LoadData();
        }

        private void LoadData()
        {
            // 데이터베이스 연결 문자열을 설정합니다.
            string connectionString = "your_connection_string_here";

            // SQL 쿼리를 설정합니다.
            string query = "SELECT * FROM YourTable";

            // 연결을 초기화합니다.
            connection = new SqlConnection(connectionString);

            // DataAdapter와 DataTable을 초기화합니다.
            dataAdapter = new SqlDataAdapter(query, connection);
            DataTable = new DataTable();

            // DataAdapter를 사용하여 DataTable을 채웁니다.
            dataAdapter.Fill(DataTable);

            // InsertCommand와 DeleteCommand 설정
            SqlCommandBuilder commandBuilder = new SqlCommandBuilder(dataAdapter);
            dataAdapter.InsertCommand = commandBuilder.GetInsertCommand();
            dataAdapter.DeleteCommand = commandBuilder.GetDeleteCommand();
        }

        private void DeleteRow_Click(object sender, RoutedEventArgs e)
        {
            // 선택된 행을 가져옵니다.
            var selectedRowHandles = gridControl.GetSelectedRowHandles();
            foreach (var rowHandle in selectedRowHandles)
            {
                if (rowHandle >= 0)
                {
                    var row = gridControl.GetRow(rowHandle) as DataRowView;
                    if (row != null)
                    {
                        row.Row.Delete();
                    }
                }
            }

            // 데이터베이스에 변경 사항을 업데이트합니다.
            dataAdapter.Update(DataTable);
        }
    }
}
이 코드는 다음과 같은 작업을 수행합니다:

gridControl.GetSelectedRowHandles()를 사용하여 선택된 행의 핸들을 가져옵니다.
각 선택된 행 핸들에 대해, gridControl.GetRow(rowHandle)를 사용하여 DataRowView를 가져옵니다.
DataRowView가 유효하면 row.Row.Delete()를 호출하여 DataTable에서 해당 행을 삭제합니다.
dataAdapter.Update(DataTable)을 호출하여 DataTable의 변경 사항을 데이터베이스에 반영합니다.
이렇게 하면 사용자가 GridControl에서 선택한 행을 삭제할 수 있게 