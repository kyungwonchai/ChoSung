using System;
using DevExpress.Xpf.Grid;

namespace GridColumnValueChangedCheck
{
    public partial class MainWindow : Window
    {
        private Dictionary<GridColumn, object> originalValues = new Dictionary<GridColumn, object>();

        public MainWindow()
        {
            InitializeComponent();

            // GridControl의 ColumnView에 이벤트 핸들러 등록
            gridView.ShownEditor += GridView_ShownEditor;
            gridView.CellValueChanged += GridView_CellValueChanged;
        }

        private void GridView_ShownEditor(object sender, EditorEventArgs e)
        {
            // 편집이 시작되면 이전 값을 저장
            if (!originalValues.ContainsKey(e.Column))
            {
                originalValues[e.Column] = e.Value;
            }
        }

        private void GridView_CellValueChanged(object sender, CellValueChangedEventArgs e)
        {
            // 값이 변경된 후에 호출되는 이벤트
            // 이곳에서 이전 값과 비교하여 값이 변했는지 체크할 수 있습니다.
            
            GridColumn column = e.Column;
            object originalValue = originalValues[column];
            object newValue = e.Value;
            
            // 값이 변했는지 체크
            bool valueChanged = !object.Equals(originalValue, newValue);
            
            // 값이 변했을 경우 로그 출력
            if (valueChanged)
            {
                Console.WriteLine("값이 변경되었습니다. 이전 값: " + originalValue + ", 새 값: " + newValue);
            }
            
            // 값을 체크한 후에 저장한 이전 값 삭제
            originalValues.Remove(column);
        }
    }
}
