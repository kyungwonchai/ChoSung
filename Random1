DevExpress에서 BarButtonItem의 스타일을 변경하여 그라데이션 배경과 테두리 색상을 적용하려면 **ItemAppearance**와 AppearanceOptions 속성을 사용해야 합니다. DevExpress 자체적으로 완전한 그라데이션 효과는 지원하지 않지만, 사용자 정의로 스킨 설정이나 그라데이션 이미지를 배경으로 적용하는 방식으로 구현할 수 있습니다.

아래는 즐겨찾기 추가 시 배경색을 파랑과 연파랑 그라데이션으로 설정하고, 테두리 색상도 변경하는 코드입니다.

수정된 함수 (ToggleFavorite)
csharp
코드 복사
private void ToggleFavorite(string buttonName, BarButtonItem button)
{
    // 즐겨찾기 추가/제거 로직
    if (favoriteKeys.Contains(buttonName))
    {
        favoriteKeys.Remove(buttonName);

        // 배경색과 테두리 색상 초기화 (기본값으로 복원)
        button.ItemAppearance.Normal.BackColor = Color.Empty; // 배경색 초기화
        button.ItemAppearance.Normal.BorderColor = Color.Empty; // 테두리 초기화

        RemoveFromFavorites(button);
    }
    else
    {
        favoriteKeys.Add(buttonName);

        // 배경색을 파랑/연파랑 그라데이션처럼 설정
        button.ItemAppearance.Normal.BackColor = Color.LightBlue; // 연파랑
        button.ItemAppearance.Normal.BackColor2 = Color.Blue; // 파랑 (그라데이션 효과)
        button.ItemAppearance.Normal.Options.UseBackColor = true; // 배경색 활성화

        // 테두리 색상을 설정
        button.ItemAppearance.Normal.BorderColor = Color.DarkBlue; // 테두리 색상
        button.ItemAppearance.Normal.Options.UseBorderColor = true; // 테두리 색상 활성화

        AddToFavorites(button, GetButtonGroupName(button));
    }

    SaveFavorites(); // 즐겨찾기 상태를 변경할 때마다 저장
}
주요 변경 사항
배경색 그라데이션:

button.ItemAppearance.Normal.BackColor와 BackColor2를 함께 설정.
Options.UseBackColor를 true로 설정하여 색상이 적용되도록 활성화.
테두리 색상 변경:

button.ItemAppearance.Normal.BorderColor로 테두리 색상을 설정.
Options.UseBorderColor를 true로 활성화.
초기화 처리:

즐겨찾기에서 제거 시 배경색과 테두리 색상을 기본값으로 복원.
결과
즐겨찾기에 추가된 버튼은 파랑-연파랑 그라데이션 배경이 적용됩니다.
테두리는 짙은 파랑으로 설정됩니다.
즐겨찾기에서 제거하면 기본 색상으로 초기화됩니다.