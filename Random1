음은 서버와 클라이언트 각각의 WPF XAML 파일입니다. 이 XAML 파일들은 기본적인 사용자 인터페이스를 제공하며, ListBox를 통해 로그를 출력하고, 텍스트 입력 및 버튼을 통해 메시지를 전송할 수 있도록 구성되어 있습니다.

서버 측 XAML (MainWindow.xaml)
서버 측 XAML 파일은 간단한 ListBox를 통해 서버의 상태와 수신된 메시지를 표시합니다.

xml
코드 복사
<Window x:Class="SocketServerApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Socket Server" Height="350" Width="525">
    <Grid>
        <ListBox x:Name="listBox" HorizontalAlignment="Left" Height="297" VerticalAlignment="Top" Width="497" Margin="10,10,0,0"/>
    </Grid>
</Window>
클라이언트 측 XAML (MainWindow.xaml)
클라이언트 측 XAML 파일은 사용자가 서버로 메시지를 입력하고 전송할 수 있도록 TextBox와 Button을 제공합니다. ListBox는 서버와의 통신 상태와 전송한 메시지를 표시합니다.

xml
코드 복사
<Window x:Class="SocketClientApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Socket Client" Height="350" Width="525">
    <Grid>
        <TextBox x:Name="textBox" HorizontalAlignment="Left" Height="23" Margin="10,10,0,0" VerticalAlignment="Top" Width="497"/>
        <Button Content="Send" HorizontalAlignment="Left" Margin="10,38,0,0" VerticalAlignment="Top" Width="497" Height="25" Click="Button_Click"/>
        <ListBox x:Name="listBox" HorizontalAlignment="Left" Height="237" Margin="10,70,0,0" VerticalAlignment="Top" Width="497"/>
    </Grid>
</Window>
사용 방법
서버 프로그램을 Visual Studio에서 열고, 위의 서버 측 XAML 파일 내용을 MainWindow.xaml에 복사합니다.
클라이언트 프로그램을 Visual Studio에서 열고, 위의 클라이언트 측 XAML 파일 내용을 MainWindow.xaml에 복사합니다.
서버 프로그램을 먼저 실행한 후, 클라이언트 프로그램을 실행하여 IP 주소를 설정하고 서버에 연결합니다.
클라이언트에서 메시지를 입력하고 "Send" 버튼을 클릭하면 서버로 메시지가 전송되고, 서버는 이를 수신하여 ListBox에 표시합니다.
이렇게 하면 클라이언트와 서버 간의 통신 상태를 확인하고, 네트워