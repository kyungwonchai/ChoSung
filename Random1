Windows 11에서 CUDA를 올바르게 설치하는 방법을 상세히 설명해 드릴게요.
PyTorch가 GPU를 제대로 사용하지 않는다면, CUDA 및 NVIDIA 드라이버가 제대로 설치되지 않았을 가능성이 큽니다.
아래 단계대로 진행하세요.

1. 현재 상태 확인
먼저, CUDA와 NVIDIA 드라이버가 정상적으로 설치되었는지 확인하세요.

(1) GPU 및 드라이버 확인
Win + R을 눌러 실행 창을 열고 cmd 입력 후 Enter.

다음 명령어를 입력하세요.

bash
코드 복사
nvidia-smi
✅ 정상적인 출력 예시:

pgsql
코드 복사
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 528.24       Driver Version: 528.24       CUDA Version: 12.1     |
+-----------------------------------------------------------------------------+
❌ 만약 오류가 나오거나 GPU가 표시되지 않는다면 NVIDIA 드라이버가 설치되지 않았거나 비활성화됨.

만약 nvidia-smi가 실행되지 않으면, 드라이버를 다시 설치해야 합니다.
→ 아래 2단계로 이동하세요.

2. NVIDIA 드라이버 설치
Windows 11에서 최신 드라이버를 설치하려면 다음을 따르세요.

(1) NVIDIA 드라이버 다운로드
NVIDIA 공식 사이트에서 최신 Studio Driver (권장) 또는 **Game Ready Driver (GRD)**를 다운로드하세요.
▶ NVIDIA 드라이버 다운로드

다음 정보를 입력하세요.

Product Type: GeForce, RTX, 또는 Quadro (본인 GPU 모델에 맞게 선택)
Product Series: (예: RTX 30 Series, GTX 10 Series 등)
Product: (예: RTX 3070, GTX 1080 등)
Operating System: Windows 11
Download Type: Studio Driver 또는 Game Ready Driver 선택
Language: English (한국어도 가능)
Search 버튼을 누르고 다운로드한 후 설치하세요.

(2) 드라이버 클린 설치
기존 드라이버를 제거하고 새 드라이버를 설치하세요.

기존 드라이버 삭제

Win + R → devmgmt.msc 입력 후 장치 관리자(Device Manager) 실행
디스플레이 어댑터(Display Adapters)에서 NVIDIA GPU 선택
오른쪽 클릭 → 장치 제거
"이 장치의 드라이버 소프트웨어를 삭제합니다." 체크 후 확인
재부팅
새 드라이버 설치

NVIDIA 다운로드 페이지에서 받은 드라이버 실행
"맞춤 설치(Custom Install)" 선택 후 "클린 설치(Perform a clean installation)" 체크
설치 완료 후 다시 부팅
3. CUDA 및 cuDNN 설치
드라이버가 정상적으로 설치되었으면, CUDA와 cuDNN을 설치해야 합니다.

(1) CUDA 설치
CUDA 최신 버전 다운로드
▶ CUDA Toolkit 다운로드

Windows 선택 후 "exe(local)" 다운로드.

설치 진행

설치 화면에서 "Express (Recommended)" 대신 "Custom"을 선택.
"CUDA, Driver, Toolkit"만 선택하고, Driver 설치는 생략 가능 (이미 최신 드라이버 설치했으므로)
기본 경로 그대로 설치 (C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\12.x\)
설치 후 CUDA 버전 확인

bash
코드 복사
nvcc --version
✅ 정상 출력 예시:

makefile
코드 복사
C:\> nvcc --version
nvcc: NVIDIA (R) Cuda compiler
release 12.1, V12.1.105
❌ nvcc가 인식되지 않으면 환경 변수 설정이 필요함.

(2) cuDNN 설치
PyTorch는 cuDNN을 사용하여 속도를 최적화합니다.

cuDNN 다운로드
▶ NVIDIA cuDNN 다운로드

Download cuDNN 클릭 → NVIDIA 계정 로그인 필요
"cuDNN for Windows 10/11" 버전 다운로드.
설치 방법

압축을 풀고 bin, lib, include 폴더를 CUDA 설치 경로에 복사:
bash
코드 복사
C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\12.x\
bin 폴더 안의 cudnn64_8.dll이 있어야 합니다.
4. 환경 변수 설정 (중요)
CUDA 및 cuDNN이 인식되지 않는다면 환경 변수를 설정해야 합니다.

Win + R → sysdm.cpl 입력 후 Enter
고급(Advanced) 탭 → 환경 변수(Environment Variables)
**"시스템 변수(System Variables)"**에서 Path 선택 → 편집(Edit)
새로 만들기(New) 클릭 후 아래 경로 추가:
bash
코드 복사
C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\12.x\bin
C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\12.x\libnvvp
C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\12.x\include
확인(OK) 후 재부팅
5. PyTorch에서 GPU 확인
설치가 끝났다면 PyTorch가 GPU를 인식하는지 확인하세요.

(1) PyTorch 설치
CUDA 지원 PyTorch 설치

bash
코드 복사
pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu121
PyTorch에서 GPU 인식 확인

python
코드 복사
import torch

print("PyTorch 버전:", torch.__version__)
print("CUDA 사용 가능 여부:", torch.cuda.is_available())
print("GPU 이름:", torch.cuda.get_device_name(0) if torch.cuda.is_available() else "N/A")
✅ 정상적인 출력 예시:

yaml
코드 복사
PyTorch 버전: 2.1.0+cu121
CUDA 사용 가능 여부: True
GPU 이름: NVIDIA GeForce RTX 3060
❌ 만약 False가 나오면:

torch.version.cuda가 None인지 확인.
nvidia-smi 실행 후 GPU가 활성화되어 있는지 확인.
환경 변수를 다시 확인.
6. 추가 확인 (필요한 경우)
(1) Visual Studio 설치 (선택)
CUDA는 일부 기능에서 Visual Studio가 필요할 수 있습니다.
없다면 Visual Studio 2022 Community를 설치하고 C++ 개발 도구를 추가하세요.

▶ Visual Studio 다운로드

(2) WSL2에서 GPU 사용 (선택)
만약 WSL2에서 PyTorch를 실행하는 경우, WSL2에서 GPU 지원이 활성화되었는지 확인하세요.

bash
코드 복사
wsl --update
정리
✅ NVIDIA 드라이버 최신 버전 설치
✅ CUDA + cuDNN 설치 후 환경 변수 설정
✅ PyTorch에서 GPU 인식 확인 (torch.cuda.is_available())
✅ 이후에도 안되면 nvidia-smi와 nvcc --version 확인
