   gridView1.MouseDown += GridView1_MouseDown;
    gridView1.MouseUp += GridView1_MouseUp;
}

// GridView1_MouseDown 이벤트 핸들러 추가
private void GridView1_MouseDown(object sender, MouseEventArgs e)
{
    if (e.Clicks == 2 && e.Button == MouseButtons.Left)
    {
        GridView gridView = (GridView)sender;
        GridHitInfo hitInfo = gridView.CalcHitInfo(e.Location);
        if (hitInfo.InRowCell)
        {
            gridView.FocusedRowHandle = hitInfo.RowHandle;
        }
    }
}

// GridView1_MouseUp 이벤트 핸들러 추가
private void GridView1_MouseUp(object sender, MouseEventArgs e)
{
    if (e.Clicks == 2 && e.Button == MouseButtons.Left)
    {
        GridView gridView = (GridView)sender;
        GridHitInfo hitInfo = gridView.CalcHitInfo(e.Location);
        if (hitInfo.InRowCell)
        {
            int selectedRowHandle = hitInfo.RowHandle;
            string pname = (string)gridView.GetRowCellValue(selectedRowHandle, "Pname");

            // View_ProjectDetail에서 해당 pname과 g_loginid를 체크하여 데이터 조회
            string selectQuery = $"SELECT TOP 1 Diagram FROM View_ProjectDetail WHERE Pname = @Pname AND loginid = @Loginid ORDER BY Date1 DESC";
            using (SqlCommand command = new SqlCommand(selectQuery, connection))
            {
                command.Parameters.AddWithValue("@Pname", pname);
                command.Parameters.AddWithValue("@Loginid", g_loginid);
                object result = command.ExecuteScalar();
                if (result != null && result != DBNull.Value)
                {
                    string diagram = (string)result;
                    MessageBox.Show(diagram, "Diagram", MessageBoxButtons.OK, MessageBoxIcon.Information);
                }
                else
                {
                    MessageBox.Show("해당 데이터가 없습니다.", "알림", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                }
            }
        }
    }
}
