세요! 파일을 특정 경로에 일정 시간 간격으로 복사하고, 그 진행사항을 리스트박스에 표시하는 WPF 애플리케이션을 작성하는 방법을 설명드리겠습니다.

아래는 해당 요구사항을 만족하는 WPF 애플리케이션의 코드입니다.

새로운 WPF 애플리케이션을 생성합니다.
XAML 파일을 수정하여 UI를 구성합니다.
C# 코드 비하인드 파일을 수정하여 기능을 구현합니다.
1. XAML 파일 (MainWindow.xaml)
xml
코드 복사
<Window x:Class="FileCopyApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="File Copy App" Height="350" Width="525">
    <Grid>
        <ListBox x:Name="LogListBox" HorizontalAlignment="Left" Height="260" VerticalAlignment="Top" Width="505" Margin="10,10,0,0"/>
        <Button Content="Start" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="505" Height="30" Margin="10,0,0,10" Click="StartButton_Click"/>
    </Grid>
</Window>
2. C# 코드 비하인드 파일 (MainWindow.xaml.cs)
csharp
코드 복사
using System;
using System.IO;
using System.Threading;
using System.Windows;
using System.Windows.Threading;

namespace FileCopyApp
{
    public partial class MainWindow : Window
    {
        private Timer _timer;
        private string _sourceFilePath = @"C:\Agent\1.jpg";
        private string _destinationFolderPath = @"F:\ABCD\";

        public MainWindow()
        {
            InitializeComponent();
        }

        private void StartButton_Click(object sender, RoutedEventArgs e)
        {
            // 타이머 초기화
            _timer = new Timer(CopyFile, null, 0, 5000);
        }

        private void CopyFile(object state)
        {
            // 날짜 형식을 기반으로 폴더 이름 생성
            string timestamp = DateTime.Now.ToString("yyyyMMddHH");
            string destinationPath = Path.Combine(_destinationFolderPath, timestamp);

            // 폴더가 없으면 생성
            if (!Directory.Exists(destinationPath))
            {
                Directory.CreateDirectory(destinationPath);
                LogMessage($"Directory created: {destinationPath}");
            }

            // 파일 복사
            string destinationFilePath = Path.Combine(destinationPath, "1.jpg");
            try
            {
                File.Copy(_sourceFilePath, destinationFilePath, true);
                LogMessage($"File copied to: {destinationFilePath}");
            }
            catch (Exception ex)
            {
                LogMessage($"Error: {ex.Message}");
            }
        }

        private void LogMessage(string message)
        {
            // UI 스레드에서 리스트박스에 메시지 추가
            Dispatcher.Invoke(() => {
                LogListBox.Items.Add($"{DateTime.Now}: {message}");
                LogListBox.ScrollIntoView(LogListBox.Items[LogListBox.Items.Count - 1]);
            });
        }
    }
}
설명
XAML 파일: ListBox