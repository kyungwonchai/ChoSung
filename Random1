이 변경될 때마다 배경이 즉시 업데이트되도록 구현하려면, 값 변경을 감지하여 updateTable 함수 호출 시마다 문서 배경을 동적으로 변경하는 로직을 추가해야 합니다. 아래는 수정된 코드입니다.

수정된 코드
item.CT 값에 따라 문서의 배경이 실시간으로 업데이트되도록 보장합니다.

javascript
코드 복사
function updateTable(data) {
    const tableBody = document.getElementById('table-body'); // 테이블의 tbody ID
    tableBody.innerHTML = ''; // 기존 테이블 내용 초기화

    // 데이터 순회
    let hasLargeCT = false; // 100보다 큰 CT 값이 있는지 여부를 추적

    data.forEach(item => {
        const row = document.createElement('tr'); // 새로운 행 생성

        row.innerHTML = `
            <td>${item.id}</td>
            <td>${item.name}</td>
            <td style="background-color: ${item.CT > 100 ? 'red' : 'transparent'};">${item.CT}</td>
        `;

        tableBody.appendChild(row); // 테이블에 행 추가

        // 100보다 큰 CT 값이 존재하는지 확인
        if (item.CT > 100) {
            hasLargeCT = true;
        }
    });

    // CT 값에 따라 문서 배경 변경
    if (hasLargeCT) {
        document.body.style.background = 'linear-gradient(to bottom, purple, red)';
    } else {
        document.body.style.background = 'transparent'; // 기본 배경으로 복귀
    }
}
주요 변경 사항
hasLargeCT 변수 도입
데이터에서 item.CT > 100인 값이 하나라도 있는지 확인하기 위해 플래그 변수를 추가했습니다.
값 변경 시 동적 반영
테이블을 업데이트할 때마다 item.CT 조건에 따라 문서 배경을 실시간으로 업데이트합니다.
배경 초기화
item.CT > 100 조건이 충족되지 않으면 배경을 기본값(transparent)으로 복구합니다.
데이터 업데이트 테스트
HTML 구조
html
코드 복사
<table>
    <thead>
        <tr>
            <th>ID</th>
            <th>Name</th>
            <th>CT</th>
        </tr>
    </thead>
    <tbody id="table-body">
        <!-- 데이터가 여기에 동적으로 추가됨 -->
    </tbody>
</table>

<button id="update-btn">Update Data</button>
JavaScript
값을 동적으로 업데이트하면서 즉시 반영되는지 테스트합니다.

javascript
코드 복사
let data = [
    { id: 1, name: 'Item A', CT: 95 },
    { id: 2, name: 'Item B', CT: 85 },
    { id: 3, name: 'Item C', CT: 50 },
    { id: 4, name: 'Item D', CT: 75 }
];

// 초기 테이블 렌더링
updateTable(data);

// 값 변경 버튼
document.getElementById('update-btn').addEventListener('click', () => {
    // 임의로 CT 값 변경
    data[1].CT = 110; // 두 번째 아이템의 CT 값을 110으로 변경
    updateTable(data); // 테이블 업데이트
});
실행 결과
초기에는 모든 CT 값이 100 이하이므로 배경은 기본값(transparent)으로 유지됩니다.
버튼을 클릭하면 data[1].CT가 110으로 변경되고, updateTable 호출에 따라:
해당 CT 값이 100 이상이므로 셀 배경이 빨간색으로 설정됩니다.
문서 배경도 보라색-붉은색 그라데이션으로 변경됩니다.
이후 값을 다시 100 이하로 변경하면 배경이 기본값으로 복구됩니다.
코드 동작 원리
updateTable(data) 호출 시 항상 상태를 확인:
값 변경에 따라 테이블 및 문서 배경이 즉시 업데이트되도록 보장.