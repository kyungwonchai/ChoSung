evExpress 22.2에서는 TextEdit 컨트롤에 CustomDraw 이벤트가 없습니다. 따라서 TextEdit의 스타일을 줄 단위로 변경하려면 다른 접근 방식을 사용해야 합니다. 여기서는 TextEdit이 아닌 RichTextEdit를 사용하여 특정 조건에 따라 텍스트 스타일을 변경하는 방법을 설명하겠습니다.

XAML 파일에 여러 RichTextEdit 컨트롤 추가:

xml
코드 복사
<Window x:Class="WpfApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/richedit"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Grid>
        <StackPanel>
            <dxr:RichEditControl Name="richEdit1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Height="40"/>
            <dxr:RichEditControl Name="richEdit2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Height="40"/>
            <dxr:RichEditControl Name="richEdit3" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Height="40"/>
            <dxr:RichEditControl Name="richEdit4" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Height="40"/>
            <dxr:RichEditControl Name="richEdit5" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Height="40"/>
            <dxr:RichEditControl Name="richEdit6" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Height="40"/>
            <dxr:RichEditControl Name="richEdit7" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Height="40"/>
            <dxr:RichEditControl Name="richEdit8" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Height="40"/>
            <dxr:RichEditControl Name="richEdit9" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Height="40"/>
            <dxr:RichEditControl Name="richEdit10" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Height="40"/>
        </StackPanel>
    </Grid>
</Window>
C# 코드로 스타일 적용:

각 RichEditControl에 대해 특정 조건에 따라 텍스트 스타일을 변경하는 로직을 구현합니다.

C# 코드:

csharp
코드 복사
using DevExpress.Xpf.RichEdit;
using DevExpress.XtraRichEdit.API.Native;
using System;
using System.Data.SqlClient;
using System.Windows;
using System.Windows.Media;

namespace WpfApp
{
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
            LoadDataFromDatabase();
            ApplyStylesToAllRichEdits();
        }

        private void LoadDataFromDatabase()
        {
            string connectionString = "Your_Connection_String_Here";
            string query = "SELECT Content FROM TextData WHERE Id = 1";

            using (SqlConnection connection = new SqlConnection(connectionString))
            {
                SqlCommand command = new SqlCommand(query, connection);
                try
                {
                    connection.Open();
                    SqlDataReader reader = command.ExecuteReader();
                    if (reader.Read())
                    {
                        string content = reader["Content"].ToString();
                        richEdit1.Text = content;
                        richEdit2.Text = content;
                        richEdit3.Text = content;
                        richEdit4.Text = content;
                        richEdit5.Text = content;
                        richEdit6.Text = content;
                        richEdit7.Text = content;
                        richEdit8.Text = content;
                        richEdit9.Text = content;
                        richEdit10.Text = content;
                    }
                    reader.Close();
                }
                catch (Exception ex)
                {
                    MessageBox.Show("An error occurred: " + ex.Message);
                }
            }
        }

        private void ApplyStylesToAllRichEdits()
        {
            ApplyStylesToRichEdit(richEdit1);
            ApplyStylesToRichEdit(richEdit2);
            ApplyStylesToRichEdit(richEdit3);
            ApplyStylesToRichEdit(richEdit4);
            ApplyStylesToRichEdit(richEdit5);
            ApplyStylesToRichEdit(richEdit6);
            ApplyStylesToRichEdit(richEdit7);
            ApplyStylesToRichEdit(richEdit8);
            ApplyStylesToRichEdit(richEdit9);
            ApplyStylesToRichEdit(richEdit10);
        }

        private void ApplyStylesToRichEdit(RichEditControl richEdit)
        {
            var document = richEdit.Document;
            var text = document.Text;
            var lines = text.Split('\n');

            document.BeginUpdate();

            foreach (var line in lines)
            {
                int start = text.IndexOf(line);
                int length = line.Length;

                if (line.StartsWith("*"))
                {
                    var range = document.CreateRange(start, length);
                    var cp = document.BeginUpdateCharacters(range);
                    cp.ForeColor = Colors.Red;
                    cp.FontSize = 14;
                    document.EndUpdateCharacters(cp);
                }
            }

            document.EndUpdate();
        }
    }
}
설명:

LoadDataFromDatabase: 데이터베이스에서 텍스트 데이터를 불러와 각 RichEditControl에 동일한 내용을 설정합니다.
ApplyStylesToAllRichEdits: 모든 RichEditControl에 대해 스타일 적용 메서드를 호출합니다.
ApplyStylesToRichEdit: 각 RichEditControl에 대해 텍스트를 줄 단위로 나누어 특정 글자로 시작하는 줄의 스타일을 변경하는 로직을 처리합니다.
이 코드는 각 RichEditControl에 대해 텍스트를 줄 단위로 나누어 특정 글자(*)로 시작하는 줄의 글씨 색상과 크기를 변경합니다. 이를 통해 여러 RichEditControl에 동일한 스타일을 적용할 수 있습니다.