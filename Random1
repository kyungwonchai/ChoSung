pPanel에 버튼으로 동적 생성한 후 클릭 이벤트를 처리하여 디버그로 값을 출력하는 C# 코드를 작성하겠습니다. 아래는 해당 기능을 수행하는 WPF 애플리케이션의 예시 코드입니다.

MS SQL에서 tname이 'M_'으로 시작하는 데이터를 선택하는 쿼리를 실행합니다.
결과를 받아와서 WrapPanel에 버튼을 동적으로 생성합니다.
각 버튼에 클릭 이벤트 핸들러를 추가하여, 클릭 시 해당 버튼의 tname 값을 디버그로 출력합니다.
csharp
Copy code
using System;
using System.Data.SqlClient;
using System.Windows;
using System.Windows.Controls;

public partial class MainWindow : Window
{
    public MainWindow()
    {
        InitializeComponent();
        LoadButtons();
    }

    private void LoadButtons()
    {
        string connectionString = "Your Connection String Here";
        string query = "SELECT tname FROM table1 WHERE tname LIKE 'M_%'";

        using (SqlConnection connection = new SqlConnection(connectionString))
        {
            SqlCommand command = new SqlCommand(query, connection);
            connection.Open();
            SqlDataReader reader = command.ExecuteReader();

            try
            {
                while (reader.Read())
                {
                    string tname = reader.GetString(0);
                    Button button = new Button
                    {
                        Content = tname,
                        Margin = new Thickness(5)
                    };
                    button.Click += Button_Click;
                    wrapPanel.Children.Add(button); // 'wrapPanel' is the Name of your WrapPanel in XAML
                }
            }
            finally
            {
                reader.Close();
            }
        }
    }

    private void Button_Click(object sender, RoutedEventArgs e)
    {
        Button btn = sender as Button;
        Debug.WriteLine(btn.Content.ToString());
    }
}
위 코드에서 다음을 확인해야 합니다:

"Your Connection String Here" 부분에 실제 데이터베이스 연결 문자열을 입력합니다.
wrapPanel은 XAML에서 정의된 WrapPanel의 이름과 일치해야 합니다.
이 코드는 최신 버전의 C#을 사용하며, Devexpress 또는 다른 UI 라이브러리에 특화된 컴포넌트 없이 순수 WPF 컨트롤을 사용합니다.

한국어 설명:

MS SQL 데이터베이스에서 'M_'으로 시작하는 tname 값을 조회합니다.
조회된 각 tname에 대해 버튼을 생성하고 WrapPanel에 추가합니다.
생성된 버튼을 클릭하면 해당 tname 값이 디버그 출력으로 나타납니다