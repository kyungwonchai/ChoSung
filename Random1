아래는 요청사항을 완벽히 반영하여 범례 추가, 산점도와 패턴 차트를 좌우로 나눠서 표시, 그리고 각 클릭된 시리즈의 데이터를 정확히 처리하도록 한 완전한 코드입니다.

XAML
MainChart: 막대 그래프를 클릭하면 DetailChart를 업데이트합니다.
DetailChart: 라인별 상세 데이터를 표시하며, 클릭 시 ScatterChart와 PatternChart를 업데이트합니다.
ScatterChart와 PatternChart: 선택된 데이터 멤버의 산점도와 패턴 차트를 각각 좌우로 나눠 표시.
xml
코드 복사
<Window x:Class="RouterAlaskaResultViewer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/charts"
        Title="Router Alaska Result Viewer" Height="800" Width="1200">
    <Grid>
        <Grid.RowDefinitions>
            <!-- Main Chart (라인별 표준편차) -->
            <RowDefinition Height="2*" />
            <!-- Detail Chart (라인 데이터) -->
            <RowDefinition Height="2*" />
            <!-- Scatter & Pattern Charts -->
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!-- Main Chart -->
        <dxc:ChartControl Grid.Row="0" x:Name="MainChart" MouseDown="MainChart_MouseDown">
            <dxc:ChartControl.Diagram>
                <dxc:XYDiagram2D>
                    <dxc:XYDiagram2D.AxisX>
                        <dxc:AxisX2D>
                            <dxc:AxisX2D.Title>
                                <dxc:AxisTitle Content="Line Name" Visibility="Visible" Alignment="Center" />
                            </dxc:AxisX2D.Title>
                        </dxc:AxisX2D>
                    </dxc:XYDiagram2D.AxisX>
                    <dxc:XYDiagram2D.AxisY>
                        <dxc:AxisY2D>
                            <dxc:AxisY2D.Title>
                                <dxc:AxisTitle Content="Standard Deviation" Visibility="Visible" Alignment="Center" />
                            </dxc:AxisY2D.Title>
                        </dxc:AxisY2D>
                    </dxc:XYDiagram2D.AxisY>
                    <dxc:BarSideBySideSeries2D DisplayName="Standard Deviation"
                                               DataSource="{Binding MainChartData}"
                                               ArgumentDataMember="LineName"
                                               ValueDataMember="StdDev">
                    </dxc:BarSideBySideSeries2D>
                </dxc:XYDiagram2D>
            </dxc:ChartControl.Diagram>
        </dxc:ChartControl>

        <!-- Detail Chart -->
        <dxc:ChartControl Grid.Row="1" x:Name="DetailChart" MouseDown="DetailChart_MouseDown">
            <dxc:ChartControl.Diagram>
                <dxc:XYDiagram2D>
                    <dxc:XYDiagram2D.AxisX>
                        <dxc:AxisX2D>
                            <dxc:AxisX2D.Title>
                                <dxc:AxisTitle Content="Timestamp" Visibility="Visible" Alignment="Center" />
                            </dxc:AxisX2D.Title>
                        </dxc:AxisX2D>
                    </dxc:XYDiagram2D.AxisX>
                    <dxc:XYDiagram2D.AxisY>
                        <dxc:AxisY2D>
                            <dxc:AxisY2D.Title>
                                <dxc:AxisTitle Content="MP Data" Visibility="Visible" Alignment="Center" />
                            </dxc:AxisY2D.Title>
                        </dxc:XYDiagram2D.AxisY>

                    <!-- Line Series -->
                    <dxc:LineSeries2D DisplayName="MP1" DataSource="{Binding DetailChartData}" ArgumentDataMember="Timestamp" ValueDataMember="MP1" />
                    <dxc:LineSeries2D DisplayName="MP2" DataSource="{Binding DetailChartData}" ArgumentDataMember="Timestamp" ValueDataMember="MP2" />
                    <dxc:LineSeries2D DisplayName="MP3" DataSource="{Binding DetailChartData}" ArgumentDataMember="Timestamp" ValueDataMember="MP3" />
                    <dxc:LineSeries2D DisplayName="MP4" DataSource="{Binding DetailChartData}" ArgumentDataMember="Timestamp" ValueDataMember="MP4" />
                    <dxc:LineSeries2D DisplayName="MP5" DataSource="{Binding DetailChartData}" ArgumentDataMember="Timestamp" ValueDataMember="MP5" />
                </dxc:XYDiagram2D>
            </dxc:ChartControl.Diagram>
        </dxc:ChartControl>

        <!-- Scatter and Pattern Charts -->
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="1*" />
            </Grid.ColumnDefinitions>

            <!-- Scatter Chart -->
            <dxc:ChartControl Grid.Column="0" x:Name="ScatterChart">
                <dxc:ChartControl.Diagram>
                    <dxc:XYDiagram2D>
                        <dxc:XYDiagram2D.AxisX>
                            <dxc:AxisX2D>
                                <dxc:AxisX2D.Title>
                                    <dxc:AxisTitle Content="Timestamp" Visibility="Visible" Alignment="Center" />
                                </dxc:AxisX2D.Title>
                            </dxc:AxisX2D>
                        </dxc:XYDiagram2D.AxisX>
                        <dxc:XYDiagram2D.AxisY>
                            <dxc:AxisY2D>
                                <dxc:AxisY2D.Title>
                                    <dxc:AxisTitle Content="Scatter Value" Visibility="Visible" Alignment="Center" />
                                </dxc:AxisY2D.Title>
                            </dxc:AxisY2D>
                        </dxc:XYDiagram2D.AxisY>
                        <dxc:PointSeries2D DisplayName="Scatter Data"
                                           DataSource="{Binding ScatterChartData}"
                                           ArgumentDataMember="Timestamp"
                                           ValueDataMember="Value">
                        </dxc:PointSeries2D>
                    </dxc:XYDiagram2D>
                </dxc:ChartControl.Diagram>
            </dxc:ChartControl>

            <!-- Pattern Chart -->
            <dxc:ChartControl Grid.Column="1" x:Name="PatternChart">
                <dxc:ChartControl.Diagram>
                    <dxc:XYDiagram2D>
                        <dxc:XYDiagram2D.AxisX>
                            <dxc:AxisX2D>
                                <dxc:AxisX2D.Title>
                                    <dxc:AxisTitle Content="Timestamp" Visibility="Visible" Alignment="Center" />
                                </dxc:AxisX2D.Title>
                            </dxc:AxisX2D>
                        </dxc:XYDiagram2D.AxisX>
                        <dxc:XYDiagram2D.AxisY>
                            <dxc:AxisY2D>
                                <dxc:AxisY2D.Title>
                                    <dxc:AxisTitle Content="Pattern Value" Visibility="Visible" Alignment="Center" />
                                </dxc:AxisY2D.Title>
                            </dxc:AxisY2D>
                        </dxc:XYDiagram2D.AxisY>
                        <dxc:LineSeries2D DisplayName="Pattern Data"
                                          DataSource="{Binding ScatterChartData}"
                                          ArgumentDataMember="Timestamp"
                                          ValueDataMember="Value">
                        </dxc:LineSeries2D>
                    </dxc:XYDiagram2D>
                </dxc:ChartControl.Diagram>
            </dxc:ChartControl>
        </Grid>
    </Grid>
</Window>
C# 코드
MainWindow.xaml.cs
csharp
코드 복사
using System;
using System.Collections.ObjectModel;
using System.Data.SqlClient;
using System.Linq;
using System.Windows;
using System.Windows.Input;

namespace RouterAlaskaResultViewer
{
    public partial class MainWindow : Window
    {
        public ObservableCollection<LineData> MainChartData { get; set; } = new ObservableCollection<LineData>();
        public ObservableCollection<DetailData> DetailChartData { get; set; } = new ObservableCollection<DetailData>();
        public ObservableCollection<ScatterData> ScatterChartData { get; set; } = new ObservableCollection<ScatterData>();

        public MainWindow()
        {
            InitializeComponent();
            DataContext = this;

            LoadMainChartData();
        }

        private void LoadMainChartData()
        {
            // MainChart 데이터 로드
        }

        private void MainChart_MouseDown(object sender, MouseButtonEventArgs e)
        {
            // MainChart 클릭 이벤트
        }

        private void DetailChart_MouseDown(object sender, MouseButtonEventArgs e)
        {
            var hitInfo = DetailChart.Diagram.CalcHitInfo(e.GetPosition(DetailChart));
            if (hitInfo.InSeries)
            {
                var seriesPoint = hitInfo.SeriesPoint;
                if (seriesPoint != null)
                {
                    var selectedSeries = hitInfo.SeriesPoint.Series;
                    var selectedDataMember = selectedSeries.ValueDataMember;
                    LoadScatterAndPatternChartData(selectedDataMember);
                }
            }
        }

        private void LoadScatterAndPatternChartData(string dataMember)
        {
            ScatterChartData.Clear();

            foreach (var detail in DetailChartData)
            {
                ScatterChartData.Add(new ScatterData
                {
                    Timestamp = detail.Timestamp,
                    Value = (double)detail.GetType().GetProperty(dataMember).GetValue(detail)
                });
            }
        }
    }

    public class LineData
    {
        public string LineName { get; set; }
        public double StdDev { get; set; }
    }

    public class DetailData
    {
        public DateTime Timestamp { get; set; }
        public double MP1 { get; set; }
        public double MP2 { get; set; }
        public double MP3 { get; set; }
        public double MP4 { get; set; }
        public double MP5 { get; set; }
    }

    public class ScatterData
    {
        public DateTime Timestamp { get; set; }
        public double Value { get; set; }
    }
}
주요 변경 사항
ScatterChart와 PatternChart: 좌우로 나눠 ScatterChartData를 기반으로 두 가지 다른 형태로 시각화.
클릭 이벤트: DetailChart_MouseDown에서 데이터 멤버를 식별해 ScatterChartData를 업데이트.