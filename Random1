네, 좋습니다! 에이전트 빌더에서 카드를 끌어다 놓고 선을 연결하는 시각적인 개념으로 다시 설명해 드릴게요. 지금 사용하시는 빌더 화면을 상상하시면서 따라오시면 됩니다. 🎨

기존의 복잡했던 LLM L2, DataFrame 필터, Parser 카드를 캔버스에서 치우고, 대신 Qdrant 카드를 중심으로 훨씬 간단하게 만들어 보겠습니다.

1단계: 데이터를 Qdrant에 미리 담아두는 흐름 만들기 (사전 준비용)
이건 데이터를 준비할 때 한 번만 실행하는 디자인입니다.

데이터 로더 카드 놓기

디자인 공간에 DataFrame D1을 불러오는 데이터 로더 카드를 올립니다. 이 카드의 데이터 출력 점(Pin)에서는 부품 정보가 한 줄씩 나옵니다.

임베딩 모델 카드 놓기

임베딩 모델 카드를 캔버스에 올립니다. 이 카드는 글자를 벡터(숫자 배열)로 바꿔주는 역할을 합니다.

Qdrant 카드 놓고 선 연결하기 🔗

Qdrant 카드를 올리고, 설정을 '데이터 주입(Ingest)' 모드로 바꿉니다.

연결 1 (벡터): 데이터 로더에서 나온 정보를 임베딩 모델 카드의 텍스트 입력 점에 연결하고, 임베딩 모델 카드의 벡터 출력 점을 Qdrant 카드의 Vector 점에 연결합니다.

연결 2 (원본 데이터): 데이터 로더의 데이터 출력 점에서 선을 하나 더 빼서, Qdrant 카드의 Payload 점에 바로 연결합니다.

이제 이 흐름을 실행하면 D1의 모든 데이터가 벡터와 원본(Payload) 한 쌍으로 Qdrant에 자동으로 저장됩니다. 준비 끝입니다.

2단계: 사용자의 질문에 실시간으로 답변하는 에이전트 만들기
이제 실제 사용자가 사용할 에이전트의 디자인입니다.

사용자 입력 카드에서 시작

모든 흐름의 시작인 사용자 입력 카드를 놓습니다. 여기서 나온 질문 텍스트 선이 모든 것의 출발점입니다.

임베딩 모델 카드로 질문을 벡터로 변환

임베딩 모델 카드를 가져옵니다.

사용자 입력의 질문 텍스트 선을 임베딩 모델 카드의 텍스트 입력 점에 연결합니다. 이제 이 카드의 벡터 출력 점에서는 질문의 의미가 담긴 벡터가 나옵니다.

Qdrant 카드로 정보 검색 🚀

Qdrant 카드를 놓고 설정을 '검색(Search)' 모드로 맞춥니다.

임베딩 모델에서 나온 벡터 출력 선을 Qdrant 카드의 Vector 점에 연결합니다.

이제 Qdrant 카드의 검색 결과(Context) 점에서는 질문과 가장 관련된 부품 정보(Payload)가 튀어나옵니다.

LLM L3 카드로 최종 답변 조립

원래 사용하시던 LLM L3 (답변정리 전문가) 카드를 놓습니다.

연결 1 (사실 데이터): Qdrant의 검색 결과(Context) 선을 LLM L3 카드의 Context 입력점에 연결합니다.

연결 2 (원본 질문): 맨 처음의 사용자 입력 카드에서 선을 하나 더 빼서 LLM L3 카드의 Question 입력점에 연결합니다.

최종 답변 카드로 마무리

LLM L3 카드에서 나온 생성된 답변 선을 최종 답변 카드에 연결하면 완성입니다!

결론: 캔버스가 어떻게 바뀌었나요?
사라진 카드: LLM L2, DataFrame 필터, Parser 카드가 캔버스에서 사라졌습니다.

새로운 에이스: 그 자리를 Qdrant 카드가 대신하게 됩니다.