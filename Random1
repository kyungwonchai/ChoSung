바인딩을 직접 할 수는 없습니다. 이런 경우에는 Converter를 사용하면 원하는 기능을 구현할 수 있습니다.

예를 들어, ValueConverter를 작성하여 두 값이 같은지 비교하고, 그 결과에 따라 행의 색상을 변경할 수 있습니다.

C#에서 IValueConverter 구현:

csharp

using System;
using System.Globalization;
using System.Windows.Data;

public class RowColorConverter : IValueConverter
{
    public object Convert(object value, Type targetType, object parameter, CultureInfo culture)
    {
        string columnAValue = value as string;
        string variableB = parameter as string;

        return columnAValue == variableB ? "DesiredColor" : "DefaultColor";
    }

    public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)
    {
        throw new NotImplementedException();
    }
}

XAML에서 사용:

xml

<DataGrid.RowStyle>
    <Style TargetType="DataGridRow">
        <Setter Property="Background" Value="{Binding ColumnA, Converter={StaticResource RowColorConverter}, ConverterParameter={Binding MyValue}}" />
    </Style>
</DataGrid.RowStyle>

이렇게 하면 ColumnA의 값과 MyValue 변수를 비교하여 행의 색상을 결정합니다. 여기서 "DesiredColor"와 "DefaultColor"는 원하는 색상 값으로 교체해