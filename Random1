아, 알겠습니다. DataSpell에서 방금 PC에 설치한 주피터 노트북을 사용하는 방법을 찾으시는군요. 이게 바로 DataSpell의 핵심 기능입니다.

별도로 터미널에서 jupyter notebook 명령을 칠 필요가 전혀 없습니다. DataSpell이 PC에 설치된 아나콘다를 인식해서 자동으로 처리해 줍니다. 설정은 매우 간단합니다.

## 1. DataSpell에서 '파이썬 인터프리터' 설정하기 (가장 중요)
DataSpell에게 "내 PC에 설치된 아나콘다 파이썬을 사용해!"라고 알려주는 과정입니다.

DataSpell을 실행하고, 노트북 파일을 저장할 프로젝트 폴더를 엽니다.

File > Settings 메뉴로 들어갑니다. (macOS는 DataSpell > Settings)

Project: [폴더이름] > Python Interpreter 를 선택합니다.

오른쪽의 Add Interpreter 버튼을 누르고 Add Local Interpreter 를 선택합니다.

왼쪽 메뉴에서 Conda Environment 를 선택합니다.

Use existing environment 옵션을 선택하고, 드롭다운 목록에서 base (...\anaconda3\python.exe) 라고 표시된 기본(base) 아나콘다 환경을 선택합니다. DataSpell이 보통 자동으로 찾아줍니다.

OK 버튼을 눌러 설정을 완료합니다.

이제 DataSpell 오른쪽 하단을 보면 base (Python 3.x) 와 같이 현재 사용할 파이썬 환경이 표시됩니다.

## 2. 주피터 노트북 만들고 실행하기
모든 설정이 끝났습니다. 이제 노트북을 사용하기만 하면 됩니다.

왼쪽 프로젝트 파일 탐색기에서 마우스 오른쪽 버튼을 클릭하고 New > Jupyter Notebook 을 선택해 새 노트북 파일을 만듭니다.

코드 셀에 파이썬 코드를 입력합니다. (예: print("Hello, DataSpell!"))

코드 셀 왼쪽에 나타나는 녹색 실행(▶) 버튼을 누르거나, 키보드에서 Shift + Enter 를 누릅니다.

그러면 DataSpell이 PC에 설치된 주피터 서버를 백그라운드에서 자동으로 실행하고, 코드 실행 결과를 바로 아래에 보여줍니다. 터미널 창을 따로 켜고 관리할 필요가 전혀 없습니다.

이것이 IDE를 사용하는 가장 큰 장점입니다. 👍

