겠습니다. PrintVisual을 사용할 때, PrintableArea라는 Grid를 최종 출력할 크기(40mm x 42mm)로 축소해서 출력하도록 하겠습니다. 이 경우, Viewbox를 활용해 Grid 전체를 지정한 크기로 맞춰서 출력할 수 있습니다. 아래 코드는 PrintableArea를 특정 크기(40mm x 42mm)로 설정한 후, 그 크기에 맞게 강제로 축소하여 인쇄하는 방식으로 구현되었습니다.

주요 구현
Viewbox로 스케일링: Viewbox를 사용하여 PrintableArea를 원하는 최종 크기인 40mm x 42mm 크기로 맞춰줍니다.
DPI 변환: 40mm와 42mm를 픽셀 단위로 변환하여 정확히 해당 크기로 출력되도록 합니다.
코드
XAML (MainWindow.xaml)
xml
코드 복사
<Window x:Class="LabelPrinter.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Label Printer" Height="250" Width="220" Background="White">
    <Grid>
        <!-- Viewbox를 사용하여 PrintableArea를 원하는 크기로 축소할 수 있게 감쌉니다. -->
        <Viewbox Name="viewbox">
            <Grid Name="PrintableArea" Background="White">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="64"/> <!-- 좌측 컬럼 너비 (약 17mm) -->
                    <ColumnDefinition Width="125"/> <!-- 우측 컬럼 너비 (약 33mm) -->
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"/> <!-- 병합된 제목 행 -->
                    <RowDefinition Height="30"/> <!-- 코드 -->
                    <RowDefinition Height="30"/> <!-- LOT -->
                    <RowDefinition Height="30"/> <!-- 업체 -->
                    <RowDefinition Height="30"/> <!-- 라인/모델 -->
                    <RowDefinition Height="30"/> <!-- 관리자 확인 -->
                </Grid.RowDefinitions>

                <!-- 병합된 제목 행: 분할 자재 라벨 -->
                <Border Grid.Row="0" Grid.ColumnSpan="2" BorderThickness="1" BorderBrush="Black" Background="White">
                    <TextBlock Text="분할 자재 라벨" FontSize="12" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="5"/>
                </Border>

                <!-- 좌측 컬럼: 라벨명들 -->
                <Border BorderThickness="1" BorderBrush="Black" Grid.Row="1" Grid.Column="0">
                    <TextBlock Text="코드:" FontSize="8" VerticalAlignment="Center" Padding="5"/>
                </Border>
                <Border BorderThickness="1" BorderBrush="Black" Grid.Row="2" Grid.Column="0">
                    <TextBlock Text="LOT:" FontSize="8" VerticalAlignment="Center" Padding="5"/>
                </Border>
                <Border BorderThickness="1" BorderBrush="Black" Grid.Row="3" Grid.Column="0">
                    <TextBlock Text="업체:" FontSize="8" VerticalAlignment="Center" Padding="5"/>
                </Border>
                <Border BorderThickness="1" BorderBrush="Black" Grid.Row="4" Grid.Column="0">
                    <TextBlock Text="라인/모델:" FontSize="8" VerticalAlignment="Center" Padding="5"/>
                </Border>
                <Border BorderThickness="1" BorderBrush="Black" Grid.Row="5" Grid.Column="0">
                    <TextBlock Text="관리자 확인:" FontSize="8" VerticalAlignment="Center" Padding="5"/>
                </Border>

                <!-- 우측 컬럼: 텍스트 입력 (테두리 없이 배경 투명) -->
                <Border BorderThickness="1" BorderBrush="Black" Grid.Row="1" Grid.Column="1">
                    <TextBox FontSize="8" Background="Transparent" BorderThickness="0" VerticalContentAlignment="Center"/>
                </Border>
                <Border BorderThickness="1" BorderBrush="Black" Grid.Row="2" Grid.Column="1">
                    <TextBox FontSize="8" Background="Transparent" BorderThickness="0" VerticalContentAlignment="Center"/>
                </Border>
                <Border BorderThickness="1" BorderBrush="Black" Grid.Row="3" Grid.Column="1">
                    <TextBox FontSize="8" Background="Transparent" BorderThickness="0" VerticalContentAlignment="Center"/>
                </Border>
                <Border BorderThickness="1" BorderBrush="Black" Grid.Row="4" Grid.Column="1">
                    <TextBox FontSize="8" Background="Transparent" BorderThickness="0" VerticalContentAlignment="Center"/>
                </Border>
                <Border BorderThickness="1" BorderBrush="Black" Grid.Row="5" Grid.Column="1">
                    <TextBox FontSize="8" Background="Transparent" BorderThickness="0" VerticalContentAlignment="Center"/>
                </Border>
            </Grid>
        </Viewbox>

        <!-- 출력 버튼 -->
        <Button Content="출력" Width="100" Height="30" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,20" Click="PrintButton_Click"/>
    </Grid>
</Window>
C# 코드 (MainWindow.xaml.cs)
40mm x 42mm 크기로 출력되도록 Viewbox의 Stretch 속성을 조정하여 프린트할 때 원하는 크기로 맞춥니다.

csharp
코드 복사
using System.Windows;
using System.Windows.Controls;
using System.Windows.Media;

namespace LabelPrinter
{
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
        }

        private void PrintButton_Click(object sender, RoutedEventArgs e)
        {
            PrintDialog printDialog = new PrintDialog();
            if (printDialog.ShowDialog() == true)
            {
                // 원하는 출력 크기 (단위: mm)
                double widthMm = 40;
                double heightMm = 42;

                // 프린터 DPI 가져오기
                double dpiX = printDialog.PrintQueue.DefaultPrintTicket.PageResolution.X ?? 300; // 기본값으로 300 DPI
                double dpiY = printDialog.PrintQueue.DefaultPrintTicket.PageResolution.Y ?? 300;

                // mm를 인치로 변환 후 DPI를 적용하여 픽셀 단위로 변환
                double widthInPixels = (widthMm / 25.4) * dpiX;
                double heightInPixels = (heightMm / 25.4) * dpiY;

                // Viewbox 크기 조정
                viewbox.Width = widthInPixels;
                viewbox.Height = heightInPixels;
                viewbox.Stretch = Stretch.Uniform;

                // 강제로 레이아웃을 다시 계산
                PrintableArea.Measure(new Size(widthInPixels, heightInPixels));
                PrintableArea.Arrange(new Rect(new Size(widthInPixels, heightInPixels)));

                // 인쇄
                printDialog.PrintVisual(viewbox, "Label Print");
            }
        }
    }
}
설명
출력 크기 설정: 원하는 실제 크기(40mm x 42mm)를 widthMm와 heightMm 변수에 저장합니다.
픽셀 단위 변환: 프린터의 DPI 설정을 사용해, widthInPixels와 heightInPixels를 계산하여 최종 출력할 크기를 픽셀 단위로 변환합니다.
Viewbox 크기 조정: viewbox의 Width와 Height를 지정한 픽셀 크기로 설정하고, Stretch를 Uniform으로 설정해 비율을 유지하면서 크기를 맞춥니다.