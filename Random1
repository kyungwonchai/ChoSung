이 작업을 위해 파이썬 코드를 작성할 수 있습니다. 파이썬을 사용하여 지정된 폴더에서 파일을 읽고, 내용을 파싱한 후, 지정된 컬럼으로 데이터를 정리하여 CSV 파일로 내보내는 과정을 구현하겠습니다.

python
코드 복사
import os
import csv

# 로그 파일이 위치한 디렉토리
log_directory = "c:/test"

# 결과를 저장할 리스트
log_data = []

# 디렉토리 내의 모든 파일을 읽음
for filename in os.listdir(log_directory):
    if "commandqueue" in filename.lower():
        file_path = os.path.join(log_directory, filename)
        
        # 파일 열기
        with open(file_path, 'r', encoding='utf-8') as file:
            lines = file.readlines()
            for line in lines:
                # |로 구분하여 분리
                parts = line.strip().split('|')
                if len(parts) == 7:  # 필요한 정보가 모두 있는 경우에만 처리
                    log_data.append(parts)

# 시간 순으로 정렬
log_data.sort(key=lambda x: x[0])

# CSV 파일로 저장
output_file = "output.csv"
with open(output_file, 'w', newline='', encoding='utf-8') as csvfile:
    csvwriter = csv.writer(csvfile)
    # 컬럼 제목 쓰기
    csvwriter.writerow(["시간", "보낸값", "응답값", "결과", "결과2", "재시도", "속도"])
    # 데이터 쓰기
    csvwriter.writerows(log_data)

print(f"CSV 파일이 '{output_file}'로 저장되었습니다.")
설명
로그 파일 읽기: c:/test 디렉토리에서 'commandqueue'가 포함된 파일을 찾습니다.
파일 파싱 및 데이터 분리: 각 파일을 열고 |로 구분된 데이터를 읽어 리스트에 추가합니다. 데이터는 7개의 부분으로 나눠져야 정상적으로 추가됩니다.
정렬: 데이터를 시간 순으로 정렬합니다.