using DevExpress.XtraRichEdit;
using DevExpress.XtraRichEdit.API.Native;
using System;
using System.Data;
using System.Drawing;
using System.Threading.Tasks;
using System.Windows.Forms;

// 백그라운드 작업을 위한 비동기 메서드
private async Task UpdateRichEditControlAsync(DataTable dataTable, RichEditControl richEditControl)
{
    // 백그라운드에서 RichEditControl 업데이트
    await Task.Run(() =>
    {
        richEditControl.Invoke(new MethodInvoker(() =>
        {
            // RichEditControl에 표 형태의 내용 설정
            richEditControl.Document.BeginUpdate();

            // 테이블 생성
            richEditControl.Document.Tables.Create(richEditControl.Document.CaretPosition, dataTable.Rows.Count + 1, dataTable.Columns.Count);

            // 테이블 스타일 설정
            Table table = richEditControl.Document.Tables[0];
            table.Borders.InsideHorizontalBorder.LineStyle = TableBorderLineStyle.Single;
            table.Borders.InsideHorizontalBorder.LineColor = Color.Black;
            table.Borders.InsideHorizontalBorder.LineThickness = 1f;
            table.Borders.InsideVerticalBorder.LineStyle = TableBorderLineStyle.Single;
            table.Borders.InsideVerticalBorder.LineColor = Color.Black;
            table.Borders.InsideVerticalBorder.LineThickness = 1f;
            table.Borders.OuterHorizontalBorder.LineStyle = TableBorderLineStyle.Single;
            table.Borders.OuterHorizontalBorder.LineColor = Color.Black;
            table.Borders.OuterHorizontalBorder.LineThickness = 1f;
            table.Borders.OuterVerticalBorder.LineStyle = TableBorderLineStyle.Single;
            table.Borders.OuterVerticalBorder.LineColor = Color.Black;
            table.Borders.OuterVerticalBorder.LineThickness = 1f;

            // 테이블 헤더 생성
            for (int col = 0; col < dataTable.Columns.Count; col++)
            {
                TableCell cell = table.Rows[0].Cells[col];
                cell.BackColor = Color.LightBlue;
                cell.ForeColor = Color.Black;
                cell.TextAlignment = ParagraphAlignment.Center;
                cell.Text = dataTable.Columns[col].ColumnName;
            }

            // 테이블 데이터 생성
            for (int row = 0; row < dataTable.Rows.Count; row++)
            {
                for (int col = 0; col < dataTable.Columns.Count; col++)
                {
                    TableCell cell = table.Rows[row + 1].Cells[col];
                    cell.Text = dataTable.Rows[row][col].ToString();
                    cell.TextAlignment = ParagraphAlignment.Center;

                    // 셀 스타일 설정
                    if (col == 1 && col < dataTable.Columns.Count - 1)
                    {
                        int currentCellValue = Convert.ToInt32(dataTable.Rows[row][col]);
                        int nextCellValue = Convert.ToInt32(dataTable.Rows[row][col + 1]);
                        if (currentCellValue < nextCellValue)
                        {
                            cell.BackColor = Color.Yellow;
                        }
                    }
                }
            }

            richEditControl.Document.EndUpdate();
        }));
    });
}

// 예시로 사용하는 메서드
private async void LoadDataInBackground()
{
    // 예시로 DataTable 생성
    DataTable dataTable = new DataTable();
    dataTable.Columns.Add("Name", typeof(string));
    dataTable.Columns.Add("Age", typeof(int));
    dataTable.Rows.Add("John Doe", 30);
    dataTable.Rows.Add("Jane Smith", 25);

    // RichEditControl 업데이트를 백그라운드로 실행
    await UpdateRichEditControlAsync(dataTable, richEditControl1);
}
