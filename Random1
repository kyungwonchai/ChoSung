겠습니다. 바로 본론으로 들어가서, 도메인에 처음 접속했을 때 지정하신 리액트 앱이 바로 뜨도록 Nginx 설정을 수정하는 방법을 알려드리겠습니다.

현재 your-domain.com/app1 처럼 접속하는 대신, your-domain.com으로 접속했을 때 9999번 포트의 리액트 앱이 메인 화면으로 나오게 설정하는 것이 목표입니다.

Step 1: Nginx 설정 파일 수정
기존에 만들었던 /etc/nginx/sites-available/react-proxy 파일을 수정해서, 루트 경로(/)로 들어오는 요청을 첫 번째 리액트 앱(9999번 포트)으로 보내도록 변경합니다.

설정 파일을 엽니다.

Bash

sudo nano /etc/nginx/sites-available/react-proxy
아래와 같이 location / 부분을 수정합니다. 기존의 return 200 ... 내용을 지우고, location /app1/에 있던 proxy_pass 관련 설정을 그대로 가져오면 됩니다.

Nginx

server {
    listen 80;
    server_name your-domain.com; # 여기에 도메인 또는 서버 IP 입력

    # ✅ 수정된 부분: 루트 경로('/') 요청을 9999번 포트 앱으로 전달
    location / {
        # 내부의 9999번 포트 컨테이너로 요청을 전달
        proxy_pass http://localhost:9999;

        # 클라이언트의 실제 IP와 프로토콜 정보를 내부 서버(컨테이너)에 전달하기 위한 헤더 설정
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # '/app2' 경로로 들어오는 요청은 그대로 9998번 포트 앱으로 유지
    location /app2/ {
        proxy_pass http://localhost:9998/;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
Step 2: (가장 중요) 메인 화면이 된 리액트 앱 설정 수정
이 단계를 건너뛰면 화면이 제대로 나오지 않습니다. 메인 화면으로 사용할 리액트 앱(9999번 포트 앱)은 더 이상 /app1 같은 하위 경로에서 실행되지 않으므로, 앱 자체의 경로 설정을 원래대로 되돌려야 합니다.

package.json 수정: 메인으로 사용할 앱의 package.json 파일에서 homepage 설정을 삭제하거나 "/"로 변경합니다.

JSON

// "homepage": "/app1",  <-- 이 라인을 삭제하거나 주석 처리
라우터 basename 설정 제거: 앱의 라우터 설정 부분(App.js 또는 index.js)에서 basename 속성을 제거합니다.

JavaScript

// 변경 전
// <BrowserRouter basename="/app1">

// 변경 후
<BrowserRouter>
  <App />
</BrowserRouter>
앱 다시 빌드 및 도커 이미지 재생성: 위 설정을 변경한 후, 리액트 앱을 반드시 다시 빌드하고, 새로운 빌드 결과물로 도커 이미지를 다시 만들어야 합니다.

Bash

# 1. 리액트 앱 다시 빌드
npm run build

# 2. 도커 이미지 다시 빌드
docker build -t [app1-이미지-이름] .

# 3. 기존 컨테이너 중지 및 삭제 후 새 이미지로 실행
docker stop react-app1
docker rm react-app1
docker run -d -p 9999:80 --name react-app1 [app1-이미지-이름]
Step 3: Nginx 재시작 및 확인
Nginx 설정에 문법 오류가 없는지 최종 확인합니다.

Bash

sudo nginx -t
syntax is ok, test is successful 메시지가 나오는지 확인하세요.

Nginx를 재시작해서 변경된 설정을 적용합니다.

Bash

sudo systemctl restart nginx
🚀 이제 끝났습니다.