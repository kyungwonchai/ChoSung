HTML 템플릿에서 <td> 안에 조건문을 직접 넣어 배경색을 동적으로 지정하는 방식은 JavaScript 없이도 가능합니다. 이를 위해 Flask에서 데이터를 제공할 때 Jinja2 조건문을 사용하여 배경색 스타일을 바로 적용할 수 있습니다.

아래는 예제 코드입니다.

수정된 HTML (Flask와 연동)
html
코드 복사
<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>조건문으로 배경색 지정</title>
    <style>
        table {
            width: 50%;
            border-collapse: collapse;
            margin: 20px auto;
        }
        th, td {
            border: 1px solid #ddd;
            text-align: center;
            padding: 8px;
        }
        th {
            background-color: #f4f4f4;
        }
        .orange {
            background-color: orange;
        }
        .yellow {
            background-color: yellow;
        }
    </style>
</head>
<body>
    <table>
        <thead>
            <tr>
                <th>ID</th>
                <th>이름</th>
                <th>CPAPER</th>
            </tr>
        </thead>
        <tbody>
            {% for row in data %}
            <tr>
                <td>{{ row.id }}</td>
                <td>{{ row.name }}</td>
                <td 
                    {% if row.CPAPER > 20 %}
                        class="orange"
                    {% elif row.CPAPER <= 0 %}
                        class="yellow"
                    {% endif %}
                >
                    {{ row.CPAPER }}
                </td>
            </tr>
            {% endfor %}
        </tbody>
    </table>
</body>
</html>
Flask 서버 코드
python
코드 복사
from flask import Flask, render_template

app = Flask(__name__)

@app.route('/')
def index():
    # 샘플 데이터
    data = [
        {"id": 1, "name": "Item A", "CPAPER": 25},
        {"id": 2, "name": "Item B", "CPAPER": 20},
        {"id": 3, "name": "Item C", "CPAPER": -5},
        {"id": 4, "name": "Item D", "CPAPER": 0},
    ]
    return render_template('index.html', data=data)

if __name__ == '__main__':
    app.run(debug=True)
코드 설명
Jinja2 조건문 사용

Flask 템플릿 엔진인 Jinja2에서 조건문을 사용하여 class 속성을 동적으로 추가합니다.
row.CPAPER 값을 기준으로: