import pandas as pd

def create_component_chunks(file_path: str, selected_columns: list, text_template: str) -> list:
    """
    CSV 또는 Excel 파일에서 지정된 컬럼을 읽어,
    정해진 템플릿에 따라 텍스트 청크 리스트를 생성합니다.

    :param file_path: 부품 데이터 파일 경로 (CSV 또는 Excel)
    :param selected_columns: 사용할 컬럼 이름 리스트
    :param text_template: 텍스트로 변환할 문장 템플릿
    :return: 전처리된 텍스트 청크 리스트
    """
    try:
        # 파일 확장자에 따라 다르게 파일을 읽어옴
        if file_path.endswith('.csv'):
            df = pd.read_csv(file_path, dtype=str)
        elif file_path.endswith('.xlsx'):
            df = pd.read_excel(file_path, dtype=str)
        else:
            print("❌ 지원하지 않는 파일 형식입니다. (CSV 또는 XLSX 파일을 사용하세요)")
            return []
    except FileNotFoundError:
        print(f"❌ 파일을 찾을 수 없습니다: {file_path}")
        return []

    # 빈 값(NaN)을 공백 문자열('')로 변환
    df = df[selected_columns].fillna('')

    # 템플릿을 사용하여 각 행을 텍스트로 변환
    # f-string의 format(**row)를 사용하여 템플릿의 {컬럼명} 부분에 값을 채움
    processed_texts = [text_template.format(**row) for _, row in df.iterrows()]

    return processed_texts

# --- 🚀 설정 부분 (여기만 수정하시면 됩니다) ---

# 1. 부품 데이터 파일 경로를 지정하세요.
smd_file_path = 'smd_parts_library.csv'  # 예시: 'C:/data/my_parts.xlsx'

# 2. 사용할 컬럼 이름을 리스트로 정확하게 입력하세요.
#    (CSV 파일의 헤더(첫 줄)에 있는 이름과 동일해야 합니다.)
target_columns = [
    'PartNumber',
    'Type',
    'Package',
    'Value',
    'Tolerance',
    'Manufacturer'
]

# 3. 최종적으로 만들고 싶은 문장 형식을 템플릿으로 만드세요.
#    컬럼 이름 양쪽에 중괄호 {} 를 사용합니다.
#    "속성: {컬럼명}" 형식으로 만들어야 나중에 검색 성능이 좋습니다.
component_template = (
    "부품 종류: {Type}, 부품 번호: {PartNumber}, 패키지: {Package}, "
    "주요 값: {Value}, 허용 오차: {Tolerance}, 제조사: {Manufacturer}"
)
# --- 설정 끝 ---


if __name__ == '__main__':
    # 함수 실행
    component_chunks = create_component_chunks(
        file_path=smd_file_path,
        selected_columns=target_columns,
        text_template=component_template
    )

    # 결과 확인
    if component_chunks:
        print(f"✅ 총 {len(component_chunks)}개의 부품 데이터가 텍스트 청크로 변환되었습니다.")
        print("\n--- 변환 결과 샘플 (첫 3개) ---")