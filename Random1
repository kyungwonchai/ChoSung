물론이죠, 폴더 목록을 수정 시간 내림차순으로 정렬하여 표시하려면 아래와 같이 코드를 수정하면 됩니다.

csharp
Copy code
private void btnRefresh_Click(object sender, EventArgs e)
{
    string folderPath = @"d:\111";
    listControl1.Items.Clear();

    if (Directory.Exists(folderPath))
    {
        string[] directories = Directory.GetDirectories(folderPath, "*", SearchOption.AllDirectories);

        // DirectoryInfo를 사용하여 수정 시간을 기준으로 내림차순 정렬
        var sortedDirectories = directories.Select(directory => new DirectoryInfo(directory))
                                           .Where(info => DateTime.TryParseExact(info.Name, "yyyyMMdd", CultureInfo.InvariantCulture, DateTimeStyles.None, out _))
                                           .OrderByDescending(info => info.LastWriteTime);

        foreach (var info in sortedDirectories)
        {
            listControl1.Items.Add(info.FullName); // 전체 경로를 추가
        }
    }
}
위 코드는 d:\111 폴더와 그 하위 폴더에서 yyyyMMDD 형식의 폴더를 찾아 수정 시간을 기준으로 내림차순 정렬한 후, listControl1에 추가합니다.

수정 시간을 기준으로 정렬하기 위해 LINQ를 사용하고, OrderByDescending 메서드로 내림차순 정렬을 수행합니다. 이렇게 하면 원하시는 결과를 얻으실 수 있을 것입니다.




User
리스트1을 클릭하면 리스트1의 폴더명이 포함된 하위의 yyyyMMddHH 형식의 폴더를 똑같이 내림차순정렬해서 list3에 뿌려보자
ChatGPT
물론입니다! listControl1을 클릭하면 선택된 폴더명을 기반으로 하위의 yyyyMMddHH 형식의 폴더를 찾아 수정 시간 내림차순으로 정렬하여 listControl3에 표시하려면 아래와 같이 코드를 작성할 수 있습니다.

csharp
Copy code
private void listControl1_SelectedIndexChanged(object sender, EventArgs e)
{
    string selectedFolderPath = listControl1.SelectedItem.ToString();
    listControl3.Items.Clear();

    if (Directory.Exists(selectedFolderPath))
    {
        string[] directories = Directory.GetDirectories(selectedFolderPath, "*", SearchOption.AllDirectories);

        // DirectoryInfo를 사용하여 수정 시간을 기준으로 내림차순 정렬
        var sortedDirectories = directories.Select(directory => new DirectoryInfo(directory))
                                           .Where(info => DateTime.TryParseExact(info.Name, "yyyyMMddHH", CultureInfo.InvariantCulture, DateTimeStyles.None, out _))
                                           .OrderByDescending(info => info.LastWriteTime);

        foreach (var info in sortedDirectories)
        {
            listControl3.Items.Add(info.FullName); // 전체 경로를 추가
        }
    }
}
이 코드는 listControl1에서 선택된 폴더 내의 yyyyMMddHH 형식의 폴더를 찾아 수정 시간을 기준으로 내림차순 정렬하고, 결과를 listControl3에 추가합니다.

이제 listControl1을 클릭하면 선택한 폴더의 하위 폴더 중 yyyyMMddHH 형식을 가진 폴더들이 수정 시간 내림차순으로 listControl3에 표시됩니다.