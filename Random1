tlin 및 JVM 설정을 JDK 17로 맞추기 위해 Android Studio 프로젝트의 설정을 변경해야 합니다. 다음 단계를 따르세요.

1. build.gradle 파일 수정
build.gradle.kts 파일에서 Kotlin 및 JVM 설정을 JDK 17로 변경합니다.

프로젝트 수준 build.gradle.kts
프로젝트 루트 디렉토리에 있는 build.gradle.kts 파일을 열고, compileOptions 및 kotlinOptions를 설정합니다:

kotlin
코드 복사
allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

subprojects {
    afterEvaluate {
        project -> project.extensions.findByType(org.jetbrains.kotlin.gradle.dsl.KotlinJvmOptions.class)?.let {
            it.jvmTarget = "17"
        }
    }
}
앱 수준 build.gradle.kts
앱 모듈의 build.gradle.kts 파일을 열고, 다음 내용을 추가 또는 수정합니다:

kotlin
코드 복사
android {
    compileSdk = 34

    defaultConfig {
        applicationId = "your.application.id"
        minSdk = 24
        targetSdk = 34
        versionCode = 1
        versionName = "1.0"
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = "17"
    }
}

dependencies {
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk17")
}
2. Gradle Wrapper 버전 확인
gradle-wrapper.properties 파일을 열어 Gradle 버전을 확인합니다. Gradle 7.0 이상이 필요합니다.

properties
코드 복사
distributionUrl=https\://services.gradle.org/distributions/gradle-7.0-bin.zip
3. Android Studio 설정 확인
Android Studio에서 JDK 설정을 JDK 17로 맞추세요.

File > Project Structure를 클릭합니다.
Project 탭에서 Project SDK를 JDK 17로 설정합니다.
Modules 탭에서 각 모듈의 Language level을 17로 설정합니다.
4. Gradle 동기화 및 빌드
설정을 변경한 후 Gradle 동기화를 수행하고 프로젝트를 빌드합니다.

Android Studio에서 File > Sync Project with Gradle Files를 클릭합니다.
Gradle 동기화가 완료되면 프로젝트를 빌드합니다.
위 단계를 수행하면 Kotlin 및 JVM 설정이 JDK 17로 맞춰질 것입니다. 그래도 문제가 발생하면 구체적인 오류 메시지를 제