ss WPF를 사용하여 요청하신 것을 구현해 보겠습니다.

다음은 주어진 요구 사항을 통해 생성한 XAML 및 C# 코드 예제입니다.

XAML:

xml

<Window x:Class="YourNamespace.YourWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core">
    <Grid>
        <!-- 호가정일 -->
        <Label Content="호가정일(날짜)" Width="300" Height="30" HorizontalContentAlignment="Center" VerticalAlignment="Top" Margin="0,0"/>
        <dx:ComboBoxEdit Width="300" Height="50" VerticalAlignment="Top" Margin="0,30" ItemsSource="{Binding Dates}" SelectedItem="{Binding SelectedDate}" />

        <!-- 보드유형 -->
        <Label Content="보드유형" Width="300" Height="30" HorizontalContentAlignment="Center" VerticalAlignment="Top" Margin="0,90"/>
        <dx:ComboBoxEdit Width="300" Height="50" VerticalAlignment="Top" Margin="0,120" ItemsSource="{Binding BoardTypes}" SelectedItem="{Binding SelectedBoardType}" />

        <!-- ... 추가된 행을 반복 -->
    </Grid>
</Window>

C#:

csharp

public partial class YourWindow : Window, INotifyPropertyChanged
{
    private ObservableCollection<string> _dates;
    private ObservableCollection<string> _boardTypes;
    private string _selectedDate;
    private string _selectedBoardType;

    public ObservableCollection<string> Dates
    {
        get { return _dates; }
        set { _dates = value; OnPropertyChanged("Dates"); }
    }

    public ObservableCollection<string> BoardTypes
    {
        get { return _boardTypes; }
        set { _boardTypes = value; OnPropertyChanged("BoardTypes"); }
    }

    public string SelectedDate
    {
        get { return _selectedDate; }
        set { _selectedDate = value; OnPropertyChanged("SelectedDate"); }
    }

    public string SelectedBoardType
    {
        get { return _selectedBoardType; }
        set { _selectedBoardType = value; OnPropertyChanged("SelectedBoardType"); }
    }

    public YourWindow()
    {
        InitializeComponent();

        // 예시로 임의의 값 설정. 실제로는 DB에서 가져온 값을 이용하십시오.
        Dates = new ObservableCollection<string>() { "2023-01-01", "2023-01-02" };
        BoardTypes = new ObservableCollection<string>() { "ALL", "Main", "Sec<PRE" };

        this.DataContext = this;
    }

    public event PropertyChangedEventHandler PropertyChanged;

    protected virtual void OnPropertyChanged(string propertyName)
    {
        PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
    }
}

이 코드를 사용하면 WPF Window에 2개의 콤보 박스가 표시되며 각 콤보 박스는 라벨로 된 제목을 갖게 됩니다. 선택된 값은 각각의 Selected 속성에 저장됩니다. 코드에는 예시 데이터가 포함되어 있지만, 실제로는 DB에서 데이터를 가져와서 바인딩하면 됩니다.

요청하신 나머지 행들도 위의 행처럼 반복하면 원하는 결과를 얻을 수 있습니