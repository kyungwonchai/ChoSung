'0)이 문제를 일으키고 있습니다. 이는 주로 데이터 형식이 예상과 다르게 처리되거나 잘못된 구분자를 사용했기 때문에 발생할 수 있습니다. 코드에서 날짜 정보를 파싱하는 부분에서 사용된 구분자가 잘못되었거나, 날짜 형식이 올바르게 문자열에 포함되지 않았을 수 있습니다.

다음은 올바르게 날짜를 파싱하기 위해 수정해야 하는 코드의 일부입니다. 코드에서 info 문자열을 정확하게 파싱하여 DateTime 객체로 변환해야 합니다. info 문자열의 형태는 "경로 (용량 bytes) - Last Modified: 날짜"입니다. 이를 위해 " - Last Modified: "를 구분자로 사용하고, 마지막 부분을 DateTime으로 변환해야 합니다.

수정할 코드 부분
이 부분은 날짜 파싱을 정확히 하기 위해 info 문자열을 처리합니다. 올바른 구분자와 DateTime 변환 로직을 사용하면 됩니다.

csharp
Copy code
private void UpdateListBoxes(string info, DateTime lastModified)
{
    allFolderInfo.Add(info);
    var sortedList = allFolderInfo.OrderByDescending(i =>
        DateTime.Parse(i.Split(new string[] { " - Last Modified: " }, StringSplitOptions.None).Last())).ToList();
    ((ObservableCollection<string>)listBox1.ItemsSource).Clear();
    ((ObservableCollection<string>)listBox2.ItemsSource).Clear();

    for (int i = 0; i < sortedList.Count; i++)
    {
        if (i < 5) // 최근 5개 아이템을 ListBox1에 추가
            ((ObservableCollection<string>)listBox1.ItemsSource).Add(sortedList[i]);
        else // 나머지 아이템을 ListBox2에 추가
            ((ObservableCollection<string>)listBox2.ItemsSource).Add(sortedList[i]);
    }
}
위 코드는 Split 함수를 사용하여 " - Last Modified: " 문자열을 구분자로 사용하여 info 문자열을 분할하고, 결과 배열의 마지막 부분을 DateTime.Parse를 사용해 날짜로 변환합니다. 이 방식은 입력된 info 문자열의 형식이 일관적이라는 가정 하에 작동합니다.

에러가 계속 발생한다면, info 문자열의 형식을 다시 확인해보고, 코드가 이 형식에 정확히 맞도록 조정해야 합니다. 가능하다면 에러가 발생하는 info 문자열의 예제를 제공하면 더