래는 DevExpress 22.2 WinForms의 RibbonForm에서 RibbonPage, RibbonPageGroup, 그리고 버튼 등을 동적으로 추가하는 예제 코드입니다. 고유 키값과 메뉴 이름, 아이콘 파일명, 버튼 클릭 시 실행할 함수 등을 포함한 딕셔너리를 기반으로 동적으로 리본 메뉴를 구성합니다.

C# 코드
csharp
코드 복사
using DevExpress.XtraBars;
using DevExpress.XtraBars.Ribbon;
using System;
using System.Collections.Generic;
using System.Drawing;

namespace YourNamespace
{
    public partial class YourRibbonForm : RibbonForm
    {
        // 메뉴 구성 정보 저장할 딕셔너리
        private Dictionary<string, MenuItemInfo> menuItems;

        public YourRibbonForm()
        {
            InitializeComponent();
            InitializeMenuItems();
            PopulateRibbon();
        }

        // 메뉴 정보를 초기화하는 함수
        private void InitializeMenuItems()
        {
            menuItems = new Dictionary<string, MenuItemInfo>
            {
                {
                    "file_new",
                    new MenuItemInfo
                    {
                        MenuName = "New File",
                        IconPath = "Icons/new.png",
                        RibbonPageName = "File",
                        RibbonGroupName = "File Operations",
                        ClickAction = () => { NewFileAction(); }
                    }
                },
                {
                    "file_open",
                    new MenuItemInfo
                    {
                        MenuName = "Open File",
                        IconPath = "Icons/open.png",
                        RibbonPageName = "File",
                        RibbonGroupName = "File Operations",
                        ClickAction = () => { OpenFileAction(); }
                    }
                },
                {
                    "edit_copy",
                    new MenuItemInfo
                    {
                        MenuName = "Copy",
                        IconPath = "Icons/copy.png",
                        RibbonPageName = "Edit",
                        RibbonGroupName = "Clipboard",
                        ClickAction = () => { CopyAction(); }
                    }
                }
            };
        }

        // 리본 메뉴를 동적으로 생성하는 함수
        private void PopulateRibbon()
        {
            foreach (var item in menuItems)
            {
                var info = item.Value;

                // RibbonPage가 존재하지 않으면 생성
                var ribbonPage = ribbonControl1.Pages.GetPageByName(info.RibbonPageName)
                                 ?? CreateRibbonPage(info.RibbonPageName);

                // RibbonPageGroup이 존재하지 않으면 생성
                var ribbonGroup = ribbonPage.Groups.GetGroupByName(info.RibbonGroupName)
                                  ?? CreateRibbonGroup(ribbonPage, info.RibbonGroupName);

                // BarButtonItem 생성
                var button = new BarButtonItem
                {
                    Caption = info.MenuName,
                    Glyph = LoadIcon(info.IconPath), // 아이콘 로드
                    RibbonStyle = RibbonItemStyles.Large
                };

                // 버튼 클릭 이벤트 연결
                button.ItemClick += (s, e) => info.ClickAction();

                // RibbonGroup에 버튼 추가
                ribbonGroup.ItemLinks.Add(button);
            }
        }

        // RibbonPage 생성 함수
        private RibbonPage CreateRibbonPage(string pageName)
        {
            var page = new RibbonPage(pageName) { Name = pageName };
            ribbonControl1.Pages.Add(page);
            return page;
        }

        // RibbonPageGroup 생성 함수
        private RibbonPageGroup CreateRibbonGroup(RibbonPage page, string groupName)
        {
            var group = new RibbonPageGroup(groupName) { Name = groupName };
            page.Groups.Add(group);
            return group;
        }

        // 아이콘 로드 함수
        private Image LoadIcon(string path)
        {
            return Image.FromFile(path);
        }

        // 각 버튼에 연결된 함수
        private void NewFileAction()
        {
            // New File 액션
            Console.WriteLine("New File Action Executed");
        }

        private void OpenFileAction()
        {
            // Open File 액션
            Console.WriteLine("Open File Action Executed");
        }

        private void CopyAction()
        {
            // Copy 액션
            Console.WriteLine("Copy Action Executed");
        }

        // 메뉴 구성 정보 클래스
        private class MenuItemInfo
        {
            public string MenuName { get; set; }        // 메뉴 이름
            public string IconPath { get; set; }        // 아이콘 파일 경로
            public string RibbonPageName { get; set; }  // 리본 페이지 이름
            public string RibbonGroupName { get; set; } // 리본 그룹 이름
            public Action ClickAction { get; set; }     // 클릭 액션
        }
    }

    // 확장 메서드: 페이지 이름으로 RibbonPage 검색
    public static class RibbonPageCollectionExtensions
    {
        public static RibbonPage GetPageByName(this RibbonPageCollection pages, string name)
        {
            foreach (var page in pages)
            {
                if (page.Name == name) return page;
            }
            return null;
        }
    }

    // 확장 메서드: 그룹 이름으로 RibbonPageGroup 검색
    public static class RibbonPageGroupCollectionExtensions
    {
        public static RibbonPageGroup GetGroupByName(this RibbonPageGroupCollection groups, string name)
        {
            foreach (var group in groups)
            {
                if (group.Name == name) return group;
            }
            return null;
        }
    }
}
주요 설명
Dictionary<string, MenuItemInfo>: 메뉴를 고유 키값으로 관리합니다. 메뉴 이름, 아이콘 파일 경로, 리본 페이지/그룹 이름, 클릭 액션 등을 포함합니다.
InitializeMenuItems(): 딕셔너리에 메뉴 정보를 초기화합니다.
PopulateRibbon(): 딕셔너리를 순회하며 리본 페이지, 그룹, 버튼을 생성하고 클릭 이벤트를 연결합니다.
확장 메서드:
GetPageByName: 리본 페이지를 이름으로 검색.
GetGroupByName: 리본 그룹을 이름으로 검색.