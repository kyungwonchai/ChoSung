penCV의 Cv2.InRange() 함수는 이미지에서 특정 범위의 픽셀 값을 추출하여 마스크를 생성하는 데 사용됩니다. 이 함수는 입력 이미지(src)의 각 픽셀이 지정된 하한값(lowerb)과 상한값(upperb) 사이에 있는지 확인합니다. 해당 범위 내에 있는 픽셀은 출력 마스크(dst)에서 255(흰색)로 설정되고, 범위를 벗어나는 픽셀은 0(검은색)으로 설정됩니다.

함수 시그니처:

csharp
코드 복사
public static void InRange(InputArray src, InputArray lowerb, InputArray upperb, OutputArray dst);
매개변수 설명:

src: 입력 이미지로, 일반적으로 Mat 형식입니다.
lowerb: 픽셀 값의 하한 경계를 나타내는 Scalar 또는 Mat 객체입니다.
upperb: 픽셀 값의 상한 경계를 나타내는 Scalar 또는 Mat 객체입니다.
dst: 출력 마스크로, src와 동일한 크기의 8비트 이진 이미지(Mat)입니다.
매개변수의 의미:

lowerb와 upperb: 이 두 매개변수는 추출하고자 하는 픽셀 값의 범위를 정의합니다. 각각의 값은 Scalar 객체로 표현되며, 일반적으로 BGR 또는 HSV 색 공간에서의 최소 및 최대 값을 지정합니다. 예를 들어, HSV 색 공간에서 특정 색상을 추출하려면, 해당 색상의 Hue, Saturation, Value의 최소 및 최대 값을 설정합니다.
예제 코드:

csharp
코드 복사
using OpenCvSharp;

public void ExtractColorRange(Mat src)
{
    // BGR 이미지를 HSV 색 공간으로 변환
    Mat hsvImage = new Mat();
    Cv2.CvtColor(src, hsvImage, ColorConversionCodes.BGR2HSV);

    // 추출하려는 색상의 HSV 범위 설정
    Scalar lowerb = new Scalar(35, 100, 100); // 예: 녹색의 하한값
    Scalar upperb = new Scalar(85, 255, 255); // 예: 녹색의 상한값

    // 지정한 범위에 해당하는 픽셀을 추출하여 마스크 생성
    Mat mask = new Mat();
    Cv2.InRange(hsvImage, lowerb, upperb, mask);

    // 결과 출력
    Cv2.ImShow("Original Image", src);
    Cv2.ImShow("Mask", mask);
    Cv2.WaitKey(0);
}
설명:

색 공간 변환: 입력 이미지를 BGR에서 HSV 색 공간으로 변환합니다.
범위 설정: 추출하려는 색상의 HSV 범위를 설정합니다.
마스크 생성: Cv2.InRange() 함수를 사용하여 지정한 범위에 해당하는 픽셀을 추출하여 마스크를 생성합니다.