제 경고창에 표시할 메시지를 ViewModel에서 전달받아, 그 메시지가 창의 중앙에 노란색으로 표시되도록 구현하겠습니다. 텍스트는 3줄로 표시되며, 글꼴 크기는 15로 설정합니다.

1. MainViewModel 수정
경고창에 띄울 메시지를 전달하는 기능을 추가하기 위해, ShowWarningWindow 메서드에 메시지 매개변수를 추가합니다. 메시지는 Progress 값이 1 이상이 될 때마다 경고창에 전달됩니다.

csharp
코드 복사
using System;
using System.ComponentModel;
using System.Runtime.CompilerServices;
using System.Timers;
using System.Windows;

namespace YourNamespace
{
    public class MainViewModel : INotifyPropertyChanged
    {
        private int _progress;
        private Timer _timer;
        private bool _isWarningVisible;
        private WarningWindow _warningWindow; // 경고창 인스턴스 저장

        public int Progress
        {
            get => _progress;
            set
            {
                if (_progress != value)
                {
                    _progress = value;
                    OnPropertyChanged();

                    // Progress가 1 이상이면 경고창을 표시
                    if (_progress >= 1 && !_isWarningVisible)
                    {
                        ShowWarningWindow("Warning!\nCheck the system status.\nHigh progress value detected.");
                    }
                    // Progress가 0이면 경고창을 닫음
                    else if (_progress == 0)
                    {
                        CloseWarningWindow();
                    }
                }
            }
        }

        public MainViewModel()
        {
            _timer = new Timer(5000); // 5초 타이머 설정
            _timer.Elapsed += TimerElapsed;
        }

        private void ShowWarningWindow(string message)
        {
            // 이미 경고창이 열려 있다면 새로 열지 않음
            if (_isWarningVisible) return;

            Application.Current.Dispatcher.Invoke(() =>
            {
                _warningWindow = new WarningWindow(message); // 메시지 전달
                _warningWindow.Topmost = true;
                _warningWindow.Show();

                _warningWindow.Closed += (sender, e) =>
                {
                    _isWarningVisible = false;
                    _timer.Start(); // 창을 닫으면 타이머 시작
                };

                _isWarningVisible = true;
            });
        }

        private void CloseWarningWindow()
        {
            Application.Current.Dispatcher.Invoke(() =>
            {
                if (_warningWindow != null)
                {
                    _warningWindow.Close();
                    _warningWindow = null; // 경고창 인스턴스를 초기화
                    _timer.Stop(); // 창을 닫을 때 타이머 중지
                    _isWarningVisible = false;
                }
            });
        }

        private void TimerElapsed(object sender, ElapsedEventArgs e)
        {
            _timer.Stop();
            if (_progress >= 1) // Progress가 여전히 1 이상이면 경고창을 다시 표시
            {
                ShowWarningWindow("Warning!\nCheck the system status.\nHigh progress value detected.");
            }
        }

        public event PropertyChangedEventHandler PropertyChanged;
        protected void OnPropertyChanged([CallerMemberName] string propertyName = null)
        {
            PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}
ShowWarningWindow(string message) 메서드에 매개변수로 메시지를 전달합니다.
Progress가 1 이상일 때, 경고 메시지로 "Warning!\nCheck the system status.\nHigh progress value detected."를 전달합니다.
이 메시지가 경고창에 표시됩니다.
2. WarningWindow 수정
경고창에서 메시지를 받을 수 있도록 생성자와 UI를 수정합니다.

WarningWindow.xaml
xml
코드 복사
<Window x:Class="YourNamespace.WarningWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Warning" Height="500" Width="500"
        WindowStyle="None" AllowsTransparency="True" Background="#AAFF0000"
        ShowInTaskbar="False" Topmost="True" ResizeMode="NoResize"
        WindowStartupLocation="CenterScreen" 
        MouseDown="Window_MouseDown">
    <Grid>
        <TextBlock x:Name="MessageTextBlock"
                   Text="Default Message"
                   FontSize="15"
                   Foreground="Yellow"
                   TextAlignment="Center"
                   VerticalAlignment="Center"
                   HorizontalAlignment="Center"/>
    </Grid>
</Window>
TextBlock 컨트롤의 Name 속성을 MessageTextBlock으로 설정하여 C# 코드에서 접근할 수 있게 합니다.
FontSize="15"와 Foreground="Yellow"로 설정하여 글씨 크기와 색상을 지정합니다.
WarningWindow.xaml.cs
경고 메시지를 생성자에서 받아 MessageTextBlock에 설정하도록 수정합니다.

csharp
코드 복사
using System.Windows;

namespace YourNamespace
{
    public partial class WarningWindow : Window
    {
        public WarningWindow(string message)
        {
            InitializeComponent();
            MessageTextBlock.Text = message; // 메시지를 TextBlock에 설정
        }

        private void Window_MouseDown(object sender, System.Windows.Input.MouseButtonEventArgs e)
        {
            this.Close(); // 클릭하면 창 닫기
        }
    }
}
생성자에서 string message 매개변수를 받아 MessageTextBlock.Text에 메시지를 할당하여 표시합니다.
요약
MainViewModel에서 ShowWarningWindow 메서드에 메시지 매개변수를 전달하여 특정 경고 메시지를 표시합니다.