ode.js 버전이 낮아서 문제가 발생하는 경우, Node.js를 업데이트해야 합니다. 특히, myvenv와 같은 가상환경에 있는 경우, Node.js는 시스템 전체에 걸쳐 설치되며, 가상환경의 Python 가상환경과는 독립적으로 동작합니다.
따라서, Node.js를 업데이트하려면 가상환경을 나와서 작업해야 합니다.

1. 현재 가상환경에서 나가기
먼저, myvenv 가상환경에서 나가야 합니다. 가상환경을 종료하려면 다음 명령어를 사용하세요:

bash
코드 복사
deactivate
이 명령어를 사용하면 가상환경을 벗어나 시스템의 기본 쉘로 돌아갑니다.

2. Node.js 버전 업데이트
이제 Node.js를 업데이트할 준비가 되었습니다. 다음 단계에 따라 Node.js 버전을 업데이트하세요.

2.1. NodeSource PPA 추가
먼저, NodeSource PPA를 추가하여 최신 버전의 Node.js를 설치할 수 있도록 합니다.

bash
코드 복사
curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
18.x는 최신 LTS 버전입니다. 최신 버전을 사용하고 싶다면 18.x를 사용합니다. 필요에 따라 버전을 16.x 또는 20.x 등으로 변경할 수 있습니다.
2.2. Node.js 설치 및 업데이트
Node.js와 npm을 함께 설치합니다.

bash
코드 복사
sudo apt-get install -y nodejs
이 명령어를 실행하면 최신 버전의 Node.js와 npm이 함께 설치됩니다.

2.3. npm 최신 버전으로 업그레이드 (선택사항)
만약 npm을 추가적으로 업그레이드하고 싶다면, 다음 명령어를 사용합니다.

bash
코드 복사
sudo npm install -g npm
3. Node.js 버전 확인
업데이트가 완료되면, Node.js 버전과 npm 버전을 다시 확인하여 업데이트가 제대로 이루어졌는지 확인합니다.

bash
코드 복사
node -v
npm -v
이제 최신 버전의 Node.js와 npm이 설치되었을 것입니다.

4. 가상환경으로 다시 돌아가기
Node.js를 업데이트한 후, 다시 가상환경으로 돌아갈 수 있습니다.

bash
코드 복사
source myvenv/bin/activate
요약
가상환경에서 나가기: deactivate 명령어를 사용하여 가상환경에서 나옵니다.
Node.js 업데이트: NodeSource PPA를 추가한 후, 최신 버전의 Node.js와 npm을 설치합니다.
버전 확인: node -v와 npm -v를 사용해 버전을 확인합니다.
가상환경 복귀: Node.js 업데이트가 완료되면 가상환경으로 다시 들어갑니다.
이 과정을 통해 Node.js의 최신 버전을 설치할 수 있으며, 이후에 필요하면 다시 가상환