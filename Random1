습니다. 대신 ItemsSource를 사용하여 값을 지정해야 합니다. ItemsSource에 직접 값을 넣는 방법은 XAML에서 직접적으로 지원되지 않으므로, 코드 뒷면(C#)에서 이를 설정해야 합니다.

다음은 C# 코드 뒷면에서 ItemsSource를 설정하는 방법입니다:

XAML에서 ComboBoxEditSettings를 정의합니다:

xml
Copy code
<dxg:GridColumn FieldName="YourColumnName" Header="작업조">
    <dxg:GridColumn.EditSettings>
        <dxe:ComboBoxEditSettings DisplayMember="YourDisplayMember" ValueMember="YourValueMember" />
    </dxg:GridColumn.EditSettings>
</dxg:GridColumn>
C# 코드 뒷면에서 ItemsSource를 설정합니다:

csharp
Copy code
public partial class YourWindow : Window
{
    public YourWindow()
    {
        InitializeComponent();
        var comboBoxItems = new List<string> { "A", "B", "C" };
        YourComboBoxColumn.EditSettings.ItemsSource = comboBoxItems;
    }
}
여기서 YourComboBoxColumn은 해당 GridColumn의 x:Name 속성으로 지정해야 합니다. 예를 들어, XAML에서 GridColumn을 다음과 같이 정의할 수 있습니다:

xml
Copy code
<dxg:GridColumn x:Name="YourComboBoxColumn" FieldName="YourColumnName" Header="작업조">
    <!-- EditSettings 정의 -->
</dxg:GridColumn>
이렇게 하면 해당 컬럼의 콤보 박스에 A, B, C만 표시되며, 사용자는 이 중 하나를 선택할