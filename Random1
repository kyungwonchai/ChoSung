이제 LoadComPortSetting() 함수에서 COM 포트 설정을 로드한 후, 비동기 메서드로 COM 포트 연결을 시도하고, 실패 시 에러를 표시하고 프로그램을 종료하도록 수정합니다.

csharp
코드 복사
using System;
using System.Threading.Tasks;

public class MainViewModel
{
    public async Task LoadComPortSettingAsync()
    {
        try
        {
            // COM 포트 연결 시도
            var comportInstance = ComPortPLC.Instance;
            bool isConnected = await comportInstance.TryConnectToComPortAsync();

            if (!isConnected)
            {
                // COM 포트 연결 실패 시 예외 처리
                Console.WriteLine("COM 포트 연결 실패. 프로그램을 종료합니다.");
                // 프로그램 종료
                Environment.Exit(1); // 프로그램 종료
            }

            Console.WriteLine("COM 포트 연결 성공!");
        }
        catch (Exception ex)
        {
            // 예외 발생 시 처리
            Console.WriteLine($"설정 로드 중 오류 발생: {ex.Message}");
            Environment.Exit(1); // 프로그램 종료
        }
    }
}
3. 프로그램 시작 시 LoadComPortSettingAsync() 호출
메인 프로그램에서 LoadComPortSettingAsync()를 호출하여 COM 포트 연결을 비동기로 처리하고, 연결이 실패하면 프로그램을 종료하도록 합니다.

csharp
코드 복사
public class Program
{
    public static async Task Main(string[] args)
    {
        MainViewModel viewModel = new MainViewModel();
        await viewModel.LoadComPortSettingAsync();

        // 이후 프로그램이 정상적으로 실행됨
        Console.WriteLine("프로그램이 정상 실행되었습니다.");
    }
}
설명
ComPortPLC 클래스는 싱글톤 패턴으로 구현되며, COM 포트 연결을 비동기적으로 시도합니다. 만약 포트 연결이 실패하면 다른 포트를 순차적으로 시도합니다.
LoadComPortSettingAsync() 함수는 비동기 메서드로 COM 포트 설정을 로드한 후, COM 포트가 연결될 때까지 대기합니다. 만약 포트 연결이 실패하면 프로그램을 종료합니다.
프로그램 실행 중에 LoadComPortSettingAsync()가 비동기적으로 실행되며, 완료될 때까지 기다립니다. COM 포트가 성공적으로 연결되