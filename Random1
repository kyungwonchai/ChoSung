함해 드리겠습니다. 코드에서 잘못된 부분을 수정하고, 각 행에 버튼이 나타나도록 하겠습니다.

수정된 코드와 상세 주석
csharp
코드 복사
using DevExpress.XtraGrid;
using DevExpress.XtraGrid.Views.Grid;
using DevExpress.XtraEditors.Repository;
using System;
using System.Drawing;
using System.Windows.Forms;

namespace YourNamespace
{
    public partial class Form1 : Form
    {
        private GridControl gridControl;
        private GridView gridView;

        public Form1()
        {
            InitializeComponent();
            InitializeGrid();
        }

        // GridControl과 GridView를 초기화하고 데이터를 바인딩하는 메서드
        private void InitializeGrid()
        {
            // GridControl과 GridView 생성 및 설정
            gridControl = new GridControl();
            gridView = new GridView(gridControl);
            gridControl.MainView = gridView;
            gridControl.Dock = DockStyle.Fill;
            this.Controls.Add(gridControl);

            // 샘플 데이터 테이블 생성
            var table = new System.Data.DataTable();
            table.Columns.Add("ID", typeof(int)); // ID 컬럼
            table.Columns.Add("SerialNumber", typeof(string)); // 일련번호 컬럼

            // 샘플 데이터 추가 (ID와 일련번호)
            for (int i = 1; i <= 10; i++)
            {
                table.Rows.Add(i, "SN" + i.ToString("000"));
            }

            // GridControl에 데이터 테이블을 바인딩
            gridControl.DataSource = table;

            // 버튼을 포함한 커스텀 컬럼 추가
            AddBarcodeButtonColumn();
        }

        // 바코드 생성 버튼 컬럼을 추가하는 메서드
        private void AddBarcodeButtonColumn()
        {
            // 버튼 에디터 생성 및 설정
            RepositoryItemButtonEdit buttonEdit = new RepositoryItemButtonEdit();
            buttonEdit.Buttons[0].Caption = "바코드 생성"; // 버튼의 텍스트 설정
            buttonEdit.TextEditStyle = DevExpress.XtraEditors.Controls.TextEditStyles.HideTextEditor; // 텍스트 입력 비활성화
            buttonEdit.ButtonClick += ButtonEdit_ButtonClick; // 버튼 클릭 이벤트 핸들러 연결

            // GridView에 버튼 컬럼 추가
            var buttonColumn = gridView.Columns.AddVisible("GenerateBarcode", "바코드 생성"); // "바코드 생성"이라는 이름으로 컬럼 추가
            buttonColumn.UnboundType = DevExpress.Data.UnboundColumnType.Object; // 컬럼 데이터 타입 설정
            buttonColumn.ColumnEdit = buttonEdit; // 컬럼에 버튼 에디터 할당
            buttonColumn.ShowButtonMode = DevExpress.XtraGrid.Views.Base.ShowButtonModeEnum.ShowAlways; // 항상 버튼 표시
        }

        // 버튼 클릭 이벤트 핸들러
        private void ButtonEdit_ButtonClick(object sender, DevExpress.XtraEditors.Controls.ButtonPressedEventArgs e)
        {
            // 현재 선택된 행의 인덱스 가져오기
            int rowHandle = gridView.FocusedRowHandle;

            // 현재 선택된 행의 일련번호 값 가져오기
            string serialNumber = gridView.GetRowCellValue(rowHandle, "SerialNumber").ToString();

            // QR 코드를 생성하고 새 창에 표시
            ShowQrCodeForm(serialNumber);
        }

        // QR 코드를 생성하고 새 창에 표시하는 메서드
        private void ShowQrCodeForm(string serialNumber)
        {
            // 새 폼 생성
            Form qrForm = new Form();
            qrForm.Text = "QR 코드 생성";
            qrForm.Size = new Size(300, 300);

            // 안내 라벨 생성 및 추가
            Label label = new Label();
            label.Text = "모바일기기로 읽으면 모바일시료기기 ID가 등록됩니다.\n(해당 일련번호가 모바일에 붙어있는 라벨과 같은지 확인필요)";
            label.Dock = DockStyle.Top;
            label.TextAlign = ContentAlignment.MiddleCenter;
            label.Height = 50;
            qrForm.Controls.Add(label);

            // QR 코드 생성 및 표시
            PictureBox pictureBox = new PictureBox();
            pictureBox.Dock = DockStyle.Fill;
            pictureBox.SizeMode = PictureBoxSizeMode.CenterImage;
            pictureBox.Image = GenerateQrCode(serialNumber);
            qrForm.Controls.Add(pictureBox);

            // 닫기 버튼 추가
            Button closeButton = new Button();
            closeButton.Text = "닫기";
            closeButton.Dock = DockStyle.Bottom;
            closeButton.Click += (s, e) => qrForm.Close();
            qrForm.Controls.Add(closeButton);

            // 폼 표시
            qrForm.ShowDialog();
        }

        // QR 코드를 생성하는 메서드
        private Bitmap GenerateQrCode(string serialNumber)
        {
            // QRCoder 라이브러리를 사용해 QR 코드를 생성
            var qrGenerator = new QRCoder.QRCodeGenerator();
            var qrCodeData = qrGenerator.CreateQrCode(serialNumber, QRCoder.QRCodeGenerator.ECCLevel.Q);
            var qrCode = new QRCoder.QRCode(qrCodeData);
            return qrCode.GetGraphic(20);
        }
    }
}
코드 설명
GridControl과 GridView 초기화

GridControl과 GridView를 생성하고 폼에 추가합니다.
샘플 데이터 테이블을 만들어 GridControl에 바인딩합니다.
커스텀 컬럼(바코드 생성 버튼) 추가

RepositoryItemButtonEdit를 사용해 버튼을 생성하고, TextEditStyle을 HideTextEditor로 설정해 텍스트 입력을 숨깁니다.
버튼 클릭 시 이벤트 핸들러 ButtonEdit_ButtonClick가 실행됩니다.
새로운 버튼 컬럼을 GridView에 추가하고, 항상 버튼이 보이도록 설정합니다.
버튼 클릭 시 QR 코드 생성 및 새 창 표시

ButtonEdit_ButtonClick 이벤트 핸들러에서 현재 행의 일련번호를 가져옵니다.
가져온 일련번호를 바탕으로 QR 코드를 생성하고, 이를 새로운 폼(ShowQrCodeForm 메서드)에서 표시합니다.
QR 코드 생성

GenerateQrCode 메서드에서 QRCoder 라이브러리를 사용해 QR 코드를 생성합니다.
생성된 QR 코드는 PictureBox에 이미지로 표시됩니다.
QR 코드 폼 구성

폼 상단에 안내 라벨을 추가하고, 그 아래에 QR 코드를 표시하는 PictureBox를 배치합니다.
폼 하단에 닫기 버튼을 추가하여 폼을 닫을 수 있게 합니다.
주의사항
QRCoder 라이브러리를 사용하기 위해 NuGet 패키지 관리자를 통해 QRCoder 패키지를 설치해야 합니다.
위 코드를 프로젝트에 적용하면 각 행에 "바코드 생성" 버튼이 나타나며, 버튼 클릭 시 QR 코드가 생성되어 새 창에