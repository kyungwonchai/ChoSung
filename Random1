import numpy as np
import matplotlib.pyplot as plt
from sklearn.mixture import GaussianMixture
import pandas as pd

# 1. 데이터 준비
# 시작 시간
start_time = pd.to_datetime('2024-02-03 12:00:00')

# 학습 데이터 생성: 1시간 동안 100개의 데이터 포인트
time_index_train = pd.date_range(start_time, periods=100, freq='36S')  # 3600초 / 100 = 36초 간격
values_train = np.random.random(size=(100,))  # 임의의 값 생성

# 시간을 정수로 변환 (모델 학습을 위해)
time_int_train = np.array((time_index_train - start_time).total_seconds()).reshape(-1, 1)
data_train = np.hstack((time_int_train, values_train.reshape(-1, 1)))  # 학습 데이터

# 2. 가우시안 믹스처 모델 학습
gmm = GaussianMixture(n_components=3, random_state=42)
gmm.fit(data_train)

# 3. 새로운 데이터에 대한 이상치 예측
# 새로운 데이터 생성: 10분 동안 20개의 데이터 포인트
new_start_time = pd.to_datetime('2024-02-03 13:00:00')
time_index_test = pd.date_range(new_start_time, periods=20, freq='30S')  # 600초 / 20 = 30초 간격
values_test = np.random.random(size=(20,))

# 시간을 정수로 변환
time_int_test = np.array((time_index_test - start_time).total_seconds()).reshape(-1, 1)
data_test = np.hstack((time_int_test, values_test.reshape(-1, 1)))  # 테스트 데이터

# 이상치 예측
probs_test = gmm.score_samples(data_test)
threshold = np.percentile(probs_test, 4)  # 학습 데이터 기반으로 계산된 임계값
outliers_test = data_test[probs_test < threshold]

# 결과 시각화
plt.figure(figsize=(12, 6))
plt.scatter(data_train[:, 0], data_train[:, 1], label='Train Data')
plt.scatter(data_test[:, 0], data_test[:, 1], color='green', label='New Data')
plt.scatter(outliers_test[:, 0], outliers_test[:, 1], color='red', label='Outliers in New Data')
plt.legend()
