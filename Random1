부모 Grid에 이름이 없는 상황이라면, 버튼의 부모 요소를 통해 SpreadsheetControl을 찾을 수 있습니다. Button이 클릭되었을 때, 그 버튼의 부모 요소를 따라가면서 SpreadsheetControl을 찾는 방법을 설명드리겠습니다.

아래는 클릭된 버튼의 부모 요소를 탐색하여 SpreadsheetControl을 동적으로 찾는 예제입니다.

MainWindow.xaml
xml
코드 복사
<Window x:Class="YourNamespace.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
        Title="Spreadsheet Example" Height="350" Width="525">
    <Grid>
        <!-- SpreadsheetControl -->
        <dx:SpreadsheetControl Width="400" Height="200" HorizontalAlignment="Left" VerticalAlignment="Top"/>

        <!-- Button to find and display SpreadsheetControl -->
        <Button Content="Find SpreadsheetControl" Width="200" Height="50" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="10" Click="OnButtonClick"/>
    </Grid>
</Window>
MainWindow.xaml.cs
버튼 클릭 시 부모 요소를 통해 SpreadsheetControl을 찾는 코드입니다.

csharp
코드 복사
using System.Windows;
using System.Windows.Controls;
using DevExpress.Xpf.Spreadsheet;
using System.Windows.Media;

namespace YourNamespace
{
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
        }

        private void OnButtonClick(object sender, RoutedEventArgs e)
        {
            // 클릭된 버튼을 가져옵니다.
            Button clickedButton = sender as Button;

            if (clickedButton != null)
            {
                // 버튼의 부모 요소에서 SpreadsheetControl을 찾습니다.
                SpreadsheetControl spreadsheetControl = FindParentSpreadsheetControl(clickedButton);

                if (spreadsheetControl != null)
                {
                    // SpreadsheetControl의 이름을 확인하고 출력
                    string spreadsheetName = spreadsheetControl.Name;
                    MessageBox.Show($"SpreadsheetControl Name: {spreadsheetName}", "Spreadsheet Control Found");
                }
                else
                {
                    MessageBox.Show("SpreadsheetControl을 찾을 수 없습니다.", "Error");
                }
            }
        }

        // 부모 요소에서 SpreadsheetControl을 찾는 함수
        private SpreadsheetControl FindParentSpreadsheetControl(DependencyObject child)
        {
            // 부모 요소를 재귀적으로 검색
            while (child != null)
            {
                // 현재 요소가 SpreadsheetControl인지 확인
                if (child is SpreadsheetControl spreadsheetControl)
                {
                    return spreadsheetControl;
                }

                // 부모 요소로 이동
                child = VisualTreeHelper.GetParent(child);
            }

            // SpreadsheetControl을 찾지 못한 경우 null 반환
            return null;
        }
    }
}
설명
FindParentSpreadsheetControl: DependencyObject를 인자로 받아서 부모 요소를 계속 타고 올라가면서 SpreadsheetControl을 찾습니다.
child가 SpreadsheetControl인지 확인하고, 맞으면 SpreadsheetControl 인스턴스를 반환합니다.
SpreadsheetControl이 아닐 경우 부모 요소로 이동하여 계속 탐색합니다.
OnButtonClick: 버튼 클릭 시 FindParentSpreadsheetControl 함수를 호출하여 SpreadsheetControl을 찾습니다.
찾은 SpreadsheetControl이 있을 경우 이름을 출력하고, 없으면 에러 메시지를 출력합니다.
이 코드를 통해 Grid에 이