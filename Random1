겨찾기가 중복으로 나타나는 문제는 초기화와 데이터 로드 과정에서 중복으로 호출되는 코드 때문일 가능성이 높습니다. 중복된 즐겨찾기 데이터를 방지하려면 아래 사항을 확인하고 수정해야 합니다.

1. InitializeButtons 확인
InitializeButtons가 실행될 때, 즐겨찾기 데이터를 다시 추가하지 않도록 중복 호출을 방지해야 합니다.

수정된 InitializeButtons
csharp
코드 복사
private void InitializeButtons()
{
    // 기존 버튼 초기화
    foreach (RibbonPage page in ribbonK.Pages)
    {
        foreach (RibbonPageGroup group in page.Groups)
        {
            group.ItemLinks.Clear(); // 이전 버튼 제거
        }
    }

    // 새로 버튼 추가
    foreach (var buttonName in favoriteKeys)
    {
        if (buttonsDictionary.TryGetValue(buttonName, out var button))
        {
            ApplyFavoriteStyle(button);
            AddToFavorites(button, GetButtonGroupName(button));
        }
    }
}
2. 중복 호출 방지
중복 초기화 방지를 위한 조건 추가
다음 코드를 실행 시 초기화 과정에서 기존 데이터를 삭제하도록 추가합니다:

수정된 LoadFavorites
csharp
코드 복사
private void LoadFavorites()
{
    // 사용자 ID가 비어 있으면 초기화
    if (string.IsNullOrWhiteSpace(currentUserId))
    {
        favoriteKeys.Clear();
        return;
    }

    try
    {
        favoriteKeys.Clear();

        using (var connection = new SqlConnection(ConnectionString))
        {
            connection.Open();
            var command = new SqlCommand("SELECT FavoriteItems FROM Favorites WHERE UserId = @UserId", connection);
            command.Parameters.AddWithValue("@UserId", currentUserId);

            using (var reader = command.ExecuteReader())
            {
                if (reader.Read() && !reader.IsDBNull(0))
                {
                    var favorites = reader.GetString(0);
                    favoriteKeys.UnionWith(favorites.Split(new[] { Separator }, StringSplitOptions.RemoveEmptyEntries));
                }
            }
        }

        // 버튼 초기화
        InitializeButtons();
    }
    catch (Exception ex)
    {
        Console.WriteLine($"[Error] LoadFavorites: {ex.Message}");
    }
}
3. SetCurrentUser 수정
SetCurrentUser 호출 시 중복으로 InitializeButtons를 호출하지 않도록 수정합니다.

csharp
코드 복사
public void SetCurrentUser(string userId)
{
    try
    {
        // 사용자 ID 변경
        currentUserId = userId;

        if (!string.IsNullOrWhiteSpace(currentUserId))
        {
            Console.WriteLine($"[Info] Logged in as User ID: {currentUserId}");
            LoadFavorites(); // 새로운 사용자 ID에 따라 즐겨찾기 로드
        }
        else
        {
            Console.WriteLine("[Info] Logged out. Favorites cleared.");
            favoriteKeys.Clear(); // 즐겨찾기 초기화
            InitializeButtons(); // 버튼 초기화
        }
    }
    catch (Exception ex)
    {
        Console.WriteLine($"[Error] SetCurrentUser: {ex.Message}");
    }
}
4. ToggleFavorite 중복 방지
즐겨찾기 추가 시에도 UI 상태를 먼저 초기화하고 새로운 데이터를 반영합니다.

csharp
코드 복사
private void ToggleFavorite(string buttonName, BarButtonItem button)
{
    if (favoriteKeys.Contains(buttonName))
    {
        favoriteKeys.Remove(buttonName);
        ResetButtonStyle(button);
        RemoveFromFavorites(button);
    }
    else
    {
        favoriteKeys.Add(buttonName);
        ApplyFavoriteStyle(button);
        AddToFavorites(button, GetButtonGroupName(button));
    }

    SaveFavorites(); // DB에 즉시 반영
    InitializeButtons(); // UI 갱신
}
원인 분석
InitializeButtons 중복 호출:

LoadFavorites와 SetCurrentUser에서 각각 호출되어 중복으로 즐겨찾기가 추가될 가능성.
favoriteKeys 초기화 누락:

기존 즐겨찾기를 지우지 않고 새로운 데이터를 추가하여 중복.
해결
중복 초기화 방지:

favoriteKeys.Clear()로 이전 데이터를 완전히 삭제.
InitializeButtons 호출을 최소화하여 중복 처리 방지.
UI 갱신 분리:
