네, 알겠습니다! Flask 웹 UI에서 flash 메시지(성공, 오류 알림)가 계속 위쪽에 추가되면서 주요 내용(PC 제어 표 등)을 아래로 밀어내는 것이 불편하시군요. 이 메시지들을 표 아래쪽의 일정한 공간에 표시하고, 내용이 많아지면 스크롤이 생기도록 수정하겠습니다.

가장 직접적으로 영향을 받는 페이지는 사용자 제어판(control_panel.html)과 관리자 페이지들(manage_*.html)입니다. 우선 사용자 제어판 페이지부터 적용하고, 필요하시면 관리자 페이지들에도 동일하게 적용할 수 있습니다.

1. 수정: app/templates/layout.html
이 파일에서 기존의 flash 메시지 표시 부분을 제거하거나 주석 처리하고, 새로운 고정된 메시지 영역을 위한 CSS 스타일을 추가합니다. (또는 CSS는 별도 파일로 관리하셔도 됩니다.)

HTML

<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{% block title %}SControl Web{% endblock %}</title>
    <style>
        body { font-family: sans-serif; margin: 20px; background-color: #f4f4f4; color: #333; }
        nav { background-color: #333; padding: 10px 0; text-align: center; margin-bottom: 20px; }
        nav a { color: white; margin: 0 15px; text-decoration: none; font-weight: bold; }
        nav a:hover { text-decoration: underline; }
        .container { background-color: white; padding: 20px; border-radius: 5px; box-shadow: 0 0 10px rgba(0,0,0,0.1); }
        h1, h2 { color: #333; }
        table { width: 100%; border-collapse: collapse; margin-top: 20px; }
        th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }
        th { background-color: #f0f0f0; }
        
        /* 기존 flash 메시지 스타일 (li 태그용) - 유지 */
        .flash-messages li { list-style: none; padding: 10px; margin-bottom: 10px; border-radius: 3px; }
        .flash-messages .success { background-color: #d4edda; color: #155724; border: 1px solid #c3e6cb; }
        .flash-messages .error { background-color: #f8d7da; color: #721c24; border: 1px solid #f5c6cb; }
        .flash-messages .warning { background-color: #fff3cd; color: #856404; border: 1px solid #ffeeba; }
        .flash-messages .info { background-color: #d1ecf1; color: #0c5460; border: 1px solid #bee5eb; }

        /* --- 신규: 고정된 flash 메시지 컨테이너 스타일 --- */
        .flash-messages-container-fixed {
            border: 1px solid #ccc;
            padding: 0px 10px 10px 10px; /* 위쪽 패딩은 ul의 margin으로 대체 */
            margin-top: 20px;
            background-color: #f9f9f9;
            max-height: 150px; /* 최대 높이 제한 (예: 150px) */
            overflow-y: auto;  /* 내용이 넘치면 세로 스크롤 자동 생성 */
        }
        .flash-messages-container-fixed ul.flash-messages {
             margin: 0; /* ul의 기본 마진 제거 */
             padding: 0; /* ul의 기본 패딩 제거 */
        }
        .flash-messages-container-fixed ul.flash-messages li:first-child {
            margin-top: 10px; /* 첫 번째 메시지 아이템의 상단 마진 */
        }
        /* --- 신규 스타일 끝 --- */

        .form-group { margin-bottom: 15px; }
        .form-group label { display: block; margin-bottom: 5px; font-weight: bold; }
        .form-group input[type="text"], .form-group input[type="number"], .form-group input[type="password"], .form-group textarea {
            width: calc(100% - 22px); padding: 10px; border: 1px solid #ddd; border-radius: 3px;
        }
        .form-group textarea { resize: vertical; min-height: 80px; }
        .btn { padding: 10px 15px; color: white; border: none; border-radius: 3px; cursor: pointer; text-decoration: none; display: inline-block; font-size: 1em; }
        .btn-primary { background-color: #007bff; }
        .btn-primary:hover { background-color: #0056b3; }
        .btn-danger { background-color: #dc3545; }
        .btn-danger:hover { background-color: #c82333; }
        .btn-secondary { background-color: #6c757d; }
        .btn-secondary:hover { background-color: #545b62; }
        .btn-sm { padding: 5px 10px; font-size: 0.875em;}
        .action-links a, .action-links input[type="submit"] { margin-right: 5px; margin-bottom: 5px;}
        .pagination { margin-top: 20px; text-align: center; }
        .pagination a, .pagination span { margin: 0 5px; padding: 5px 10px; border: 1px solid #ddd; text-decoration: none; color: #007bff; }
        .pagination span.disabled { color: #ccc; border-color: #eee; }
        .pagination strong { font-weight: bold; padding: 5px 10px; border: 1px solid #007bff; background-color: #007bff; color: white; }
    </style>
</head>
<body>
    <nav>
        <a href="{{ url_for('main.index') }}">홈</a>
        {% if current_user_role == 'admin' %}
            <a href="{{ url_for('admin.manage_target_pcs') }}">PC 관리</a>
            <a href="{{ url_for('admin.manage_user_ips') }}">사용자 IP 관리</a>
            <a href="{{ url_for('admin.manage_admin_ips') }}">관리자 IP 관리</a>
        {% endif %}
        {% if current_user_role in ['admin', 'user'] %}
             <a href="{{ url_for('user.control_panel') }}">원격 제어판</a>
        {% endif %}
        <span style="color: #ccc;">(접속 IP: {{ current_user_ip }} | 역할: {{ current_user_role }})</span>
    </nav>

    <div class="container">
        {# --- ▼▼▼ 기존 Flash 메시지 표시 부분 - 제거 또는 주석 처리 ▼▼▼ --- #}
        {# {% with messages = get_flashed_messages(with_categories=true) %}
            {% if messages %}
                <ul class="flash-messages">
                {% for category, message in messages %}
                    <li class="{{ category }}">{{ message }}</li>
                {% endfor %}
                </ul>
            {% endif %}
        {% endwith %} #}
        {# --- ▲▲▲ 기존 Flash 메시지 표시 부분 - 제거 또는 주석 처리 ▲▲▲ --- #}
        
        {% block content %}{% endblock %} {# 메인 컨텐츠가 여기에 표시됨 #}

        {# 페이지 하단에 고정된 스크롤 가능한 flash 메시지 영역을 위한 블록 (선택적) #}
        {# 또는 각 content 블록 내에 직접 flash 메시지 컨테이너를 배치 #}
        {% block bottom_flash_messages %}
        {% endblock %}

    </div>

    <footer>
        <p style="text-align: center; margin-top: 20px; color: #777;">&copy; {{ now.year if now else "" }} SControl System</p>
    </footer>
    {% block scripts %}{% endblock %}
</body>
</html>
layout.html 변경 사항:

기존에 {% block content %} 위에 있던 flash 메시지 표시 부분을 주석 처리하거나 삭제했습니다.
새로운 CSS 클래스 .flash-messages-container-fixed 와 그 하위 ul, li 에 대한 스타일을 추가했습니다. 이 스타일은 최대 높이를 설정하고, 내용이 넘칠 경우 세로 스크롤바를 표시합니다.
(선택 사항) {% block bottom_flash_messages %} 라는 새로운 블록을 {% block content %} 아래에 추가했습니다. 이 블록은 각 페이지 템플릿에서 하단 flash 메시지 영역을 구현할 때 사용할 수 있습니다. 하지만 더 간단하게는 각 content 페이지에 직접 flash 메시지 컨테이너를 넣는 것입니다. 여기서는 후자의 방식을 사용하겠습니다.
2. 수정: app/templates/user/control_panel.html
이 파일의 {% block content %} 내부, PC 목록 테이블과 페이지네이션 아래쪽에 새로운 flash 메시지 표시 영역을 추가합니다.

HTML

{% extends "layout.html" %}

{% block title %}{{ title }}{% endblock %}

{% block content %}
    <h1>{{ title }}</h1>
    <p>제어할 PC를 선택하고 하단의 명령 버튼을 클릭하세요.</p>

    {% if pcs %}
    <form action="{{ url_for('user.send_batch_command') }}" method="POST">
        <table style="margin-bottom: 20px;">
            <thead>
                <tr>
                    <th><input type="checkbox" id="selectAllPcs" onclick="toggleAllCheckBoxes(this, 'selected_pcs')"></th>
                    <th>ID</th>
                    <th>PC 이름</th>
                    <th>주소1 (릴레이 IP)</th>
                    <th>주소2 (최종 IP)</th>
                    <th>설명</th>
                </tr>
            </thead>
            <tbody>
                {% for pc in pcs %}
                <tr>
                    <td><input type="checkbox" name="selected_pcs" value="{{ pc.id }}"></td>
                    <td>{{ pc.id }}</td>
                    <td>{{ pc.pc_name }}</td>
                    <td>{{ pc.address1 }}</td>
                    <td>{{ pc.address2 if pc.address2 else '-' }}</td>
                    <td>{{ pc.description if pc.description else '-' }}</td>
                </tr>
                {% endfor %}
            </tbody>
        </table>

        <div class="command-buttons">
            <button type="submit" name="command_action" value="켜기" class="btn btn-primary" onclick="return confirmAction('선택된 PC들의 디스플레이 타임아웃을 [사용 안 함]으로 설정합니다. 계속하시겠습니까?');">선택 PC 일괄 켜기 (타임아웃 해제)</button>
            <button type="submit" name="command_action" value="끄기" class="btn btn-danger" onclick="return confirmAction('선택된 PC들의 디스플레이 타임아웃을 [1분 후 끄기]로 설정합니다. 계속하시겠습니까?');">선택 PC 일괄 끄기 (1분 후)</button>
        </div>
    </form>
    
    {% if pagination and pagination.total_pages > 1 %}
    <div class="pagination">
        {% if pagination.has_prev %}
            <a href="{{ url_for(request.endpoint, page=pagination.prev_num) }}">&laquo; 이전</a>
        {% else %}
            <span class="disabled">&laquo; 이전</span>
        {% endif %}
        <span style="margin: 0 10px;">페이지 {{ pagination.page }} / {{ pagination.total_pages }}</span>
        {% if pagination.has_next %}
            <a href="{{ url_for(request.endpoint, page=pagination.next_num) }}">다음 &raquo;</a>
        {% else %}
            <span class="disabled">다음 &raquo;</span>
        {% endif %}
        <span style="margin-left: 15px;">(총 {{ pagination.total_items }}개)</span>
    </div>
    {% endif %}

    {% else %}
    <p>제어 가능한 PC가 등록되어 있지 않습니다. 관리자에게 문의하세요.</p>
    {% endif %}

    {# --- ▼▼▼ 신규: 고정된 스크롤 가능한 Flash 메시지 영역 ▼▼▼ --- #}
    <div class="flash-messages-container-fixed">
        <h2 style="font-size: 1.2em; margin-top:0; margin-bottom:10px; border-bottom: 1px solid #eee; padding-bottom: 5px;">알림 메시지</h2>
        {% with messages = get_flashed_messages(with_categories=true) %}
            {% if messages %}
                <ul class="flash-messages"> {# layout.html에 정의된 스타일 적용됨 #}
                {% for category, message in messages %}
                    <li class="{{ category }}">{{ message }}</li>
                {% endfor %}
                </ul>
            {% else %}
                <p style="color: #777; font-style: italic;">표시할 알림이 없습니다.</p>
            {% endif %}
        {% endwith %}
    </div>
    {# --- ▲▲▲ 신규: 고정된 스크롤 가능한 Flash 메시지 영역 ▲▲▲ --- #}

{% endblock %}

{% block scripts %}
{{ super() }} {# layout.html의 scripts 블록 내용을 유지하고 싶다면 #}
<script>
    function toggleAllCheckBoxes(source, name) {
        var checkboxes = document.getElementsByName(name);
        for(var i=0, n=checkboxes.length; i<n; i++) {
            checkboxes[i].checked = source.checked;
        }
    }
    function confirmAction(message) {
        return confirm(message);
    }
</script>
{% endblock %}
control_panel.html 변경 사항:

{% block content %}의 가장 아래쪽 (페이지네이션 다음)에 새로운 div (class="flash-messages-container-fixed")를 추가했습니다.
이 div 안에 기존과 동일한 get_flashed_messages 로직을 넣어 flash 메시지를 렌더링합니다.
layout.html에 추가한 CSS 스타일 .flash-messages-container-fixed가 이 div에 적용되어 최대 높이 제한과 스크롤 기능이 구현됩니다.
메시지가 없을 때 "표시할 알림이 없습니다."라는 텍스트를 보여주도록 수정했습니다.
3. (선택 사항) 다른 관리자 페이지에도 동일하게 적용
app/templates/admin/ 폴더 내의 manage_target_pcs.html, manage_user_ips.html, manage_admin_ips.html 파일들에도 위 control_panel.html과 유사하게 {% block content %}의 아래쪽에 <div class="flash-messages-container-fixed">...</div> 블록을 추가해주시면 동일한 방식으로 flash 메시지가 표시됩니다.

위와 같이 수정하시면, 이제 flash 메시지들이 페이지 상단이 아닌, 주요 내용(PC 목록 테이블 등) 아래쪽의 고정된 높이를 가진 영역에 표시되고, 메시지가 많아지면 해당 영역 내에서 스크롤하여 볼 수 있게 됩니다.