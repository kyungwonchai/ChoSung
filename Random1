PF에서 한 윈도우를 다른 윈도우에 내장하는 것은 기본적으로 WPF의 Window 클래스로는 지원되지 않습니다. 하지만 다음과 같은 방법으로 다른 창의 콘텐츠를 임베드하거나, 새로운 Window 인스턴스를 특정 컨트롤처럼 표시하는 효과를 낼 수 있습니다.

1. Window 내용을 UserControl로 변환하기
가장 권장되는 방법은 Window의 콘텐츠를 UserControl로 변환하고, 이를 다른 Window에 포함시키는 것입니다. 이를 통해 원하는 콘텐츠를 다른 창 내에 배치할 수 있습니다.

단계별 설명
원래 있던 Window의 콘텐츠를 UserControl로 이동합니다.

xaml
코드 복사
<!-- MyUserControl.xaml -->
<UserControl x:Class="YourNamespace.MyUserControl">
    <Grid>
        <!-- 원래 Window의 내용을 여기에 넣습니다 -->
        <TextBlock Text="임베드할 내용" HorizontalAlignment="Center" VerticalAlignment="Center"/>
    </Grid>
</UserControl>
이제 다른 Window에서 이 UserControl을 추가하여 표시합니다.

xaml
코드 복사
<!-- MainWindow.xaml -->
<Window x:Class="YourNamespace.MainWindow">
    <Grid>
        <local:MyUserControl /> <!-- 여기서 UserControl을 직접 내장하여 표시 -->
    </Grid>
</Window>
2. HwndHost를 이용한 다른 윈도우 내장
만약 기존 Window를 그대로 다른 Window 내에 포함하고 싶다면 HwndHost를 사용하여 외부 Window의 핸들을 가져와서 내장할 수 있습니다. 그러나 이 방법은 비교적 복잡하고 Win32 API에 대한 지식이 필요하며, 예상치 못한 UI 문제를 일으킬 수 있습니다.

예제 코드
다음은 Window 핸들을 HwndHost를 통해 내장하는 기본적인 방법입니다.

System.Runtime.InteropServices를 사용하여 Win32 API를 호출합니다.

csharp
코드 복사
using System;
using System.Runtime.InteropServices;
using System.Windows;
using System.Windows.Interop;

public class EmbeddedWindowHost : HwndHost
{
    private IntPtr hwndChild = IntPtr.Zero;

    [DllImport("user32.dll", SetLastError = true)]
    private static extern IntPtr SetParent(IntPtr hWndChild, IntPtr hWndNewParent);

    public EmbeddedWindowHost(Window window)
    {
        window.SourceInitialized += (s, e) =>
        {
            hwndChild = new WindowInteropHelper(window).Handle;
            SetParent(hwndChild, Handle); // 부모 핸들로 변경하여 내장
        };
    }

    protected override HandleRef BuildWindowCore(HandleRef hwndParent)
    {
        SetParent(hwndChild, hwndParent.Handle);
        return new HandleRef(this, hwndChild);
    }

    protected override void DestroyWindowCore(HandleRef hwnd)
    {
        SetParent(hwndChild, IntPtr.Zero); // 원래 상태로 복구
    }
}
이제 이 EmbeddedWindowHost를 다른 Window에 내장하여 사용할 수 있습니다.

xaml
코드 복사
<!-- MainWindow.xaml -->
<Window x:Class="YourNamespace.MainWindow">
    <Grid>
        <local:EmbeddedWindowHost />
    </Grid>