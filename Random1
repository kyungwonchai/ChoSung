컬럼명을 변경
모델 → model1
시간 → time1
라인 → line1
주석을 영어로 변경
테이블 아래에 BOT CT, TOP CT 그래프 추가
Streamlit UI 업데이트
✅ 📌 변경된 Streamlit 코드
python
코드 복사
import streamlit as st
import pymssql
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

# 📌 MSSQL connection settings
DB_CONFIG = {
    "server": "your_server",
    "user": "your_username",
    "password": "your_password",
    "database": "your_database"
}

# 📌 Fetch model-wise latest min values for a specific line
def get_recent_models_min_data(line_name):
    conn = pymssql.connect(**DB_CONFIG)
    cursor = conn.cursor(as_dict=True)

    # Execute stored procedure to fetch data
    cursor.execute("EXEC Get_Min_Data_By_Recent_Models %s", (line_name,))
    data = cursor.fetchall()
    conn.close()

    return data

# 📌 Fetch available lines
def get_lines():
    conn = pymssql.connect(**DB_CONFIG)
    cursor = conn.cursor()
    
    # Retrieve distinct line names from database
    cursor.execute("SELECT DISTINCT line1 FROM ExcelData ORDER BY line1")
    lines = [row[0] for row in cursor.fetchall()]
    conn.close()
    
    return lines

# 📌 Streamlit UI
st.title("Line-Based Model Data Analysis")

# 📌 Line selection from sidebar
lines = get_lines()
selected_line = st.sidebar.selectbox("Select Line", lines)

# 📌 Fetch and display data
if selected_line:
    data = get_recent_models_min_data(selected_line)

    if data:
        for row in data:
            model_name = row["model1"]  # Retrieve model name
            latest_time = row["time1"]  # Retrieve latest timestamp

            # 📌 Convert data into DataFrame format for table display
            table_data = {
                "Category": ["BOT CT", "TOP CT"],  # Row labels
                "MC1": [row["BCT1_1"], row["TCT1_1"]],
                "MC2": [row["BCT1_2"], row["TCT1_2"]],
                "MC3": [row["BCT1_3"], row["TCT1_3"]],
                "MC4": [row["BCT1_4"], row["TCT1_4"]],
                "MC5": [row["BCT1_5"], row["TCT1_5"]],
                "MC6": [row["BCT1_6"], row["TCT1_6"]],
                "MC7": [row["BCT1_7"], row["TCT1_7"]],
                "MC8": [row["BCT1_8"], row["TCT1_8"]],
            }
            df = pd.DataFrame(table_data)

            # 📌 Display table
            st.subheader(f"Model: {model_name} | Latest Time: {latest_time}")
            st.table(df)

            # 📌 Convert DataFrame to NumPy array for chart plotting
            labels = ["MC1", "MC2", "MC3", "MC4", "MC5", "MC6", "MC7", "MC8"]
            bot_ct_values = np.array(df.iloc[0, 1:])  # BOT CT values
            top_ct_values = np.array(df.iloc[1, 1:])  # TOP CT values

            # 📌 Create a grouped bar chart
            fig, ax = plt.subplots(figsize=(8, 5))

            x = np.arange(len(labels))  # X-axis positions
            width = 0.35  # Bar width

            # 📌 Plot BOT CT and TOP CT values
            ax.bar(x - width / 2, bot_ct_values, width, label="BOT CT", color="blue")
            ax.bar(x + width / 2, top_ct_values, width, label="TOP CT", color="orange")

            # 📌 Configure chart labels and settings
            ax.set_xlabel("MC Machines")  # X-axis label
            ax.set_ylabel("CT Values")  # Y-axis label
            ax.set_title(f"BOT CT vs TOP CT for Model {model_name}")  # Chart title
            ax.set_xticks(x)
            ax.set_xticklabels(labels)  # X-axis labels
            ax.legend()  # Display legend

            # 📌 Display chart in Streamlit
            st.pyplot(fig)

    else:
        st.warning("No data available for the selected line.")
✅ 📌 변경된 MSSQL 2014 프로시저
sql
코드 복사
CREATE PROCEDURE Get_Min_Data_By_Recent_Models
    @line1 NVARCHAR(50)
AS
BEGIN
    SET NOCOUNT ON;

    DECLARE @latest_date DATE;

    -- 📌 Retrieve the most recent date for the given line
    SELECT TOP 1 @latest_date = CAST(time1 AS DATE)
    FROM dbo.ExcelData
    WHERE line1 = @line1
    ORDER BY time1 DESC;

    -- 📌 Get unique models from the latest date for the given line
    WITH LatestModels AS (
        SELECT DISTINCT model1
        FROM dbo.ExcelData
        WHERE line1 = @line1 AND CAST(time1 AS DATE) = @latest_date
    )

    -- 📌 Retrieve the latest 10 data entries for each model and compute the min values
    SELECT 
        e.model1,
        MAX(e.time1) AS time1,

        -- 📌 BOT CT (BCT1_1 ~ BCT1_8)
        ISNULL(MIN(CASE WHEN BCT1_1 >= 1 THEN BCT1_1 ELSE NULL END), 0) AS BCT1_1,
        ISNULL(MIN(CASE WHEN BCT1_2 >= 1 THEN BCT1_2 ELSE NULL END), 0) AS BCT1_2,
        ISNULL(MIN(CASE WHEN BCT1_3 >= 1 THEN BCT1_3 ELSE NULL END), 0) AS BCT1_3,
        ISNULL(MIN(CASE WHEN BCT1_4 >= 1 THEN BCT1_4 ELSE NULL END), 0) AS BCT1_4,
        ISNULL(MIN(CASE WHEN BCT1_5 >= 1 THEN BCT1_5 ELSE NULL END), 0) AS BCT1_5,
        ISNULL(MIN(CASE WHEN BCT1_6 >= 1 THEN BCT1_6 ELSE NULL END), 0) AS BCT1_6,
        ISNULL(MIN(CASE WHEN BCT1_7 >= 1 THEN BCT1_7 ELSE NULL END), 0) AS BCT1_7,
        ISNULL(MIN(CASE WHEN BCT1_8 >= 1 THEN BCT1_8 ELSE NULL END), 0) AS BCT1_8,

        -- 📌 TOP CT (TCT1_1 ~ TCT1_8)
        ISNULL(MIN(CASE WHEN TCT1_1 >= 1 THEN TCT1_1 ELSE NULL END), 0) AS TCT1_1,
        ISNULL(MIN(CASE WHEN TCT1_2 >= 1 THEN TCT1_2 ELSE NULL END), 0) AS TCT1_2,
        ISNULL(MIN(CASE WHEN TCT1_3 >= 1 THEN TCT1_3 ELSE NULL END), 0) AS TCT1_3,
        ISNULL(MIN(CASE WHEN TCT1_4 >= 1 THEN TCT1_4 ELSE NULL END), 0) AS TCT1_4,
        ISNULL(MIN(CASE WHEN TCT1_5 >= 1 THEN TCT1_5 ELSE NULL END), 0) AS TCT1_5,
        ISNULL(MIN(CASE WHEN TCT1_6 >= 1 THEN TCT1_6 ELSE NULL END), 0) AS TCT1_6,
        ISNULL(MIN(CASE WHEN TCT1_7 >= 1 THEN TCT1_7 ELSE NULL END), 0) AS TCT1_7,
        ISNULL(MIN(CASE WHEN TCT1_8 >= 1 THEN TCT1_8 ELSE NULL END), 0) AS TCT1_8

    FROM dbo.ExcelData e
    INNER JOIN LatestModels lm ON e.model1 = lm.model1
    WHERE e.line1 = @line1 
        AND CAST(e.time1 AS DATE) = @latest_date
    GROUP BY e.model1;
END;
✅ 📌 실행 방법
MSSQL에서 프로시저 실행
sql
코드 복사
EXEC Get_Min_Data_By_Recent_Models @line1 = 'L1';
Streamlit 실행
bash
코드 복사
pip install streamlit pymssql pandas matplotlib numpy