를 구현하기 위해서는 Flask 서버에서 파일의 설치 링크를 QR 코드로 변환하여 제공하고, HTML 페이지에서 QR 코드를 보여주는 버튼을 추가해야 합니다. QR 코드는 Python의 qrcode 라이브러리를 사용하여 생성할 수 있습니다.

1. QR 코드 생성 및 표시
1.1. 필요한 라이브러리 설치
먼저, qrcode 및 Pillow 라이브러리를 설치해야 합니다. 이 라이브러리는 QR 코드를 생성하고 이미지를 처리하는 데 사용됩니다.

bash
코드 복사
pip install qrcode[pil]
1.2. Flask 애플리케이션 수정
app.py를 수정하여 각 파일의 설치 링크를 QR 코드로 변환하고, QR 코드를 생성하여 저장한 뒤 이를 보여주는 기능을 추가합니다.

python
코드 복사
from flask import Flask, render_template, request, send_file
import os
import qrcode

app = Flask(__name__)

# 파일 디렉토리 설정
FILE_DIRECTORY = os.path.join(os.getcwd(), 'files')
QR_DIRECTORY = os.path.join(os.getcwd(), 'static', 'qr')

# QR 코드 디렉토리가 없으면 생성
if not os.path.exists(QR_DIRECTORY):
    os.makedirs(QR_DIRECTORY)

@app.route('/')
def index():
    # 클라이언트의 IP 주소 확인
    client_ip = request.remote_addr
    
    # 파일 목록 필터링 로직
    files = []
    for filename in os.listdir(FILE_DIRECTORY):
        # APK 파일만 표시할 경우
        if client_ip.startswith('10.249'):
            if filename.endswith('.apk'):
                files.append(filename)
        # 모든 파일을 표시할 경우
        else:
            files.append(filename)
    
    return render_template('index.html', files=files, client_ip=client_ip)

@app.route('/generate_qr/<filename>')
def generate_qr(filename):
    # 파일 경로 설정
    file_path = os.path.join(FILE_DIRECTORY, filename)
    if not os.path.exists(file_path):
        return "File not found", 404

    # QR 코드 파일 경로 설정
    qr_path = os.path.join(QR_DIRECTORY, f"{filename}.png")

    # QR 코드 생성 및 저장
    qr = qrcode.make(f"http://localhost:5000/download/{filename}")
    qr.save(qr_path)

    # QR 코드 이미지 반환
    return send_file(qr_path, mimetype='image/png')

@app.route('/download/<filename>')
def download_file(filename):
    # 파일 경로 설정
    file_path = os.path.join(FILE_DIRECTORY, filename)
    if not os.path.exists(file_path):
        return "File not found", 404
    
    # 파일 다운로드 제공
    return send_file(file_path, as_attachment=True)

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000)
1.3. HTML 파일 수정 (index.html)
HTML 파일을 수정하여 각 파일 행에 QR 보기 버튼을 추가합니다. 이 버튼을 클릭하면 QR 코드가 팝업 창으로 표시됩니다.

html
코드 복사
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>File List</title>
    <link rel="stylesheet" href="{{ url_for('static', filename='css/bootstrap.min.css') }}">
    <style>
        .qr-image {
            width: 150px;
            height: 150px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>File List</h1>
        <p>Your IP: {{ client_ip }}</p>

        <table class="table table-striped">
            <thead>
                <tr>
                    <th>File Name</th>
                    <th>QR Code</th>
                </tr>
            </thead>
            <tbody>
                {% for file in files %}
                <tr>
                    <td>{{ file }}</td>
                    <td><button class="btn btn-primary" onclick="showQR('{{ file }}')">QR 보기</button></td>
                </tr>
                {% endfor %}
            </tbody>
        </table>
    </div>

    <!-- QR 코드 팝업 -->
    <div id="qrModal" class="modal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">QR Code</h5>
                    <button type="button" class="btn-close" onclick="hideQR()" aria-label="Close"></button>
                </div>
                <div class="modal-body text-center">
                    <img id="qrImage" src="" alt="QR Code" class="qr-image">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" onclick="hideQR()">Close</button>
                </div>
            </div>
        </div>
    </div>

    <script src="{{ url_for('static', filename='js/bootstrap.bundle.min.js') }}"></script>
    <script>
        function showQR(filename) {
            const qrImage = document.getElementById('qrImage');
            qrImage.src = `/generate_qr/${filename}`;
            const qrModal = new bootstrap.Modal(document.getElementById('qrModal'));
            qrModal.show();
        }

        function hideQR() {
            const qrModal = bootstrap.Modal.getInstance(document.getElementById('qrModal'));
            qrModal.hide();
        }
    </script>
</body>
</html>
설명
QR 코드 생성 및 저장:

generate_qr 함수는 파일명을 받아서 그 파일에 대한 다운로드 링크를 QR 코드로 생성하고, 이를 PNG 이미지로 저장합니다.
저장된 QR 코드 이미지는 /static/qr 경로에 저장됩니다.
QR 코드 보기 버튼:

각 파일 행에 "QR 보기" 버튼이 추가되었습니다. 이 버튼을 클릭하면 showQR 함수가 호출되어 QR 코드 이미지를 표시합니다.
모달 팝업을 사용하여 QR 코드 표시:

Bootstrap의 모달 팝업을 사용하여 QR 코드를 표시합니다. showQR 함수는 QR 코드 이미지를 업데이트하고 모달을 표시하며, hideQR 함수는 모달을 닫습니다.
실행 방법
필요한 라이브러리 설치:

bash
코드 복사
pip install qrcode[pil]
Flask 애플리케이션 실행:

bash
코드 복사
python app.py
웹 브라우저에서 확인:

웹 브라우저에서 http://localhost:5000으로 접속하여, 파일 목록과 QR 보기 버튼이 제대로 작동하는지 확인합니다.
이 구현을 통해, 특정 IP 주소 범위에서는 APK 파일만 목록으로 표시하고, 사용자가 "QR 보기" 버튼을 클릭하여 해당 파일의 설치 링크를 QR 코드로 볼 수 있도록 할 수 있습니