using System;
using System.Data;
using System.Data.SqlClient;
using System.Windows.Forms;

namespace YourNamespace
{
    public partial class MainForm : Form
    {
        private SqlConnection connection;
        private string connectionString = "your_connection_string";

        public MainForm()
        {
            InitializeComponent();
        }

        private void MainForm_Load(object sender, EventArgs e)
        {
            ConnectToDatabase();
            ProcessData();
        }

        private void ConnectToDatabase()
        {
            try
            {
                connection = new SqlConnection(connectionString);
                connection.Open();
                MessageBox.Show("Connected to the database.");
            }
            catch (Exception ex)
            {
                MessageBox.Show("Failed to connect to the database.");
            }
        }

        private void ProcessData()
        {
            // 현재 시간에서 10분을 뺀 시간 계산
            DateTime tenMinutesAgo = DateTime.Now.AddMinutes(-10);

            // 쿼리문 작성
            string query = "SELECT * FROM YourTable " +
                           "WHERE datetime1 > @TenMinutesAgo AND lastgetcount <= 500 " +
                           "AND logdatetime1 > @TenMinutesAgo AND lastprocess = 'OFF' " +
                           "OR datetime1 < @TenMinutesAgo AND lastgetcount <= 500 " +
                           "AND logdatetime1 < @TenMinutesAgo AND lastprocess = 'ON'";

            // SqlCommand 객체 생성
            SqlCommand command = new SqlCommand(query, connection);
            command.Parameters.AddWithValue("@TenMinutesAgo", tenMinutesAgo);

            // 쿼리 실행 및 결과 가져오기
            SqlDataReader reader = command.ExecuteReader();

            // 결과 처리
            while (reader.Read())
            {
                // 한 행씩 데이터 처리 함수 호출
                ProcessRow(reader);
            }

            // 리더와 연결 해제
            reader.Close();
        }

        private void ProcessRow(SqlDataReader reader)
        {
            // 행에서 필요한 데이터 추출
            DateTime datetime1 = (DateTime)reader["datetime1"];
            int lastgetcount = (int)reader["lastgetcount"];
            DateTime logdatetime1 = (DateTime)reader["logdatetime1"];
            string lastprocess = (string)reader["lastprocess"];

            // 여기서부터 해당 데이터에 대한 별도 처리 로직 작성

            // 예시: 메시지박스에 데이터 출력
            MessageBox.Show($"datetime1: {datetime1}, lastgetcount: {lastgetcount}, logdatetime1: {logdatetime1}, lastprocess: {lastprocess}");
        }
    }
}
