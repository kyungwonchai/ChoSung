ython의 max()나 min() 함수가 내장되어 있지 않습니다. 그러나 이를 해결하기 위해 Flask에서 템플릿 필터를 정의하여 사용할 수 있습니다.

Flask에서 max()와 min() 지원하기
템플릿 필터 정의: Flask 애플리케이션 코드에서 max와 min 함수를 템플릿 필터로 등록합니다.

Jinja2에서 사용하기: 등록된 필터를 템플릿에서 호출합니다.

수정된 Flask 코드 (app.py)
python
코드 복사
from flask import Flask, render_template, request, jsonify
import pymssql
import pandas as pd

app = Flask(__name__)

# MSSQL 데이터베이스 연결 정보
DB_CONFIG = {
    "server": "YOUR_SERVER",
    "database": "YOUR_DATABASE",
    "username": "YOUR_USERNAME",
    "password": "YOUR_PASSWORD"
}

# MSSQL 연결 함수
def get_db_connection():
    return pymssql.connect(
        server=DB_CONFIG['server'],
        user=DB_CONFIG['username'],
        password=DB_CONFIG['password'],
        database=DB_CONFIG['database']
    )

# 템플릿 필터 등록
@app.template_filter('max')
def max_filter(value, arg):
    return max(value, arg)

@app.template_filter('min')
def min_filter(value, arg):
    return min(value, arg)

@app.route('/PLCErr', methods=['GET'])
def plcerr():
    conn = get_db_connection()
    query = """
        SELECT 
            linename AS '라인명',
            errN AS '에러번호',
            errValue AS '에러값',
            CONVERT(VARCHAR, Time1, 121) AS '시간'
        FROM View_PLCErrjoin
    """
    df = pd.read_sql(query, conn)
    conn.close()

    # 라인별 발생 수 데이터 준비
    line_counts = df['라인명'].value_counts().reset_index()
    line_counts.columns = ['라인명', '발생수']

    # 에러번호별 발생 수 데이터 준비
    error_counts = df['에러번호'].value_counts().reset_index()
    error_counts.columns = ['에러번호', '발생수']

    # 페이지네이션 처리
    page = int(request.args.get("page", 1))
    per_page = 20
    total_pages = -(-len(df) // per_page)  # 총 페이지 수
    df_page = df.iloc[(page - 1) * per_page : page * per_page]

    return render_template(
        'plcerr.html',
        data=df_page.to_dict(orient='records'),
        line_counts=line_counts.to_dict(orient='records'),
        error_counts=error_counts.to_dict(orient='records'),
        current_page=page,
        total_pages=total_pages
    )


if __name__ == '__main__':
    app.run(debug=True)
수정된 HTML 템플릿 (templates/plcerr.html)
html
코드 복사
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>PLC Error Viewer</title>
    <script src="{{ url_for('static', filename='js/Chart.min.js') }}"></script>
    <script src="{{ url_for('static', filename='js/jquery.min.js') }}"></script>
    <style>
        .pagination {
            text-align: center;
            margin: 20px 0;
        }
        .pagination button {
            padding: 8px 16px;
            margin: 0 5px;
            border: none;
            border-radius: 5px;
            background-color: #00bcd4;
            color: #fff;
            cursor: pointer;
        }
        .pagination button.disabled {
            background-color: #555;
            cursor: not-allowed;
        }
    </style>
</head>
<body>
    <div class="pagination">
        {% set start_page = current_page|min(5) %}
        {% set end_page = total_pages|max(10) %}
        {% for page in range(start_page, end_page + 1) %}
            <button 
                onclick="changePage({{ page }})" 
                class="{{ 'active' if page == current_page else '' }}"
            >
                {{ page }}
            </button>
        {% endfor %}
    </div>
</body>
</html>
주요 변경 사항
템플릿 필터 등록:

Flask에서 Python의 max()와 min() 함수를 템플릿 필터로 등록하여 템플릿에서 사용할 수 있도록 했습니다.
Jinja2에서 사용:

current_page|min(5) 또는 total_pages|max(10)와 같이 사용 가능합니다.
페이지네이션 적용:
