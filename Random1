using CefSharp.OffScreen; // CefSharp 라이브러리 명시
using OpenCvSharp; // OpenCvSharp 라이브러리 명시
using System;
using System.IO;
using System.Threading.Tasks;

public class ChromiumVideoCapture
{
    private CefSharp.OffScreen.ChromiumWebBrowser webView;
    private bool isRecording = false;
    private VideoWriter videoWriter;
    private readonly int width = 1920;
    private readonly int height = 1080;
    private const int frameRate = 15;
    private const int intervalMinutes = 10;

    public async Task StartCaptureAsync(string url)
    {
        // 오프스크린 브라우저 초기화
        webView = new CefSharp.OffScreen.ChromiumWebBrowser(url);
        webView.Size = new System.Drawing.Size(width, height);

        // 브라우저 로드 대기
        await webView.WaitForInitialLoadAsync();

        isRecording = true;

        // 비디오 녹화 루프
        while (isRecording)
        {
            string folderPath = GetFolderPath();
            string videoPath = Path.Combine(folderPath, $"{DateTime.Now:HHmmss}.avi");

            // 비디오 라이팅 초기화
            videoWriter = new VideoWriter(videoPath, VideoWriter.Fourcc('M', 'J', 'P', 'G'), frameRate, new OpenCvSharp.Size(width, height));

            // 10분 동안 녹화
            DateTime endTime = DateTime.Now.AddMinutes(intervalMinutes);
            while (DateTime.Now < endTime && isRecording)
            {
                var bitmap = await TakeScreenshotAsync();
                var frame = OpenCvSharp.Extensions.BitmapConverter.ToMat(bitmap);

                if (frame.Empty())
                {
                    Console.WriteLine("프레임이 비어 있습니다. 캡처가 실패했습니다.");
                    continue;
                }

                videoWriter.Write(frame);
                frame.Dispose();
                
                // 500ms 대기하여 프레임 레이트를 맞추기 위함
                await Task.Delay(500);
            }

            videoWriter?.Release();
            videoWriter?.Dispose();

            // 녹화가 끝나면 최대 5일 이상 된 폴더를 삭제합니다.
            CleanupOldFolders();
        }
    }

    private async Task<System.Drawing.Bitmap> TakeScreenshotAsync()
    {
        // 스크린샷을 비동기적으로 캡처합니다.
        var screenshot = await webView.CaptureScreenshotAsync();
        using (var memoryStream = new MemoryStream(screenshot))
        {
            return new System.Drawing.Bitmap(memoryStream);
        }
    }

    private string GetFolderPath()
    {
        // 날짜별 폴더 경로를 생성합니다.
        string dateFolder = DateTime.Now.ToString("yyyyMMdd");
        string baseFolder = @"D:\VideoRecords";
        string fullPath = Path.Combine(baseFolder, dateFolder);

        // 폴더가 없으면 생성합니다.
        if (!Directory.Exists(fullPath))
        {
            Directory.CreateDirectory(fullPath);
        }

        return fullPath;
    }

    private void CleanupOldFolders()
    {
        string baseFolder = @"D:\VideoRecords";
        var directories = Directory.GetDirectories(baseFolder);

        foreach (var dir in directories)
        {
            DateTime dirDate;
            string folderName = new DirectoryInfo(dir).Name;

            // 폴더 이름을 날짜로 변환하여 5일 이상 경과한 폴더는 삭제
            if (DateTime.TryParseExact(folderName, "yyyyMMdd", null, System.Globalization.DateTimeStyles.None, out dirDate))
            {
                if ((DateTime.Now - dirDate).TotalDays > 5)
                {
                    Directory.Delete(dir, true);
                }
            }
        }
    }

    public void StopCapture()
    {
        isRecording = false;
        webView?.Dispose();
        videoWriter?.Release();
        videoWriter?.Dispose();
    }
}
