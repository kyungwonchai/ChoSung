 소리를 특정 이름(예: "Signal")으로 설정하고, 팝업의 "확인" 버튼을 눌렀을 때만 소리가 꺼지도록 구현하려면 다음과 같이 단계별로 설정할 수 있습니다:

특정 알람 소리 설정: 사용자의 기기(예: 갤럭시)에서 "Signal"이라는 이름의 알람 소리를 찾습니다. 이를 위해 시스템의 알람 소리 목록을 탐색합니다.
팝업의 확인 버튼을 눌렀을 때만 소리 끄기: 팝업이 표시되더라도 소리가 재생되고, 사용자가 "확인" 버튼을 눌렀을 때만 소리가 멈추도록 수정합니다.
단계 1: 특정 알람 소리 찾기
Android에서 특정 이름의 알람 소리를 찾으려면 시스템의 알람 소리 목록을 탐색하고, 해당 이름과 일치하는 소리를 설정해야 합니다. 아래는 이를 구현한 코드입니다.

코드 구현
kotlin
코드 복사
import android.content.ContentResolver
import android.database.Cursor
import android.media.AudioAttributes
import android.media.MediaPlayer
import android.net.Uri
import android.provider.MediaStore
import android.provider.Settings
import android.util.Log
import android.app.AlertDialog
import android.widget.Toast

private fun playAlarmSound() {
    // "Signal"이라는 이름의 알람 소리를 찾음
    val alarmSound = getRingtoneUriByName("Signal")

    if (alarmSound == null) {
        Toast.makeText(this, "알람 소리 'Signal'을 찾을 수 없습니다.", Toast.LENGTH_SHORT).show()
        return
    }

    try {
        mediaPlayer = MediaPlayer().apply {
            setAudioAttributes(
                AudioAttributes.Builder()
                    .setContentType(AudioAttributes.CONTENT_TYPE_SONIFICATION)
                    .setUsage(AudioAttributes.USAGE_ALARM)
                    .build()
            )
            setDataSource(this@MainActivity, alarmSound)
            isLooping = true // 소리 반복 재생
            prepare()
            start()
        }
    } catch (e: Exception) {
        Log.e("MainActivity", "Failed to play alarm sound", e)
    }

    // UI 스레드에서 팝업 창을 띄우기
    runOnUiThread {
        val builder = AlertDialog.Builder(this)
        builder.setTitle("알림")
            .setMessage("문제를 확인하고 창을 터치하여 경고음을 종료하세요.")
            .setPositiveButton("확인") { dialog, _ ->
                stopAlarmSound() // 사운드 멈춤
                dialog.dismiss()
            }
            .setCancelable(false) // 사용자가 창을 닫기 전까지 팝업이 꺼지지 않음
        builder.create().show()
    }
}

private fun stopAlarmSound() {
    mediaPlayer?.let {
        if (it.isPlaying) {
            it.stop()
            it.release()
        }
    }
}

// 특정 이름의 알람 소리를 찾는 함수
private fun getRingtoneUriByName(ringtoneName: String): Uri? {
    val contentResolver: ContentResolver = contentResolver
    val uri = MediaStore.Audio.Media.INTERNAL_CONTENT_URI
    val projection = arrayOf(MediaStore.Audio.Media._ID, MediaStore.Audio.Media.TITLE)
    val selection = "${MediaStore.Audio.Media.TITLE}=?"
    val selectionArgs = arrayOf(ringtoneName)

    val cursor: Cursor? = contentResolver.query(uri, projection, selection, selectionArgs, null)
    cursor?.use {
        if (it.moveToFirst()) {
            val id = it.getLong(it.getColumnIndexOrThrow(MediaStore.Audio.Media._ID))
            return Uri.withAppendedPath(uri, id.toString())
        }
    }
    return null
}
설명
특정 알람 소리 찾기 (getRingtoneUriByName 함수):

MediaStore.Audio.Media.INTERNAL_CONTENT_URI를 사용하여 기기 내부의 알람 소리 목록을 조회합니다.
"Signal"이라는 이름과 일치하는 소리가 있는지 확인하고, 해당 URI를 반환합니다.
없으면 null을 반환하고, playAlarmSound에서 알림을 표시합니다.
playAlarmSound 함수:

getRingtoneUriByName을 사용하여 "Signal"이라는 이름의 알람 소리를 찾고, 이를 사용해 MediaPlayer로 반복 재생합니다.
팝업 창이 표시되지만, 소리는 계속 재생됩니다. 사용자가 팝업의 "확인" 버튼을 눌렀을 때만 stopAlarmSound가 호출되어 소리가 멈추도록 설정합니다.
stopAlarmSound 함수:

MediaPlayer가 재생 중이면 소리를 멈추고, 리소스를 해제합니다.
주의 사항
소리 이름 일치 여부: "Signal"이라는 이름의 알람 소리가 기기에 없을 수 있습니다. 이 경우, 사용자에게 알림을 표시합니다.