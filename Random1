import numpy as np
from sklearn.linear_model import LogisticRegression

# 파일 읽기
a_values = []
b_values = []

with open('data.txt', 'r') as file:
    for line in file:
        # 공백으로 분리하여 숫자 추출
        a, b = map(int, line.split())
        a_values.append(a)
        b_values.append(b)

# a와 b 리스트 출력
print("a 값:", a_values)
print("b 값:", b_values)

# 간단한 통계적 분석
a_mean = sum(a_values) / len(a_values)
b_mean = sum(b_values) / len(b_values)

a_var = sum((x - a_mean) ** 2 for x in a_values) / len(a_values)
b_var = sum((x - b_mean) ** 2 for x in b_values) / len(b_values)

print("a의 평균:", a_mean, "a의 분산:", a_var)
print("b의 평균:", b_mean, "b의 분산:", b_var)

if a_mean > b_mean:
    print("a가 평균적으로 더 많습니다.")
elif a_mean < b_mean:
    print("b가 평균적으로 더 많습니다.")
else:
    print("a와 b가 평균적으로 같습니다.")

# 머신러닝 모델 (로지스틱 회귀)로 분석
X = np.array([[a, b] for a, b in zip(a_values, b_values)])
y = np.array([1 if a > b else 0 for a, b in zip(a_values, b_values)])

model = LogisticRegression()
model.fit(X, y)

# 각 데이터에 대해 예측
predictions = model.predict(X)
probabilities = model.predict_proba(X)

print("예측 결과:", predictions)  # a가 더 많을 확률이 높은지 예측