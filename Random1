네, 좋은 질문입니다. 사내 보안 정책으로 외부 AI 서비스를 사용하지 못하는 경우는 매우 흔합니다. 결론부터 말씀드리면, 사내 AI 확장툴이 JetBrains IDE(DataSpell, PyCharm 등)와 연동되도록 개발되었다면 당연히 사용 가능합니다.

제가 해당 사내 확장툴에 대한 정보를 직접 알 수는 없으므로, 사용 가능 여부를 확인하고 연동할 수 있는 일반적인 방법을 단계별로 안내해 드리겠습니다.

1단계: 사내 AI 확장툴의 형태 확인하기
가장 먼저 사내 AI 툴이 어떤 방식으로 제공되는지 확인해야 합니다. 보통 다음 세 가지 경우 중 하나일 가능성이 높습니다.

JetBrains 플러그인 형태: 가장 이상적인 경우입니다. 회사에서 JetBrains IDE 전용 플러그인(.jar 또는 .zip 파일)을 만들어 배포했을 수 있습니다.

API 또는 SDK 형태: 특정 주소(API Endpoint)로 요청을 보내거나, 전용 Python 라이브러리(SDK)를 pip로 설치하여 사용하는 방식일 수 있습니다.

별도의 애플리케이션 형태: IDE와는 독립적으로 실행되는 별개의 프로그램일 수 있습니다. 이 경우 직접적인 연동은 어려울 수 있습니다.

2단계: 연동 방법 확인 및 적용
위에서 확인한 형태에 따라 연동 방법이 달라집니다.

Case 1: JetBrains 플러그인 형태일 경우
회사 개발팀이나 IT팀에서 JetBrains IDE에 설치할 수 있도록 플러그인을 제공했다면, 연동은 매우 간편합니다.

사내 플러그인 저장소(Custom Repository) 확인

회사에서 자체 플러그인 저장소를 운영할 수 있습니다. IT 부서나 개발팀 가이드에 URL이 있는지 확인해 보세요.

[경로]: Settings/Preferences > Plugins

톱니바퀴 아이콘(⚙️) 클릭 > Manage Plugin Repositories... 선택

회사에서 제공한 URL을 추가합니다.

이제 Marketplace 탭에서 사내 플러그인을 바로 검색하여 설치할 수 있습니다.

플러그인 파일(.jar, .zip) 직접 설치

만약 플러그인을 파일 형태로 받았다면 직접 설치할 수 있습니다.

[경로]: Settings/Preferences > Plugins

톱니바퀴 아이콘(⚙️) 클릭 > Install Plugin from Disk... 선택

다운로드한 플러그인 파일을 선택하여 설치하고 IDE를 재시작합니다.

플러그인이 성공적으로 설치되면, 이전에 설명해 드린 JetBrains AI Assistant나 GitHub Copilot처럼 코드 셀 주변이나 우클릭 메뉴, 별도 도구 창(Tool Window) 등을 통해 사내 AI 기능을 주피터 노트북에서 바로 사용할 수 있게 됩니다.

Case 2: API 또는 Python 라이브러리 형태일 경우
이 경우, 주피터 노트북의 코드 셀 안에서 직접 사내 AI를 호출하여 사용하게 됩니다.

사내 AI 라이브러리 설치

사내망에 있는 private PyPI 저장소를 통해 라이브러리를 설치해야 할 수 있습니다.

IT팀의 가이드에 따라 pip install 명령어와 필요한 옵션(--index-url 등)을 사용하여 라이브러리를 설치합니다.

코드 셀에서 호출하여 사용

설치가 완료되면, 일반적인 Python 라이브러리처럼 import하여 사용합니다.

예를 들어, 다음과 같은 형태로 사용하게 될 것입니다. (아래 코드는 예시이며, 실제 사용법은 사내 가이드를 따라야 합니다.)

Python

# 사내 AI 라이브러리 임포트
import company_ai 

# 인증 정보 설정 (필요시)
company_ai.auth(api_key="YOUR_INTERNAL_API_KEY")

# 데이터프레임 생성
import pandas as pd
data = {'col1': [1, 2, 3], 'col2': [4, 5, 6]}
df = pd.DataFrame(data)

# 프롬프트를 통해 AI에게 작업 요청
prompt = "이 데이터프레임(df)의 기본 통계량을 계산하고 설명해줘."
response = company_ai.analyze_dataframe(df, prompt)

# 결과 출력
print(response['summary'])
print(response['code_suggestion'])
이 방식은 Jupyter AI의 %%ai 매직 명령어와 유사하게, 코드 셀 내에서 프롬프트를 통해 AI의 도움을 받는 형태가 됩니다.

가장 먼저 해야 할 일
사내 AI 확장툴 관련 내부 문서(가이드, 위키 등)를 찾아보는 것이 가장 정확하고 빠른 방법입니다. 만약 문서를 찾기 어렵다면 주저하지 말고 사내 IT 지원팀이나 해당 툴을 개발/관리하는 부서에 직접 문의해 보시는 것을 추천합니다. 문의 시 다음과 같이 구체적으로 질문하면 좋습니다.

"안녕하세요, 데이터 사이언스 업무에 JetBrains의 DataSpell(또는 PyCharm)을 사용하고 있습니다. 사내에서 제공하는 AI 확장툴을 주피터 노트북 환경에서 연동하여 사용하고 싶은데, JetBrains IDE용 플러그인으로 제공되나요? 아니라면 Python 라이브러리(SDK) 형태로 호출하여 사용하는 방법 가이드가 있을까요?"