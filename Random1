1. 수정된 AddTaskWindow.xaml.cs - 작업명으로 폴더 생성
SaveButton_Click에서 작업을 추가할 때 작업명으로 폴더를 생성합니다.

csharp
코드 복사
using System.IO;
using System.Windows;
using SwiftAIMaster.Models;

namespace SwiftAIMaster.Views
{
    public partial class AddTaskWindow : Window
    {
        public TaskModel Task { get; private set; }

        // 기본 경로 설정
        private readonly string _baseFolderPath = @"D:\_KwTaskist";

        public AddTaskWindow()
        {
            InitializeComponent();
            Task = new TaskModel();

            // 기본 폴더가 없으면 생성
            if (!Directory.Exists(_baseFolderPath))
            {
                Directory.CreateDirectory(_baseFolderPath);
            }
        }

        private void SaveButton_Click(object sender, RoutedEventArgs e)
        {
            Task.FolderPath = Path.Combine(_baseFolderPath, FolderPathTextBox.Text);

            // 폴더가 존재하지 않으면 생성
            if (!Directory.Exists(Task.FolderPath))
            {
                Directory.CreateDirectory(Task.FolderPath);
            }

            // 색상 값과 기타 속성 설정
            var selectedColor = ColorEditControl.EditValue;
            Task.CellColor = selectedColor != null ? selectedColor.ToString() : "#FFFFFF";
            Task.Assignee = AssigneeTextBox.Text;
            
            DialogResult = true;
            Close();
        }

        private void CancelButton_Click(object sender, RoutedEventArgs e)
        {
            DialogResult = false;
            Close();
        }
    }
}
2. 수정된 MainWindow.xaml - 폴더 열기 버튼 추가
작업 목록 GridControl에 "폴더 열기" 버튼을 추가하여, 클릭 시 탐색기로 해당 폴더를 열도록 설정합니다.

xml
코드 복사
<dxg:GridControl Name="taskGrid" ItemsSource="{Binding TaskManager.Tasks}" AutoGenerateColumns="False">
    <dxg:GridControl.View>
        <dxg:TableView AllowPerPixelScrolling="True" />
    </dxg:GridControl.View>
    <dxg:GridControl.Columns>
        <dxg:GridColumn FieldName="Priority" Header="순위" />
        <dxg:GridColumn FieldName="CreatedTime" Header="생성시간" />
        <dxg:GridColumn FieldName="UpdateCount" Header="수정횟수" />
        <dxg:GridColumn FieldName="LastUpdateTime" Header="수정시간" />
        <dxg:GridColumn FieldName="FolderPath" Header="폴더 경로" />
        <dxg:GridColumn FieldName="CellColor" Header="셀 색상">
            <dxg:GridColumn.CellTemplate>
                <DataTemplate>
                    <Border Background="{Binding CellColor}" />
                </DataTemplate>
            </dxg:GridColumn.CellTemplate>
        </dxg:GridColumn>
        <dxg:GridColumn FieldName="Assignee" Header="담당자" />
        <dxg:GridColumn FieldName="IsCompleted" Header="완료 여부" />
        
        <!-- 폴더 열기 버튼 컬럼 추가 -->
        <dxg:GridColumn Header="폴더 열기">
            <dxg:GridColumn.CellTemplate>
                <DataTemplate>
                    <Button Content="폴더 열기" Command="{Binding DataContext.OpenFolderCommand, RelativeSource={RelativeSource AncestorType=dxg:GridControl}}" CommandParameter="{Binding FolderPath}" />
                </DataTemplate>
            </dxg:GridColumn.CellTemplate>
        </dxg:GridColumn>
    </dxg:GridControl.Columns>
</dxg:GridControl>
3. 수정된 MainWindow.xaml.cs - 폴더 열기 이벤트 핸들러
폴더 열기 버튼을 클릭하면 해당 폴더를 탐색기로 여는 명령을 구현합니다.

csharp
코드 복사
using System.Diagnostics;
using System.Windows;
using System.Windows.Input;
using SwiftAIMaster.ViewModels;

namespace SwiftAIMaster.Views
{
    public partial class MainWindow : Window
    {
        private MainViewModel ViewModel => (MainViewModel)DataContext;

        public MainWindow()
        {
            InitializeComponent();
            DataContext = new MainViewModel();
        }

        // 폴더 열기 명령 설정
        public ICommand OpenFolderCommand => new RelayCommand<string>(OpenFolder);

        // 폴더 열기 함수
        private void OpenFolder(string folderPath)
        {
            if (Directory.Exists(folderPath))
            {
                Process.Start("explorer.exe", folderPath);
            }
            else
            {
                MessageBox.Show("폴더가 존재하지 않습니다.", "오류", MessageBoxButton.OK, MessageBoxImage.Error);
            }
        }
    }
}
설명 요약
AddTaskWindow.xaml.cs: 새 작업 추가 시 해당 작업명으로 폴더를 생성합니다.
MainWindow.xaml: GridControl에 "폴더 열기" 버튼을 추가하여, 각 작업의 폴더를 탐색기로 열 수 있도록 합니다.
MainWindow.xaml.cs: OpenFolder 메서드를 통해 폴더 열기 명령을 구현하며, 존재하지 않는 폴더일 경우 오류 메시지를 표시합니다.
이제 새 작업 추가 시 작업명으로 폴더가 생성되며, 작업 목록에서 "폴더 열기" 버튼을 통해 해당 폴더를 탐색기로 열 수 있습니다. 추가 문의가 있으면 언제