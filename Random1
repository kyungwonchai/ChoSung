해했습니다. 데이터베이스에서 이미지를 로드하여 WPF의 Image 컨트롤에 직접 표시하는 실제 적용 가능한 코드를 제공하겠습니다.
1. 데이터베이스에서 이미지 로드

데이터베이스 연결을 관리하는 ImageLoader 클래스와 이미지를 로드하는 메서드를 아래와 같이 정의합니다. 이 클래스는 IDisposable 인터페이스를 구현하여, 사용이 완료되면 리소스를 안전하게 해제할 수 있도록 합니다.

csharp

using System;
using System.Data.SqlClient;
using System.IO;
using System.Windows.Media.Imaging;

public class ImageLoader : IDisposable
{
    private SqlConnection _connection;
    private bool _disposed = false;

    public ImageLoader(string connectionString)
    {
        _connection = new SqlConnection(connectionString);
        _connection.Open();
    }

    public BitmapImage LoadImageFromDatabase(int imageId)
    {
        byte[] imageData;
        using (SqlCommand command = new SqlCommand("SELECT ImageData FROM Images WHERE ImageID = @ImageID", _connection))
        {
            command.Parameters.AddWithValue("@ImageID", imageId);
            using (SqlDataReader reader = command.ExecuteReader())
            {
                if (reader.Read())
                {
                    imageData = (byte[])reader["ImageData"];
                }
                else
                {
                    throw new Exception("Image not found.");
                }
            }
        }

        BitmapImage image;
        using (MemoryStream memoryStream = new MemoryStream(imageData))
        {
            image = new BitmapImage();
            image.BeginInit();
            image.CacheOption = BitmapCacheOption.OnLoad;
            image.StreamSource = memoryStream;
            image.EndInit();
            image.Freeze();
        }

        return image;
    }

    public void Dispose()
    {
        Dispose(true);
        GC.SuppressFinalize(this);
    }

    protected virtual void Dispose(bool disposing)
    {
        if (!_disposed)
        {
            if (disposing)
            {
                _connection?.Close();
            }
            _disposed = true;
        }
    }

    ~ImageLoader()
    {
        Dispose(false);
    }
}

2. WPF UI에서 이미지 표시

이제 WPF UI에서 ImageLoader 클래스를 사용하여 이미지를 로드하고, Image 컨트롤에 표시하는 방법을 살펴봅시다. 다음은 XAML과 코드 비하인드를 사용하는 예시입니다.

XAML:

xml

<Window x:Class="YourNamespace.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="MainWindow" Height="350" Width="525">
    <Grid>
        <Image Name="DisplayedImage" />
    </Grid>
</Window>

Code-Behind (C#):

csharp

public partial class MainWindow : Window
{
    public MainWindow()
    {
        InitializeComponent();
        LoadImageFromDb();
    }

    private void LoadImageFromDb()
    {
        string connectionString = "YourConnectionStringHere";
        int imageId = 1; // 예시로 사용할 이미지 ID

        using (ImageLoader loader = new ImageLoader(connectionString))
        {
            BitmapImage image = loader.LoadImageFromDatabase(imageId);
            DisplayedImage.Source = image;
        }
    }
}

이 코드는 WPF 애플리케이션의 메인 윈도우에 Image 컨트롤을 배치하고, ImageLoader 클래스를 사용하여 데이터베이스에서 이미지를 로드한 후 해당 이미지를 Image 컨트롤의 Source 속성에 할당합니다.

데이터베이스 연결 문자열(connectionString)과 이미지 ID(imageId)는 실제 사용 환경에 맞게 적절히 설정해야 합니다.