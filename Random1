string connString = "your_connection_string";
string query = "SELECT * FROM your_table";  // 모든 열을 선택합니다.

DataTable dt = new DataTable();

using(SqlConnection conn = new SqlConnection(connString))
{
    conn.Open();
    using(SqlCommand cmd = new SqlCommand(query, conn))
    {
        SqlDataAdapter da = new SqlDataAdapter(cmd);
        da.Fill(dt);
    }
}

// 도넛 차트 생성
ChartControl doughnutChart = new ChartControl();
Series DDSeries1 = new Series("DDSeries1", ViewType.Doughnut);

// '수행횟수'를 전체로 보고, '실패횟수'를 '수행횟수'로 나눈 값을 사용합니다.
double totalCount = Convert.ToDouble(dt.Rows[0]["수행횟수"]);
double failCount = Convert.ToDouble(dt.Rows[0]["실패횟수"]);

DDSeries1.Points.Add(new SeriesPoint("수행횟수", totalCount));
DDSeries1.Points.Add(new SeriesPoint("실패횟수", failCount / totalCount * 100));

doughnutChart.Series.Add(DDSeries1);
this.Controls.Add(doughnutChart);

// 막대 차트와 선 차트 생성
ChartControl barLineChart = new ChartControl();
Series DDSeries2 = new Series("DDSeries2", ViewType.Bar);
Series DDSeries3 = new Series("DDSeries3", ViewType.Line);

// 5열부터의 데이터를 분리하고 변환합니다.
for (int i = 4; i < dt.Columns.Count; i++)
{
    string date = dt.Columns[i].ColumnName;
    string value = dt.Rows[0][i].ToString();

    // 값은 '90(1/9)' 형태이므로, 괄호를 기준으로 분리합니다.
    string successRate = value.Split('(')[0];
    string attempts = value.Split('/')[1].TrimEnd(')');

    DDSeries2.Points.Add(new SeriesPoint(date, attempts));
    DDSeries3.Points.Add(new SeriesPoint(date, successRate));
}

barLineChart.Series.Add(DDSeries2);
barLineChart.Series.Add(DDSeries3);

((XYDiagram)barLineChart.Diagram).SecondaryAxesY.Add(new SecondaryAxisY("성공율"));
((LineSeriesView)DDSeries3.View).AxisY = ((XYDiagram)barLineChart.Diagram).SecondaryAxesY[0];

this.Controls.Add(barLineChart);
