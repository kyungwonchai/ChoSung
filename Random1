re is the updated code that combines all rows into a single chart with a continuous X-axis (timestamps). Both the predicted values and actual values are plotted as continuous lines, with the ±0.1 range for the actual values.

Updated Code: Combined Chart with Shared X-Axis
python
코드 복사
# Load the trained model
try:
    model = joblib.load("best_model.pkl")
    print("Best model loaded successfully.")
except Exception as e:
    print(f"Error loading model: {e}")
    exit()

# Fetch the multi-row data from the database
data = fetch_data_from_db("PRealAandB")  # Fetch PRealAandB multi-row data

# Validate the data
if data.size == 0:
    print("Error: No data fetched from PRealAandB.")
    exit()

# Ensure the data is in the correct format (numpy array)
if not isinstance(data, np.ndarray):
    data = np.array(data)

# Extract columns
timestamps = data[:, 0]  # First column (timestamps)
features = data[:, 2:5]  # Columns 3~5 (features for prediction)
actual_values = data[:, 1]  # Column 2 (actual values)

# Make predictions for all rows
predicted_values = model.predict(features)

# Plot the combined chart
plt.figure(figsize=(12, 6))

# Plot actual values as a continuous green line
plt.plot(timestamps, actual_values, color="green", label="Actual Values", linestyle="-", marker="o")

# Plot predicted values as a continuous blue line
plt.plot(timestamps, predicted_values, color="blue", label="Predicted Values", linestyle="--", marker="o")

# Fill the ±0.1 range around actual values
plt.fill_between(
    timestamps,
    actual_values - 0.1,
    actual_values + 0.1,
    color="green",
    alpha=0.2,
    label="Actual ± 0.1 Range"
)

# Chart settings
plt.title("Prediction vs Actual Values")
plt.xlabel("Time")
plt.ylabel("Value")
plt.xticks(rotation=45)
plt.legend()
plt.grid()

# Show the chart
plt.show()

# Print details for all rows
for i in range(len(data)):
    print(f"Row {i + 1} - Timestamp: {timestamps[i]}")
    print(f"  Predicted Value: {predicted_values[i]:.2f}")
    print(f"  Actual Value: {actual_values[i]:.2f}")
    print(f"  Error: {abs(predicted_values[i] - actual_values[i]):.2f}")
Code Explanation
Data Preparation:

timestamps: X-axis (first column, shared for all rows).
features: Columns 3 to 5 (used as input for prediction).
actual_values: Column 2 (used as the target).
Prediction:

The model predicts the 2nd column values based on the 3rd to 5th column.
Visualization:

Actual Values: Green continuous line with markers.
Predicted Values: Blue dashed line with markers.
Actual ± 0.1 Range: Green shaded area around the actual values.
The X-axis (timestamps) is continuous and shared for all data points.
Console Output:

Each row's timestamp, predicted value, actual value, and prediction error are printed.
Expected Chart
The X-axis displays timestamps (continuous, shared for all rows).
Two lines:
Green Line: Actual values.
Blue Line: Predicted values.