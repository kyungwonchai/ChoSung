#!/usr/bin/env python3
import time
import board
import neopixel
import sys

# --- 네오픽셀 설정 ---
# 3선식 LED는 SPI가 아닌 PWM 핀을 사용합니다.
# 라즈베리파이 5의 기본 PWM 핀 중 하나인 D18 (GPIO 18)을 사용합니다.
PIXEL_PIN = board.D18
NUM_LEDS = 30  # 여기에 가지고 계신 LED의 총 개수를 입력하세요
BRIGHTNESS = 0.2
# ---

# --- 색상 정의 ---
COLOR_OFF = (0, 0, 0)
COLOR_ON = (255, 0, 0)  # '켜짐' 상태의 색상 (빨간색)
# ---

# NeoPixel 객체 초기화
# auto_write=False로 설정하여 show()를 호출할 때만 업데이트합니다.
try:
    pixels = neopixel.NeoPixel(
        PIXEL_PIN, NUM_LEDS, brightness=BRIGHTNESS, auto_write=False, 
        pixel_order=neopixel.GRB # LED 종류에 따라 RGB, GRB, RGBW 등 순서가 다를 수 있음
    )
except RuntimeError as e:
    print(f"오류: NeoPixel을 초기화할 수 없습니다. ({e})")
    print("이 스크립트는 'sudo python3 control_neopixel.py ...'처럼 sudo 권한이 필요할 수 있습니다.")
    sys.exit(1)


def set_pixel(index: int, state: bool):
    """
    지정된 인덱스의 픽셀을 켜거나 끕니다.
    """
    if not 0 <= index < NUM_LEDS:
        print(f"오류: LED 인덱스 {index}가 범위를 벗어났습니다 (0 ~ {NUM_LEDS - 1}).")
        return False

    if state:
        pixels[index] = COLOR_ON
    else:
        pixels[index] = COLOR_OFF

    # 변경 사항을 LED 스트립에 즉시 반영
    try:
        pixels.show()
        return True
    except Exception as e:
        print(f"오류: LED에 데이터를 쓰는 데 실패했습니다. ({e})")
        return False


def all_off():
    """모든 LED를 끕니다."""
    pixels.fill(COLOR_OFF)
    pixels.show()


# --- 메인 실행 ---
if __name__ == "__main__":
    if len(sys.argv) != 3:
        print(f"사용법: [sudo] python3 {sys.argv[0]} <LED_인덱스> <on|off>")
        print(f"예시 (0번째 켜기): sudo python3 {sys.argv[0]} 0 on")
        sys.exit(1)

    try:
        index = int(sys.argv[1])
        state_str = sys.argv[2].lower()
        state_bool = state_str in ['on', 'true', '1', '켜기']

        print(f"실행: NeoPixel {index}번을 {'ON' if state_bool else 'OFF'} 상태로 설정합니다...")
        if set_pixel(index, state_bool):
            print("성공.")
        else:
            print("실패.")

    except ValueError:
        print(f"오류: LED 인덱스는 숫자여야 합니다: {sys.argv[1]}")
        sys.exit(1)
    except KeyboardInterrupt:
        print("\n사용자에 의해 중단됨. 모든 LED를 끕니다.")
        all_off()
    except Exception as e:
        print(f"예상치 못한 오류 발생: {e}")