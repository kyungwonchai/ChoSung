using System;
using System.Net.Http;
using System.Text;
using System.Threading.Tasks;

namespace MailSenderExample
{
    public static class MailSender
    {
        private static readonly HttpClient client = new HttpClient();
        private static readonly string apiUrl = "http://oo/stt/ssc.net/mail/api/v2.0";

        public static async Task<string> SendMail(string userId, string subject, string contents, string senderEmailAddress, string recipientEmailAddress)
        {
            var requestData = new
            {
                body = new
                {
                    subject,
                    contents,
                    sender = new
                    {
                        emailAddress = senderEmailAddress,
                        recipientType = "TO"
                    },
                    recipients = new[]
                    {
                        new
                        {
                            emailAddress = recipientEmailAddress,
                            recipientType = "TO"
                        }
                    }
                }
            };

            var jsonPayload = Newtonsoft.Json.JsonConvert.SerializeObject(requestData);

            var requestUrl = $"{apiUrl}/mails/send?userid={userId}";

            var content = new StringContent(jsonPayload, Encoding.UTF8, "application/json");
            var response = await client.PostAsync(requestUrl, content);

            if (response.IsSuccessStatusCode)
            {
                var responseContent = await response.Content.ReadAsStringAsync();
                var result = Newtonsoft.Json.JsonConvert.DeserializeObject<dynamic>(responseContent);
                string mailId = result.mailid;

                Console.WriteLine("메일이 성공적으로 발송되었습니다.");
                Console.WriteLine($"메일 ID: {mailId}");

                return mailId;
            }
            else
            {
                Console.WriteLine("메일 발송에 실패하였습니다.");
                return null;
            }
        }

        public static async Task<bool> CancelMail(string userId, string mailId)
        {
            var requestUrl = $"{apiUrl}/mails/{mailId}/cancel?userid={userId}";

            var response = await client.PostAsync(requestUrl, null);

            if (response.IsSuccessStatusCode)
            {
                Console.WriteLine("메일 발신 취소가 성공적으로 처리되었습니다.");
                return true;
            }
            else
            {
                Console.WriteLine("메일 발신 취소에 실패하였습니다.");
                return false;
            }
        }
    }

    public partial class MainForm : Form
    {
        private string mailId;

        public MainForm()
        {
            InitializeComponent();
        }

        private async void btnSendMail_Click(object sender, EventArgs e)
        {
            string userId = "k아이디";
            string subject = "메일 제목";
            string contents = "메일 본문";
            string senderEmailAddress = "sgsg@abc.com";
            string recipientEmailAddress = "knoxposgg@abc.com";

            mailId = await MailSender.SendMail(userId, subject, contents, senderEmailAddress, recipientEmailAddress);
        }

        private async void btnCancelMail_Click(object sender, EventArgs e)
        {
            if (!string.IsNullOrEmpty(mailId))
            {
                string userId = "k아이디";
                bool cancellationResult = await MailSender.CancelMail(userId, mailId);
                
                if (cancellationResult)
                {
                   
