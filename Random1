, 지적하신 부분이 맞습니다. 제가 실수로 버튼과 콤보박스를 비교하는 코드를 작성했습니다. 올바른 접근 방식은 버튼의 Tag 속성에 각 콤보박스를 미리 연결해 두고, 버튼 클릭 시 이 Tag 속성을 이용해 적절한 콤보박스와 연결된 포트를 처리하는 것입니다.

아래는 수정된 코드입니다.

1. XAML (MainWindow.xaml)
각 버튼에 콤보박스를 Tag 속성으로 설정합니다:

xml
코드 복사
<Window x:Class="ComPortScanner.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="COM Port Scanner" Height="500" Width="700">
    <Grid>
        <TextBlock Text="스캐너 포트:" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,10,0,0"/>
        <ComboBox Name="ScannerPortComboBox" HorizontalAlignment="Left" VerticalAlignment="Top" Width="200" Margin="100,10,0,0" SelectionChanged="ScannerPortComboBox_SelectionChanged"/>
        <Button Content="X" HorizontalAlignment="Left" VerticalAlignment="Top" Width="25" Margin="310,10,0,0" Click="ClearScannerPortSelection_Click" Tag="{Binding ElementName=ScannerPortComboBox}"/>

        <TextBlock Text="보낼 포트 1:" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,50,0,0"/>
        <ComboBox Name="TargetPortComboBox1" HorizontalAlignment="Left" VerticalAlignment="Top" Width="200" Margin="100,50,0,0" SelectionChanged="TargetPortComboBox_SelectionChanged"/>
        <Button Content="X" HorizontalAlignment="Left" VerticalAlignment="Top" Width="25" Margin="310,50,0,0" Click="ClearTargetPortSelection_Click" Tag="{Binding ElementName=TargetPortComboBox1}"/>

        <TextBlock Text="보낼 포트 2:" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,90,0,0"/>
        <ComboBox Name="TargetPortComboBox2" HorizontalAlignment="Left" VerticalAlignment="Top" Width="200" Margin="100,90,0,0" SelectionChanged="TargetPortComboBox_SelectionChanged"/>
        <Button Content="X" HorizontalAlignment="Left" VerticalAlignment="Top" Width="25" Margin="310,90,0,0" Click="ClearTargetPortSelection_Click" Tag="{Binding ElementName=TargetPortComboBox2}"/>

        <TextBlock Text="보낼 포트 3:" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,130,0,0"/>
        <ComboBox Name="TargetPortComboBox3" HorizontalAlignment="Left" VerticalAlignment="Top" Width="200" Margin="100,130,0,0" SelectionChanged="TargetPortComboBox_SelectionChanged"/>
        <Button Content="X" HorizontalAlignment="Left" VerticalAlignment="Top" Width="25" Margin="310,130,0,0" Click="ClearTargetPortSelection_Click" Tag="{Binding ElementName=TargetPortComboBox3}"/>

        <TextBlock Text="보낼 포트 4:" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,170,0,0"/>
        <ComboBox Name="TargetPortComboBox4" HorizontalAlignment="Left" VerticalAlignment="Top" Width="200" Margin="100,170,0,0" SelectionChanged="TargetPortComboBox_SelectionChanged"/>
        <Button Content="X" HorizontalAlignment="Left" VerticalAlignment="Top" Width="25" Margin="310,170,0,0" Click="ClearTargetPortSelection_Click" Tag="{Binding ElementName=TargetPortComboBox4}"/>

        <TextBlock Text="보낼 포트 5:" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,210,0,0"/>
        <ComboBox Name="TargetPortComboBox5" HorizontalAlignment="Left" VerticalAlignment="Top" Width="200" Margin="100,210,0,0" SelectionChanged="TargetPortComboBox_SelectionChanged"/>
        <Button Content="X" HorizontalAlignment="Left" VerticalAlignment="Top" Width="25" Margin="310,210,0,0" Click="ClearTargetPortSelection_Click" Tag="{Binding ElementName=TargetPortComboBox5}"/>

        <Button Content="Refresh Ports" HorizontalAlignment="Left" VerticalAlignment="Top" Width="100" Margin="350,10,0,0" Click="RefreshPorts_Click"/>

        <TextBox Name="DataTextBox" HorizontalAlignment="Left" VerticalAlignment="Top" Width="420" Height="50" Margin="10,250,0,0"/>
        <Button Content="Send Data" HorizontalAlignment="Left" VerticalAlignment="Top" Width="100" Margin="440,250,0,0" Click="SendData_Click"/>
        <TextBlock Name="StatusTextBlock" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,310,0,0" Width="500" Height="30" Text="Status: Not Connected"/>

        <!-- 로그 표시용 ListBox -->
        <ListBox Name="LogListBox" HorizontalAlignment="Left" VerticalAlignment="Top" Width="560" Height="150" Margin="10,350,0,0"/>
    </Grid>
</Window>
2. C# (MainWindow.xaml.cs)
ClearTargetPortSelection_Click 메서드를 수정하여 Tag 속성으로 연결된 콤보박스를 참조하도록 합니다:

csharp
코드 복사
private void ClearScannerPortSelection_Click(object sender, RoutedEventArgs e)
{
    // 스캐너 포트 선택 취소
    ComboBox comboBox = (ComboBox)((Button)sender).Tag;
    comboBox.SelectedItem = null;
    ClosePort(ref _scannerPort, comboBox);
}

private void ClearTargetPortSelection_Click(object sender, RoutedEventArgs e)
{
    // 보낼 포트 선택 취소
    ComboBox comboBox = (ComboBox)((Button)sender).Tag;
    int index = GetTargetPortComboBoxIndex(comboBox);

    if (index >= 0)
    {
        comboBox.SelectedItem = null;
        ClosePort(ref _targetPorts[index], comboBox);
    }
}
3. 코드 설명
Tag 속성 사용: 각 버튼의 Tag 속성에 해당하는 ComboBox를 바인딩하여 버튼 클릭 시 관련된 ComboBox를 참조하도록 합니다.
ClearScannerPortSelection_Click 메서드: 스캐너 포트 콤보박스 선택을 취소하고, 연결된 포트를 닫습니다.
ClearTargetPortSelection_Click 메서드: 보낼 포트 콤보박스 선택을 취소하고, 연결된 포트를 닫습니다.
사용 방법
포트 선택 및 연결: 각 콤보박스를 사용해 포트를 선택하고, 선택된 포트가 정상적으로 열렸는지 확인합니다.
포트 선택 취소: 각 콤보박스 옆에 있는 "X" 버튼을 클릭하여 선택된 포트를 취소하고, 포트를 닫습니다.
데이터 전송: DataTextBox에 데이터를 입력하고 "Send Data" 버튼을 클릭하면 선택된 포트로 데이터가 전송됩니다.
이제 선택된 포트를 올바르게 취소하고 포트를 닫을 수 있습니다. 추가적인 질