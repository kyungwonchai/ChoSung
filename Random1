public async Task<bool> TestPlcConnectionAsync()
{
    try
    {
        // 실제 PLC 테스트 요청을 보내는 비동기 작업
        var plcTask = SendPlcTestSignalAsync();

        // 타임아웃 설정 (2초)
        var timeoutTask = Task.Delay(2000);

        // plcTask와 timeoutTask 중 먼저 완료되는 작업을 기다립니다.
        var completedTask = await Task.WhenAny(plcTask, timeoutTask);

        if (completedTask == plcTask)
        {
            // PLC 응답이 먼저 도착한 경우
            return await plcTask;
        }
        else
        {
            // 타임아웃이 먼저 발생한 경우
            return false;
        }
    }
    catch (Exception)
    {
        // 예외 발생 시 false 반환
        return false;
    }
}

// 실제 PLC 테스트 신호를 보내는 비동기 메서드 (예시)
private async Task<bool> SendPlcTestSignalAsync()
{
    // PLC와 통신하는 로직을 여기에 구현합니다.
    // 예시로 1초 대기 후 true 반환
    await Task.Delay(1000); 
    return true;
}
