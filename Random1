using System;
using System.Diagnostics;
using System.Drawing;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace CaptureWithBitBlt
{
    public partial class Form2 : Form
    {
        [DllImport("user32.dll")]
        public static extern bool GetWindowRect(IntPtr hWnd, out RECT lpRect);

        [DllImport("user32.dll")]
        public static extern bool EnumWindows(EnumWindowsProc enumProc, IntPtr lParam);

        [DllImport("user32.dll")]
        public static extern uint GetWindowThreadProcessId(IntPtr hWnd, out uint processId);

        [DllImport("user32.dll", SetLastError = true)]
        public static extern IntPtr FindWindowEx(IntPtr hwndParent, IntPtr hwndChildAfter, string lpszClass, IntPtr szTitle);

        [DllImport("gdi32.dll")]
        public static extern bool BitBlt(IntPtr hdcDest, int xDest, int yDest, int wDest, int hDest, IntPtr hdcSrc, int xSrc, int ySrc, CopyPixelOperation rop);

        public delegate bool EnumWindowsProc(IntPtr hWnd, IntPtr lParam);

        public struct RECT
        {
            public int Left;
            public int Top;
            public int Right;
            public int Bottom;
        }

        private IntPtr targetHWnd;

        public Form2()
        {
            InitializeComponent();
            FindTargetWindowHandle("notepad", "Notepad");
        }

        private void FindTargetWindowHandle(string targetProcessName, string targetClassName)
        {
            EnumWindows((hWnd, lParam) =>
            {
                uint processId;
                GetWindowThreadProcessId(hWnd, out processId);

                if (Process.GetProcessById((int)processId).ProcessName == targetProcessName)
                {
                    IntPtr childHWnd = FindWindowEx(hWnd, IntPtr.Zero, targetClassName, IntPtr.Zero);
                    if (childHWnd != IntPtr.Zero)
                    {
                        targetHWnd = childHWnd;
                        return false;
                    }
                }
                return true;
            }, IntPtr.Zero);
        }

        private void Button1_Click(object sender, EventArgs e)
        {
            RECT rect;
            GetWindowRect(targetHWnd, out rect);

            int width = rect.Right - rect.Left;
            int height = rect.Bottom - rect.Top;

            Bitmap bmp = new Bitmap(width, height);
            Graphics graphics = Graphics.FromImage(bmp);
            IntPtr hdcBitmap = graphics.GetHdc();
            IntPtr hdcWindow = GetDC(targetHWnd);

            BitBlt(hdcBitmap, 0, 0, width, height, hdcWindow, 0, 0, CopyPixelOperation.SourceCopy);
            graphics.ReleaseHdc(hdcBitmap);

            bmp.Save("capture.png");
        }
    }
}
