// RibbonControl의 컨텍스트 메뉴를 열 때 발생하는 이벤트 핸들러
private void ribbonControl_ShowCustomizationMenu(object sender, DevExpress.XtraBars.Ribbon.RibbonCustomizationMenuEventArgs e)
{
    // 링크가 null이면 리턴 (아무 작업도 하지 않음)
    if (e.Link == null) return;

    // 디버깅용으로 클릭된 메뉴 항목의 Caption을 보여줌
    MessageBox.Show(e.Link.Caption);

    // "빠른 액세스 도구 모음에 추가" 명령을 숨김
    BarItemLink linkAddToQat = e.CustomizationMenu.ItemLinks
        .Where(link => link.Caption == BarLocalizer.Active.GetLocalizedString(BarString.RibbonToolbarAdd))
        .FirstOrDefault();
    if (linkAddToQat != null)
    {
        linkAddToQat.Visible = false;
    }

    // "MyMenu에 추가" 명령이 이미 추가되었는지 확인
    BarItemLink menuAddToMyMenuCommand = e.CustomizationMenu.ItemLinks
        .Where(link => link.Caption == "MyMenu에 추가").FirstOrDefault();

    // "MyMenu에 추가" 명령이 없으면 추가
    if (menuAddToMyMenuCommand == null)
    {
        menuAddToMyMenuCommand = e.CustomizationMenu.AddItem(GetAddToMyMenuCommand());
        // 그룹을 시작하는 분리선을 추가
        menuAddToMyMenuCommand.BeginGroup = true;
    }
}

// "MyMenu에 추가" 명령을 가져오는 메서드
BarItem biAddToMyMenu;

// "MyMenu에 추가" 명령 정의하고 가져옴
BarItem GetAddToMyMenuCommand()
{
    // 이미 "MyMenu에 추가" 명령이 생성되어 있다면 그대로 반환
    if (biAddToMyMenu != null)
        return biAddToMyMenu;

    // 새 BarButtonItem("MyMenu에 추가") 생성
    biAddToMyMenu = new BarButtonItem();
    biAddToMyMenu.Caption = "MyMenu에 추가"; // 버튼의 제목 설정

    // "MyMenu에 추가" 명령이 클릭되었을 때 실행될 이벤트 핸들러 지정
    biAddToMyMenu.ItemClick += new ItemClickEventHandler(biAddToMyMenu_ItemClick);

    // 리본 컨트롤에 "MyMenu에 추가" 명령 추가
    ribbonControl1.Items.Add(biAddToMyMenu);

    // "MyMenu에 추가" 명령 반환
    return biAddToMyMenu;
}

// "MyMenu에 추가" 명령이 클릭되었을 때 호출되는 이벤트 핸들러
void biAddToMyMenu_ItemClick(object sender, ItemClickEventArgs e)
{
    // 클릭된 항목을 BarButtonItem으로 변환
    BarButtonItem clickedItem = e.Item as BarButtonItem;

    // 클릭된 항목이 null이 아닌 경우에만 처리
    if (clickedItem != null)
    {
        // 클릭된 항목을 MyMenuGroup에 추가
        BarButtonItem newMenuItem = new BarButtonItem(ribbonControl1.Manager, clickedItem.Caption);
        newMenuItem.ItemClick += MyMenuItem_ItemClick;

        // "MyMenuGroup"에 새 명령 추가
        myMenuGroup.ItemLinks.Add(newMenuItem);

        // 사용자 정의 메뉴 항목을 저장하는 메서드 호출
        SaveMyMenuItems();
    }
}

// MyMenu 항목 클릭 처리 이벤트 핸들러
void MyMenuItem_ItemClick(object sender, ItemClickEventArgs e)
{
    BarButtonItem clickedItem = e.Item as BarButtonItem;
    if (clickedItem != null)
    {
        MessageBox.Show($"'{clickedItem.Caption}' 명령이 클릭되었습니다!", "MyMenu 항목");
    }
}

// MyMenu 항목 저장
private void SaveMyMenuItems()
{
    List<string> menuItems = new List<string>();
    foreach (BarItemLink item in myMenuGroup.ItemLinks)
    {
        menuItems.Add(item.Caption);
    }

    string json = JsonConvert.SerializeObject(menuItems);
    File.WriteAllText("MyMenuState.json", json);
}

// MyMenu 항목 불러오기
private void LoadMyMenuItems()
{
    if (File.Exists("MyMenuState.json"))
    {
        string json = File.ReadAllText("MyMenuState.json");
        List<string> menuItems = JsonConvert.DeserializeObject<List<string>>(json);

        foreach (string caption in menuItems)
        {
            BarButtonItem newMenuItem = new BarButtonItem(ribbonControl1.Manager, caption);
            newMenuItem.ItemClick += MyMenuItem_ItemClick;
            myMenuGroup.ItemLinks.Add(newMenuItem);
        }
    }
}

// 폼 로드 시 MyMenu 항목 불러오기
private void MainForm_Load(object sender, EventArgs e)
{
    LoadMyMenuItems();
}
