죄송합니다. 정확히 요구하신 내용은 [ ]와 ; 사이에 문자열이 있을 수도 있고 없을 수도 있다는 것입니다. 이 경우 정규식은 다음과 같이 작성할 수 있습니다:

csharp
코드 복사
string pattern = @"\[ {4}\](.*?)?;";
설명:

\[ {4}\]: 대괄호 안에 공백 4칸이 있는 [ ] 부분을 고정적으로 매칭합니다.
(.*?)?: [ ]와 ; 사이에 문자열이 있을 수도 있고 없을 수도 있는 부분을 비탐욕적으로 매칭합니다. ?는 이 부분이 생략될 수 있음을 의미합니다.
;: 마지막에 세미콜론을 매칭합니다.
예시 코드:
csharp
코드 복사
using System;
using System.Text.RegularExpressions;

class Program
{
    static void Main()
    {
        string input1 = "[    ] abcdef;";   // 매칭됨
        string input2 = "[    ] ;";         // 매칭됨
        string input3 = "[    ];";          // 매칭됨
        string input4 = "[    ]abc;";       // 매칭됨
        string input5 = "[    ]; extra";    // 매칭 안 됨 (세미콜론 뒤에 내용이 있어서)

        string pattern = @"\[ {4}\](.*?)?;";

        Console.WriteLine(Regex.IsMatch(input1, pattern)); // true
        Console.WriteLine(Regex.IsMatch(input2, pattern)); // true
        Console.WriteLine(Regex.IsMatch(input3, pattern)); // true
        Console.WriteLine(Regex.IsMatch(input4, pattern)); // true
        Console.WriteLine(Regex.IsMatch(input5, pattern)); // false
    }