저장소가 250개가 넘으신다니 정말 대단하시네요! 그 많은 활동을 시각적으로 잘 보여주는 대시보드는 최고의 포트폴리오가 될 수 있습니다. 깃허브 프로필 대시보드를 꾸미기 위한 차트 아이디어와 노하우를 정리해 드릴게요.

📈 차트로 표시할 만한 아이디어
250개가 넘는 저장소의 데이터를 의미 있게 보여줄 수 있는 몇 가지 인기 있는 차트 아이디어입니다. 대부분 간단한 마크다운 코드 추가로 구현할 수 있습니다.

GitHub 종합 통계 (GitHub Stats Card)

총 받은 스타(⭐) 수, 총 커밋 수, Pull Request 수, 이슈 수 등을 종합적으로 보여주는 카드입니다. 한눈에 기여도를 파악하기 좋습니다.

언어 사용 비율 (Top Languages Card)

모든 public 저장소를 분석하여 가장 많이 사용한 프로그래밍 언어의 비율을 파이 차트 형태로 보여줍니다. 어떤 분야의 개발자인지 직관적으로 어필할 수 있습니다.

WakaTime 연동 코딩 통계 (WakaTime Stats)

WakaTime과 연동하면 지난주 또는 월간 실제 코딩 시간을 언어별로 분석하여 보여줄 수 있어 활동의 깊이를 더해줍니다.

활동 그래프 (Contribution Graph)

기본으로 제공되는 잔디 그래프 외에, github-readme-activity-graph 같은 도구를 사용하면 더 다채로운 테마와 형태로 활동 내역을 시각화할 수 있습니다.

깃허브 트로피 (GitHub Profile Trophy)

A+ 등급, 많은 스타를 받은 저장소, 팔로워 수 등 다양한 활동 기준에 따라 재미있는 트로피를 수여하여 프로필을 더 매력적으로 만들어 줍니다.

🤔 HTML을 넣으면 정적 페이지인가요?
네, 맞습니다. 깃허브 프로필의 README 파일(README.md)은 기본적으로 마크다운(Markdown) 파일이며, 일부 간단한 HTML 태그(<img>, <a>, <table> 등)를 사용할 수 있지만 스크립트 실행 같은 동적인 기능은 보안상 차단됩니다.

따라서 직접 HTML과 CSS로 차트를 그려 넣으면, 그 정보는 코드를 수정하기 전까지 절대 바뀌지 않는 정적인(Static) 정보가 됩니다.

그렇다면 위에 소개한 차트들은 어떻게 실시간으로 정보가 업데이트될까요?

비밀은 바로 '동적으로 생성되는 이미지(SVG)'에 있습니다.

github-readme-stats와 같은 서비스들은 API를 통해 주기적으로 내 깃허브 데이터를 가져옵니다.

가져온 데이터를 바탕으로 실시간으로 통계가 반영된 이미지 파일(대부분 SVG 형식)을 생성합니다.

우리는 README 파일에 이 이미지를 보여주는 마크다운 코드 ![stats](이미지_URL) 한 줄만 넣으면 됩니다.

프로필에 접속할 때마다 해당 URL의 이미지를 새로 불러오기 때문에, 우리는 동적인 차트를 보는 것처럼 느끼게 되는 원리입니다.

💡 깃허브 대시보드 꾸미기 노하우
프로필용 저장소(Repository) 만들기

가장 먼저, 본인의 깃허브 아이디와 정확히 동일한 이름으로 Public 저장소를 만들어야 합니다.

해당 저장소에 README.md 파일을 만들면 그 내용이 프로필 메인 화면에 나타납니다.

레이아웃은 테이블(Table)로 깔끔하게

여러 개의 차트나 정보를 나란히 배치하고 싶을 때 마크다운 테이블이나 HTML <table> 태그를 사용하면 좋습니다. <div align="center"> 태그로 가운데 정렬을 하면 더 보기 좋습니다.

Markdown

<div align="center">
  <img src="URL_A" width="400"/>
  <img src="URL_B" width="400"/>
</div>
GitHub Actions로 나만의 자동화 만들기

단순히 통계를 보여주는 것을 넘어, 더 강력한 동적 기능을 원한다면 GitHub Actions를 활용해 보세요.

예를 들어, 매일 특정 시간에 내가 운영하는 블로그의 최신 글 목록을 자동으로 가져와 README 파일에 업데이트하는 '워크플로우(Workflow)'를 만들 수 있습니다.

추천 도구 및 서비스

github-readme-stats: 가장 기본적이고 인기 있는 통계 카드 생성 도구입니다.

shields.io: 특정 기술 스택, 라이선스, 빌드 상태 등을 예쁜 배지(Badge) 형태로 만들어 줍니다.

awesome-github-profile-readme: 전 세계 개발자들이 만든 멋지고 창의적인 프로필 예시를 모아둔 곳입니다. 여기서 좋은 영감을 얻을 수 있습니다.

일관성과 간결함 유지

(사용자 맞춤 조언) 전체 인프라부터 세부적인 부분까지 변수명의 연결성을 중요하게 생각하시는 만큼, 프로필에 표시되는 프로젝트명, 기술 스택 용어 등의 표현을 일관되게 유지하면 전문성을 더 어필할 수 있습니다.

너무 많은 정보를 한 번에 보여주기보다는, 자신을 가장 잘 나타내는 핵심적인 정보 위주로 간결하게 구성하는 것이 더 효과적입니다.