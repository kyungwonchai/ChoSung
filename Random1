을 가져와서 GridControl에 표시하는 메서드와 특정 문자열을 포함한 목록을 검색하여 표시하는 메서드를 만듭니다.

    전체 목록 조회 및 표시

csharp

using DevExpress.XtraGrid.Views.Grid;

private void LoadData()
{
    using (SqlConnection conn = new SqlConnection("데이터베이스 연결 문자열"))
    {
        conn.Open();
        SqlDataAdapter da = new SqlDataAdapter("SELECT ID, Title FROM Table_spdMemo", conn);
        DataTable dt = new DataTable();
        da.Fill(dt);
        gridControl1.DataSource = dt;
    }
}

    제목이나 내용에 문자열이 포함된 목록 검색

csharp

private void SearchData(string searchString)
{
    using (SqlConnection conn = new SqlConnection("데이터베이스 연결 문자열"))
    {
        conn.Open();
        SqlDataAdapter da = new SqlDataAdapter("SELECT ID, Title FROM Table_spdMemo WHERE Title LIKE @search OR TextVal LIKE @search", conn);
        da.SelectCommand.Parameters.AddWithValue("@search", $"%{searchString}%");
        DataTable dt = new DataTable();
        da.Fill(dt);
        gridControl1.DataSource = dt;
    }
}

    목록 클릭 시 TextBox1에 내용 표시

csharp

private void gridView1_RowClick(object sender, RowClickEventArgs e)
{
    int id = Convert.ToInt32(gridView1.GetRowCellValue(gridView1.FocusedRowHandle, "ID"));
    using (SqlConnection conn = new SqlConnection("데이터베이스 연결 문자열"))
    {
        conn.Open();
        using (SqlCommand cmd = new SqlCommand("SELECT TextVal FROM Table_spdMemo WHERE ID = @ID", conn))
        {
            cmd.Parameters.AddWithValue("@ID", id);
            string textVal = cmd.ExecuteScalar().ToString();
            textBox1.Text = textVal;
        }
    }
}

    SearchControl의 이벤트 처리

csharp

private void searchControl1_EditValueChanged(object sender, EventArgs e)
{
    if (string.IsNullOrEmpty(searchControl1.Text))
    {
        LoadData(); // 검색어가 없을 경우 전체 목록 로드
    }
    else
    {
        SearchData(searchControl1.Text); // 검색어가 있을 경우 해당 문자열 검색
    }
}

위의 코드들은 GridControl에 제목으로 목록을 표시하고, SearchControl을 통해 검색한 결과를 표시하며, 선택한 목록의 내용을 TextBox에 표시하는 기능을 담당합니다.

필요에 따라 메서드 호출과 이벤트 연결을 적절히 진행해 주세