래는 WPF 애플리케이션에서 하나의 클래스에서 생성한 COM 포트를 다른 클래스에서도 사용할 수 있도록 설계한 예시입니다. 이 예시는 COM 포트 통신을 처리하는 ComPortManager 클래스가 하나의 포트를 열고, 다른 클래스가 해당 포트를 통해 데이터를 전송하는 구조입니다.

1. ComPortManager 클래스
이 클래스는 COM 포트를 생성 및 관리합니다. 포트를 열고 닫으며, 데이터를 전송하는 기능을 제공합니다.

csharp
코드 복사
using System.IO.Ports;

public class ComPortManager
{
    private SerialPort _serialPort;

    public ComPortManager(string portName, int baudRate)
    {
        _serialPort = new SerialPort(portName, baudRate);
        _serialPort.Open();
    }

    // 데이터를 전송하는 메서드
    public void SendData(string data)
    {
        if (_serialPort != null && _serialPort.IsOpen)
        {
            _serialPort.WriteLine(data);
        }
    }

    // 포트를 닫는 메서드
    public void ClosePort()
    {
        if (_serialPort != null && _serialPort.IsOpen)
        {
            _serialPort.Close();
        }
    }
}
2. 다른 클래스에서 COM 포트를 통해 데이터 전송
ComPortManager 클래스에서 생성한 COM 포트 인스턴스를 다른 클래스에서 사용할 수 있도록 의존성 주입을 통해 관리합니다. 이 경우, ComPortManager의 인스턴스를 생성한 후, 다른 클래스에 전달합니다.

csharp
코드 복사
public class DataSender
{
    private ComPortManager _comPortManager;

    // 생성자를 통해 ComPortManager를 주입 받음
    public DataSender(ComPortManager comPortManager)
    {
        _comPortManager = comPortManager;
    }

    // 데이터를 전송하는 메서드
    public void SendDataToPort(string data)
    {
        _comPortManager.SendData(data);
    }
}
3. MainWindow에서의 사용
ComPortManager를 MainWindow에서 생성하고, DataSender에 전달하여 데이터를 전송할 수 있도록 합니다.

csharp
코드 복사
public partial class MainWindow : Window
{
    private ComPortManager _comPortManager;
    private DataSender _dataSender;

    public MainWindow()
    {
        InitializeComponent();
        
        // COM 포트 생성 (예: COM3, BaudRate: 9600)
        _comPortManager = new ComPortManager("COM3", 9600);
        
        // DataSender에 ComPortManager 주입
        _dataSender = new DataSender(_comPortManager);

        // 데이터를 포트를 통해 전송
        _dataSender.SendDataToPort("Hello, COM Port!");
    }

    // 윈도우가 닫힐 때 포트를 닫음
    protected override void OnClosed(EventArgs e)
    {
        _comPortManager.ClosePort();
        base.OnClosed(e);
    }
}
요약:
ComPortManager는 COM 포트를 열고 데이터를 전송하는 책임을 맡습니다.
DataSender 클래스는 ComPortManager의 인스턴스를 받아서 데이터를 전송하는 역할을 합니다.
MainWindow에서 ComPortManager를 생성하고, DataSender에 주입하여 포트에 데이터를 전송합니다.
이 구조는 의존성 주입을 통해 포트를 중앙에서 관리하면서, 다른 클래스들이 같은 포트를 사용해 데이터를 전송할 수 있도록 설계되었습니다.







