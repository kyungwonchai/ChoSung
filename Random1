송합니다. 이전에 제공한 정보로 문제가 해결되지 않아 불편을 드렸습니다. Streamlit에서 st.dataframe()을 사용할 때, 기본적으로 높이가 제한되어 있어 데이터 행이 많을 경우 스크롤이 발생합니다. 이를 해결하기 위해 다음과 같은 방법을 시도해 보시기 바랍니다:

height 매개변수 조정: st.dataframe() 함수의 height 매개변수를 사용하여 데이터프레임의 높이를 조정할 수 있습니다. 예를 들어, 높이를 800픽셀로 설정하려면 다음과 같이 코드를 작성합니다:

python
코드 복사
st.dataframe(df, height=800)
이 방법은 데이터프레임의 높이를 수동으로 설정하여 스크롤 없이 모든 데이터를 표시할 수 있도록 합니다.

st.table() 사용 고려: 만약 데이터가 비교적 작고, 인터랙티브한 기능이 필요하지 않다면, st.table()을 사용하는 것도 한 방법입니다. st.table()은 데이터프레임을 정적인 테이블로 표시하며, 모든 데이터를 한 번에 보여줍니다. 그러나 이 방법은 정렬이나 검색과 같은 인터랙티브한 기능을 제공하지 않습니다.

CSS를 활용한 커스텀 스타일 적용: Streamlit은 기본적으로 사용자 정의 CSS를 직접 지원하지 않지만, st.markdown()과 함께 unsafe_allow_html=True 옵션을 사용하여 커스텀 CSS를 적용할 수 있습니다. 이를 통해 데이터프레임의 컨테이너 높이를 조정할 수 있습니다. 예를 들어:

python
코드 복사
st.markdown(
    """
    <style>
    .dataframe-container {
        height: 90vh !important;
        overflow: auto;
    }
    </style>
    """,
    unsafe_allow_html=True
)

st.markdown('<div class="dataframe-container">', unsafe_allow_html=True)
st.dataframe(df)
st.markdown('</div>', unsafe_allow_html=True)
이 방법은 데이터프레임을 감싸는 컨테이너의 높이를 화면 높이의 90%로 설정하고, 필요 시 스크롤이 가능하도록 합니다.

st.data_editor() 활용: Streamlit의 st.data_editor()는 데이터프레임을 편집 가능한 형태로 표시하며, 기본적으로 높이를 자동으로 조정하여 모든 데이터를 표시합니다. 만약 데이터 편집 기능이 필요하다면 이 옵션을 고려해 볼 수 있습니다.