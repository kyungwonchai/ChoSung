로 프로젝트를 시작하면서 여러 요구 사항을 충족해야 하네요. 특히 로그 파일을 읽어서 정보를 MS SQL 2014에 저장하는 것과 조건에 따라 카메라의 캡처 이미지를 데이터베이스에 저장하는 작업이 필요합니다.
데이터베이스 테이블 생성 스크립트

MS SQL 2014에서 사용할 테이블을 생성하기 위한 스크립트는 다음과 같습니다.

sql

CREATE TABLE VisionLog (
    ID INT PRIMARY KEY IDENTITY(1, 1),
    DateTime1 DATETIME,
    SerialNo BIGINT,
    CameraNo INT,
    PosX FLOAT,
    PosY FLOAT,
    Score INT
);

C# 코드

C#에서 파일을 감시하고, 데이터를 처리하여 데이터베이스에 저장하는 예제 코드입니다.

csharp

using System;
using System.Data.SqlClient;
using System.IO;

class Program
{
    static string connectionString = "Your Connection String Here";

    static void Main()
    {
        FileSystemWatcher watcher = new FileSystemWatcher();
        watcher.Path = @"C:\SmartSP\Log";
        watcher.Filter = "VisionLog.log";
        watcher.Changed += new FileSystemEventHandler(OnChanged);

        watcher.EnableRaisingEvents = true;

        Console.WriteLine("Press \'q\' to quit the sample.");
        while (Console.Read() != 'q') ;
    }

    private static void OnChanged(object source, FileSystemEventArgs e)
    {
        // Read the last line of the log
        string lastLine = File.ReadLines(e.FullPath).Last();

        // Parse log data
        string[] parts = lastLine.Split(' ');

        DateTime dateTime1 = DateTime.ParseExact(parts[0] + " " + parts[1], "yy/MM/dd HH:mm:ss", null);
        long serialNo = long.Parse(parts[4]);
        int cameraNo = int.Parse(parts[8].Split('=')[1].Replace(",", ""));
        float posX = float.Parse(parts[10].Split(',')[0].Replace("(", ""));
        float posY = float.Parse(parts[10].Split(',')[1]);

        // Insert data into the database
        InsertIntoDatabase(dateTime1, serialNo, cameraNo, posX, posY);

        // If CameraNo is 2, perform additional tasks
        if (cameraNo == 2)
        {
            // Your custom logic here, like capturing a window and saving it to a file
        }
    }

    private static void InsertIntoDatabase(DateTime dateTime1, long serialNo, int cameraNo, float posX, float posY)
    {
        using (SqlConnection conn = new SqlConnection(connectionString))
        {
            conn.Open();
            using (SqlCommand cmd = new SqlCommand("INSERT INTO VisionLog (DateTime1, SerialNo, CameraNo, PosX, PosY) VALUES (@DateTime1, @SerialNo, @CameraNo, @PosX, @PosY)", conn))
            {
                cmd.Parameters.AddWithValue("@DateTime1", dateTime1);
                cmd.Parameters.AddWithValue("@SerialNo", serialNo);
                cmd.Parameters.AddWithValue("@CameraNo", cameraNo);
                cmd.Parameters.AddWithValue("@PosX", posX);
                cmd.Parameters.AddWithValue("@PosY", posY);
                cmd.ExecuteNonQuery();
            }
        }
    }
}

이 코드는 파일의 변경을 감지하고, 로그의 마지막 줄을 읽어 데이터베이스에 삽입하는 작업을 수행합니다. 카메라 번호가 2일 경우 추가 작업을 수행할 수 있도록 구성되어 있습니다.

다만 이 코드는 간단한 예시로, 실제 환경에서는 예외 처리와 로깅, 비동기 처리 등이 추가될 필요가 있습니다. 또한 이미지 캡처와 데이터베이스로의 전송, 실패 시 로컬에 저장하는 로직은 별도의 함수로 구현할 수 있습니다.
