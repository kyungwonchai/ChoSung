다시 수정하여 문서의 너비가 화면 끝까지 스트레치되도록 하고, 검색된 텍스트의 배경색을 파란색, 글씨를 노란색으로 설정하며, 상단에 툴바와 RichEditControl의 검색 패널을 추가하는 코드를 작성해드리겠습니다.

XAML 코드:

xml
코드 복사
<Window x:Class="YourNamespace.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
        xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/richedit"
        Title="MainWindow" Height="450" Width="800">
    <DockPanel>
        <ToolBarTray DockPanel.Dock="Top">
            <ToolBar>
                <Button Content="Bold" Command="dxr:RichEditUICommand.Bold" CommandTarget="{Binding ElementName=richEditControl}"/>
                <Button Content="Italic" Command="dxr:RichEditUICommand.Italic" CommandTarget="{Binding ElementName=richEditControl}"/>
                <Button Content="Underline" Command="dxr:RichEditUICommand.Underline" CommandTarget="{Binding ElementName=richEditControl}"/>
                <TextBox x:Name="searchBox" Width="200" Height="30" KeyDown="SearchBox_KeyDown"/>
            </ToolBar>
        </ToolBarTray>
        <dxr:RichEditControl x:Name="richEditControl" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ShowSearchPanel="True"/>
    </DockPanel>
</Window>
C# 코드 (Code-Behind):

csharp
코드 복사
using DevExpress.XtraRichEdit.API.Native;
using System.Windows;
using System.Windows.Input;

namespace YourNamespace
{
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
        }

        private void SearchBox_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.Key == Key.Enter)
            {
                string searchText = searchBox.Text;
                HighlightText(searchText);
            }
        }

        private void HighlightText(string searchText)
        {
            Document document = richEditControl.Document;

            // Clear previous formatting
            CharacterProperties cp = document.BeginUpdateCharacters(document.Range);
            cp.BackColor = System.Drawing.Color.White;
            cp.ForeColor = System.Drawing.Color.Black;
            document.EndUpdateCharacters(cp);

            // Find all occurrences of the search text
            var ranges = document.FindAll(searchText, SearchOptions.None);

            foreach (DocumentRange range in ranges)
            {
                // Apply background and foreground color to each found range
                CharacterProperties characterProperties = document.BeginUpdateCharacters(range);
                characterProperties.BackColor = System.Drawing.Color.Blue;
                characterProperties.ForeColor = System.Drawing.Color.Yellow;
                document.EndUpdateCharacters(characterProperties);
            }
        }
    }
}
위 코드에서는 다음과 같은 사항이 적용되었습니다:

DockPanel을 사용하여 상단에 ToolBarTray를 추가하고, ToolBar에 Bold, Italic, Underline 버튼과 검색용 TextBox를 배치하였습니다.
RichEditControl의 ShowSearchPanel 속성을 True로 설정하여 검색 패널을 활성화하였습니다.
검색어 입력 후 엔터 키를 눌렀을 때 텍스트의 배경색을 파란색, 글씨색을 노란색으로 변경하는 기능을 구현하였습니다.
이 코드로 사용자는 RichEditControl 내에서 텍스트를 쉽게 입력하고 검색할 수 있으며, 검색된 텍스트가 강조 표시됩