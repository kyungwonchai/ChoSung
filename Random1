def find_all_lis(arr):
    n = len(arr)
    lis = [1] * n
    prev = [[] for _ in range(n)]

    for i in range(1, n):
        for j in range(i):
            if arr[i] > arr[j] and lis[i] < lis[j] + 1:
                lis[i] = lis[j] + 1
                prev[i] = [j]
            elif arr[i] > arr[j] and lis[i] == lis[j] + 1:
                prev[i].append(j)

    max_len = max(lis)

    def construct_paths(end_idx):
        stack = [(end_idx, [arr[end_idx]])]
        paths = []

        while stack:
            cur_idx, path = stack.pop()
            if not prev[cur_idx]:
                paths.append(path[::-1])
            else:
                for pre in prev[cur_idx]:
                    stack.append((pre, path + [arr[pre]]))

        return paths

    all_lis = []
    for i in range(n):
        if lis[i] == max_len:
            all_lis.extend(construct_paths(i))

    print("LIS 길이:", max_len)
    for seq in all_lis:
        print("LIS 부분 수열:", seq)

# 예제 테스트
find_all_lis([1, 5, 4, 2, 15, 6, 7, 124, 6, 1251, 1152, 12, 4, 421, 5, 16])
