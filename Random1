습니다! 이제 QR 코드에서 ^가 포함된 경우와 포함되지 않은 경우를 구분하여 처리하는 로직을 작성하겠습니다. ^가 포함된 경우에는 첫 번째 값(a1)과 두 번째 값(a2)를 분리하여 처리하고, ^가 포함되지 않은 경우에는 기존의 로직을 수행하도록 합니다.

수정된 checkAndInsertModel 함수
kotlin
코드 복사
import java.sql.Connection
import java.sql.DriverManager
import java.sql.ResultSet
import java.sql.SQLException
import java.sql.Timestamp
import java.time.LocalDateTime
import kotlinx.coroutines.Dispatchers
import kotlinx.coroutines.withContext

private var isExecuting = false

suspend fun checkAndInsertModel(qrCode: String, deviceId: String): String? {
    return withContext(Dispatchers.IO) {
        if (isExecuting) {
            return@withContext null
        }

        isExecuting = true
        var mssqlConnection: Connection? = null
        var mysqlConnection: Connection? = null
        var preparedStatement: java.sql.PreparedStatement? = null
        var resultSet: ResultSet? = null
        var result: String? = null

        try {
            // QR 코드에 ^가 포함되어 있는지 확인
            if (qrCode.contains("^")) {
                // QR 코드를 ^로 분리
                val parts = qrCode.split("^")
                val a1 = parts[0] // 첫 번째 값
                val a2 = parts.getOrNull(1) // 두 번째 값

                if (a2 == null) {
                    result = "QR code format is invalid. No second part found."
                    return@withContext result
                }

                // MySQL 데이터베이스 연결
                Class.forName("com.mysql.cj.jdbc.Driver")
                mysqlConnection = DriverManager.getConnection(
                    "jdbc:mysql://10.244.122.122:3306/your_database_name?useSSL=false&serverTimezone=UTC",
                    "abc", "1233445"
                )

                // 두 번째 값 a2가 mainsheet의 modelnumber에 있는지 확인
                val mainSheetQuery = """
                    SELECT COUNT(*) as count FROM smd.management_mobile_mainseet 
                    WHERE modelnumber = ?
                """.trimIndent()
                preparedStatement = mysqlConnection.prepareStatement(mainSheetQuery)
                preparedStatement.setString(1, a2)
                resultSet = preparedStatement.executeQuery()

                if (resultSet.next() && resultSet.getInt("count") > 0) {
                    // a2가 존재하면 a1을 deviceid와 함께 management_mobile_deviceid 테이블에 인서트
                    val insertDeviceIdQuery = """
                        INSERT INTO management_mobile_deviceid (deviceid, modelnumber) 
                        VALUES (?, ?)
                    """.trimIndent()
                    preparedStatement = mysqlConnection.prepareStatement(insertDeviceIdQuery)
                    preparedStatement.setString(1, a1)
                    preparedStatement.setString(2, a2)

                    try {
                        preparedStatement.executeUpdate()
                        result = "Device ID and modelnumber inserted: Device ID = $a1, Model Number = $a2"
                    } catch (e: SQLException) {
                        if (e.message?.contains("Duplicate entry") == true) {
                            result = "Duplicate entry for Device ID = $a1, Model Number = $a2, but proceeding"
                        } else {
                            throw e
                        }
                    }
                } else {
                    result = "Model number $a2 not found in mainsheet"
                }
            } else {
                // ^가 포함되지 않은 경우 기존 로직 수행
                // MSSQL 데이터베이스 연결
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver")
                mssqlConnection = DriverManager.getConnection(
                    "jdbc:sqlserver://your_mssql_server:1433;databaseName=your_database_name;user=your_username;password=your_password;"
                )

                // MSSQL의 QRCodeData 테이블에서 조회
                val mssqlQuery = "SELECT COUNT(*) FROM QRCodeData WHERE QRCode = ?"
                preparedStatement = mssqlConnection.prepareStatement(mssqlQuery)
                preparedStatement.setString(1, qrCode)

                resultSet = preparedStatement.executeQuery()

                if (resultSet.next() && resultSet.getInt(1) > 0) {
                    // QR 코드가 존재할 때 MySQL에 해당 값을 삽입

                    // MySQL에서 데이터 조회
                    Class.forName("com.mysql.cj.jdbc.Driver")
                    mysqlConnection = DriverManager.getConnection(
                        "jdbc:mysql://10.244.122.122:3306/your_database_name?useSSL=false&serverTimezone=UTC",
                        "abc", "1233445"
                    )

                    val mainSheetQuery = """
                        SELECT depart, part, floor, district, at, model, modelnumber 
                        FROM smd.management_mobile_mainseet 
                        WHERE modelnumber = ?
                    """.trimIndent()
                    preparedStatement = mysqlConnection.prepareStatement(mainSheetQuery)
                    preparedStatement.setString(1, qrCode)
                    resultSet = preparedStatement.executeQuery()

                    if (resultSet.next()) {
                        val depart = resultSet.getString("depart")
                        val part = resultSet.getString("part")
                        val floor = resultSet.getString("floor")
                        val district = resultSet.getString("district")
                        val at = resultSet.getString("at")
                        val model = resultSet.getString("model")
                        val modelnumber = resultSet.getString("modelnumber")

                        // 최근 10분 이내에 해당 modelnumber로 체크된 기록이 있는지 확인 (DB 시간 기준)
                        val checkQuery = """
                            SELECT COUNT(*) as count FROM smd.management_mobile_checksheet 
                            WHERE modelnumber = ? AND check_time > (NOW() - INTERVAL 10 MINUTE)
                        """.trimIndent()
                        preparedStatement = mysqlConnection.prepareStatement(checkQuery)
                        preparedStatement.setString(1, modelnumber)

                        val countResultSet = preparedStatement.executeQuery()

                        var shouldInsert = true

                        if (countResultSet.next()) {
                            val count = countResultSet.getInt("count")
                            if (count > 0) {
                                shouldInsert = false
                            }
                        }

                        if (shouldInsert) {
                            val insertQuery = """
                                INSERT INTO smd.management_mobile_checksheet 
                                (depart, part, floor, district, at, model, modelnumber, type, checkidnum, checkname, check_time) 
                                VALUES (?, ?, ?, ?, ?, ?, ?, '00000000', 'mobile', '00000000', NOW())
                            """.trimIndent()

                            preparedStatement = mysqlConnection.prepareStatement(insertQuery)
                            preparedStatement.setString(1, depart)
                            preparedStatement.setString(2, part)
                            preparedStatement.setString(3, floor)
                            preparedStatement.setString(4, district)
                            preparedStatement.setString(5, at)
                            preparedStatement.setString(6, model)
                            preparedStatement.setString(7, modelnumber)

                            preparedStatement.executeUpdate()
                            result = "New record inserted for modelnumber: $modelnumber"
                        } else {
                            result = "No insertion needed, recent check_time is within 10 minutes"
                        }
                    } else {
                        result = "No record found in mainsheet for modelnumber: $qrCode"
                    }
                } else {
                    result = "QR code not found in MSSQL"
                }
            }

        } catch (e: SQLException) {
            e.printStackTrace()
            result = "SQL error: ${e.message}"
        } catch (e: ClassNotFoundException) {
            e.printStackTrace()
            result = "JDBC Driver not found: ${e.message}"
        } catch (e: Exception) {
            e.printStackTrace()
            result = "Unexpected error: ${e.message}"
        } finally {
            try {
                resultSet?.close()
                preparedStatement?.close()
                mssqlConnection?.close()
                mysqlConnection?.close()
            } catch (e: SQLException) {
                e.printStackTrace()
            }
            isExecuting = false // 작업 완료 후 플래그를 다시 false로 설정
        }

        return@withContext result
    }
}
주요 사항:
QR 코드에 ^가 포함된 경우:

QR 코드를 ^로 분리하여 a1과 a2로 나눈 후, a2가 mainsheet의 modelnumber에 존재하는지 확인합니다.
존재할 경우, a1을 deviceid와 함께 management_mobile_deviceid 테이블에 삽입합니다. 중복이 있을 경우 무시하고 계속 진행합니다.
QR 코드에 ^가 포함되지 않은 경우:

기존 로직을 수행합니다. MSSQL의 QRCodeData 테이블에서 해당 QR 코드를 확인하고, 존재할 경우 MySQL의 mainsheet에서 정보를 가져와 checksheet에 삽입합니다.
중복 처리:

deviceid와 modelnumber의 중복 삽입 시 발생하는 에러를 무시하고 처리하도록 설정했습니다.
결론
이 코드에서는 QR 코드에 ^가 포함된 경우와 그렇지 않은 경우를 구분하여 각각의 작업을 수행합니다. 각 경우에 맞는 데이터베이스 접근과 처리가 이루어지도록 설계되었습니다. 추가적인 질문이나 수정 요청이 있다면 언제든지 말씀해 주