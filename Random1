에서는 SplashScreen이 아닌 SplashScreenManager의 Show 메서드를 이용해서 DevExpress의 스플래시 스크린을 띄웁니다. 아래는 수정된 예제입니다:
MySplashScreen.xaml

xaml

<Window x:Class="YourNamespace.MySplashScreen"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Grid>
        <ProgressBar Name="progressBar" Maximum="100" Height="30" Width="200"/>
    </Grid>
</Window>

MySplashScreen.xaml.cs

csharp

using System;
using System.Windows;

namespace YourNamespace
{
    public partial class MySplashScreen : Window
    {
        public MySplashScreen()
        {
            InitializeComponent();
        }

        public void UpdateProgress(int value)
        {
            progressBar.Value = value;
        }
    }
}

MainWindow.xaml.cs

csharp

using System;
using System.Windows;

namespace YourNamespace
{
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
        }

        private void LoadExcelData()
        {
            MySplashScreen mySplashScreen = new MySplashScreen();
            mySplashScreen.Show();
            
            int totalRows = 100; // 이 부분은 실제 엑셀의 행 수로 변경해 주세요.
            for (int i = 0; i < totalRows; i++)
            {
                // 엑셀 데이터를 로드하는 코드
                System.Threading.Thread.Sleep(50);  // 이 부분은 실제 로직으로 대체해 주세요.
                
                int progress = (int)((double)(i + 1) / totalRows * 100);
                mySplashScreen.UpdateProgress(progress);
            }

            mySplashScreen.Close();
        }

        private void OnLoadExcelClicked(object sender, RoutedEventArgs e)
        {
            LoadExcelData();
        }
    }
}

이렇게 하면 MySplashScreen 안에 있는 프로그레스바가 엑셀 로딩 과정에서 업