<!DOCTYPE html>
<html>
<head>
    <title>Image Gallery with Doodle</title>
    <style>
        .imageWrapper {
            position: relative;
            display: inline-block;
            margin: 10px;
        }

        .imageWrapper img {
            display: block;
        }

        .doodleCanvas {
            position: absolute;
            top: 0;
            left: 0;
        }

        .buttonGroup {
            position: sticky;
            top: 0;
            background-color: #fff;
            z-index: 1;
            padding: 10px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 10px;
        }

        .buttonGroup button {
            margin-right: 10px;
            padding: 5px 10px;
        }
    </style>
</head>
<body>
    <h1>Image Gallery with Doodle</h1>

    <div class="buttonGroup">
        <button id="editButton">편집</button>
        <button id="cancelButton">편집해제</button>
        <button id="saveButton">저장</button>
        <button id="savePathButton">경로 저장</button>
        <button id="loadPathButton">불러오기</button>
    </div>

    <div id="gallery">
        {% for image in images %}
            <div class="imageWrapper">
                <img src="data:image/png;base64,{{ image }}" alt="Image">
                <canvas class="doodleCanvas"></canvas>
            </div>
        {% endfor %}
    </div>

    <script>
        window.addEventListener('DOMContentLoaded', (event) => {
            const imageWrappers = document.querySelectorAll('.imageWrapper');
            const doodleCanvases = document.querySelectorAll('.doodleCanvas');
            const contextArray = [];

            for (let i = 0; i < doodleCanvases.length; i++) {
                const canvas = doodleCanvases[i];
                const context = canvas.getContext('2d');
                contextArray.push(context);
                const imageWrapper = imageWrappers[i];
                const image = imageWrapper.querySelector('img');

                canvas.width = image.clientWidth;
                canvas.height = image.clientHeight;

                let isDrawing = false;
                let drawingPath = [];

                canvas.addEventListener('mousedown', startDrawing);
                canvas.addEventListener('mousemove', draw);
                canvas.addEventListener('mouseup', stopDrawing);
                canvas.addEventListener('mouseout', stopDrawing);

                canvas.addEventListener('touchstart', startDrawing);
                canvas.addEventListener('touchmove', draw);
                canvas.addEventListener('touchend', stopDrawing);

                function startDrawing(event) {
                    event.preventDefault();
                    if (document.getElementById('editButton').disabled) {
                        isDrawing = true;
                        draw(event);
                    }
                }

                function draw(event) {
                    if (!isDrawing) return;

                    const rect = canvas.getBoundingClientRect();
                    let x, y;

                    if (event.type === 'mousedown' || event.type === 'mouseup' || event.type === 'mouseout') {
                        x = event.clientX - rect.left;
                        y = event.clientY - rect.top;
                    } else if (event.type === 'touchstart' || event.type === 'touchmove' || event.type === 'touchend') {
                        x = event.touches[0].clientX - rect.left;
                        y = event.touches[0].clientY - rect.top;
                    }

                    context.lineTo(x, y);
                    context.stroke();

                    drawingPath.push({ x, y });
                }

                function stopDrawing() {
                    isDrawing = false;
                    context.beginPath();
                }
            }

            // Edit button
            const editButton = document.getElementById('editButton');
            editButton.addEventListener('click', () => {
                disableButtons();
                document.body.style.cursor = 'crosshair';
                disableScroll();
            });

            // Cancel button
            const cancelButton = document.getElementById('cancelButton');
            cancelButton.addEventListener('click', () => {
                enableButtons();
                document.body.style.cursor = 'default';
                enableScroll();
            });

            // Save button
            const saveButton = document.getElementById('saveButton');
            saveButton.addEventListener('click', () => {
                enableButtons();
                document.body.style.cursor = 'default';
                // Save logic here
            });

            // Save Path button
            const savePathButton = document.getElementById('savePathButton');
            savePathButton.addEventListener('click', () => {
                // Save Path logic here
            });

            // Load Path button
            const loadPathButton = document.getElementById('loadPathButton');
            loadPathButton.addEventListener('click', () => {
                // Load Path logic here
            });

            function disableButtons() {
                editButton.disabled = true;
                cancelButton.disabled = false;
                saveButton.disabled = false;
                savePathButton.disabled = true;
                loadPathButton.disabled = true;
            }

            function enableButtons() {
                editButton.disabled = false;
                cancelButton.disabled = true;
                saveButton.disabled = true;
                savePathButton.disabled = false;
                loadPathButton.disabled = false;
            }

            function disableScroll() {
                document.body.style.overflow = 'hidden';
                document.documentElement.style.overflow = 'hidden';
                document.body.style.touchAction = 'none';
            }

            function enableScroll() {
                document.body.style.overflow = 'auto';
                document.documentElement.style.overflow = 'auto';
                document.body.style.touchAction = 'auto';
            }
        });
    </script>
</body>
</html>
