import React from 'react';

class ImageUploader extends React.Component {
    state = { password: '', passwordConfirm: '', imageTitle: '', image: null, errorMessage: '' };

    onPasswordChange = (e) => {
        this.setState({ password: e.target.value });
    }

    onPasswordConfirmChange = (e) => {
        this.setState({ passwordConfirm: e.target.value });
    }

    onImageTitleChange = (e) => {
        this.setState({ imageTitle: e.target.value });
    }

    onImageChange = (e) => {
        this.setState({ image: e.target.files[0] });
    }

    onFormSubmit = async (e) => {
        e.preventDefault();
        const { password, passwordConfirm, imageTitle, image } = this.state;
        
        if (password !== passwordConfirm) {
            this.setState({ errorMessage: '패스워드가 일치하지 않습니다.' });
            return;
        }

        if (!imageTitle) {
            this.setState({ errorMessage: '이미지 제목을 입력하세요.' });
            return;
        }

        if (!image) {
            this.setState({ errorMessage: '이미지를 선택하세요.' });
            return;
        }

        const formData = new FormData();
        formData.append('password', password);
        formData.append('imageTitle', imageTitle);
        formData.append('image', image);

        try {
            const response = await fetch('/upload', {
                method: 'POST',
                body: formData
            });

            if (response.status === 204) {
                this.setState({ password: '', passwordConfirm: '', imageTitle: '', image: null, errorMessage: '' });
                this.props.onImageUpload();
            } else {
                this.setState({ errorMessage: '이미지 업로드에 실패했습니다.' });
            }
        } catch (error) {
            this.setState({ errorMessage: '이미지 업로드에 실패했습니다.' });
        }
    }

    render() {
        return (
            <form onSubmit={this.onFormSubmit}>
                <input type="password" placeholder="비밀번호" value={this.state.password} onChange={this.onPasswordChange} />
                <input type="password" placeholder="비밀번호 확인" value={this.state.passwordConfirm} onChange={this.onPasswordConfirmChange} />
                <input type="text" placeholder="이미지 제목" value={this.state.imageTitle} onChange={this.onImageTitleChange} />
                <input type="file" onChange={this.onImageChange} />
                <input type="submit" value="업로드" />
                {this.state.errorMessage && <div>{this.state.errorMessage}</div>}
            </form>
        );
    }
}

class ImageList extends React.Component {
    state = { images: [] };

    componentDidMount() {
        this.fetchImages();
    }

    fetchImages = async () => {
        try {
            const response = await fetch('/images?password=' + this.props.password);

            if (response.ok) {
                const images = await response.json();
                this.setState({ images });
            }
        } catch (error) {
            this.setState({ images: [] });
        }
    }

    render() {
        return (
            <div style={{height: '400px', overflow: 'auto'}}>
                {this.state.images.map(image =>
                    <div key={image.name} onDoubleClick={() => this.props.onImageDoubleClick(image.name)}>
                        {image.name}
                    </div>
                )}
            </div>
        );
    }
}

class ImageViewer extends React.Component {
    render() {
        return this.props.imageTitle ? (
            <img src={"/image/" + this.props.imageTitle} alt="" />
        ) : null;
    }
}

class App extends React.Component {
    state = { password: '', imageTitle: '' };

    onImageUpload = () => {
        this.imageList.fetchImages();
    }

    onImageDoubleClick = (imageTitle) => {
        this.setState({ imageTitle });
    }

    render() {
        return (
            <div>
                <ImageUploader onImageUpload={this.onImageUpload} />
                <ImageList ref={ref => this.imageList = ref} password={this.state.password} onImageDoubleClick={this.onImageDoubleClick} />
                <ImageViewer imageTitle={this.state.imageTitle} />
            </div>
        );
    }
}

export default App;
