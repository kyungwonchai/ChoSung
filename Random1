G 이미지를 선택하여 MSSQL 2014의 varbinary(max) 필드에 업로드하고, 이후 UI의 이미지 컨트롤에 표시하는 작업은 여러 단계로 이루어집니다. 이를 위해서는 다음과 같은 작업이 필요합니다:

이미지 파일 선택: OpenFileDialog를 사용하여 사용자가 이미지를 선택할 수 있게 합니다.
이미지를 byte[]로 변환: 선택된 이미지를 byte[]로 변환합니다.
데이터베이스에 저장: 변환된 byte[] 데이터를 MSSQL 데이터베이스의 varbinary(max) 필드에 저장합니다.
UI에 이미지 표시: 데이터베이스에서 이미지를 다시 가져와서 WPF의 이미지 컨트롤에 표시합니다.
아래는 간략한 예제 코드입니다:

1. XAML 파일에 이미지 컨트롤과 버튼 추가
xml
Copy code
<Window x:Class="YourNamespace.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="MainWindow" Height="350" Width="525">
    <StackPanel>
        <Button Content="이미지 선택 및 업로드" Click="UploadImage_Click" />
        <Image Name="imageView" />
    </StackPanel>
</Window>
2. C# 코드 뒷면에 이미지 업로드 및 표시 로직 추가
csharp
Copy code
using System;
using System.Data.SqlClient;
using System.IO;
using System.Windows;
using System.Windows.Media.Imaging;
using Microsoft.Win32;

namespace YourNamespace
{
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
        }

        private void UploadImage_Click(object sender, RoutedEventArgs e)
        {
            OpenFileDialog openFileDialog = new OpenFileDialog
            {
                Filter = "JPG 파일 (*.jpg)|*.jpg"
            };
            if (openFileDialog.ShowDialog() == true)
            {
                string filePath = openFileDialog.FileName;

                // 이미지를 byte[]로 변환
                byte[] imageBytes = File.ReadAllBytes(filePath);

                // 데이터베이스에 이미지 저장
                SaveImageToDatabase(imageBytes);

                // UI의 이미지 컨트롤에 이미지 표시
                BitmapImage bitmap = new BitmapImage();
                bitmap.BeginInit();
                bitmap.StreamSource = new MemoryStream(imageBytes);
                bitmap.EndInit();
                imageView.Source = bitmap;
            }
        }

        private void SaveImageToDatabase(byte[] imageBytes)
        {
            string connectionString = "Your Connection String Here";
            using (SqlConnection conn = new SqlConnection(connectionString))
            {
                string sql = "INSERT INTO YourTableName (YourImageColumn) VALUES (@Image)";
                using (SqlCommand cmd = new SqlCommand(sql, conn))
                {
                    cmd.Parameters.AddWithValue("@Image", imageBytes);
                    conn.Open();
                    cmd.ExecuteNonQuery();
                    conn.Close();
                }
            }
        }
    }
}
이 코드는 기본적인 예제로, 실제 사용시에는 데이터베이스 연결 문자열, 테이블 이름, 열 이름을 적절하게 바꿔야 합니다. 또한 데이터베이스에 접근하는 작