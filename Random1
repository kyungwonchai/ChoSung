orms에서 파일 드래그 앤 드롭 기능을 구현하여 파일의 풀네임을 메시지박스로 표시하는 예제 코드를 제공합니다. 이 코드는 C#을 사용하여 작성되었습니다.

Form 디자인:

버튼을 추가합니다.
버튼의 AllowDrop 속성을 true로 설정합니다.
코드:

csharp
코드 복사
using System;
using System.Windows.Forms;

namespace DragDropExample
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();

            // 버튼의 AllowDrop 속성을 true로 설정합니다.
            button1.AllowDrop = true;

            // DragEnter 이벤트 핸들러를 설정합니다.
            button1.DragEnter += new DragEventHandler(button1_DragEnter);

            // DragDrop 이벤트 핸들러를 설정합니다.
            button1.DragDrop += new DragEventHandler(button1_DragDrop);
        }

        // DragEnter 이벤트 핸들러
        private void button1_DragEnter(object sender, DragEventArgs e)
        {
            if (e.Data.GetDataPresent(DataFormats.FileDrop))
            {
                // 파일이 드래그되어 들어오면 커서를 복사 모양으로 변경합니다.
                e.Effect = DragDropEffects.Copy;
            }
            else
            {
                e.Effect = DragDropEffects.None;
            }
        }

        // DragDrop 이벤트 핸들러
        private void button1_DragDrop(object sender, DragEventArgs e)
        {
            if (e.Data.GetDataPresent(DataFormats.FileDrop))
            {
                // 드롭된 파일들의 경로를 가져옵니다.
                string[] files = (string[])e.Data.GetData(DataFormats.FileDrop);

                // 첫 번째 파일의 풀네임을 메시지박스로 표시합니다.
                MessageBox.Show(files[0], "파일 경로");
            }
        }
    }
}
이 코드는 다음과 같은 기능을 수행합니다:

DragEnter 이벤트 핸들러:

사용자가 버튼 위로 파일을 드래그할 때 호출됩니다.
파일이 드래그된 경우 커서를 복사 모양으로 변경합니다.
DragDrop 이벤트 핸들러:

사용자가 파일을 버튼 위에 드롭할 때 호출됩니다.
드롭된 파일들의 경로를 가져와서 첫 번째 파일의 풀 네임을 메시지박스로 표시합니다.
이 코드를 사용하여 WinForms 애플리케이션에 파일 드래그 앤 드롭 기능을 추가할 수 있습니다. 추가적인 파일 처리가 필요하면 files 배열을 순회하여 각 파일 경로를 처리할 수 있습