이 요구사항을 반영하여 수정된 파이썬 코드를 제공하겠습니다. 코드에서는 SentValue 컬럼에서 처음 14개의 고유 값을 추출하여 새로운 컬럼으로 추가하고, 알파벳 순으로 정렬한 후, 시간 순서대로 데이터를 정렬하여 CSV로 내보냅니다. 또한, 파일 이름 앞에 현재 날짜와 시간을 추가하여 저장합니다.

python
코드 복사
import os
import csv
from datetime import datetime

# Log file directory
log_directory = "c:/test"

# Dictionary to store unique SentValue prefixes
unique_prefixes = {}

# List to store the parsed log data
log_data = []

# Read all files in the directory
for filename in os.listdir(log_directory):
    if "commandqueue" in filename.lower():
        file_path = os.path.join(log_directory, filename)
        
        # Open and read the file
        with open(file_path, 'r', encoding='utf-8') as file:
            lines = file.readlines()
            for line in lines:
                # Split the line by '|'
                parts = line.strip().split('|')
                if len(parts) == 7:  # Only process if all required fields are present
                    # Extract the first 14 characters of SentValue as a prefix
                    prefix = parts[1][:14]
                    unique_prefixes[prefix] = None  # Store as a key for uniqueness
                    log_data.append(parts)

# Sort the unique prefixes alphabetically and convert to a list
sorted_prefixes = sorted(unique_prefixes.keys())

# Sort the log data by time (assuming the time format is consistent for sorting)
log_data.sort(key=lambda x: x[0])

# Prepare the output directory
output_directory = "c:/test/csv2"
os.makedirs(output_directory, exist_ok=True)

# Create the output file name with the current timestamp
timestamp = datetime.now().strftime("%Y%m%d%H%M%S")
output_file = os.path.join(output_directory, f"{timestamp}_output.csv")

# Save the sorted data to a CSV file with dynamic columns based on SentValue prefixes
with open(output_file, 'w', newline='', encoding='utf-8') as csvfile:
    csvwriter = csv.writer(csvfile)
    
    # Write column headers
    headers = ["Time", "SentValue", "ResponseValue", "Result", "Result2", "Retry", "Speed"] + sorted_prefixes
    csvwriter.writerow(headers)
    
    # Write data rows
    for row in log_data:
        # Initialize row with existing columns
        data_row = row[:7]
        
        # Create a list for prefix columns, initialized to empty strings
        prefix_values = [''] * len(sorted_prefixes)
        
        # Find the prefix for the current SentValue and set its corresponding column
        current_prefix = row[1][:14]
        if current_prefix in sorted_prefixes:
            prefix_index = sorted_prefixes.index(current_prefix)
            prefix_values[prefix_index] = current_prefix
        
        # Combine the base data with the prefix values
        full_row = data_row + prefix_values
        csvwriter.writerow(full_row)

print(f"CSV file has been saved as '{output_file}'.")
코드 설명
SentValue 컬럼의 고유 값 추출: SentValue의 좌측 14개의 문자로 고유한 값을 추출하여 딕셔너리에 저장하고, 이를 알파벳 순으로 정렬합니다.
시간 순 정렬: Time 컬럼을 기준으로 데이터가 시간 순서대로 정렬됩니다.
CSV 파일 저장:
출력 디렉토리를 c:/test/csv2로 설정하고, 디렉토리가 없으면 생성합니다.
파일 이름은 yyyyMMddHHmmss_output.csv 형식으로 현재 날짜와 시간을 앞에 붙여 저장합니다.
컬럼 제목에 기존 컬럼과 함께 고유한 SentValue의 14자 값을 새로운 컬럼으로 추가합니다.