t 변수와 설정 데이터를 파일에 저장하고 불러오기 위한 메서드들을 포함합니다.

csharp

using System;
using System.IO;
using System.Windows.Forms;

public class PrintSetting
{
    public int TextBox1Value { get; set; }

    public void SaveToFile(string filePath)
    {
        try
        {
            using (StreamWriter writer = new StreamWriter(filePath))
            {
                writer.WriteLine(TextBox1Value);
            }
        }
        catch (Exception ex)
        {
            MessageBox.Show("Error saving print settings: " + ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
        }
    }

    public static PrintSetting LoadFromFile(string filePath)
    {
        PrintSetting setting = new PrintSetting();
        try
        {
            using (StreamReader reader = new StreamReader(filePath))
            {
                setting.TextBox1Value = int.Parse(reader.ReadLine());
            }
        }
        catch (Exception ex)
        {
            MessageBox.Show("Error loading print settings: " + ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
        }
        return setting;
    }
}

이제 MainForm에서 버튼 이벤트 핸들러를 구현합니다. 저장 버튼을 눌렀을 때는 PrintSetting 클래스 인스턴스를 생성하여 설정 값을 저장하고, 버튼 A를 눌렀을 때는 저장된 설정 값을 읽어와서 해당 설정을 적용합니다.

csharp

using System;
using System.Windows.Forms;

public partial class MainForm : Form
{
    private PrintSetting printSetting = new PrintSetting();
    private string filePath = @"C:\agent1\print_settings.txt";

    public MainForm()
    {
        InitializeComponent();
    }

    private void btnSavePrintSetting_Click(object sender, EventArgs e)
    {
        if (int.TryParse(txtBox1.Text, out int textBoxValue))
        {
            printSetting.TextBox1Value = textBoxValue;
            printSetting.SaveToFile(filePath);
            MessageBox.Show("Print settings saved successfully.", "Success", MessageBoxButtons.OK, MessageBoxIcon.Information);
        }
        else
        {
            MessageBox.Show("Invalid input for TextBox1. Please enter a valid integer.", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
        }
    }

    private void btnApplyPrintSetting_Click(object sender, EventArgs e)
    {
        printSetting = PrintSetting.LoadFromFile(filePath);
        txtBox1.Text = printSetting.TextBox1Value.ToString();
        // Apply other print settings as needed
    }
}

위의 코드는 버튼 클릭 이벤트 핸들러를 정의한 것이며, MainForm에 해당 버튼들과 txtBox1 컨트롤을 추가해야 합니다. 또한 저장할 파일 경로를 적절히 변경해주어야 합니다. 또한 Pri