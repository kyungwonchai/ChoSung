이 모두 75보다 작은 영역을 찾고, 해당 영역의 우측 상단 좌표를 얻어서 거기서 10씩 빼서 클릭하는 예시입니다.

csharp

using System;
using System.Drawing;
using System.Threading;
using System.Windows.Forms;
using OpenCvSharp;
using OpenCvSharp.Extensions;

public class Program
{
    public static void Main()
    {
        // 스크린 이미지 캡처
        Bitmap screenCapture = CaptureScreen();

        // 팝업 윈도우 우측 상단 좌표 찾기
        Point? windowPosition = FindPopupWindow(screenCapture);

        if (windowPosition != null)
        {
            // 팝업 윈도우 클릭 좌표 계산
            int clickX = windowPosition.Value.X - 10;
            int clickY = windowPosition.Value.Y - 10;

            // 클릭 실행
            ClickMouse(clickX, clickY);
        }
        else
        {
            Console.WriteLine("팝업 윈도우를 찾을 수 없습니다.");
        }
    }

    public static Bitmap CaptureScreen()
    {
        Rectangle screenBounds = Screen.PrimaryScreen.Bounds;

        using (Bitmap bitmap = new Bitmap(screenBounds.Width, screenBounds.Height))
        {
            using (Graphics graphics = Graphics.FromImage(bitmap))
            {
                graphics.CopyFromScreen(screenBounds.Left, screenBounds.Top, 0, 0, screenBounds.Size);
            }

            return bitmap.Clone() as Bitmap;
        }
    }

    public static Point? FindPopupWindow(Bitmap screenCapture)
    {
        using (Mat screenMat = BitmapConverter.ToMat(screenCapture))
        {
            int width = screenMat.Width;
            int height = screenMat.Height;

            // 팝업 윈도우 영역 검색
            for (int y = 150; y <= 300; y++) // Y 높이 범위 설정
            {
                bool isValid = true;

                for (int x = width - 1; x >= 0; x--) // 우측부터 검사
                {
                    Vec3b color = screenMat.At<Vec3b>(y, x);

                    // RGB 값이 75보다 크거나 같으면 영역이 유효하지 않음
                    if (color.Item0 >= 75 || color.Item1 >= 75 || color.Item2 >= 75)
                    {
                        isValid = false;
                        break;
                    }
                }

                if (isValid)
                {
                    return new Point(width - 1, y); // 우측 상단 좌표 반환
                }
            }
        }

        return null;
    }

    public static void ClickMouse(int x, int y)
    {
        Cursor.Position = new Point(x, y);
        Thread.Sleep(100);

        // 마우스 왼쪽 버튼 클릭
        mouse_event(MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0);
        Thread.Sleep(100);
        mouse_event(MOUSEEVENTF_LEFTUP, 0, 0, 0, 0);
    }

    private const int MOUSEEVENTF_LEFTDOWN = 0x02;
    private const int MOUSEEVENTF

User
이어서
ChatGPT

csharp

LEFTUP = 0x04;
    [System.Runtime.InteropServices.DllImport("user32.dll")]
    public static extern void mouse_event(int dwFlags, int dx, int dy, int cButtons, int dwExtraInfo);
}

위의 코드는 주어진 조건에 따라 Y 위치에서 픽셀의 RGB 값이 모두 75보다 작은 영역을 찾고, 해당 영역의 우측 상단 좌표를 계산하여 거기서 10씩 빼서 클릭하는 예시입니다. 코드에서 FindPopupWindow 함수는 팝업 윈도우 영역을 찾는 데 사용되며, 해당 영역이 유효한 경우에만 클릭 좌표를 계산하여 ClickMouse 함수를 호출하여 클릭합니다.

추가로, 이 예시 코드에서는 CaptureScreen 함수를 사용하여 스크린 이미지를 캡처하고, mouse_event 함수를 사용하여 마우스 클릭 이벤트를 발생시킵니다. 이 코드는 주어진 조건에 맞게 팝업 윈도우를 찾아 클릭하