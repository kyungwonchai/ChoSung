제목을 포함하도록 코드를 수정하겠습니다.

먼저, Flask 서버의 수정된 코드는 다음과 같습니다:

python

from flask import Flask, request, jsonify, send_file
import pymssql
import io

app = Flask(__name__)

def save_to_db(password, image_title, image):
    conn = pymssql.connect(server='서버명', user='사용자명', password='비밀번호', database='데이터베이스명', port='포트번호')
    cursor = conn.cursor()

    cursor.execute("EXEC InsertIntoTableWebImg %s, %s, %s", (password, image_title, image.read()))
    conn.commit()

@app.route('/upload', methods=['POST'])
def upload():
    password = request.form['password']
    image_title = request.form['imageTitle']
    image = request.files['image']
    save_to_db(password, image_title, image)

    return '', 204

def get_images_from_db(password):
    conn = pymssql.connect(server='서버명', user='사용자명', password='비밀번호', database='데이터베이스명', port='포트번호')
    cursor = conn.cursor()

    cursor.execute("SELECT image_title FROM TableWebImg WHERE password = %s ORDER BY image_input_time DESC", password)
    rows = cursor.fetchall()

    return [dict(name=row.image_title) for row in rows]

@app.route('/images', methods=['GET'])
def get_images():
    password = request.args.get('password')
    images = get_images_from_db(password)

    return jsonify(images)

def get_image_from_db(image_title):
    conn = pymssql.connect(server='서버명', user='사용자명', password='비밀번호', database='데이터베이스명', port='포트번호')
    cursor = conn.cursor()

    cursor.execute("SELECT image FROM TableWebImg WHERE image_title = %s", image_title)
    row = cursor.fetchone()

    if row is not None:
        return io.BytesIO(row.image)

    return None

@app.route('/image/<string:image_title>', methods=['GET'])
def get_image(image_title):
    image = get_image_from_db(image_title)

    if image is None:
        return '', 404

    return send_file(image, mimetype='image/jpeg')

다음으로 React 코드입니다. ImageUploader 컴포넌트에서 이미지 제목을 입력 받도록 수정했습니다:

javascript

// ... 이전 코드 생략 ...

class ImageUploader extends React.Component {
    state = { password: '', passwordConfirm: '', imageTitle: '', image: null, errorMessage: '' };

    // ...

    onFormSubmit = async (e) => {
        e.preventDefault();
        const { password, passwordConfirm, imageTitle, image } = this.state;
        
        // 패스워드 확인
        if (password !== passwordConfirm) {
            this.setState({ errorMessage: '패스워드가 일치하지 않습니다.' });
            return;
        }
        
        // 이미지 제목 확인
        if (!imageTitle) {
            this.setState({ errorMessage: '이미지 제목을 입력하세요.' });
            return;
        }

        // 이미지 확인
        if (!image) {
            this.setState({ errorMessage: '이미지를 선택하세요.' });
            return;
        }

        const formData = new FormData();
        formData.append('password', password);
        formData.append('imageTitle', imageTitle);
        formData.append('image', image);

        const response = await fetch('/upload', {
            method: 'POST',
            body: formData
        });

        if (response.status === 204) {
            this.setState({ password: '', passwordConfirm: '', imageTitle: '', image: null, errorMessage: '' });
            this.props.onImageUpload();
        } else {
            this.setState({ errorMessage: '이미지 업로드에 실패했습니다.' });
        }
    }

    // ...

    render() {
        return (
            <form onSubmit={this.onFormSubmit}>
                <input type="password" placeholder="비밀번호" value={this.state.password} onChange={this.onPasswordChange} />
                <input type="password" placeholder="비밀번호 확인" value={this.state.passwordConfirm} onChange={this.onPasswordConfirmChange} />
                <input type="text" placeholder="이미지 제목" value={this.state.imageTitle} onChange={this.onImageTitleChange} />
                <input type="file" onChange={this.onImageChange} />
                <input type="submit" value="업로드" />
                {this.state.errorMessage && <div>{this.state.errorMessage}</div>}
            </form>
        );
    }
}

// ... 이후 코드 생략 ...
