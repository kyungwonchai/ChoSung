아래는 요청에 따라 각 CSV 파일을 UTF-8로 읽어와 시트별로 데이터를 로드하는 매크로입니다. 시트 이름은 버튼, 그룹페이지로 설정되며, 파일과 시트의 매칭도 각각 이루어집니다. 기존 시트는 삭제 후 다시 생성되며, 컬럼 폭을 자동 조정합니다.

VBA 코드
vba
코드 복사
Sub ImportCSVToSpecificSheets()
    Dim filePaths As Variant
    Dim sheetNames As Variant
    Dim i As Integer
    Dim ws As Worksheet
    
    ' CSV 파일 경로 설정
    filePaths = Array("C:\agent\_sheet1.csv", "C:\agent\_sheet2.csv", "C:\agent\_sheet3.csv")
    
    ' 시트 이름 설정
    sheetNames = Array("버튼", "그룹페이지", "페이지")
    
    ' 화면 업데이트 및 계산 중지로 실행 속도 개선
    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual
    
    ' 기존 시트 삭제
    On Error Resume Next
    For Each ws In ThisWorkbook.Worksheets
        For i = LBound(sheetNames) To UBound(sheetNames)
            If ws.Name = sheetNames(i) Then
                Application.DisplayAlerts = False
                ws.Delete
                Application.DisplayAlerts = True
            End If
        Next i
    Next ws
    On Error GoTo 0
    
    ' CSV 파일 읽기 및 시트 생성
    For i = LBound(filePaths) To UBound(filePaths)
        If Dir(filePaths(i)) <> "" Then ' 파일이 존재하는 경우만 실행
            Dim newSheet As Worksheet
            Set newSheet = ThisWorkbook.Sheets.Add
            newSheet.Name = sheetNames(i) ' 시트 이름 설정
            
            ' CSV 파일 로드 (UTF-8로 읽기)
            With newSheet.QueryTables.Add(Connection:="TEXT;" & filePaths(i), Destination:=newSheet.Range("A1"))
                .TextFilePlatform = 65001 ' UTF-8 설정
                .TextFileParseType = xlDelimited ' 구분자로 처리
                .TextFileCommaDelimiter = True ' 콤마 구분
                .Refresh BackgroundQuery:=False
            End With
            
            ' 컬럼 폭 자동 조정
            newSheet.Cells.EntireColumn.AutoFit
        Else
            MsgBox "파일이 존재하지 않습니다: " & filePaths(i), vbExclamation
        End If
    Next i
    
    ' 화면 업데이트 및 계산 복원
    Application.ScreenUpdating = True
    Application.Calculation = xlCalculationAutomatic
    
    MsgBox "CSV 파일 로드 완료!", vbInformation
End Sub
코드 설명
파일 경로와 시트 이름 설정:

filePaths 배열에 각 파일의 경로를 설정합니다.
sheetNames 배열에 시트 이름을 설정합니다. 첫 번째 파일은 버튼, 두 번째는 그룹페이지, 세 번째는 페이지로 매칭됩니다.
기존 시트 삭제:

기존의 버튼, 그룹페이지, 페이지 시트를 찾아 삭제합니다.
CSV 파일 읽기:

QueryTables.Add를 사용하여 CSV 파일을 UTF-8 형식으로 읽어옵니다.
.TextFilePlatform = 65001 설정을 통해 UTF-8로 인코딩을 처리합니다.
컬럼 폭 자동 조정:

AutoFit 메서드를 사용해 데이터의 컬럼 폭을 자동으로 조정합니다.
성능 최적화:

Application.ScreenUpdating과 Application.Calculation을 비활성화하여 실행 속도를 높입니다.
오류 처리:

파일이 없으면 경고 메시지를 표시하고 다음 파일로 넘어갑니다.
사용 방법
위 코드를 VBA 편집기에 붙여넣습니다.
Alt + F8을 눌러 매크로 실행 창을 엽니다.
ImportCSVToSpecificSheets를 선택하고 실행합니다.
실행 결과
C:\agent\_sheet1.csv → 버튼 시트에 데이터 로드.
C:\agent\_sheet2.csv → 그룹페이지 시트에 데이터 로드.