 데이터를 차트에 표시하는 것은 더 간단합니다. 여기서는 두 개의 테이블 TableB와 TableT에서 데이터를 가져와서 각각 B와 T에 대한 막대 차트를 생성하는 예제를 제공하겠습니다.

데이터베이스 테이블 구조 가정
TableB - B 타입의 데이터
TableT - T 타입의 데이터
각 테이블에는 LineName과 Quantity 컬럼이 있다고 가정합니다.

WPF XAML 코드
xml
Copy code
<Window x:Class="YourNamespace.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/charts"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="MainWindow" Height="350" Width="525">
    <Grid>
        <dxc:ChartControl Name="chartControl">
            <dxc:ChartControl.Diagram>
                <dxc:XYDiagram2D>
                    <dxc:BarSideBySideSeries2D DisplayName="B" ArgumentDataMember="LineName" ValueDataMember="Quantity">
                        <dxc:BarSideBySideSeries2D.Model>
                            <dxc:Bar2DModel/>
                        </dxc:BarSideBySideSeries2D.Model>
                    </dxc:BarSideBySideSeries2D>
                    <dxc:BarSideBySideSeries2D DisplayName="T" ArgumentDataMember="LineName" ValueDataMember="Quantity">
                        <dxc:BarSideBySideSeries2D.Model>
                            <dxc:Bar2DModel/>
                        </dxc:BarSideBySideSeries2D.Model>
                    </dxc:BarSideBySideSeries2D>
                </dxc:XYDiagram2D>
            </dxc:ChartControl.Diagram>
        </dxc:ChartControl>
    </Grid>
</Window>
C# 코드 (MainWindow.xaml.cs)
csharp
Copy code
using System.Data.SqlClient;
using System.Windows;
using DevExpress.Xpf.Charts;
using System.Data;

namespace YourNamespace
{
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
            LoadChartData();
        }

        private void LoadChartData()
        {
            string connectionString = "Your Connection String Here";

            DataTable tableB = GetData(connectionString, "SELECT LineName, SUM(Quantity) AS Quantity FROM TableB GROUP BY LineName");
            DataTable tableT = GetData(connectionString, "SELECT LineName, SUM(Quantity) AS Quantity FROM TableT GROUP BY LineName");

            Series seriesB = chartControl.Diagram.Series[0];
            seriesB.DataSource = tableB;

            Series seriesT = chartControl.Diagram.Series[1];
            seriesT.DataSource = tableT;
        }

        private DataTable GetData(string connectionString, string query)
        {
            using (SqlConnection conn = new SqlConnection(connectionString))
            {
                SqlCommand cmd = new SqlCommand(query, conn);
                SqlDataAdapter adapter = new SqlDataAdapter(cmd);
                DataTable dt = new DataTable();
                adapter.Fill(dt);
                return dt;
            }
        }
    }
}
이 코드는 두 개의 테이블(TableB와 TableT)에서 데이터를 가져와서 DevExpr