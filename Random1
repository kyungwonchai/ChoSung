심 요약:

구형 GPG 키 문제: 예전 방식(apt-key add)으로 도커 GPG 키를 등록하면 apt에서 경고가 발생하거나 신뢰성 문제가 생길 수 있습니다. 현재는 보안이 강화된 새로운 방식(/etc/apt/keyrings)을 사용해야 합니다.

삼성 사내망(bart) 문제: 사내망에서는 보안을 위해 외부 인터넷으로 나가는 모든 통신을 프록시(Proxy) 서버를 통해 제어합니다. 따라서 apt, curl, gpg 같은 명령어들이 프록시 서버를 거쳐 통신하도록 설정하지 않으면, 외부 서버(download.docker.com)에 아예 접속하지 못해 인증서 오류나 연결 시간 초과 오류가 발생합니다.

이 두 가지를 모두 해결하는, 사내망 환경에 최적화된 설치 방법을 처음부터 끝까지 상세하게 알려드리겠습니다.

🛠️ 단계별 해결 방법 (프록시 환경 완벽 적용)
가장 먼저! 사내 IT 부서나 동료를 통해 bart망의 프록시 서버 주소와 포트를 정확하게 확인해야 합니다. 보통 http://proxy.company.com:8080과 같은 형태입니다. 이 주소를 http://YOUR_PROXY_ADDRESS:PORT 자리에 대신 입력하세요.

1단계: 시스템 전체에 프록시 설정 적용하기
터미널에서 실행하는 대부분의 명령어들이 프록시를 사용하도록 환경 변수를 설정합니다.

Bash

# 프록시 주소를 변수로 설정 (본인 환경에 맞게 수정!)
export PROXY_URL="http://YOUR_PROXY_ADDRESS:PORT"

# http와 https 프록시 환경 변수 설정
export http_proxy="$PROXY_URL"
export https_proxy="$PROXY_URL"
export HTTP_PROXY="$PROXY_URL"
export HTTPS_PROXY="$PROXY_URL"

# 이 설정을 앞으로 계속 사용하기 위해 셸 설정 파일에 추가
echo "export http_proxy='$PROXY_URL'" | sudo tee -a /etc/profile.d/proxy.sh
echo "export https_proxy='$PROXY_URL'" | sudo tee -a /etc/profile.d/proxy.sh
echo "export HTTP_PROXY='$PROXY_URL'" | sudo tee -a /etc/profile.d/proxy.sh
echo "export HTTPS_PROXY='$PROXY_URL'" | sudo tee -a /etc/profile.d/proxy.sh
설명: 현재 터미널 세션과 앞으로 새로 열리는 모든 터미널에 프록시 설정을 적용합니다. 대소문자를 모두 쓰는 이유는 일부 프로그램이 대문자 변수를 사용하기 때문입니다.

2단계: apt에 프록시 설정 명시하기
시스템 환경 변수 설정만으로 apt가 프록시를 인식하지 못하는 경우가 있습니다. apt 전용 설정 파일을 만들어 확실하게 지정해 줍니다.

Bash

# apt 설정 파일 생성
# 아래 명령어의 YOUR_PROXY_ADDRESS:PORT 부분을 실제 프록시 주소로 변경하세요.
echo 'Acquire::http::Proxy "http://YOUR_PROXY_ADDRESS:PORT";' | sudo tee /etc/apt/apt.conf.d/proxy.conf
echo 'Acquire::https::Proxy "http://YOUR_PROXY_ADDRESS:PORT";' | sudo tee -a /etc/apt/apt.conf.d/proxy.conf
3단계: 기존 도커 패키지 완벽하게 삭제하기
이제 깨끗한 상태에서 설치를 시작하겠습니다. 기존에 설치 시도했던 찌꺼기를 모두 제거합니다.

Bash

sudo apt-get remove docker docker-engine docker.io containerd runc
sudo apt-get purge docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin docker-ce-rootless-extras
sudo rm -rf /var/lib/docker
sudo rm -rf /var/lib/containerd
4단계: 필수 패키지 설치 및 GPG 키 추가 (최신 방식 + 프록시 적용)
필수 패키지 설치: apt가 이제 프록시를 통해 정상 동작할 것입니다.

Bash

sudo apt-get update
sudo apt-get install -y ca-certificates curl gnupg
키링 폴더 생성:

Bash

sudo install -m 0755 -d /etc/apt/keyrings
도커 GPG 키 다운로드 (프록시 환경 핵심!):
curl 명령어가 프록시를 사용하도록 -x 옵션을 추가하여 GPG 키를 다운로드합니다.

Bash

# YOUR_PROXY_ADDRESS:PORT 부분을 실제 프록시 주소로 변경하세요.
curl -fsSL -x http://YOUR_PROXY_ADDRESS:PORT https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
핵심 설명: -x 옵션은 curl에게 특정 프록시 서버를 통해 접속하라고 명시적으로 알려주는 역할을 합니다. 1단계에서 설정한 환경 변수가 적용되지 않을 때에도 이 방법은 확실하게 동작합니다.

키 파일 권한 설정:

Bash

sudo chmod a+r /etc/apt/keyrings/docker.gpg
5단계: 도커 저장소 추가 (최신 방식)
이제 apt가 프록시를 통해 접근할 도커 저장소 정보를 추가합니다. 이 정보에는 "이 저장소는 방금 받은 GPG 키로 검증해야 해"라는 내용(signed-by)이 포함됩니다.

Bash

echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
6단계: 도커 엔진 설치
모든 설정이 완료되었습니다. apt는 프록시를 통해 도커 저장소에 접속하고, 최신 GPG 키로 패키지를 안전하게 검증한 후 설치를 진행합니다.

Bash

sudo apt-get update
sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
7단계: 도커 데몬(Daemon)에 프록시 설정하기 (매우 중요!)
도커를 '설치'하는 것과 도커가 '동작'하는 것은 별개입니다. 도커 데몬(백그라운드에서 실행되는 서비스)이 docker pull 명령을 실행할 때 외부 Docker Hub에서 이미지를 받아오려면, 도커 데몬 자체도 프록시를 사용하도록 설정해야 합니다.

도커 서비스용 설정 폴더 생성:

Bash

sudo mkdir -p /etc/systemd/system/docker.service.d
프록시 설정 파일 생성:

Bash

# YOUR_PROXY_ADDRESS:PORT 부분을 실제 프록시 주소로 변경하세요.
sudo tee /etc/systemd/system/docker.service.d/http-proxy.conf > /dev/null <<EOF
[Service]
Environment="HTTP_PROXY=http://YOUR_PROXY_ADDRESS:PORT"
Environment="HTTPS_PROXY=http://YOUR_PROXY_ADDRESS:PORT"
Environment="NO_PROXY=localhost,127.0.0.1"
EOF
NO_PROXY: 프록시를 거치지 않을 예외 주소를 등록합니다.

설정 적용 및 도커 재시작:

Bash

sudo systemctl daemon-reload
sudo systemctl restart docker
8단계: 최종 설치 확인
프록시를 통해 도커 이미지를 정상적으로 받아오는지 확인합니다.

Bash

sudo docker run hello-world
"Hello from Docker!" 메시지가 나타나면 사내망 환경에서 모든 설정이 완벽하게 끝난 것입니다. 축하합니다!

이 가이드는 구형 GPG 키 문제를 최신 방식으로 해결하고, 사내 프록시 환경에서 apt와 docker daemon이 모두 정상적으로 동작하도록 설정하는 가장 확실한 방법입니다.


소스




