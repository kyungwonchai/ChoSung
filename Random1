ask 애플리케이션의 코드를 수정한 후 서비스를 재시작하는 방법은 실행 환경에 따라 다를 수 있습니다. 다음은 다양한 환경에서 Flask 애플리케이션을 재시작하는 방법입니다.

1. 단순 Flask 개발 서버 사용 시
개발 환경에서 Flask의 기본 서버를 사용 중이라면, 단순히 현재 실행 중인 서버를 중지하고 다시 시작하면 됩니다.

현재 실행 중인 Flask 서버를 중지합니다. (터미널에서 Ctrl + C를 누름)
Flask 서버를 다시 시작합니다:
bash
코드 복사
python your_flask_app.py
2. Flask를 gunicorn과 같은 WSGI 서버와 함께 사용 시
gunicorn을 사용하고 있다면, 서버를 다시 시작해야 합니다.

현재 실행 중인 gunicorn 프로세스를 중지합니다. (터미널에서 Ctrl + C를 누름)
gunicorn을 다시 시작합니다:
bash
코드 복사
gunicorn -w 4 -b 0.0.0.0:8002 your_flask_app:app
3. 시스템 서비스로 Flask 애플리케이션 관리 시 (예: systemd)
생산 환경에서 systemd와 같은 시스템 서비스를 통해 Flask 애플리케이션을 관리하는 경우, 서비스 재시작 명령을 사용합니다.

your_flask_app.service 파일을 설정했다면, 다음 명령어를 사용하여 서비스를 재시작합니다:
bash
코드 복사
sudo systemctl restart your_flask_app.service
예시: systemd 서비스 파일 설정
아래는 systemd 서비스 파일의 예시입니다. 이 파일을 /etc/systemd/system/your_flask_app.service에 저장합니다.

ini
코드 복사
[Unit]
Description=Gunicorn instance to serve your Flask application
After=network.target

[Service]
User=your_username
Group=www-data
WorkingDirectory=/path/to/your/app
Environment="PATH=/path/to/your/venv/bin"
ExecStart=/path/to/your/venv/bin/gunicorn -w 4 -b 0.0.0.0:8002 your_flask_app:app

[Install]
WantedBy=multi-user.target
위 설정 후, 다음 명령어를 사용하여 서비스를 제어합니다:

서비스 시작:
bash
코드 복사
sudo systemctl start your_flask_app.service
서비스 재시작:
bash
코드 복사
sudo systemctl restart your_flask_app.service
서비스 상태 확인:
bash
코드 복사
sudo systemctl status your_flask_app.service
이와 같은 방법으로 Flask 애플리케이션을 재시작하여 수정된 파일이 반영되도록 