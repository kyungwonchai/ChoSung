using System;
using System.IO;
using Newtonsoft.Json;

namespace SMDFileCleaner
{
    public class SettingsManager
    {
        private readonly string settingsFilePath;

        public SettingsManager(string settingsDirectory)
        {
            Directory.CreateDirectory(settingsDirectory);
            settingsFilePath = Path.Combine(settingsDirectory, "settings.json");
        }

        public void SaveSettings(Settings settings)
        {
            try
            {
                var json = JsonConvert.SerializeObject(settings, Formatting.Indented);
                File.WriteAllText(settingsFilePath, json);
            }
            catch (Exception ex)
            {
                throw new ApplicationException("Failed to save settings: " + ex.Message, ex);
            }
        }

        public Settings LoadSettings()
        {
            try
            {
                if (File.Exists(settingsFilePath))
                {
                    var json = File.ReadAllText(settingsFilePath);
                    return JsonConvert.DeserializeObject<Settings>(json);
                }
                return null;
            }
            catch (Exception ex)
            {
                throw new ApplicationException("Failed to load settings: " + ex.Message, ex);
            }
        }
    }

    public class Settings
    {
        public string FolderPath { get; set; }
        public string FileExtension { get; set; }
        public string DriveName { get; set; }
    }
}
