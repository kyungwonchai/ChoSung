mlit 기본 설정에서는 테이블 크기가 제한될 수 있습니다.
지금 요구 사항은 테이블의 세로 길이를 화면 최대 크기로 확장하여 모든 데이터가 잘리거나 스크롤 없이 표시되게 만드는 것입니다.

✅ 수정된 코드 (테이블 세로 최대화)
python
코드 복사
import streamlit as st
import pymssql
import pandas as pd

# MSSQL 서버 연결 설정 함수
def get_connection():
    return pymssql.connect(
        server="YOUR_SERVER",
        user="YOUR_USER",
        password="YOUR_PASSWORD",
        database="YOUR_DATABASE"
    )

# Get_min_bestdifferent 프로시저 호출 함수 (cursor.fetchall() 방식)
def fetch_main_data():
    conn = get_connection()
    cursor = conn.cursor()
    cursor.execute("EXEC Get_min_bestdifferent")
    rows = cursor.fetchall()
    conn.close()
    return rows

# DataFrame 생성 및 스타일 적용 함수
def create_dataframe(rows):
    # 원래 데이터베이스에서 온 컬럼 (ACT2_1 ~ ACT2_8 포함)
    original_columns = [
        "group1", "line1", "model1", "type1", "ecn1", "edition1",
        "ACT2_1", "ACT2_2", "ACT2_3", "ACT2_4",
        "ACT2_5", "ACT2_6", "ACT2_7", "ACT2_8"
    ]
    
    # 새로운 DataFrame 컬럼명 (MC1 ~ MC8으로 변경)
    new_columns = [
        "group1", "line1", "model1", "type1", "ecn1", "edition1",
        "MC1", "MC2", "MC3", "MC4", "MC5", "MC6", "MC7", "MC8"
    ]

    # DataFrame 생성 (원래 컬럼으로)
    df = pd.DataFrame(rows, columns=original_columns)

    # 컬럼 이름을 MC1 ~ MC8로 변경
    df.columns = new_columns

    # MC1 ~ MC8 열 리스트
    mc_columns = [f"MC{i}" for i in range(1, 9)]

    # 숫자값을 소수점 2자리로 반올림
    df[mc_columns] = df[mc_columns].astype(float).round(2)

    return df

# Streamlit 앱 구성
def main():
    # 전체 화면 사용 설정
    st.set_page_config(page_title="MC1 ~ MC8 Data Table", layout="wide")
    st.title("MC1 ~ MC8 Data Table with Styling")

    # CSS 스타일 추가 (테이블을 화면 세로로 최대화)
    st.markdown("""
        <style>
        .css-1oe6wy4 {  /* 페이지 전체 너비 사용 */
            max-width: 100%;
            margin-top: 0px;
        }
        .css-18e3th9 {  /* 상단 여백 제거 */
            padding-top: 0rem;
            padding-bottom: 0rem;
        }
        .stTabs [role="tablist"] {  /* 탭을 전체 너비로 확장 */
            display: flex;
            justify-content: space-between;
            width: 100%;
        }
        .stTabs {
            height: 100vh;  /* 탭 높이를 화면 전체로 설정 */
            overflow: hidden;
        }
        .block-container {
            padding-top: 0rem;
            padding-bottom: 0rem;
            height: 100vh;  /* 전체 화면 사용 */
            overflow: auto;
        }
        table {
            width: 100%;
            height: 100vh;  /* 테이블 세로 길이를 화면 최대화 */
            border-collapse: collapse;
        }
        th, td {
            padding: 8px;
            border: 1px solid #ddd;
        }
        </style>
    """, unsafe_allow_html=True)

    # 데이터 가져오기
    rows = fetch_main_data()

    if not rows:
        st.error("데이터를 가져오지 못했습니다. 프로시저 또는 데이터베이스 연결을 확인하세요.")
    else:
        # DataFrame 생성
        df = create_dataframe(rows)

        # 탭 만들기
        tabs = st.tabs(["메인 테이블", "탭2", "탭3"])

        with tabs[0]:
            st.subheader("메인 테이블 - 전체 행 표시")
            st.dataframe(df, use_container_width=True, height=1000)  # 테이블을 화면 최대 크기로 확장

        with tabs[1]:
            st.subheader("탭 2 내용")
            st.write("여기는 탭 2 입니다.")

        with tabs[2]:
            st.subheader("탭 3 내용")
            st.write("여기는 탭 3 입니다.")

if __name__ == "__main__":
    main()
✅ 코드 설명
st.dataframe() 으로 테이블을 화면 전체로 확장

python
코드 복사
st.dataframe(df, use_container_width=True, height=1000)
height=1000 값을 크게 설정하여 세로로 더 많은 데이터를 표시.

use_container_width=True 옵션으로 가로로 최대 확장.

CSS 스타일로 화면 최대화 설정

css
코드 복사
.block-container {
    height: 100vh;
    overflow: auto;
}
테이블 컨테이너의 높이를 100vh로 설정하여 화면 전체를 차지하게 함.

탭 최대화 설정 (stTabs)

css
코드 복사
.stTabs {
    height: 100vh;
    overflow: hidden;
}
탭을 전체 화면 크기로 설정하여 잘리지 않도록 함.

📌 설치 필요 라이브러리
bash
코드 복사
pip install streamlit pymssql pandas
📌 Streamlit 실행 방법
bash
코드 복사
streamlit run your_script_name.py
🔥 결과
테이블이 화면 세로로 완전히 확장되어 모든 데이터가 한 번에 표시됨.

탭이 잘리지 않고 화면을 꽉 채워 표시됨.