LogonUser 메서드를 수정하여 WindowsImpersonationContext 객체를 반환하도록 하고, NetworkSharingFolder.LogonUser를 호출하여 해당 객체를 사용할 수 있도록 코드를 조정하겠습니다. 아래 코드는 LogonUser 메서드를 수정하여 임퍼소네이션 컨텍스트를 반환하고, 이를 활용하여 공유폴더에 접근한 후에 원래 사용자 컨텍스트로 돌아오는 과정을 보여줍니다.

csharp
Copy code
using System;
using System.Security.Principal;
using System.Runtime.InteropServices;

public class NetworkSharingFolder
{
    [DllImport("advapi32.dll", SetLastError = true, CharSet = CharSet.Unicode)]
    public static extern bool LogonUser(String lpszUsername, String lpszDomain, String lpszPassword, 
        int dwLogonType, int dwLogonProvider, out SafeTokenHandle phToken);

    [DllImport("kernel32.dll", CharSet = CharSet.Auto)]
    public extern static bool CloseHandle(IntPtr handle);

    public static WindowsImpersonationContext LogonUser(string userName, string password, string domainName)
    {
        SafeTokenHandle safeTokenHandle;
        const int LOGON32_PROVIDER_DEFAULT = 0;
        const int LOGON32_LOGON_INTERACTIVE = 2;

        bool returnValue = LogonUser(userName, domainName, password, 
            LOGON32_LOGON_INTERACTIVE, LOGON32_PROVIDER_DEFAULT, out safeTokenHandle);

        if (false == returnValue)
        {
            int ret = Marshal.GetLastWin32Error();
            Console.WriteLine("LogonUser failed with error code: " + ret);
            throw new System.ComponentModel.Win32Exception(ret);
        }

        return WindowsIdentity.Impersonate(safeTokenHandle.DangerousGetHandle());
    }
}

public sealed class SafeTokenHandle : SafeHandleZeroOrMinusOneIsInvalid
{
    private SafeTokenHandle() : base(true) {}

    protected override bool ReleaseHandle()
    {
        return CloseHandle(handle);
    }
}

class Program
{
    static void Main()
    {
        try
        {
            using (WindowsImpersonationContext NFS1 = NetworkSharingFolder.LogonUser("username", "password", "domain"))
            {
                // Access shared folder here
                Console.WriteLine("Accessing shared folder...");

                // Revert to the original user
                NFS1.Undo();
            }

            // Other operations under the original user context
            Console.WriteLine("Performing other operations...");
        }
        catch (Exception ex)
        {
            Console.WriteLine("Exception occurred: " + ex.Message);
        }
    }
}
이 코드에서 NetworkSharingFolder.LogonUser 메서드는 userName, password, domainName을 입력받아 임퍼소네이션을 수행하고, WindowsImpersonationContext 객체를 반환합니다. 이 객체를 사용하여 공유폴더에 접근할 수 있고, Undo 메서드를 호출하여 임퍼소네이션을 종료할 수 있습니다. 이렇게 하면 나중에 다른 코드를 실행할 때