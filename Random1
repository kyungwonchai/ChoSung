래는 Y축 범위를 -1에서 1로 설정하고, 품질 기준선을 0.6과 -0.6에 추가하는 코드입니다.

수정된 코드
csharp
코드 복사
using DevExpress.Xpf.Charts;
using System;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.Linq;
using System.Windows;
using System.Windows.Media;

namespace LineDataViewer
{
    public partial class MainWindow : Window
    {
        private List<DataPoint> allData;

        public MainWindow()
        {
            InitializeComponent();
            LoadData();
            InitializeLineChart();
        }

        private void LoadData()
        {
            allData = new List<DataPoint>();
            var connectionString = "YourConnectionStringHere";

            using (var connection = new SqlConnection(connectionString))
            {
                connection.Open();
                var query = @"
                    SELECT ModelName, Timestamp, MP1DATA, MP2DATA, MP3DATA, MP4DATA, MP5DATA
                    FROM View_InspectionResult
                    ORDER BY Timestamp DESC";

                using (var command = new SqlCommand(query, connection))
                using (var reader = command.ExecuteReader())
                {
                    while (reader.Read())
                    {
                        allData.Add(new DataPoint
                        {
                            ModelName = reader.GetString(0),
                            Timestamp = reader.GetDateTime(1),
                            MP1 = reader.GetDouble(2),
                            MP2 = reader.GetDouble(3),
                            MP3 = reader.GetDouble(4),
                            MP4 = reader.GetDouble(5),
                            MP5 = reader.GetDouble(6),
                        });
                    }
                }
            }
        }

        private void InitializeLineChart()
        {
            var diagram = LineChart.Diagram as XYDiagram2D;
            if (diagram == null)
                return;

            diagram.Series.Clear();

            // Set Y-axis range
            diagram.AxisY.VisualRange = new VisualRange
            {
                Auto = false,
                MinValue = -1,
                MaxValue = 1
            };

            // Add quality lines at 0.6 and -0.6
            AddQualityLines(diagram);

            // Define colors for L and R series
            var blueColors = new[] { Colors.Blue, Colors.SkyBlue, Colors.DodgerBlue, Colors.CornflowerBlue, Colors.LightBlue };
            var redColors = new[] { Colors.Red, Colors.OrangeRed, Colors.Crimson, Colors.IndianRed, Colors.LightCoral };

            // L 모델 데이터 시리즈 추가
            var lData = allData.Where(d => d.ModelName.EndsWith("L")).ToList();
            for (int i = 1; i <= 5; i++)
            {
                var series = new LineSeries2D
                {
                    DisplayName = $"L 모델 MP{i}",
                    DataSource = lData,
                    ArgumentDataMember = "Timestamp",
                    ValueDataMember = $"MP{i}",
                    MarkerVisible = true,
                    LineStyle = new LineStyle { Thickness = 2 }, // 선 두께 설정
                    Brush = new SolidColorBrush(blueColors[i - 1]), // 파란색 계열 색상 적용
                    MarkerBrush = new SolidColorBrush(blueColors[i - 1]) // 마커 색상 동일하게 적용
                };
                diagram.Series.Add(series);
            }

            // R 모델 데이터 시리즈 추가
            var rData = allData.Where(d => d.ModelName.EndsWith("R")).ToList();
            for (int i = 1; i <= 5; i++)
            {
                var series = new LineSeries2D
                {
                    DisplayName = $"R 모델 MP{i}",
                    DataSource = rData,
                    ArgumentDataMember = "Timestamp",
                    ValueDataMember = $"MP{i}",
                    MarkerVisible = true,
                    LineStyle = new LineStyle { Thickness = 2 }, // 선 두께 설정
                    Brush = new SolidColorBrush(redColors[i - 1]), // 빨간색 계열 색상 적용
                    MarkerBrush = new SolidColorBrush(redColors[i - 1]) // 마커 색상 동일하게 적용
                };
                diagram.Series.Add(series);
            }
        }

        private void AddQualityLines(XYDiagram2D diagram)
        {
            // 품질 기준선 0.6
            var upperLine = new ConstantLine
            {
                AxisValue = 0.6,
                Title = new ConstantLineTitle
                {
                    Content = "Upper Limit",
                    Visibility = Visibility.Visible
                },
                Brush = new SolidColorBrush(Colors.Green), // 선 색상
                LineStyle = new LineStyle { Thickness = 1, DashStyle = DashStyles.Dash } // 점선
            };
            diagram.AxisY.ConstantLines.Add(upperLine);

            // 품질 기준선 -0.6
            var lowerLine = new ConstantLine
            {
                AxisValue = -0.6,
                Title = new ConstantLineTitle
                {
                    Content = "Lower Limit",
                    Visibility = Visibility.Visible
                },
                Brush = new SolidColorBrush(Colors.Red), // 선 색상
                LineStyle = new LineStyle { Thickness = 1, DashStyle = DashStyles.Dash } // 점선
            };
            diagram.AxisY.ConstantLines.Add(lowerLine);
        }
    }

    public class DataPoint
    {
        public string ModelName { get; set; }
        public DateTime Timestamp { get; set; }
        public double MP1 { get; set; }
        public double MP2 { get; set; }
        public double MP3 { get; set; }
        public double MP4 { get; set; }
        public double MP5 { get; set; }
    }
}
주요 변경 사항
Y축 범위 설정:

diagram.AxisY.VisualRange를 사용하여 MinValue = -1와 MaxValue = 1로 Y축 범위를 설정했습니다.
품질 기준선 추가:

ConstantLine을 사용해 Y축에 0.6(Upper Limit)과 -0.6(Lower Limit)의 선을 추가했습니다.
선 스타일은 LineStyle로 점선(DashStyle = DashStyles.Dash)을 설정했습니다.
각 선에 제목(ConstantLineTitle)을 추가했습니다.
예상 결과
Y축 범위: -1에서 1까지 설정.
품질 기준선:
0.6에 초록색 점선(Upper Limit).
-0.6에 빨간색 점선(Lower Limit).
데이터 선:
L 모델은 파란색 계열(5단계).