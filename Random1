말 죄송합니다. 제가 제공한 코드에 누락된 부분이 있었던 것 같습니다. 문제를 해결하기 위해 SerialPortManager 클래스의 관련 메서드를 추가로 제공하겠습니다.

아래는 SerialPortManager 클래스에서 누락된 메서드들이 포함된 코드입니다.

SerialPortManager.cs
csharp
코드 복사
using System;
using System.IO.Ports;

public class SerialPortManager
{
    private static SerialPortManager _instance;
    private SerialPort _scannerPort;

    public static SerialPortManager Instance => _instance ??= new SerialPortManager();

    public SerialPort ScannerPort => _scannerPort;

    private SerialPortManager()
    {
        // 초기화 코드
    }

    public void OpenScannerPort(string portName, int baudRate, Parity parity, int dataBits, StopBits stopBits)
    {
        try
        {
            if (_scannerPort != null && _scannerPort.IsOpen)
            {
                _scannerPort.Close();
            }

            _scannerPort = new SerialPort(portName, baudRate, parity, dataBits, stopBits)
            {
                ReadTimeout = 500,
                WriteTimeout = 500
            };
            _scannerPort.Open();
        }
        catch (Exception ex)
        {
            throw new InvalidOperationException("스캐너 포트를 열 수 없습니다.", ex);
        }
    }

    public string ReadScannerPortData()
    {
        try
        {
            if (_scannerPort != null && _scannerPort.IsOpen)
            {
                return _scannerPort.ReadLine();
            }
        }
        catch (TimeoutException)
        {
            // 읽기 시간 초과 시 빈 문자열 반환
            return string.Empty;
        }
        catch (Exception ex)
        {
            throw new InvalidOperationException("스캐너 포트에서 데이터를 읽을 수 없습니다.", ex);
        }

        return string.Empty;
    }

    public void SendDataToPort(string portName, string data)
    {
        try
        {
            using (SerialPort port = new SerialPort(portName))
            {
                if (!port.IsOpen)
                {
                    port.Open();
                }

                port.WriteLine(data);
            }
        }
        catch (Exception ex)
        {
            throw new InvalidOperationException($"포트 {portName}로 데이터를 전송할 수 없습니다.", ex);
        }
    }
}
주요 기능 설명:
OpenScannerPort 메서드:

스캐너 포트를 열고 설정된 통신 파라미터(baud rate, parity, data bits, stop bits)를 적용합니다.
기존에 포트가 열려 있으면 닫고 새롭게 포트를 엽니다.
ReadScannerPortData 메서드:

스캐너 포트에서 데이터를 읽습니다. 이 메서드는 데이터를 한 줄씩 읽으며, 시간 초과 시 빈 문자열을 반환합니다.
예외 발생 시 적절하게 처리합니다.
SendDataToPort 메서드:

데이터를 특정 포트로 전송합니다. 지정된 포트가 열려 있지 않으면 포트를 연 후 데이터를 전송합니다.
전송 후 포트를 닫습니다.
이제 이 메서드들을 사용해 SerialPortManager가 제대로 동작할 것입니다. 이 클래스가 MainWindow.xaml.cs와 연동되어 데이터를 읽고 전송하는 작업을 수행할 수 있습니다. 다시 한번, 문제를 일으킨 것에 대해 사과드리