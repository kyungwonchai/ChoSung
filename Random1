아래는 AFTER INSERT 및 AFTER UPDATE 트리거를 수정하여 모든 실수 값(mp1data ~ mp10data)을 소수점 3자리까지만 저장되도록 처리하는 트리거입니다.

수정된 트리거 코드
sql
코드 복사
CREATE TRIGGER trg_InsertOrUpdateInspectionResult
ON Table_InspectionResult
AFTER INSERT, UPDATE
AS
BEGIN
    SET NOCOUNT ON;

    -- 실수값을 소수점 3자리로 반올림하여 업데이트
    UPDATE Table_InspectionResult
    SET 
        mp1data = ROUND(mp1data, 3),
        mp2data = ROUND(mp2data, 3),
        mp3data = ROUND(mp3data, 3),
        mp4data = ROUND(mp4data, 3),
        mp5data = ROUND(mp5data, 3),
        mp6data = ROUND(mp6data, 3),
        mp7data = ROUND(mp7data, 3),
        mp8data = ROUND(mp8data, 3),
        mp9data = ROUND(mp9data, 3),
        mp10data = ROUND(mp10data, 3)
    WHERE id IN (SELECT id FROM INSERTED);
END;
GO
주요 동작 원리
AFTER INSERT, UPDATE:
트리거는 데이터를 삽입하거나 수정할 때 모두 실행됩니다.
ROUND 함수 사용:
ROUND(column, 3)를 사용하여 실수 값(mp1data ~ mp10data)을 소수점 3자리까지만 반올림합니다.
INSERTED 테이블 사용:
INSERTED 테이블에서 변경된 데이터의 id를 기준으로 해당 행만 업데이트합니다. (테이블에 id 또는 기본 키가 있어야 합니다.)
테스트
INSERT 테스트:

sql
코드 복사
INSERT INTO Table_InspectionResult (ipname, inspectiontime, modelname, alignresult, mp1data, mp2data, mp3data, mp4data, mp5data, mp6data, mp7data, mp8data, mp9data, mp10data)
VALUES ('10.22.164.22', GETDATE(), 'ModelA', 'Aligned', 0.123456, 0.654321, 0.999999, -0.123456, -0.654321, -0.999999, 1.234567, 1.987654, 0.000001, 1.000009);
UPDATE 테스트:

sql
코드 복사
UPDATE Table_InspectionResult
SET mp1data = 1.456789, mp2data = -0.987654
WHERE ipname = '10.22.164.22';
결과 확인
Table_InspectionResult 테이블의 데이터는 소수점 3자리까지만 저장됩니다.

ipname	mp1data	mp2data	mp3data	mp4data	mp5data	mp6data	mp7data	mp8data	mp9data	mp10data
10.22.164.22	0.123	0.654	1.000	-0.123	-0.654	-1.000	1.235	1.988	0.000	1.000
추가 설명
모든 실수값 소수점 제한:
삽입 또는 수정 시 실수 값이 항상 소수점 3자리까지만 저장되므로 데이터 일관성을 유지합니다.