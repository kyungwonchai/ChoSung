만 테두리 색상을 핑크로 변경하고, ALT 키를 떼면 원래대로 돌아가게 하려면, 이벤트 핸들러와 선택 상태에 따라 동적으로 스타일을 적용하는 로직이 필요합니다. 이번에는 SelectedItem의 스타일을 조건에 따라 변경하는 방법을 사용할 것입니다.

단계별 구현 방법
이벤트 핸들러 추가: ALT 키가 눌리고 떼질 때 이벤트를 처리합니다.
선택된 행의 스타일 변경: 이벤트 핸들러에서 현재 선택된 행의 테두리 스타일을 변경합니다.
예제 코드
csharp
Copy code
// MainWindow.xaml.cs
public partial class MainWindow : Window {
    public MainWindow() {
        InitializeComponent();
        this.PreviewKeyDown += MainWindow_PreviewKeyDown;
        this.PreviewKeyUp += MainWindow_PreviewKeyUp;
    }

    private void MainWindow_PreviewKeyDown(object sender, KeyEventArgs e) {
        if (e.Key == Key.LeftAlt || e.Key == Key.RightAlt) {
            ChangeSelectedRowBorder(true);
        }
    }

    private void MainWindow_PreviewKeyUp(object sender, KeyEventArgs e) {
        if (e.Key == Key.LeftAlt || e.Key == Key.RightAlt) {
            ChangeSelectedRowBorder(false);
        }
    }

    private void ChangeSelectedRowBorder(bool isAltPressed) {
        if (gridControl.SelectedItem != null) {
            var rowHandle = gridControl.View.GetRowHandle(gridControl.Items.IndexOf(gridControl.SelectedItem));
            if (isAltPressed) {
                tableView.RowStyle = new Style(typeof(DevExpress.Xpf.Grid.RowControl)) {
                    Setters = {
                        new Setter(DevExpress.Xpf.Grid.RowControl.BorderBrushProperty, Brushes.Pink),
                        new Setter(DevExpress.Xpf.Grid.RowControl.BorderThicknessProperty, new Thickness(2))
                    }
                };
            } else {
                tableView.RowStyle = new Style(typeof(DevExpress.Xpf.Grid.RowControl)) {
                    Setters = {
                        new Setter(DevExpress.Xpf.Grid.RowControl.BorderBrushProperty, Brushes.Transparent),
                        new Setter(DevExpress.Xpf.Grid.RowControl.BorderThicknessProperty, new Thickness(0))
                    }
                };
            }
        }
    }
}
설명
이벤트 핸들러: PreviewKeyDown와 PreviewKeyUp를 사용하여 ALT 키의 상태를 감지합니다.
선택된 행의 스타일 변경: ChangeSelectedRowBorder 함수를 통해 선택된 행의 테두리 색상과 굵기를 변경합니다. 선택된 행만 스타일이 적용되도록 합니다.
주의사항
이 코드는 ALT 키가 눌리고 있을 때 전체 그리드의 스타일을 변경하므로 모든 행이 영향을 받을 수 있습니다. 그러나 예제의 의도에 맞게 단일 선택된 행만 변경되게 하려면, SelectedItem에만 스타일을 적용하고 나머지 행은 기본 스타일을 유지해야 합니다.
RowHandle과 Items.IndexOf를 사용하여 선택된 행을 정확하게 식별하고, 그 행에만 스타일을 적용하는 방식을 구현해야 합니