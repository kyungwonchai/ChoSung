해했습니다. CustomExportCell 이벤트를 사용하여 셀의 데이터를 줄 바꿈을 유지하도록 설정해보겠습니다. 아래는 CustomExportCell 이벤트를 사용하여 줄 바꿈을 유지하는 방식으로 데이터를 엑셀로 내보내는 예제입니다.

1. XAML 설정
xml
코드 복사
<Window x:Class="WpfApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Grid>
        <dxg:GridControl x:Name="myGridControl" AutoGenerateColumns="AddNew">
            <dxg:GridControl.View>
                <dxg:TableView Name="myTableView" />
            </dxg:GridControl.View>
        </dxg:GridControl>
        <Button Content="Export to Excel" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="10" Click="btnExportToExcel_Click"/>
    </Grid>
</Window>
2. Code-Behind 설정 (MainWindow.xaml.cs)
csharp
코드 복사
using DevExpress.Export.Xl;
using DevExpress.Xpf.Grid;
using DevExpress.XtraPrinting;
using System.Windows;

namespace WpfApp
{
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();

            // 샘플 데이터 추가
            myGridControl.ItemsSource = new[]
            {
                new { Name = "John Doe", Address = "1234 Elm Street\nApt 5" },
                new { Name = "Jane Smith", Address = "5678 Oak Avenue\nSuite 12B" }
            };
        }

        private void btnExportToExcel_Click(object sender, RoutedEventArgs e)
        {
            string filePath = "output.xlsx";
            ExportGridToExcel(myGridControl, filePath);
            MessageBox.Show("엑셀로 내보내기가 완료되었습니다: " + filePath);
        }

        private void ExportGridToExcel(GridControl gridControl, string filePath)
        {
            // XlsxExportOptionsEx 객체를 생성합니다.
            XlsxExportOptionsEx options = new XlsxExportOptionsEx();
            options.ExportType = ExportType.WYSIWYG;

            // CustomExport 이벤트 핸들러 추가
            gridControl.View.CustomExportCell += View_CustomExportCell;

            // GridControl 데이터를 Excel 파일로 내보냅니다.
            gridControl.View.ExportToXlsx(filePath, options);

            // CustomExport 이벤트 핸들러 제거
            gridControl.View.CustomExportCell -= View_CustomExportCell;
        }

        private void View_CustomExportCell(object sender, CustomExportCellEventArgs e)
        {
            if (e.Column.FieldName == "Address" && e.Value is string text)
            {
                // 줄 바꿈을 유지하기 위해 줄 바꿈 문자를 추가합니다.
                e.Value = text.Replace("\n", "\r\n");
            }
        }
    }
}
이 코드는 다음과 같은 작업을 수행합니다:

XAML 설정: GridControl과 Export 버튼을 포함하는 간단한 UI를 정의합니다.
Code-Behind 설정:
GridControl에 샘플 데이터를 추가합니다.
btnExportToExcel_Click 이벤트 핸들러에서 ExportGridToExcel 메서드를 호출합니다.
ExportGridToExcel 메서드는 XlsxExportOptionsEx 객체를 생성하고, CustomExportCell 이벤트 핸들러를 추가하여 데이터를 엑셀로 내보냅니다.
View_CustomExportCell 이벤트 핸들러에서 줄 바꿈 문자를 \r\n으로 대체하여 줄 바꿈을 유지합니다.
이제 이 코드를 사용하면 GridControl의 데이터를 엑셀로 내보낼 때 줄 바꿈이 유지된 상태로 출력될 것입니