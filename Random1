델에서 소켓 서버를 열고, 소켓 서버로 메시지가 수신되면 메인 윈도우의 함수를 호출하려면 이벤트와 델리게이트를 사용하여 뷰모델과 메인 윈도우 간의 통신을 할 수 있습니다.

전체적인 흐름:
뷰모델에서 소켓 서버를 열고 메시지를 수신하면 이벤트를 발생시킵니다.
메인 윈도우가 이 이벤트를 구독하여 메시지가 수신될 때 메인 윈도우의 특정 함수를 실행합니다.
구현 방법:
뷰모델에서 이벤트를 선언하여, 메시지가 수신될 때 메인 윈도우로 전달.
메인 윈도우에서 이벤트를 구독하여, 이벤트가 발생하면 메인 윈도우의 함수를 실행.
1. MainViewModel.cs (뷰모델에서 소켓 서버와 이벤트 처리)
csharp
코드 복사
using System;
using System.Net;
using System.Net.Sockets;
using System.Text;
using System.Windows.Input;

namespace WpfApp
{
    public class MainViewModel : ViewModelBase
    {
        private SocketServer socketServer;

        // 메인 윈도우의 함수를 호출하기 위한 이벤트
        public event Action<string> MessageReceivedEvent;

        public ICommand StartSocketServerCommand { get; }

        public MainViewModel()
        {
            // 명령 초기화
            StartSocketServerCommand = new RelayCommand(StartSocketServer);
        }

        // 소켓 서버 시작
        private void StartSocketServer()
        {
            socketServer = new SocketServer();
            socketServer.MessageReceived += OnMessageReceived;
            socketServer.Start();
        }

        // 소켓 서버에서 메시지를 수신하면 이 함수가 호출됩니다.
        private void OnMessageReceived(string message)
        {
            // 이벤트를 통해 메인 윈도우로 메시지 전달
            MessageReceivedEvent?.Invoke(message);
        }

        // 모든 자원 해제
        public void Cleanup()
        {
            // 소켓 서버 종료
            socketServer?.Stop();
        }
    }
}
2. SocketServer.cs (소켓 서버에서 메시지 수신 처리)
csharp
코드 복사
using System;
using System.Net;
using System.Net.Sockets;
using System.Text;

namespace WpfApp
{
    public class SocketServer
    {
        private TcpListener listener;

        // 메시지가 수신되면 발생하는 이벤트
        public event Action<string> MessageReceived;

        public void Start()
        {
            listener = new TcpListener(IPAddress.Any, 5000);
            listener.Start();
            listener.BeginAcceptTcpClient(AcceptCallback, null);
        }

        public void Stop()
        {
            listener?.Stop();  // 소켓 서버 종료
        }

        private void AcceptCallback(IAsyncResult ar)
        {
            TcpClient client = listener.EndAcceptTcpClient(ar);
            NetworkStream stream = client.GetStream();
            byte[] buffer = new byte[client.ReceiveBufferSize];
            int bytesRead = stream.Read(buffer, 0, buffer.Length);

            string message = Encoding.ASCII.GetString(buffer, 0, bytesRead);

            // 메시지를 수신할 때 이벤트 발생
            MessageReceived?.Invoke(message);

            stream.Close();
            client.Close();
            listener.BeginAcceptTcpClient(AcceptCallback, null);  // 다시 대기
        }
    }
}
3. MainWindow.xaml.cs (메인 윈도우에서 이벤트 구독 및 함수 실행)
csharp
코드 복사
using System.Windows;

namespace WpfApp
{
    public partial class MainWindow : Window
    {
        private MainViewModel _viewModel;

        public MainWindow()
        {
            InitializeComponent();
            _viewModel = new MainViewModel();
            DataContext = _viewModel;

            // 뷰모델에서 메시지가 수신되면 이 이벤트를 구독합니다.
            _viewModel.MessageReceivedEvent += OnMessageReceived;

            // 윈도우가 닫힐 때 자원 해제
            this.Closing += MainWindow_Closing;
        }

        // 메인 윈도우에서 메시지 수신 시 호출되는 함수
        private void OnMessageReceived(string message)
        {
            // 메시지 수신 시, 메인 윈도우의 함수 실행
            MessageBox.Show($"메시지 수신: {message}", "소켓 서버");
        }

        // 윈도우 닫힐 때 뷰모델의 Cleanup 함수 호출
        private void MainWindow_Closing(object sender, System.ComponentModel.CancelEventArgs e)
        {
            _viewModel.Cleanup();
        }
    }
}
설명:
뷰모델에서 이벤트 선언 (MessageReceivedEvent):

뷰모델에서 MessageReceivedEvent라는 이벤트를 선언하고, 메시지가 소켓 서버에서 수신되면 이 이벤트를 발생시킵니다.
이 이벤트는 Action<string> 형식으로, 수신한 메시지를 메인 윈도우로 전달합니다.
소켓 서버에서 메시지 수신 시 이벤트 발생:

SocketServer 클래스에서 메시지가 수신되면, MessageReceived 이벤트를 발생시킵니다. 이 이벤트는 뷰모델의 OnMessageReceived 메서드에서 구독하고 있어, 메시지를 전달받게 됩니다.
메인 윈도우에서 뷰모델의 이벤트 구독:

MainWindow.xaml.cs에서 뷰모델의 MessageReceivedEvent 이벤트를 구독합니다.
이벤트가 발생하면 OnMessageReceived 메서드가 호출되어 메시지를 처리하게 됩니다.
윈도우의 함수를 호출:

메시지를 수신하면, 메인 윈도우에서 OnMessageReceived 메서드가 호출되고, 여기서 원하는 작업을 수행할 수 있습니다. 예시에서는 메시지를 MessageBox로 출력하고 있습니다