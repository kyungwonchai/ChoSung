분석함

분석함
python
항상 세부 정보 표시

코드 복사
# 분석을 위해 필요한 컬럼만 복사
ct_columns_act2 = [f'ACT2_{i}' for i in range(1, 9)]
ct_columns_best = [f'ACT2BEST_{i}' for i in range(1, 9)]

# ACT2 및 ACT2BEST 그룹마다: 0보다 큰 값만 남기고, 이상치 제거 후, 각 행 최대값 계산
def process_group(df, ct_cols):
    # 0보다 큰 값만 사용
    df_valid = df.copy()
    for col in ct_cols:
        df_valid = df_valid[df_valid[col] > 0]
    
    # 이상치 제거용 Q1/Q3 계산
    flat_values = pd.concat([df_valid[col] for col in ct_cols], axis=0)
    q1 = flat_values.quantile(0.25)
    q3 = flat_values.quantile(0.75)
    
    # Q1~Q3 범위 내 값만 유지
    for col in ct_cols:
        df_valid[col] = df_valid[col].where(df_valid[col].between(q1, q3))
    
    # 각 행에서 최대값 계산
    df_valid['row_max'] = df_valid[ct_cols].max(axis=1)
    return df_valid

# ACT2 처리
df_act2 = process_group(df, ct_columns_act2)

# ACT2BEST 처리
df_best = process_group(df, ct_columns_best)

# 고유 키 기준으로 groupby 후, row_max 최솟값만 남기기
key_cols = ['line1', 'model1', 'type1', 'ecn1', 'edition1']

min_act2 = df_act2.groupby(key_cols)['row_max'].min().reset_index().rename(columns={'row_max': 'max_act2'})
min_best = df_best.groupby(key_cols)['row_max'].min().reset_index().rename(columns={'row_max': 'max_act2best'})

# 두 결과를 병합 후, CTDIFF 계산
final = pd.merge(min_act2, min_best, on=key_cols)
final['ctdiff'] = final['max_act2'] - final['max_act2best']

import ace_tools as tools; tools.display_dataframe_to_user(name="CT DIFF Summary", dataframe=final)
결과
    line1    model1   type1   ecn1 edition1  max_act2  max_act2best    ctdiff
0   SMD_1   MODEL_1  TYPE_1  ECN_1     ED_1  0.377934      0.433258 -0.055324
1  SMD_10  MODEL_10  TYPE_1  ECN_2     ED_2  0.474306      0.419463  0.054843
2   SMD_2   MODEL_2  TYPE_2  ECN_2     ED_2  0.482373      0.433789  0.048583
3   SMD_3   MODEL_3  TYPE_3  ECN_3     ED_1  0.494252      0.453106  0.041146
4   SMD_4   MODEL_4  TYPE_1  ECN_4     ED_2  0.353159      0.430777 -0.077618
CT DIFF Summary
위 표는 다음의 로직을 정확히 반영한 결과입니다:

분석 절차 요약:
최근 5시간의 데이터만 사용

각 행에서:

ACT2_1~8, ACT2BEST_1~8 각각 8개 값 중 0보다 큰 값만 사용

전체 8개 값에서 Q1~Q3 범위만 남김 (이상치 제거)

그 후 각 행의 최대값 추출

고유 키(line1, model1, type1, ecn1, edition1)별로:

ACT2에서 계산된 행 최대값 중 최솟값 → max_act2

ACT2BEST도 동일하게 계산 → max_act2best

두 값을 빼서 ctdiff = max_act2 - max_act2best 계산
