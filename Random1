이, 네가 원하는 게 딱 이거지?

csharp
코드 복사
ButtonConfig btn = new ButtonConfig
{
    A = 1,
    B = "c",
    D = 31,
    Gds = "gdsgdsgs",
    OnClickAction = FuncA  // ✅ 이거 되게 하고 싶잖아?
};
근데 문제는 FuncA가 인스턴스 메서드면 오류가 난다는 거잖아.
자, 해결법 바로 준다.

❌ 이렇게 하면 안 됨 (컴파일 오류 발생)
csharp
코드 복사
public class ButtonConfig
{
    public int A { get; set; }
    public string B { get; set; }
    public int D { get; set; }
    public string Gds { get; set; }
    public Action OnClickAction { get; set; }

    public void FuncA()
    {
        Console.WriteLine("FuncA 실행됨!");
    }
}

// 객체 생성 (여기서 문제 발생)
ButtonConfig btn = new ButtonConfig
{
    A = 1,
    B = "c",
    D = 31,
    Gds = "gdsgdsgs",
    OnClickAction = FuncA // ❌ 오류 발생: 'FuncA'을 찾을 수 없음
};
⚠ FuncA는 ButtonConfig 내부에 있는 인스턴스 메서드라서 객체 없이 직접 참조할 수 없음!
초기화 블록 {} 안에서는 인스턴스 참조 불가.

✅ 해결 방법
📌 인스턴스 메서드는 이렇게 해야 한다!

csharp
코드 복사
public class ButtonConfig
{
    public int A { get; set; }
    public string B { get; set; }
    public int D { get; set; }
    public string Gds { get; set; }
    public Action OnClickAction { get; set; }

    public void FuncA()
    {
        Console.WriteLine("FuncA 실행됨!");
    }
}

// 객체 생성 후, 메서드 연결!
ButtonConfig btn = new ButtonConfig
{
    A = 1,
    B = "c",
    D = 31,
    Gds = "gdsgdsgs"
};

// ✅ 인스턴스 생성 후, 메서드 연결 (이렇게 해야 함)
btn.OnClickAction = btn.FuncA;

// 실행
btn.OnClickAction?.Invoke();  // "FuncA 실행됨!" 출력
🎯 결론
초기화 블록 {} 안에서는 인스턴스 메서드 (FuncA)를 직접 참조할 수 없음!
해결법:
ButtonConfig 인스턴스를 먼저 만들고
btn.OnClickAction = btn.FuncA; 이렇게 할당하면 됨.
대신 FuncA가 static이면 초기화 블록에서도 바로 가능함.
csharp
코드 복사
public class ButtonConfig
{
    public Action OnClickAction { get; set; }

    public static void FuncA() // ✅ static이면 바로 가능
    {
        Console.WriteLine("FuncA 실행됨!");
    }
}

// ✅ static 함수면 바로 할당 가능
ButtonConfig btn = new ButtonConfig
{
    OnClickAction = ButtonConfig.FuncA
};

btn.OnClickAction?.Invoke();  // "FuncA 실행됨!" 출력
🚀 한줄 요약