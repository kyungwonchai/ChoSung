askManager.cs - 텍스트 파일 생성 제거 및 폴더 열기 기능 추가
TaskManager 클래스에서 텍스트 파일을 생성하지 않고, 데이터베이스에만 저장하도록 구현하겠습니다. 또한, 폴더 열기 기능을 추가하여 MainWindow에서 이를 호출할 수 있도록 하겠습니다.

csharp
코드 복사
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.IO;
using SwiftAIMaster.Models;
using SwiftAIMaster.Services;

namespace SwiftAIMaster.ViewModels
{
    public class TaskManager
    {
        private readonly DatabaseService _databaseService;  
        public ObservableCollection<TaskModel> Tasks { get; set; }

        // 기본 폴더 경로 설정
        private readonly string _baseFolderPath = @"D:\_KwTaskist";

        public TaskManager(DatabaseService databaseService)
        {
            _databaseService = databaseService;
            Tasks = new ObservableCollection<TaskModel>(_databaseService.GetAllTasks());

            // 기본 폴더가 없으면 생성
            if (!Directory.Exists(_baseFolderPath))
            {
                Directory.CreateDirectory(_baseFolderPath);
            }

            Tasks.CollectionChanged += Tasks_CollectionChanged;
        }

        public void AddTask(TaskModel task)
        {
            task.FolderPath = Path.Combine(_baseFolderPath, task.FolderPath);

            // 폴더가 존재하지 않으면 생성
            if (!Directory.Exists(task.FolderPath))
            {
                Directory.CreateDirectory(task.FolderPath);
            }

            task.Priority = Tasks.Count + 1;
            Tasks.Insert(0, task);
            _databaseService.AddTask(task);
        }

        public void UpdateTask(TaskModel task)
        {
            task.UpdateCount++;
            task.LastUpdateTime = DateTime.Now;
            _databaseService.UpdateTask(task);
        }

        // 폴더 열기 기능 추가
        public void OpenFolder(string folderPath)
        {
            if (Directory.Exists(folderPath))
            {
                Process.Start(new ProcessStartInfo
                {
                    FileName = folderPath,
                    UseShellExecute = true,
                    Verb = "open"
                });
            }
            else
            {
                throw new DirectoryNotFoundException("폴더가 존재하지 않습니다.");
            }
        }

        private void Tasks_CollectionChanged(object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
        {
            if (e.Action == System.Collections.Specialized.NotifyCollectionChangedAction.Move)
            {
                UpdateTaskPriorities();
            }
        }

        private void UpdateTaskPriorities()
        {
            for (int i = 0; i < Tasks.Count; i++)
            {
                var task = Tasks[i];
                task.Priority = i + 1;
                _databaseService.UpdateTaskPriority(task.Id, task.Priority);
            }
        }
    }
}
MainWindow.xaml.cs - TaskManager의 OpenFolder 호출
MainWindow.xaml.cs에서 TaskManager의 OpenFolder 메서드를 호출하여 폴더 열기 기능을 구현합니다.

csharp
코드 복사
using System.Windows;
using System.Windows.Input;
using SwiftAIMaster.ViewModels;

namespace SwiftAIMaster.Views
{
    public partial class MainWindow : Window
    {
        private MainViewModel ViewModel => (MainViewModel)DataContext;

        public MainWindow()
        {
            InitializeComponent();
            DataContext = new MainViewModel();
        }

        // 작업 추가 버튼 클릭 이벤트
        private void AddTaskButton_Click(object sender, RoutedEventArgs e)
        {
            var addTaskWindow = new AddTaskWindow();
            if (addTaskWindow.ShowDialog() == true)
            {
                var newTask = addTaskWindow.Task;
                ViewModel.AddNewTask(newTask.FolderPath, newTask.CellColor, newTask.Assignee);
            }
        }

        // 폴더 열기 명령 설정
        public ICommand OpenFolderCommand => new RelayCommand<string>(folderPath => 
        {
            try
            {
                ViewModel.TaskManager.OpenFolder(folderPath);
            }
            catch (DirectoryNotFoundException ex)
            {
                MessageBox.Show(ex.Message, "오류", MessageBoxButton.OK, MessageBoxImage.Error);
            }
        });
    }
}
요약
TaskManager에서 텍스트 파일 생성 제거: 텍스트 파일을 생성하지 않고 데이터베이스에만 저장하도록 수정했습니다.
폴더 열기 기능: TaskManager에 폴더 열기 기능을 추가하고, MainWindow에서 이를 호출하여 탐색기를 통해 폴더가 열리도록 구현했습니다.
이제 텍스트 파일이 생성되지 않으며, TaskManager를 통해 폴더 열기 기능이 정상 작동할 것입니다. 추가 요청 사항이 있으시면 알려 주세