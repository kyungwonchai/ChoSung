{% extends 'layout.html' %}

{% block content %}
<div class="container">
    <h1>{{ title }}</h1>

    <div class="mb-3">
        <button onclick="location.reload()" class="btn btn-primary">상태 새로고침: 전체보기</button>
        <button onclick="toggleFailedConnections()" class="btn btn-danger ml-2">통신이상 보기</button>
    </div>

    <div class="table-responsive">
        <table class="table table-bordered table-hover">
            <thead class="thead-light">
                <tr>
                    <th>PC 이름</th>
                    <th>IP 주소</th>
                    <th>TS/2000 포트 상태</th> </tr>
            </thead>
            <tbody>
                {% for pc in pcs %}
                <tr>
                    <td>{{ pc.name }}</td>
                    <td>{{ pc.address }}</td>
                    <td class="{% if results.get(pc.id) %}bg-success{% else %}bg-warning{% endif %} text-white">
                        {% if results.get(pc.id) %}
                        연결 정상
                        {% else %}
                        연결 실패
                        {% endif %}
                    </td>
                </tr>
                {% endfor %}
            </tbody>
        </table>
    </div>
</div>
{% endblock %}

{% block scripts %}
<script>
    let isShowingFailedOnly = false; // 현재 통신 이상인 행만 보고 있는지 여부

    function toggleFailedConnections() {
        const rows = document.querySelectorAll('tbody tr');
        isShowingFailedOnly = !isShowingFailedOnly; // 토글

        rows.forEach(row => {
            // 연결 상태를 나타내는 TD 요소를 찾습니다.
            // 이 TD는 bg-success 또는 bg-warning 클래스를 가집니다.
            const statusCell = row.querySelector('td.bg-success, td.bg-warning');

            if (statusCell) {
                const isFailedConnection = statusCell.classList.contains('bg-warning'); // 연결 실패 여부 확인

                if (isShowingFailedOnly) {
                    // '통신이상 보기' 모드일 때
                    if (isFailedConnection) {
                        // 통신 이상인 행은 보이게 유지
                        row.classList.remove('d-none');
                    } else {
                        // 연결 정상인 행은 숨김
                        row.classList.add('d-none');
                    }
                } else {
                    // '전체 보기' 모드일 때
                    // 모든 행의 d-none 클래스를 제거하여 보이게 합니다.
                    row.classList.remove('d-none');
                }
            }
        });
    }

    // CSS에 .d-none { display: none !important; } 가 정의되어 있어야 합니다.
</script>
{% endblock %}