우 폼(WinForms)에서 백그라운드 작업을 실행하고 UI를 안전하게 업데이트하기 위해 Invoke 메소드를 사용하는 방법을 설명하겠습니다. WinForms에서는 Control.Invoke 메소드를 사용하여 UI 컨트롤에 안전하게 액세스합니다. 이것은 다른 스레드에서 UI 스레드로 작업을 마샬링하는 데 사용됩니다.

다음은 이전에 제공된 코드를 WinForms 환경에 맞게 수정한 예입니다. 이 코드는 백그라운드 스레드에서 폴더를 분석하고, 메인 UI의 ListBox에 폴더 정보를 추가합니다.

WinForms 예제 코드
먼저, WinForms 프로젝트에 ListBox를 추가하고 아래 코드를 사용하십시오.

Form1.cs
csharp
Copy code
using System;
using System.IO;
using System.Threading;
using System.Windows.Forms;

public partial class Form1 : Form
{
    public Form1()
    {
        InitializeComponent();
        StartFolderAnalysis(@"C:\Path\To\Start");  // 분석을 시작할 루트 디렉토리 경로
    }

    private void StartFolderAnalysis(string path)
    {
        Thread thread = new Thread(() => AnalyzeFolders(path));
        thread.IsBackground = true;  // 백그라운드 스레드로 설정
        thread.Start();
    }

    private void AnalyzeFolders(string path)
    {
        DirectoryInfo rootDir = new DirectoryInfo(path);
        foreach (DirectoryInfo dir in rootDir.GetDirectories())
        {
            long size = CalculateFolderSize(dir);
            if (size >= 1073741824) // 1GB 이상
            {
                string info = $"{dir.FullName} ({size} bytes)";
                UpdateListBox(info);  // UI 스레드에서 ListBox 업데이트
            }
            AnalyzeFolders(dir.FullName);  // 재귀적으로 하위 폴더 분석
        }
    }

    private long CalculateFolderSize(DirectoryInfo directory)
    {
        long size = 0;
        FileInfo[] files = directory.GetFiles();
        foreach (FileInfo file in files)
        {
            size += file.Length;
        }
        return size;
    }

    private void UpdateListBox(string info)
    {
        if (listBox.InvokeRequired)  // 다른 스레드에서 호출되는 경우
        {
            listBox.Invoke(new Action<string>(UpdateListBox), info);
        }
        else
        {
            listBox.Items.Add(info);
        }
    }
}
설명
Thread: 백그라운드에서 폴더를 분석하는 작업을 시작합니다. 스레드를 백그라운드로 설정하여 프로그램이 닫힐 때 자동으로 종료되도록 합니다.
InvokeRequired: 현재 코드가 컨트롤의 생성 스레드와 다른 스레드에서 호출되는지 확인합니다. 만약 그렇다면 Invoke를 사용하여 메인 UI 스레드에서 작업을 수행하도록 합니다.
UpdateListBox: 안전하게 ListBox를 업데이트합니다. Invoke를 통해 메인 스레드에서 ListBox의 Items 컬렉션에 접근합니다.
이 접근 방식을 사용하면 프로그램의 메인 UI가 응답성을 유지하면서도 백그라운드 스레드에서 복잡한 파일 시스템 작업을 수행할 수 있습니다.






