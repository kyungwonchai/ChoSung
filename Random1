ML에서 TextBox의 배경색을 현재 TextBox의 텍스트에 따라 변경하려면, Style과 DataTrigger 또는 Binding과 Converter를 사용할 수 있습니다. 여기서는 Binding과 Converter를 사용하는 방법을 예시로 들겠습니다.

먼저, 텍스트에 따라 색상을 결정하는 IValueConverter를 구현해야 합니다. 예를 들어, 텍스트 길이에 따라 다른 색상을 반환하는 컨버터는 다음과 같이 구현할 수 있습니다:

csharp
Copy code
using System;
using System.Globalization;
using System.Windows.Data;
using System.Windows.Media;

public class TextToBackgroundColorConverter : IValueConverter
{
    public object Convert(object value, Type targetType, object parameter, CultureInfo culture)
    {
        var text = value as string;
        if (string.IsNullOrEmpty(text))
            return Brushes.White; // 빈 텍스트일 경우 흰색 배경

        // 텍스트 길이에 따라 다른 색상 반환
        if (text.Length < 5)
            return Brushes.LightGreen;
        else if (text.Length < 10)
            return Brushes.LightBlue;
        else
            return Brushes.LightPink;
    }

    public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)
    {
        throw new NotImplementedException();
    }
}
그 다음, XAML에서 이 컨버터를 사용하여 TextBox의 Background 속성에 바인딩합니다.

xml
Copy code
<Window ...
        xmlns:local="clr-namespace:YourNamespace">
    <Window.Resources>
        <local:TextToBackgroundColorConverter x:Key="TextToBackgroundConverter"/>
    </Window.Resources>

    <TextBox Text="{Binding YourTextProperty, UpdateSourceTrigger=PropertyChanged}">
        <TextBox.Background>
            <Binding RelativeSource="{RelativeSource Self}" Path="Text" 
                     Converter="{StaticResource TextToBackgroundConverter}"/>
        </TextBox.Background>
    </TextBox>
</Window>
이 예시에서 TextToBackgroundColorConverter는 텍스트의 길이에 따라 다른 배경색을 반환합니다. YourNamespace는 해당 컨버터 클래스가 위치한 네임스페이스로 변경해 주세요. YourTextProperty는 바인딩하려는 속성 이름으로 변경해야 합니다.

이 방법으로 TextBox의 텍스트 내용에 따라 동적으로 배경색을 변경할 수 있습니다.





