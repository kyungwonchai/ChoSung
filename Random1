 PictureBox에 OpenCvSharp 이미지 표시하기
WinForms에서는 PictureBox를 사용하여 OpenCvSharp에서 처리한 이미지를 표시할 수 있습니다.

1. 핵심 개념
화면 캡처 → Bitmap 변환
Bitmap을 Mat으로 변환
이진화 적용 (Threshold)
이진화된 Mat을 Bitmap으로 변환
WinForms PictureBox에 이미지 표시
2. WinForms UI 디자인
📌 폼 (Form1.cs [Design])

Button (btnProcess) → 이미지 처리 실행
PictureBox (pictureBox1) → 결과 이미지 표시
📌 디자이너에서 직접 추가 가능

버튼: btnProcess (텍스트: "이진화 적용")
PictureBox: pictureBox1 (크기 600x400)
3. WinForms 코드 (Form1.cs)
csharp
코드 복사
using System;
using System.Drawing;
using System.IO;
using System.Windows.Forms;
using OpenCvSharp;
using OpenCvSharp.Extensions;

namespace WinFormsOpenCv
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        // 버튼 클릭 시 실행
        private void btnProcess_Click(object sender, EventArgs e)
        {
            // 화면 캡처
            Bitmap screenshot = CaptureScreen();

            // OpenCV Mat 변환 및 이진화 적용
            Mat matImage = BitmapConverter.ToMat(screenshot);
            Mat gray = new Mat();
            Cv2.CvtColor(matImage, gray, ColorConversionCodes.BGR2GRAY);
            Mat binary = new Mat();
            Cv2.Threshold(gray, binary, 200, 255, ThresholdTypes.Binary);

            // PictureBox에 표시
            pictureBox1.Image = ConvertMatToBitmap(binary);
        }

        // 화면 캡처 함수
        private Bitmap CaptureScreen()
        {
            Rectangle bounds = Screen.PrimaryScreen.Bounds;
            Bitmap bitmap = new Bitmap(bounds.Width, bounds.Height);
            using (Graphics g = Graphics.FromImage(bitmap))
            {
                g.CopyFromScreen(Point.Empty, Point.Empty, bounds.Size);
            }
            return bitmap;
        }

        // Mat → Bitmap 변환
        private Bitmap ConvertMatToBitmap(Mat mat)
        {
            return mat.ToBitmap();
        }
    }
}
4. 코드 설명
✔ 버튼 클릭 이벤트 (btnProcess_Click)
화면 캡처 → Bitmap으로 저장
csharp
코드 복사
Bitmap screenshot = CaptureScreen();
OpenCvSharp Mat으로 변환
csharp
코드 복사
Mat matImage = BitmapConverter.ToMat(screenshot);
그레이스케일 변환
csharp
코드 복사
Mat gray = new Mat();
Cv2.CvtColor(matImage, gray, ColorConversionCodes.BGR2GRAY);
이진화 적용 (Threshold)
csharp
코드 복사
Mat binary = new Mat();
Cv2.Threshold(gray, binary, 200, 255, ThresholdTypes.Binary);
이진화된 Mat을 Bitmap으로 변환 후 PictureBox에 표시
csharp
코드 복사
pictureBox1.Image = ConvertMatToBitmap(binary);
5. 실행 결과
WinForms 앱 실행
"이진화 적용" 버튼 클릭
현재 화면을 캡처하여 흰색 배경을 유지한 채 나머지는 검은색으로 변환