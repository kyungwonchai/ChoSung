404 Not Found는 Nginx가 브라우저가 요청한 파일을 서버에서 찾지 못했다는 의미입니다. "File not found" 라고 보셨다면 정확히 그 뜻이 맞습니다.

가장 흔한 원인부터 순서대로 체크리스트를 드릴 테니 하나씩 확인해 보세요.

## 💡 404 에러 해결 체크리스트
1. Nginx 설정 파일의 root 경로 확인
가장 흔한 원인입니다. Nginx 설정에 적어둔 웹사이트 파일 경로(root)가 실제 파일이 있는 경로와 다른 경우입니다.

설정 파일 확인:

Bash

# 보통 이 경로에 있습니다.
sudo nano /etc/nginx/sites-available/your_site.conf
설정 내용:

Nginx

server {
    # ...
    # 이 경로가 실제 파일이 있는 디렉터리와 정확히 일치하는지 확인하세요.
    root /var/www/my-project/build;
    # ...
}
실제 경로 확인:
터미널에서 ls -l /var/www/my-project/build 명령어를 입력해서 파일 목록이 제대로 보이는지 확인해 보세요. 경로가 다르거나 파일이 없다면 이 부분을 수정해야 합니다.

2. 파일 및 폴더 권한 문제 🔑
root 경로는 맞는데, Nginx를 실행하는 유저(www-data)가 해당 파일에 접근할 권한이 없는 경우입니다.

소유권 및 권한 변경:
아래 명령어로 웹 프로젝트 폴더의 소유권을 www-data로 변경하고, 적절한 읽기/실행 권한을 부여하세요.

Bash

# /var/www/my-project 부분을 실제 프로젝트 경로로 바꾸세요.
sudo chown -R www-data:www-data /var/www/my-project
sudo chmod -R 755 /var/www/my-project
3. React/Vue 같은 SPA(Single Page Application) 설정 누락 🔄
React나 Vue 프로젝트의 경우, http://내주소.com/login 같은 서브 경로로 바로 접속하거나 새로고침하면 404 에러가 자주 발생합니다. 이는 Nginx가 /login이라는 실제 파일을 찾으려고 하기 때문입니다.

해결책: try_files 설정을 추가해서 모든 요청을 index.html로 보내야 합니다.

Nginx

server {
    # ...
    root /var/www/my-project/build;
    index index.html;

    location / {
        # 아래 한 줄이 있는지 확인하고 없다면 추가하세요.
        # "요청한 파일($uri)을 찾아보고, 없으면 디렉터리를 찾아보고, 그것도 없으면 index.html을 보여줘" 라는 의미입니다.
        try_files $uri $uri/ /index.html;
    }
}
4. proxy_pass로 연결된 백엔드 서버의 문제
만약 API 요청(http://내주소.com/api/users 등)에서 404가 발생한다면, Nginx 문제는 아닐 수 있습니다. Nginx가 요청을 넘겨준 Flask, Node.js 같은 백엔드 앱에 해당 API 라우팅이 정의되지 않은 경우입니다.

확인 방법:

F12 개발자 도구의 [Network] 탭을 엽니다.

페이지를 새로고침하고, 404 상태 코드를 받은 요청이 어떤 것인지 확인합니다.

만약 main.js, style.css 같은 정적 파일이 404라면 1, 2번이 원인일 확률이 높습니다.

만약 /api/data 같은 API 요청이 404라면, 백엔드 애플리케이션의 로그를 확인해서 해당 경로의 코드가 제대로 작동하는지 봐야 합니다.

✅ 가장 먼저 확인할 것 요약
Nginx 설정 파일의 root 경로가 정확한가?

해당 경로의 파일과 폴더에 www-data 유저가 접근할 권한이 있는가?

React 같은 SPA라면 try_files $uri $uri/ /index.html; 설정이 location / 블록에 있는가?

위 세 가지만 먼저 확인해도 대부분의 404 문제는 해결됩니다. 확인 후에는 꼭 Nginx를 재시작해서 설정을 적용해주세요.
sudo systemctl restart nginx






Deep Research
