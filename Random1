록 시 임시 테이블 생성과 삭제 과정에서 문제가 발생하는 것 같습니다. 이벤트 블록 내에서 임시 테이블을 사용하지 않고, 동일한 작업을 수행하는 방법을 찾아보겠습니다.

임시 테이블 대신 사용자 변수를 사용하여 DELETE 작업을 수행할 수 있습니다.

1단계: 사용자 변수를 사용하여 바코드 리스트를 저장
sql
코드 복사
SET @barcodes = (
    SELECT GROUP_CONCAT(barcode)
    FROM smd.ft_2d_archive
    WHERE machine = 2
);
2단계: 사용자 변수를 사용하여 삭제 작업 수행
sql
코드 복사
SET @query = CONCAT('DELETE FROM smd.ft_2d_archive WHERE machine = 1 AND ftsite = "0,0" AND barcode IN (', @barcodes, ')');
PREPARE stmt FROM @query;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;
전체 이벤트 등록 스크립트
sql
코드 복사
-- 이벤트 스케줄러 활성화
SET GLOBAL event_scheduler = ON;

-- 이벤트 등록
CREATE EVENT delete_specific_rows
ON SCHEDULE EVERY 1 DAY -- 하루에 한 번 실행
DO
BEGIN
    -- 사용자 변수를 사용하여 바코드 리스트 저장
    SET @barcodes = (
        SELECT GROUP_CONCAT(barcode)
        FROM smd.ft_2d_archive
        WHERE machine = 2
    );

    -- 사용자 변수를 사용하여 삭제 작업 수행
    SET @query = CONCAT('DELETE FROM smd.ft_2d_archive WHERE machine = 1 AND ftsite = "0,0" AND barcode IN (', @barcodes, ')');
    PREPARE stmt FROM @query;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt;
END;
이 방법은 임시 테이블을 사용하지 않고, 바코드 값을 사용자 변수에 저장한 후, 해당 변수를 사용하여 DELETE 작업을 수행합니다. GROUP_CONCAT 함수를 사용하여 바코드 리스트를 쉼표로 구분된 문자열로 만들어 쿼리에 포함시키는 방식입니다.

이벤트 블록 내에서의 사용자 변수 사용이 허용되지 않으면, 해당 부분을 다른 방식으로 처리해야 할 수도 있습니다. 경우에 따라 트리거 또는 저장 프로시저를 사용하여