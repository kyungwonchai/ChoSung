로 시작하고, "2024"로 시작하는 경우도 추가하겠습니다. "2024"로 시작하는 경우에는 언더바 없이 자릿수가 6 이상이어야 합니다.

다음은 이 조건을 만족하는 정규식을 포함한 코드입니다:

csharp
코드 복사
using System;
using System.IO;
using System.Linq;
using System.Text.RegularExpressions;
using System.Timers;
using System.Windows;

namespace FolderCheckApp
{
    public partial class MainWindow : Window
    {
        private Timer timer;
        private readonly string[] folderPaths = {
            @"C:\Folder1",
            @"C:\Folder2",
            @"D:\Folder3",
            @"E:\Folder4",
            @"F:\Folder5"
        };

        // 정규식 패턴 수정: BSM 또는 SM으로 시작하거나 2024로 시작하고 자릿수가 6 이상인 경우
        private readonly Regex filePathPattern = new Regex(@".*(((B?SM-.+_.+_.+_.+.*\.jpg$)|(2024.+\.jpg$))).*", RegexOptions.IgnoreCase);

        public MainWindow()
        {
            InitializeComponent();
            InitializeTimer();
        }

        private void InitializeTimer()
        {
            timer = new Timer(3600000); // 1 hour interval in milliseconds
            timer.Elapsed += OnTimerElapsed;
            timer.AutoReset = true;
            timer.Start();
        }

        private void OnTimerElapsed(object sender, ElapsedEventArgs e)
        {
            foreach (var folderPath in folderPaths)
            {
                if (Directory.Exists(folderPath))
                {
                    // 폴더 내 모든 JPG 파일 검색
                    var allFiles = Directory.GetFiles(folderPath, "*.jpg", SearchOption.AllDirectories);

                    // 전체 경로에서 패턴을 확인하는 로직
                    var matchingFiles = allFiles.Where(file =>
                    {
                        bool isMatch = filePathPattern.IsMatch(file);
                        // 각 파일의 전체 경로와 매칭 결과 출력
                        Console.WriteLine($"Checking file: {file}, Match: {isMatch}");
                        return isMatch;
                    }).ToList();

                    // 매칭된 파일의 수가 20개 이상인지 확인
                    if (matchingFiles.Count >= 20)
                    {
                        // 최근 1시간 이내에 생성된 파일 필터링
                        var recentFiles = matchingFiles.Where(file => File.GetCreationTime(file) > DateTime.Now.AddHours(-1)).ToList();

                        // 최근 파일이 존재하면 작업 수행
                        if (recentFiles.Any())
                        {
                            Dispatcher.Invoke(() => PerformNextAction(folderPath));
                            return;
                        }
                    }
                }
            }
        }

        private void PerformNextAction(string selectedFolderPath)
        {
            // 선택된 폴더에 대한 후속 작업 구현
            MessageBox.Show($"Selected Folder: {selectedFolderPath}");
        }
    }
}
수정된 정규식 설명:
.*B?SM-.+_.+_.+_.+.*\.jpg$: "BSM" 또는 "SM"으로 시작하고, 언더바로 구분된 부분이 있는 파일.
.*2024.+\.jpg$: "2024"로 시작하고, 언더바 없이 6자리 이상으로 구성된 파일.
이 코드에서는 전체 파일 경로를 확인하며, 정규식 패턴에 맞는지 여부를 출력합니다. 파일 경로가 주어진 조건과 일치하는지 검증할 수 있습니다.

이제 각 파일의 전체 경로가 주어진 패턴을 포함하는지 확인할 수 있습니