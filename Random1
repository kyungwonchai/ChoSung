
import React from 'react';
import PdfDownloadButton from './PdfDownloadButton';

const ESP32Guide: React.FC = () => {
    const viewId = 'esp32-guide-view';

    return (
        <div id={viewId} className="text-gray-300 leading-relaxed">
            <div className="flex justify-between items-start mb-2">
                <div>
                    <h1 className="text-3xl font-bold text-white mb-2">시스템 표준 컨트롤러 가이드: ESP32</h1>
                    <p className="text-lg text-cyan-300 mb-6">
                        MaskRack LED 시스템의 표준 컨트롤러로 ESP32를 채택한 이유와 그 강력한 장점들을 알아봅니다.
                    </p>
                </div>
                <div className="flex-shrink-0 ml-4">
                    <PdfDownloadButton elementId={viewId} fileName="ESP32-Controller-Guide.pdf" />
                </div>
            </div>

            <section className="space-y-4 mb-12">
                <h2 className="text-2xl font-semibold text-white border-b border-gray-600 pb-2 mb-4">개요</h2>
                <p>
                    본 프로젝트는 각 랙의 제어를 위해 <strong className="text-white">ESP32를 표준 컨트롤러로 사용합니다.</strong>
                    ESP32는 Arduino IDE를 통해 동일한 개발 방식으로 프로그래밍할 수 있으면서도, 비교할 수 없는 강력한 성능과 내장 Wi-Fi 기능을 제공합니다. 
                    이를 통해 시스템의 복잡성을 크게 낮추고, 안정성과 유지보수 편의성을 극대화합니다.
                </p>
            </section>

            <section className="space-y-6 mb-12">
                <h2 className="text-2xl font-semibold text-white border-b-2 border-cyan-500 pb-3 mb-6">주요 스펙 비교: 왜 ESP32인가?</h2>
                <div className="overflow-x-auto">
                    <table className="w-full text-left border-collapse">
                        <thead>
                            <tr>
                                <th className="border-b-2 border-gray-600 p-4 bg-gray-800/50 text-white font-semibold">기능</th>
                                <th className="border-b-2 border-gray-600 p-4 bg-gray-800/50 text-white font-semibold">Arduino Nano (Atmega328p)</th>
                                <th className="border-b-2 border-gray-600 p-4 bg-gray-800/50 text-white font-semibold">ESP32 (Xtensa LX6)</th>
                                <th className="border-b-2 border-gray-600 p-4 bg-gray-800/50 text-cyan-300 font-semibold">MaskRack 시스템에서의 의미</th>
                            </tr>
                        </thead>
                        <tbody className="bg-gray-800/50">
                            <tr>
                                <td className="border-b border-gray-700 p-4">CPU</td>
                                <td className="border-b border-gray-700 p-4">8-bit, 16MHz, Single-core</td>
                                <td className="border-b border-gray-700 p-4 font-bold text-white">32-bit, 160~240MHz, Dual-core</td>
                                <td className="border-b border-gray-700 p-4 text-cyan-400">압도적인 처리 속도로 웹서버 운영, Wi-Fi 통신, LED 제어를 동시에 원활히 처리.</td>
                            </tr>
                            <tr>
                                <td className="border-b border-gray-700 p-4">메모리</td>
                                <td className="border-b border-gray-700 p-4">2KB SRAM, 32KB Flash</td>
                                <td className="border-b border-gray-700 p-4 font-bold text-white">520KB SRAM, 4MB+ Flash</td>
                                <td className="border-b border-gray-700 p-4 text-cyan-400">펌웨어 용량 걱정 없음. OTA, 웹서버, 상세 로깅 등 고급 기능 구현 가능.</td>
                            </tr>
                            <tr>
                                <td className="border-b border-gray-700 p-4">네트워크</td>
                                <td className="border-b border-gray-700 p-4">별도 모듈 필요 (유선/무선)</td>
                                <td className="border-b border-gray-700 p-4 font-bold text-white">Wi-Fi, Bluetooth/BLE 내장</td>
                                <td className="border-b border-gray-700 p-4 text-cyan-400">핵심 장점. RS485, 컨버터 등 추가 하드웨어와 배선이 불필요. 시스템이 극도로 단순해짐.</td>
                            </tr>
                             <tr>
                                <td className="border-b border-gray-700 p-4">소비 전력</td>
                                <td className="border-b border-gray-700 p-4">~20mA (Active)</td>
                                <td className="border-b border-gray-700 p-4 font-bold text-white">~25mA (Active), Deep Sleep 모드 지원</td>
                                <td className="border-b border-gray-700 p-4 text-cyan-400">저전력 설계에 유리하며, 향후 배터리 기반 시스템으로의 확장 가능성 제공.</td>
                            </tr>
                            <tr>
                                <td className="p-4">총 시스템 비용</td>
                                <td className="p-4">보드 + RS485 모듈 + <strong className="text-red-400">중앙 컨버터 비용</strong></td>
                                <td className="p-4 font-bold text-white">보드 비용만 존재</td>
                                <td className="p-4 text-cyan-400">ESP32 채택 시, 비싼 중앙 컨버터가 제거되어 <strong className="text-green-400">전체 시스템 비용이 오히려 저렴</strong>해질 수 있음.</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </section>
            
            <section className="space-y-6 mb-12">
                <h2 className="text-2xl font-semibold text-white border-b-2 border-orange-500 pb-3 mb-6">ESP32 도입의 핵심 장점</h2>
                <div className="grid md:grid-cols-2 gap-6">
                    <div className="bg-gray-800/50 p-6 rounded-lg border border-gray-700">
                        <h3 className="text-xl font-bold text-orange-400 mb-2">1. OTA (Over-the-Air) 업데이트</h3>
                        <p>
                            가장 강력한 장점입니다. 현장에 설치된 수십, 수백 개의 컨트롤러 펌웨어를 업데이트하기 위해 물리적으로 방문하여 USB를 연결할 필요가 없습니다. 
                            Wi-Fi를 통해 원격으로 모든 기기의 펌웨어를 일괄 업데이트하여 <strong className="text-white">유지보수 시간과 비용을 극적으로 절감</strong>할 수 있습니다.
                        </p>
                    </div>
                     <div className="bg-gray-800/50 p-6 rounded-lg border border-gray-700">
                        <h3 className="text-xl font-bold text-orange-400 mb-2">2. 내장 웹서버 및 진단 기능</h3>
                        <p>
                           각 컨트롤러가 자체적인 웹 서버를 구동할 수 있습니다. 이를 통해 각 랙의 IP 주소로 접속하여 현재 상태, 네트워크 연결 정보, 최근 로그 등을 확인하는 <strong className="text-white">자체 진단 페이지</strong>를 만들 수 있습니다. 문제 발생 시 원인 파악이 매우 용이해집니다.
                        </p>
                    </div>
                     <div className="bg-gray-800/50 p-6 rounded-lg border border-gray-700">
                        <h3 className="text-xl font-bold text-orange-400 mb-2">3. 강력한 보안</h3>
                        <p>
                           Arduino Nano로는 구현하기 어려운 <strong className="text-white">HTTPS, MQTTS 등 암호화된 통신 프로토콜</strong>을 충분히 처리할 수 있는 성능을 제공합니다. 
                           기업 내부망에서 통신 데이터를 안전하게 보호하고 보안 규정을 준수할 수 있습니다.
                        </p>
                    </div>
                     <div className="bg-gray-800/50 p-6 rounded-lg border border-gray-700">
                        <h3 className="text-xl font-bold text-orange-400 mb-2">4. 미래 확장성</h3>
                        <p>
                            듀얼코어와 풍부한 메모리는 향후 시스템에 새로운 기능을 추가할 때 유연성을 제공합니다. 
                            예를 들어, 각 슬롯에 부품 유무를 감지하는 센서를 추가하거나, 더 복잡한 LED 애니메이션을 구현하는 등의 <strong className="text-white">기능 확장이 손쉽습니다.</strong>
                        </p>
                    </div>
                </div>
            </section>

            <section className="space-y-4">
                <h2 className="text-2xl font-semibold text-white border-b border-gray-600 pb-2 mb-4">결론</h2>
                <div className="bg-green-900/30 border border-green-700 text-green-200 p-6 rounded-lg">
                    <p className="font-semibold text-lg">
                        장기적인 관점에서 유지보수의 편의성, 확장성, 보안, 그리고 총 소유 비용(TCO) 절감을 고려할 때 ESP32는 단순한 '업그레이드'가 아닌, <strong className="text-white">프로젝트의 성공을 보장하는 가장 합리적이고 전략적인 선택</strong>입니다.
                    </p>
                    <p className="mt-4">
                        이것이 MaskRack LED 시스템이 ESP32를 표준 컨트롤러로 채택한 이유입니다.
                    </p>
                </div>
            </section>
        </div>
    );
};