rol의 TextEditSettings에는 ValidateOnInput라는 속성이 없습니다. 대신, 사용자 입력을 실시간으로 처리하고 유효성 검사를 수행하려면 EditValueChanging 이벤트를 사용해야 합니다.

아래는 사용자가 입력한 날짜 데이터를 yyyy-MM-dd 형식으로 변환하고 유효성을 검사하는 방법에 대한 코드 예시입니다:

XAML에 TextEditSettings를 사용하여 텍스트 편집 설정을 추가합니다.
xml
Copy code
<dxg:GridColumn FieldName="YourDateField">
    <dxg:GridColumn.EditSettings>
        <dxe:TextEditSettings EditValueChanging="TextEditSettings_EditValueChanging"/>
    </dxg:GridColumn.EditSettings>
</dxg:GridColumn>
EditValueChanging 이벤트 핸들러에서 사용자 입력을 처리합니다.
csharp
Copy code
private void TextEditSettings_EditValueChanging(object sender, DevExpress.Xpf.Editors.EditValueChangingEventArgs e)
{
    if (e.NewValue != null)
    {
        string input = e.NewValue.ToString();
        DateTime result;
        // 여러 날짜 형식을 지원하기 위한 형식 배열
        string[] dateFormats = { "M/d", "M-d", "M/d/yy", "M-d-yy", "yyyy-M-d", "yyyy/M/d" };
        
        // 입력된 값을 시도하여 DateTime으로 파싱합니다.
        if (DateTime.TryParseExact(input, dateFormats, CultureInfo.InvariantCulture, DateTimeStyles.None, out result))
        {
            // 유효한 날짜 포맷으로 변환합니다.
            e.NewValue = result.ToString("yyyy-MM-dd");
        }
        else
        {
            // 유효하지 않은 날짜 입력에 대해 처리합니다.
            e.NewValue = DBNull.Value;
        }
    }
}
이 코드는 사용자가 입력하는 날짜 형식이 dateFormats 배열에 정의된 형식 중 하나와 일치할 경우 DateTime.TryParseExact 메소드를 사용하여 날짜로 변환하고, yyyy-MM-dd 형식의 문자열로 e.NewValue를 설정합니다. 만약 입력값이 유효하지 않으면 DBNull.Value를 설정하여 사용자가 올바른 값을 입력하도록 유도합니다.

YourDateField는 실제 데이터 모델 또는 데이터베이스 테이블의 날짜 필드 이름으로 대체해야 합니다. 위 코드를 GridControl의 컬럼 설정에 맞게 적용하면, 사용자가 입력한 날짜가 지정된 형식으로 자동 변환됩니다.





