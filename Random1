제 정리:
현재 컬럼이 많다:

ACT1_1 ~ ACT1_8 (8개)

ACT2_1 ~ ACT2_8 (8개)

ACT2BEST_1 ~ ACT2BEST_8 (8개)

총 24개 컬럼을 어떻게 하면 Streamlit으로 한눈에 잘 들어오게 보여줄 수 있을까?

해결 방법:
1. 섹션별로 나누기 (탭 방식)
컬럼을 그룹별로 나누고 Streamlit의 st.tabs()를 사용해서 보기 쉽게 표시.

python
코드 복사
import streamlit as st
import pandas as pd
import numpy as np

# 예시 데이터 생성
data = pd.DataFrame(np.random.randn(5, 24), columns=[
    f'ACT1_{i+1}' for i in range(8)] +
    [f'ACT2_{i+1}' for i in range(8)] +
    [f'ACT2BEST_{i+1}' for i in range(8)]
)

tab1, tab2, tab3 = st.tabs(["ACT1", "ACT2", "ACT2BEST"])

with tab1:
    st.write("ACT1 Data")
    st.dataframe(data.iloc[:, 0:8])  # ACT1

with tab2:
    st.write("ACT2 Data")
    st.dataframe(data.iloc[:, 8:16])  # ACT2

with tab3:
    st.write("ACT2BEST Data")
    st.dataframe(data.iloc[:, 16:24])  # ACT2BEST
장점:

데이터를 3개의 탭으로 나누어 보여주기 때문에 훨씬 깔끔하게 볼 수 있음.

데이터가 많아도 눈에 잘 들어옴.

2. 컬럼 비교 강조하기 (동시에 비교 가능하게 표시)
탭으로 나누지 않고 Streamlit의 st.columns()로 동시에 비교할 수 있게 표시.

python
코드 복사
import streamlit as st
import pandas as pd
import numpy as np

# 예시 데이터 생성
data = pd.DataFrame(np.random.randn(5, 24), columns=[
    f'ACT1_{i+1}' for i in range(8)] +
    [f'ACT2_{i+1}' for i in range(8)] +
    [f'ACT2BEST_{i+1}' for i in range(8)]
)

col1, col2, col3 = st.columns(3)

with col1:
    st.write("ACT1")
    st.dataframe(data.iloc[:, 0:8])

with col2:
    st.write("ACT2")
    st.dataframe(data.iloc[:, 8:16])

with col3:
    st.write("ACT2BEST")
    st.dataframe(data.iloc[:, 16:24])
장점:

3개의 컬럼을 한 화면에 동시에 비교 가능.

ACT1, ACT2, ACT2BEST의 차이를 즉시 확인할 수 있음.

3. 값의 차이를 색으로 표현하기 (히트맵 스타일)
컬럼을 색으로 표시하여 한눈에 확인 가능하게 만들기.

python
코드 복사
import streamlit as st
import pandas as pd
import numpy as np

# 예시 데이터 생성
data = pd.DataFrame(np.random.randn(5, 24), columns=[
    f'ACT1_{i+1}' for i in range(8)] +
    [f'ACT2_{i+1}' for i in range(8)] +
    [f'ACT2BEST_{i+1}' for i in range(8)]
)

# Streamlit dataframe 스타일링
st.write(data.style.background_gradient(cmap='coolwarm', axis=None))
장점:

높은 값과 낮은 값을 색상으로 쉽게 구별 가능.

문제되는 부분을 빠르게 파악 가능.

4. 그래프 사용하기 (Line Chart / Bar Chart)
CT1, CT2, CT2Best의 차이를 그래프로 보여주면 비교하기 쉬움.

python
코드 복사
import streamlit as st
import pandas as pd
import numpy as np

# 예시 데이터 생성
data = pd.DataFrame(np.random.randn(5, 24), columns=[
    f'ACT1_{i+1}' for i in range(8)] +
    [f'ACT2_{i+1}' for i in range(8)] +
    [f'ACT2BEST_{i+1}' for i in range(8)]
)

st.line_chart(data)
장점:

시계열 데이터를 쉽게 비교 가능.

특정 구간에서 문제가 발생하는지 확인할 수 있음.

추천 방법:
섹션별로 나누기 (탭 방식) + 컬럼 비교 강조하기 (컬럼 방식)

st.tabs()와 st.columns()을 함께 사용해서 필요한 부분만 집중해서 볼 수 있게 만듦.

예를 들어, 탭으로 ACT1, ACT2, ACT2BEST를 나누고, 탭 안에서 st.columns()로 비교 가능하게 만듦.

핵심 포인트:
탭과 컬럼을 함께 사용해서 필요한 정보를 쉽게 찾을 수 있도록 구성.

문제를 빨리 찾기 위해 색상 강조 기능 사용.

그래프를 추가하면 더 직관적으로 문제를 발견할 수 있음.