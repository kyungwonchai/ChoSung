입력 제한을 없애고 텍스트박스가 포커스를 잃었을 때만 정수로 제한하여 처리하는 방식으로 수정해드리겠습니다. PreviewTextInput 이벤트를 제거하고, 대신 LostFocus 이벤트에서 입력 값이 정수가 아닌 경우 값을 비우거나 경고 메시지를 표시할 수 있습니다.

아래는 수정된 코드입니다.

XAML (MainWindow.xaml)
xml
코드 복사
<Window x:Class="LabelSaverApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Label Saver" Height="200" Width="400">
    <StackPanel Margin="20">
        <TextBox Name="txt1" Width="300" Margin="0,5" LostFocus="TextBox_LostFocus"/>
        <TextBox Name="txt2" Width="300" Margin="0,5" LostFocus="TextBox_LostFocus"/>
        <TextBox Name="txt3" Width="300" Margin="0,5" LostFocus="TextBox_LostFocus"/>
        <TextBox Name="txt4" Width="300" Margin="0,5" LostFocus="TextBox_LostFocus"/>
    </StackPanel>
</Window>
C# 코드 (MainWindow.xaml.cs)
csharp
코드 복사
using System;
using System.IO;
using System.Windows;
using System.Windows.Controls;

namespace LabelSaverApp
{
    public partial class MainWindow : Window
    {
        private readonly string folderPath = @"C:\agent\mySMD_v2\label";
        private readonly string filePath;

        public MainWindow()
        {
            InitializeComponent();

            // 파일 경로 설정 및 폴더 생성
            filePath = System.IO.Path.Combine(folderPath, "label분할..ini");
            Directory.CreateDirectory(folderPath);

            // 폼을 열 때 파일에서 값 로드
            LoadSettings();
        }

        // 텍스트박스의 포커스를 잃을 때 값을 검증하고 저장하는 이벤트 핸들러
        private void TextBox_LostFocus(object sender, RoutedEventArgs e)
        {
            if (sender is TextBox textBox)
            {
                // 정수로 변환할 수 없는 경우 빈 값으로 설정
                if (!int.TryParse(textBox.Text, out _))
                {
                    MessageBox.Show("정수 값만 입력 가능합니다.", "입력 오류", MessageBoxButton.OK, MessageBoxImage.Warning);
                    textBox.Text = string.Empty;
                }
            }

            SaveSettings(); // 검증 후 값 저장
        }

        // 파일에 값을 저장하는 함수
        private void SaveSettings()
        {
            using (StreamWriter writer = new StreamWriter(filePath))
            {
                writer.WriteLine($"txt1={txt1.Text}");
                writer.WriteLine($"txt2={txt2.Text}");
                writer.WriteLine($"txt3={txt3.Text}");
                writer.WriteLine($"txt4={txt4.Text}");
            }
        }

        // 파일에서 값을 로드하여 텍스트박스에 설정하는 함수
        private void LoadSettings()
        {
            if (!File.Exists(filePath)) return;

            using (StreamReader reader = new StreamReader(filePath))
            {
                string line;
                while ((line = reader.ReadLine()) != null)
                {
                    string[] parts = line.Split('=');
                    if (parts.Length == 2)
                    {
                        switch (parts[0])
                        {
                            case "txt1":
                                txt1.Text = parts[1];
                                break;
                            case "txt2":
                                txt2.Text = parts[1];
                                break;
                            case "txt3":
                                txt3.Text = parts[1];
                                break;
                            case "txt4":
                                txt4.Text = parts[1];
                                break;
                        }
                    }
                }
            }
        }
    }
}
설명
정수 값 확인: TextBox_LostFocus 이벤트에서 int.TryParse를 사용해 텍스트박스의 값이 정수로 변환 가능한지 확인합니다.
변환할 수 없는 경우(정수가 아닐 경우), 경고 메시지를 표시하고 해당 텍스트박스를 빈 값으로 설정합니다.