press 22.2 WinForms의 RibbonControl에 100개의 커스텀 버튼을 동적으로 추가하고, 체크박스를 통해 이들의 표시 여부를 제어하는 전문가 수준의 코드를 제공하겠습니다. 이 코드는 성능과 유지보수성을 고려하여 작성되었으며, 각 부분에 상세한 주석을 포함하고 있습니다.

1. BarButtonItem 배열 생성 및 RibbonControl에 추가:

아래 코드는 100개의 BarButtonItem을 생성하고, 지정된 RibbonPage와 RibbonPageGroup에 추가하는 방법을 보여줍니다. 페이지나 그룹이 존재하지 않을 경우, 이를 생성하여 추가합니다.

csharp
코드 복사
using DevExpress.XtraBars;
using DevExpress.XtraBars.Ribbon;
using System.Linq;
using System.Windows.Forms;

public partial class MainForm : RibbonForm
{
    // 생성된 BarButtonItem들을 저장할 리스트
    private List<BarButtonItem> customButtons = new List<BarButtonItem>();

    public MainForm()
    {
        InitializeComponent();

        // 커스텀 버튼 추가 메서드 호출
        AddCustomButtons();

        // 체크박스 생성 및 설정
        CheckBox toggleButtonVisibilityCheckBox = new CheckBox
        {
            Text = "커스텀 버튼 표시",
            Checked = false, // 기본적으로 체크 해제 상태 (버튼 표시)
            AutoSize = true,
            Dock = DockStyle.Top
        };

        // 체크박스의 체크 상태 변경 이벤트 핸들러 등록
        toggleButtonVisibilityCheckBox.CheckedChanged += ToggleButtonVisibilityCheckBox_CheckedChanged;

        // 체크박스를 폼에 추가
        this.Controls.Add(toggleButtonVisibilityCheckBox);
    }

    private void AddCustomButtons()
    {
        // RibbonControl 인스턴스가 'ribbonControl'이라고 가정합니다.

        // RibbonPage와 RibbonPageGroup 이름 정의
        string pageName = "CustomPage";
        string groupName = "CustomGroup";

        // RibbonPage 찾기
        RibbonPage page = ribbonControl.Pages.FirstOrDefault(p => p.Name == pageName);
        if (page == null)
        {
            // 페이지가 없으면 생성하여 추가
            page = new RibbonPage(pageName) { Text = "사용자 정의 페이지" };
            ribbonControl.Pages.Add(page);
        }

        // RibbonPageGroup 찾기
        RibbonPageGroup group = page.Groups.FirstOrDefault(g => g.Name == groupName);
        if (group == null)
        {
            // 그룹이 없으면 생성하여 추가
            group = new RibbonPageGroup(groupName) { Text = "사용자 정의 그룹" };
            page.Groups.Add(group);
        }

        // 100개의 BarButtonItem 생성 및 그룹에 추가
        for (int i = 1; i <= 100; i++)
        {
            BarButtonItem newButton = new BarButtonItem
            {
                Caption = $"버튼 {i}", // 버튼의 캡션 설정
                Tag = "CustomButton", // 버튼의 태그 설정
                Id = ribbonControl.Manager.GetNewItemId(), // 고유한 ID 설정
                ImageOptions = { SvgImage = svgImageCollection1["iconName"] } // 아이콘 설정 (svgImageCollection1은 미리 정의된 이미지 컬렉션)
            };

            // 생성된 버튼을 리스트에 추가
            customButtons.Add(newButton);

            // 그룹에 새로운 버튼 추가
            group.ItemLinks.Add(newButton);
        }
    }

    private void ToggleButtonVisibilityCheckBox_CheckedChanged(object sender, System.EventArgs e)
    {
        CheckBox checkBox = sender as CheckBox;
        bool isChecked = checkBox.Checked;

        // 'CustomButton' 태그를 가진 모든 BarButtonItem의 가시성 설정
        foreach (var button in customButtons)
        {
            button.Visibility = isChecked ? BarItemVisibility.Always : BarItemVisibility.Never;
        }
    }
}
코드 설명:

customButtons 리스트 생성: 생성된 BarButtonItem들을 관리하기 위해 리스트를 사용합니다.

AddCustomButtons 메서드:

페이지 및 그룹 확인/생성: 지정된 이름의 RibbonPage와 RibbonPageGroup이 존재하는지 확인하고, 없으면 생성하여 추가합니다.
버튼 생성 및 추가: 100개의 BarButtonItem을 생성하고, 각 버튼의 Caption, Tag, Id, ImageOptions를 설정한 후, 그룹에 추가합니다. 또한, 생성된 버튼을 customButtons 리스트에 저장하여 이후 가시성 제어에 사용합니다.
체크박스를 통한 가시성 제어:

체크박스 생성 및 설정: 폼 상단에 위치한 체크박스를 생성하고, 기본적으로 체크 해제 상태로 설정하여 버튼들이 표시되도록 합니다.
이벤트 핸들러 등록: 체크박스의 CheckedChanged 이벤트에 핸들러를 등록하여, 체크 상태에 따라 customButtons 리스트에 있는 모든 버튼의 Visibility를 Always 또는 Never로 설정합니다.
참고 자료:

RibbonControl.Items Property | WinForms Controls