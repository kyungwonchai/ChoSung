의 Value를 내부 변수로 바인딩하려면 INotifyPropertyChanged 인터페이스를 구현해야 합니다. 이렇게 하면 내부 변수가 변경될 때 UI가 자동으로 업데이트됩니다.

C# ViewModel 코드 예시:

csharp

using System.ComponentModel;

public class MyViewModel : INotifyPropertyChanged
{
    private string _myValue;

    public string MyValue
    {
        get { return _myValue; }
        set
        {
            if (_myValue != value)
            {
                _myValue = value;
                OnPropertyChanged("MyValue");
            }
        }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    protected virtual void OnPropertyChanged(string propertyName)
    {
        PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
    }
}

XAML 코드 예시:

xml

<Style TargetType="ControlType">
    <Style.Triggers>
        <DataTrigger Binding="{Binding MyValue}" Value="SomeValue">
            <!-- Set properties here -->
        </DataTrigger>
    </Style.Triggers>
</Style>

이렇게 하면 MyValue가 변경될 때마다 DataTrigger가 새 값을 인식하고 동작합니다. 코드가 최신 버전의 C#과 WPF에 적용됩니다. 이 코드를 꼭 테스트해보세