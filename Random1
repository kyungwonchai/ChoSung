alR은 웹 기반으로 작동하지만, Windows 어플리케이션에서도 클라이언트로 동작할 수 있습니다. 그러나 서버는 웹 서버에서 동작해야 하기 때문에, ASP.NET 웹 애플리케이션을 만들어서 그 안에 SignalR Hub를 구현하고, WPF 어플리케이션이 이 Hub와 통신하는 구조로 만들 수 있습니다.
서버(ASP.NET)

    Visual Studio에서 새로운 ASP.NET Web Application 프로젝트를 생성합니다.
    NuGet 패키지 관리자에서 Microsoft.AspNet.SignalR을 설치합니다.
    Startup.cs에 다음 코드를 추가합니다.

csharp

using Microsoft.Owin;
using Owin;
[assembly: OwinStartup(typeof(YourNamespace.Startup))]
namespace YourNamespace
{
    public class Startup
    {
        public void Configuration(IAppBuilder app)
        {
            app.MapSignalR();
        }
    }
}

    새로운 클래스로 Hub를 만듭니다.

csharp

using Microsoft.AspNet.SignalR;
public class EditHub : Hub
{
    public void UpdateEditStatus(string key1, string username, string column)
    {
        Clients.Others.receiveEditStatus(key1, username, column);
    }
}

WPF 클라이언트 (.NET 4.8)

    NuGet에서 Microsoft.AspNet.SignalR.Client를 설치합니다.
    클라이언트 코드 예:

csharp

using Microsoft.AspNet.SignalR.Client;

// ...

HubConnection hubConnection = new HubConnection("http://yourServerAddress");
IHubProxy hubProxy = hubConnection.CreateHubProxy("EditHub");

await hubConnection.Start();

hubProxy.On<string, string, string>("receiveEditStatus", (key1, username, column) => 
{
    // 편집 상태 처리
});

배포

서버 애플리케이션은 IIS 위에 배포할 수 있고, 이 경우 Windows Server 2012에서도 문제 없이 동작합니다. 클라이언트 애플리케이션은 각 사용자의 컴퓨터에 설치됩니다.

이렇게 하면, WPF 클라이언트 애플리케이션과 웹 서버가 실시간으로 통신할 수 있게 