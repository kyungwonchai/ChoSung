일 경우를 고려하여 UploadFile_Click 함수를 수정하겠습니다. 또한, Tag를 사용하지 않고 직접 데이터 소스에서 행 정보를 가져오도록 하겠습니다.

csharp
코드 복사
private void UploadFile_Click(object sender, RoutedEventArgs e)
{
    // 현재 선택된 행을 가져옵니다.
    DataRowView rowView = gridControl.CurrentItem as DataRowView;
    
    if (rowView == null)
    {
        MessageBox.Show("파일을 업로드할 행을 선택하세요.");
        return;
    }

    OpenFileDialog openFileDialog = new OpenFileDialog();
    if (openFileDialog.ShowDialog() == true)
    {
        string filePath = openFileDialog.FileName;
        string fileName = openFileDialog.SafeFileName;

        using (SqlConnection conn = new SqlConnection(connectionString))
        {
            conn.Open();
            string query = "UPDATE 테이블A SET FileName = @FileName, FileData = @FileData WHERE ID = @ID";
            SqlCommand cmd = new SqlCommand(query, conn);
            cmd.Parameters.AddWithValue("@FileName", fileName);

            // StreamReader를 사용하여 파일을 읽어서 바이트 배열로 변환합니다.
            using (StreamReader reader = new StreamReader(filePath))
            {
                byte[] fileData = System.Text.Encoding.UTF8.GetBytes(reader.ReadToEnd());
                cmd.Parameters.AddWithValue("@FileData", fileData);
            }

            cmd.Parameters.AddWithValue("@ID", rowView["ID"]);
            cmd.ExecuteNonQuery();
        }

        LoadData();
    }
}
설명
gridControl.CurrentItem을 사용하여 현재 선택된 행을 가져옵니다. 선택된 행이 없으면 경고 메시지를 표시하고 함수를 종료합니다.
OpenFileDialog를 통해 사용자가 업로드할 파일을 선택합니다.
선택된 파일의 경로(filePath)와 파일 이름(fileName)을 가져옵니다.
SqlConnection을 사용하여 데이터베이스에 연결합니다.
SQL 쿼리를 준비하고, 파일 이름과 파일 데이터를 매개 변수로 추가합니다.
StreamReader를 사용하여 파일을 읽고, UTF-8 인코딩을 사용하여 바이트 배열로 변환합니다.
SQL 명령을 실행하여 파일 데이터를 데이터베이스에 저장합니다.
데이터베이스에서 데이터를 다시 로드하여 GridControl을 업데이트합니다.
이 코드는 선택된 행이 없을 경우를 처리하고, Tag를 사용하지 않고 CurrentItem을 사용하여 직접 데이터 소스에서 행 정보를 가져오도록 수정하였습니