odelName의 마지막 글자가 'L' 또는 'R'로 끝나는 데이터를 각각 그룹화하여 MP1MP5를 표시하고, 사용자가 범례에서 MP1MP5를 선택하거나 해제할 때 두 그룹에 동시에 적용되도록 구현하려면, 다음과 같은 방법을 고려할 수 있습니다:

데이터 분리 및 시리즈 생성:

데이터 분리: ModelName의 마지막 글자가 'L'인 데이터와 'R'인 데이터를 분리합니다.
시리즈 생성: 각 그룹에 대해 MP1~MP5에 해당하는 시리즈를 생성합니다. 예를 들어, 'L' 그룹의 MP1 시리즈와 'R' 그룹의 MP1 시리즈를 각각 만듭니다.
동일한 범례 항목 사용:

DevExpress ChartControl에서는 기본적으로 각 시리즈에 대해 개별적인 범례 항목이 생성됩니다. 그러나 사용자 정의 범례 항목을 만들어 여러 시리즈를 하나의 범례 항목으로 그룹화할 수 있습니다. 이를 통해 사용자가 MP1을 선택하거나 해제하면 'L'과 'R' 그룹의 MP1 시리즈 모두에 적용되도록 설정할 수 있습니다.
범례 항목 클릭 이벤트 처리:

사용자가 범례 항목을 클릭할 때 해당하는 시리즈의 가시성을 제어하는 이벤트 핸들러를 구현합니다. 이 핸들러에서 'L'과 'R' 그룹의 해당 MP 시리즈의 가시성을 동시에 변경하도록 설정합니다.
아래는 이러한 개념을 적용한 XAML 및 코드 비하인드 예시입니다:

XAML 코드:

xml
코드 복사
<Window x:Class="YourNamespace.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/charts"
        Title="Chart Example" Height="600" Width="800">
    <Grid>
        <dxc:ChartControl x:Name="chartControl">
            <dxc:ChartControl.Legend>
                <dxc:Legend x:Name="customLegend" />
            </dxc:ChartControl.Legend>
            <dxc:ChartControl.Diagram>
                <dxc:XYDiagram2D>
                    <!-- X축 및 Y축 설정 -->
                    <dxc:XYDiagram2D.AxisX>
                        <dxc:AxisX2D Title="Timestamp" />
                    </dxc:XYDiagram2D.AxisX>
                    <dxc:XYDiagram2D.AxisY>
                        <dxc:AxisY2D Title="Value" />
                    </dxc:XYDiagram2D.AxisY>
                    <!-- 시리즈는 코드 비하인드에서 추가 -->
                </dxc:XYDiagram2D>
            </dxc:ChartControl.Diagram>
        </dxc:ChartControl>
    </Grid>
</Window>
코드 비하인드 (C#):

csharp
코드 복사
using DevExpress.Xpf.Charts;
using System.Collections.Generic;
using System.Windows;

namespace YourNamespace
{
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
            InitializeChart();
        }

        private void InitializeChart()
        {
            // 데이터 로드 및 분리
            var data = LoadData();
            var dataL = data.FindAll(d => d.ModelName.EndsWith("L"));
            var dataR = data.FindAll(d => d.ModelName.EndsWith("R"));

            // 시리즈 생성 및 추가
            AddSeries("MP1", dataL, dataR);
            AddSeries("MP2", dataL, dataR);
            AddSeries("MP3", dataL, dataR);
            AddSeries("MP4", dataL, dataR);
            AddSeries("MP5", dataL, dataR);

            // 사용자 정의 범례 항목 추가
            AddCustomLegendItem("MP1");
            AddCustomLegendItem("MP2");
            AddCustomLegendItem("MP3");
            AddCustomLegendItem("MP4");
            AddCustomLegendItem("MP5");
        }

        private List<DataPoint> LoadData()
        {
            // 데이터 로드 로직 구현
            return new List<DataPoint>();
        }

        private void AddSeries(string mpName, List<DataPoint> dataL, List<DataPoint> dataR)
        {
            // 'L' 그룹 시리즈 생성
            var seriesL = new LineSeries2D
            {
                DisplayName = $"{mpName} (L)",
                DataSource = dataL,
                ArgumentDataMember = "Timestamp",
                ValueDataMember = mpName,
                Tag = mpName // 범례 항목과 연결하기 위한 태그 설정
            };

            // 'R' 그룹 시리즈 생성
            var seriesR = new LineSeries2D
            {
                DisplayName = $"{mpName} (R)",
                DataSource = dataR,
                ArgumentDataMember = "Timestamp",
                ValueDataMember = mpName,
                Tag = mpName // 범례 항목과 연결하기 위한 태그 설정
            };

            // 시리즈를 차트에 추가
            ((XYDiagram2D)chartControl.Diagram).Series.Add(seriesL);
            ((XYDiagram2D)chartControl.Diagram).Series.Add(seriesR);
        }

        private void AddCustomLegendItem(string mpName)
        {
            // 사용자 정의 범례 항목 생성
            var legendItem = new CustomLegendItem
            {
                Content = mpName,
                MarkerVisible = true
            };

            // 범례 항목 클릭 이벤트 핸들러 추가
            legendItem.MouseLeftButtonUp += (s, e) => ToggleSeriesVisibility(mpName);

            // 범례에 항목 추가
            customLegend.CustomItems.Add(legendItem);
        }

        private void ToggleSeriesVisibility(string mpName)
        {
            // 해당 MP 이름을 가진 시리즈의 가시성 토글
            foreach (var series in ((XYDiagram2D)chartControl.Diagram).Series)
            {
                if (series.Tag as string == mpName)
                {
                    series.Visible = !series.Visible;
                }
            }
        }
    }

    public class DataPoint
    {
        public string ModelName { get; set; }
        public string Timestamp { get; set; }
        public double MP1 { get; set; }
        public double MP2 { get; set; }
        public double MP3 { get; set; }
        public double MP4 { get; set; }
        public double MP5 { get; set; }
    }
}
설명: