겠습니다. 마스터 키와 일반 키 모두 데이터베이스에 저장하고, 로그인(키 확인) 후에만 해당 키를 변경할 수 있는 기능을 구현하겠습니다. 기존의 로그 기록, 셀 하이라이트 등 다른 기능은 유지합니다.

이 작업을 위해서는 데이터베이스 스키마 변경, 새 모델 클래스 추가, 새 비밀번호 변경 창 및 ViewModel 추가, 그리고 기존 ViewModel과 App.config 수정이 필요합니다.

수정/추가해야 할 파일 목록:

SQL 스크립트: AppSettings 테이블 생성 및 초기 키 값 삽입 (신규 제공 필요)
Models/AppSetting.cs (신규): AppSettings 테이블과 매핑될 모델 클래스.
Data/LockerDbContext.cs: DbSet<AppSetting> 속성 추가.
ViewModels/PasswordChangeViewModel.cs (신규): 비밀번호 변경 창의 로직 처리.
Views/PasswordChangeWindow.xaml (신규): 비밀번호 변경 UI.
Views/PasswordChangeWindow.xaml.cs (신규): 비밀번호 변경 창 코드 비하인드.
ViewModels/MainViewModel.cs: 키 확인 로직 DB 조회로 변경, 비밀번호 변경 창 열기 Command 추가.
Views/MainWindow.xaml: "비밀번호 변경" 버튼 추가.
App.config: <appSettings>에서 MasterKey, NormalKey 제거.
상당히 많은 변경이 필요하므로, 요청하신 대로 먼저 수정/추가해야 할 파일 목록을 알려드렸습니다. 이제 이 목록 중에서 가장 먼저 필요한 2개, 즉 데이터베이스 테이블 생성/초기화 SQL 스크립트와 새 모델 클래스(AppSetting.cs) 의 전체 코드(주석 제외)를 드리겠습니다.

1. SQL 스크립트 (AppSettings 테이블 생성 및 초기값 설정)