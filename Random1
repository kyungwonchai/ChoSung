합니다, 이전에 잘못된 정보를 드렸습니다. DevExpress WPF ChartControl에서는 CrosshairContentCustomize 이벤트가 제공되지 않습니다. 대신, CustomDrawCrosshair 이벤트를 사용하여 크로스헤어 커서의 내용을 커스터마이징할 수 있습니다.

아래는 CustomDrawCrosshair 이벤트를 활용하여 마우스 오버 시 각 데이터 포인트의 정확한 시간, 모델명, 라인명 등을 표시하는 방법입니다.

1. CustomDrawCrosshair 이벤트 핸들러 설정
ChartControl의 CustomDrawCrosshair 이벤트를 처리하여 크로스헤어 커서의 내용을 커스터마이징할 수 있습니다.

XAML 설정:

xml
코드 복사
<dxc:ChartControl Name="chartControl1" CustomDrawCrosshair="ChartControl_CustomDrawCrosshair">
    <!-- 차트 설정 -->
</dxc:ChartControl>
C# 코드:

csharp
코드 복사
using DevExpress.Xpf.Charts;
using System.Windows.Media;

private void ChartControl_CustomDrawCrosshair(object sender, CustomDrawCrosshairEventArgs e)
{
    foreach (var group in e.CrosshairElementGroups)
    {
        foreach (var element in group.CrosshairElements)
        {
            if (element.SeriesPoint != null)
            {
                // 시리즈 이름
                var seriesName = element.Series.DisplayName;

                // X축 값 (Timestamp)
                var timestamp = element.SeriesPoint.Argument;

                // Y축 값
                var value = element.SeriesPoint.Value;

                // 커스터마이즈된 레이블 텍스트 설정
                element.LabelElement.Text = $"Series: {seriesName}\n" +
                                            $"Timestamp: {timestamp:yy-MM-dd HH:mm:ss}\n" +
                                            $"Value: {value:F2}";
            }
        }
    }
}
2. 크로스헤어 옵션 설정
크로스헤어 커서가 차트에서 제대로 표시되도록 하기 위해서는 다음과 같은 옵션을 설정해야 합니다.

XAML 설정:

xml
코드 복사
<dxc:ChartControl.CrosshairOptions>
    <dxc:CrosshairOptions ShowArgumentLabels="True"
                          ShowArgumentLine="True"
                          ShowValueLabels="True"
                          ShowValueLine="True"/>
</dxc:ChartControl.CrosshairOptions>
3. 데이터 모델 설정
DataPoint 클래스에 LineName과 ModelName 속성을 추가하여 각 데이터 포인트에 대한 추가 정보를 저장합니다.

C# 코드:

csharp
코드 복사
public class DataPoint
{
    public string LineName { get; set; }    // 라인 이름
    public string ModelName { get; set; }   // 모델 이름
    public DateTime Timestamp { get; set; } // 시간
    public double MP1 { get; set; }         // MP1 값
    public double MP2 { get; set; }         // MP2 값
    public double MP3 { get; set; }         // MP3 값
    public double MP4 { get; set; }         // MP4 값
    public double MP5 { get; set; }         // MP5 값
}
4. 시리즈 설정 시 Tag 사용
각 데이터 포인트의 추가 정보를 크로스헤어 커서에서 사용하기 위해, SeriesPoint의 Tag 속성에 해당 DataPoint 객체를 저장합니다.

C# 코드:

csharp
코드 복사
var series = new LineSeries2D
{
    DisplayName = "MP1",
    DataSource = lData,
    ArgumentDataMember = "Timestamp",
    ValueDataMember = "MP1",
    MarkerVisible = true,
    CrosshairEnabled = true
};

// 데이터 바인딩 후 각 포인트의 Tag 설정
foreach (var point in series.Points)
{
    var dataPoint = lData.FirstOrDefault(d => d.Timestamp == point.Argument);
    if (dataPoint != null)
    {
        point.Tag = dataPoint;
    }
}
5. CustomDrawCrosshair 이벤트에서 Tag 활용
CustomDrawCrosshair 이벤트 핸들러에서 SeriesPoint의 Tag를 활용하여 추가 정보를 표시합니다.

C# 코드:

csharp
코드 복사
private void ChartControl_CustomDrawCrosshair(object sender, CustomDrawCrosshairEventArgs e)
{
    foreach (var group in e.CrosshairElementGroups)
    {
        foreach (var element in group.CrosshairElements)
        {
            if (element.SeriesPoint != null)
            {
                // 시리즈 이름
                var seriesName = element.Series.DisplayName;

                // X축 값 (Timestamp)
                var timestamp = element.SeriesPoint.Argument;

                // Y축 값
                var value = element.SeriesPoint.Value;

                // 추가 정보 (LineName, ModelName)
                var dataPoint = element.SeriesPoint.Tag as DataPoint;
                var lineName = dataPoint?.LineName ?? "N/A";
                var modelName = dataPoint?.ModelName ?? "N/A";

                // 커스터마이즈된 레이블 텍스트 설정
                element.LabelElement.Text = $"Series: {seriesName}\n" +
                                            $"Timestamp: {timestamp:yy-MM-dd HH:mm:ss}\n" +
                                            $"Line: {lineName}\n" +
                                            $"Model: {modelName}\n" +
                                            $"Value: {value:F2}";
            }
        }
    }
}
위의 설정을 통해 마우스를 차트의 데이터 포인트 위에 올리면 해당 포인트의 시리즈 이름, 정확한 시간, 라인명, 모델명, 값 등이 표시됩니다.