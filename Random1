미지가 클립보드에 있는 경우 이를 바이트 배열로 변환하여 MSSQL 2014 데이터베이스에 저장하는 코드를 아래와 같이 작성할 수 있습니다. 주의할 점은 클립보드에서 이미지를 가져올 때 Clipboard.GetImage() 메서드를 사용하고, MemoryStream을 통해 바이트 배열로 변환하는 것입니다. 데이터베이스에 저장할 때는 해당 바이트 배열을 VARBINARY(MAX) 타입의 컬럼에 저장해야 합니다.

csharp
코드 복사
using System;
using System.Data.SqlClient;
using System.Drawing;
using System.Drawing.Imaging;
using System.IO;
using System.Windows;

namespace WpfClipboardImageToDatabase
{
    public class ClipboardImageHandler
    {
        private string connectionString = "YourConnectionStringHere"; // MSSQL 연결 문자열

        public void SaveClipboardImageToDatabase()
        {
            // 1. 클립보드에서 이미지를 가져옵니다.
            if (Clipboard.ContainsImage())
            {
                // 이미지가 클립보드에 존재하면, 이미지를 가져옵니다.
                var clipboardImage = Clipboard.GetImage();

                if (clipboardImage != null)
                {
                    // 2. 이미지를 바이트 배열로 변환합니다.
                    byte[] imageBytes = ImageToByteArray(clipboardImage);

                    // 3. MSSQL에 이미지 데이터를 저장합니다.
                    InsertImageToDatabase(imageBytes);
                }
                else
                {
                    MessageBox.Show("클립보드에서 이미지를 가져올 수 없습니다.");
                }
            }
            else
            {
                MessageBox.Show("클립보드에 이미지가 없습니다.");
            }
        }

        // BitmapSource 이미지를 바이트 배열로 변환하는 메서드
        private byte[] ImageToByteArray(System.Windows.Media.Imaging.BitmapSource image)
        {
            using (MemoryStream stream = new MemoryStream())
            {
                BitmapEncoder encoder = new PngBitmapEncoder();
                encoder.Frames.Add(System.Windows.Media.Imaging.BitmapFrame.Create(image));
                encoder.Save(stream);
                return stream.ToArray();
            }
        }

        // MSSQL에 이미지 바이트 배열을 삽입하는 메서드
        private void InsertImageToDatabase(byte[] imageBytes)
        {
            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {
                    connection.Open();
                    string query = "INSERT INTO YourImageTable (ImageData) VALUES (@ImageData)";
                    
                    using (SqlCommand command = new SqlCommand(query, connection))
                    {
                        command.Parameters.AddWithValue("@ImageData", imageBytes);
                        int rowsAffected = command.ExecuteNonQuery();
                        
                        MessageBox.Show(rowsAffected > 0 ? "이미지 저장 성공" : "이미지 저장 실패");
                    }
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show($"데이터베이스 오류: {ex.Message}");
            }
        }
    }
}
코드 설명
클립보드에서 