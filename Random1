, 당연히 가능하며 그렇게 사용하는 것이 JetBrains IDE를 100% 활용하는 전문가 방식입니다.

웹 브라우저에서 작업하는 것보다 DataSpell이나 PyCharm에 원격 서버를 연결해서 사용하면, 강력한 코드 자동 완성, 디버깅, 변수 확인 등 IDE의 모든 기능을 활용하면서 AI 어시스턴트의 도움까지 받을 수 있어 훨씬 더 편리하고 강력합니다.

## JetBrains IDE에 원격 Jupyter 서버를 연결하는 방법 🚀
데이터 사이언스 작업에는 DataSpell을 가장 추천하지만, PyCharm Professional에서도 동일하게 가능합니다.

서버 URL과 비밀번호 준비
이전 단계에서 설정한 서버 정보가 필요합니다.

서버 주소: http://<내 우분투 서버 IP 주소>:8888

비밀번호: 직접 설정했던 그 비밀번호

DataSpell 또는 PyCharm에서 원격 서버 추가
IDE를 열고 아래 순서대로 진행합니다.

① Jupyter 도구창 열기: IDE 좌측이나 우측의 Jupyter 탭을 클릭해 도구창을 엽니다.
<br>
② Jupyter 서버 추가: Jupyter 도구창 상단의 ➕ 또는 Add Jupyter Server 버튼을 클릭하고 Connect to Jupyter server by URL...을 선택합니다.
<br>
③ 서버 정보 입력:
* Server URL:에 준비한 서버 주소(http://...)를 입력합니다.
* 아래 Password 옵션을 선택하고 비밀번호를 입력합니다.
* Connect 버튼을 누릅니다.

④ 연결 확인: 잠시 후 Jupyter 도구창에 원격 서버의 파일 디렉토리(예: /home/kwkw/notebooks)가 나타나면 성공입니다. 이제 여기서 노트북 파일(.ipynb)을 더블클릭해서 열면 됩니다.

## 원격 서버에서 AI 어시스턴트 사용하기 🤖
이제 마법이 시작되는 부분입니다. 원격 서버에 연결된 노트북 파일이 내 컴퓨터의 JetBrains IDE 화면에 열려있기 때문에, AI 어시스턴트의 모든 기능을 똑같이 사용할 수 있습니다.

코드 생성: 노트북의 빈 셀에 주석으로 원하는 작업을 한글로 입력한 뒤, AI 어시스턴트에게 코드를 생성해달라고 요청할 수 있습니다.

Python

# /home/kwkw/notebooks/my_data.csv 파일을 pandas 데이터프레임으로 읽어와서
# 처음 5개 행을 보여주고, 각 열의 데이터 타입을 설명해줘
코드 설명 및 디버깅: 원격 서버에서 실행하다가 에러가 난 코드 셀을 선택하고, AI 어시스턴트에게 "이 코드 왜 에러나? 고쳐줘" 라고 물어보면 원인을 분석하고 해결책을 제시해 줍니다.

데이터 시각화: "이 데이터프레임의 '나이'와 '소득' 열의 관계를 산점도로 그려줘" 와 같은 요청으로 복잡한 시각화 코드를 즉시 생성할 수 있습니다.

이처럼 서버의 강력한 계산 능력(CPU, RAM)은 우분투 서버의 것을 사용하면서, 코딩과 분석 작업 자체는 내 PC의 편리한 JetBrains IDE와 AI 어시스턴트를 통해 할 수 있게 되는 것입니다. 이것이 바로 전문가들이 선호하는 원격 개발 환경입니다.

