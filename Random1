WPF에서 원하는 레이아웃과 기능을 구현하려면 XAML과 C# 코드를 작성해야 합니다. 아래에 전체적인 코드 예시를 작성하겠습니다.

XAML (MainWindow.xaml)
xml
코드 복사
<Window x:Class="LabelPrinter.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Label Printer" Height="300" Width="400">
    <Grid>
        <!-- 첫 번째 행: 타이틀 -->
        <TextBlock Text="분할 자재 라벨" FontSize="12" HorizontalAlignment="Center" Margin="0,10,0,5" />

        <!-- 두 번째 행: 좌측 및 우측 컬럼 -->
        <Grid Margin="20,40,20,10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="170" /> <!-- 좌측 컬럼 너비 (실제 사이즈로 17mm) -->
                <ColumnDefinition Width="170" /> <!-- 우측 컬럼 너비 (실제 사이즈로 17mm) -->
            </Grid.ColumnDefinitions>
            
            <!-- 좌측 컬럼: 라벨명들 -->
            <StackPanel Grid.Column="0" VerticalAlignment="Top">
                <TextBlock Text="코드:" FontSize="8" Margin="0,5,0,0"/>
                <TextBlock Text="LOT:" FontSize="8" Margin="0,5,0,0"/>
                <TextBlock Text="업체:" FontSize="8" Margin="0,5,0,0"/>
                <TextBlock Text="라인/모델:" FontSize="8" Margin="0,5,0,0"/>
                <TextBlock Text="관리자 확인:" FontSize="8" Margin="0,5,0,0"/>
            </StackPanel>

            <!-- 우측 컬럼: 텍스트 입력 (빈 기본값 및 배경 투명) -->
            <StackPanel Grid.Column="1" VerticalAlignment="Top">
                <TextBox FontSize="8" Margin="0,5,0,0" Background="Transparent"/>
                <TextBox FontSize="8" Margin="0,5,0,0" Background="Transparent"/>
                <TextBox FontSize="8" Margin="0,5,0,0" Background="Transparent"/>
                <TextBox FontSize="8" Margin="0,5,0,0" Background="Transparent"/>
                <TextBox FontSize="8" Margin="0,5,0,0" Background="Transparent"/>
            </StackPanel>
        </Grid>

        <!-- 출력 버튼 -->
        <Button Content="출력" Width="100" Height="30" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,20" Click="PrintButton_Click"/>
    </Grid>
</Window>
C# 코드 (MainWindow.xaml.cs)
C#에서는 출력 버튼 클릭 시 실제 라벨을 프린트하는 기능을 구현합니다. 이 예시에서는 WPF PrintDialog를 사용해 프린트 미리 보기 및 출력 작업을 설정했습니다.

csharp
코드 복사
using System;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Media;
using System.Printing;

namespace LabelPrinter
{
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
        }

        private void PrintButton_Click(object sender, RoutedEventArgs e)
        {
            // 프린트 설정
            PrintDialog printDialog = new PrintDialog();
            if (printDialog.ShowDialog() == true)
            {
                // 프린트할 라벨을 그리기 위해 Grid 생성
                Grid printGrid = new Grid
                {
                    Width = 170 * 2,  // 2 컬럼의 전체 너비
                    Height = 100,     // 대략적인 높이 설정
                    Margin = new Thickness(5)
                };

                // 타이틀 생성
                TextBlock title = new TextBlock
                {
                    Text = "분할 자재 라벨",
                    FontSize = 12,
                    HorizontalAlignment = HorizontalAlignment.Center,
                    Margin = new Thickness(0, 0, 0, 5)
                };
                printGrid.Children.Add(title);

                // 좌측 및 우측 컬럼 설정
                StackPanel leftColumn = CreateLeftColumn();
                StackPanel rightColumn = CreateRightColumn();

                // 컬럼 배치
                Grid.SetRow(leftColumn, 1);
                Grid.SetColumn(leftColumn, 0);
                printGrid.Children.Add(leftColumn);

                Grid.SetRow(rightColumn, 1);
                Grid.SetColumn(rightColumn, 1);
                printGrid.Children.Add(rightColumn);

                // 프린트 실행
                printDialog.PrintVisual(printGrid, "Label Print");
            }
        }

        private StackPanel CreateLeftColumn()
        {
            StackPanel leftColumn = new StackPanel();
            string[] labels = { "코드:", "LOT:", "업체:", "라인/모델:", "관리자 확인:" };
            foreach (var label in labels)
            {
                leftColumn.Children.Add(new TextBlock
                {
                    Text = label,
                    FontSize = 8,
                    Margin = new Thickness(0, 5, 0, 0)
                });
            }
            return leftColumn;
        }

        private StackPanel CreateRightColumn()
        {
            StackPanel rightColumn = new StackPanel();
            for (int i = 0; i < 5; i++)
            {
                rightColumn.Children.Add(new TextBox
                {
                    FontSize = 8,
                    Background = Brushes.Transparent,
                    Margin = new Thickness(0, 5, 0, 0)
                });
            }
            return rightColumn;
        }
    }
}
설명
XAML: TextBlock을 사용해 각 필드를 배치하고, 우측 컬럼에 TextBox로 입력을 받을 수 있게 했습니다. 기본 값은 빈 값이며, 배경은 투명하게 설정했습니다.
C#: PrintButton_Click 이벤트 핸들러에서 PrintDialog를 사용해 프린트 작업을 설정했습니다. 또한, 출력할 라벨 레이아웃을 Grid와 StackPanel로 구성하여 프린트할 내용을 정의했습니다.