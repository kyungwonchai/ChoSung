using System;
using System.Data;
using System.Data.SqlClient;
using System.Net.NetworkInformation;

namespace PingAndUpdateTime
{
    class Program
    {
        static void Main(string[] args)
        {
            string connectionString = "your_connection_string_here";
            string queryGetIP = "SELECT IPAddress FROM View_AOITimeSyncNG";
            string queryUpdate = "UPDATE Table_AOI SET 집계시간 = @AggregateTime";

            using (SqlConnection connection = new SqlConnection(connectionString))
            {
                connection.Open();

                // IP 주소 가져오기
                SqlCommand commandGetIP = new SqlCommand(queryGetIP, connection);
                SqlDataAdapter adapter = new SqlDataAdapter(commandGetIP);
                DataTable table = new DataTable();
                adapter.Fill(table);

                bool isPingSuccessful = false;

                // 각 IP 주소에 대해 Ping 수행
                foreach (DataRow row in table.Rows)
                {
                    string ip = row["IPAddress"].ToString();
                    isPingSuccessful = SendPing(ip);
                    if (isPingSuccessful)
                    {
                        break; // Ping이 성공적이면 더 이상 Ping을 보내지 않습니다.
                    }
                }

                // 집계 시간 업데이트
                SqlCommand commandUpdate = new SqlCommand(queryUpdate, connection);
                commandUpdate.Parameters.AddWithValue("@AggregateTime", isPingSuccessful ? 97 : 1);
                commandUpdate.ExecuteNonQuery();
            }
        }

        static bool SendPing(string ipAddress)
        {
            using (Ping ping = new Ping())
            {
                PingReply reply = ping.Send(ipAddress, 1000);  // 1초의 시간 제한
                return reply.Status == IPStatus.Success;
            }
        }
    }
}
