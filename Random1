public async Task<string> SendCommandWithTimeoutAsync(string cmd)
{
    try
    {
        // 명령 보내기
        var sendTask = SendCommandAsync(cmd);
        var sendTimeoutTask = Task.Delay(TimeSpan.FromSeconds(2));

        // 명령 전송이 타임아웃 전에 완료되는지 확인
        var sendCompletedTask = await Task.WhenAny(sendTask, sendTimeoutTask);

        if (sendCompletedTask != sendTask)
        {
            return "Timeout: Command sending took longer than 2 seconds.";
        }

        // 실제 명령 전송이 완료된 경우
        var sendResult = await sendTask;
        if (!sendResult.Equals("OK"))
        {
            return $"Error sending command: {sendResult}";
        }

        // 응답 받기
        var readTask = ReadUnitEndAsync();
        var readTimeoutTask = Task.Delay(TimeSpan.FromSeconds(2));

        // 응답 받기 작업이 타임아웃 전에 완료되는지 확인
        var readCompletedTask = await Task.WhenAny(readTask, readTimeoutTask);

        if (readCompletedTask != readTask)
        {
            return "Timeout: No response from PLC within 2 seconds.";
        }

        // 응답을 정상적으로 읽은 경우
        var response = await readTask;
        return response; // 정상적인 응답 반환
    }
    catch (Exception ex)
    {
        return $"Error: {ex.Message}";
    }
}
