했습니다. 먼저, **ItemsControl**에는 Orientation 속성이 없으며, 이를 해결하기 위해 StackPanel 같은 컨테이너를 사용하여 가로로 나열해야 합니다. 또한, **TextBlock**에서 .IndexOf(.) 부분에서 문제가 발생한 이유는 잘못된 구문입니다. 각 항목에 접근하려면 데이터 컨텍스트에서 정확한 인덱스를 가져오도록 수정해야 합니다.

수정 사항:
Orientation: ItemsControl의 Orientation 속성 대신 **StackPanel**의 Orientation을 사용하여 가로로 나열합니다.
TextBlock: 함수 이름을 정확히 표시하기 위해 RelativeSource를 사용한 구문을 수정합니다.
수정된 MainWindow.xaml
xml
코드 복사
<Window x:Class="LogisticsApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Logistics Task Manager" Height="400" Width="1000">
    <Grid>
        <!-- DataGrid: 작업 목록과 상태를 표시 -->
        <DataGrid Name="TaskDataGrid" ItemsSource="{Binding TaskList}" AutoGenerateColumns="False" IsReadOnly="True" Margin="10">
            <DataGrid.Columns>
                <DataGridTextColumn Header="PO Number" Binding="{Binding PONumber}" Width="*" />
                <DataGridTextColumn Header="MAG_NO" Binding="{Binding MAG_NO}" Width="*" />
                <DataGridTextColumn Header="BASIC_MODEL" Binding="{Binding BASIC_MODEL}" Width="*" />
                <DataGridTextColumn Header="MODEL_CODE" Binding="{Binding MODEL_CODE}" Width="*" />
                <DataGridTextColumn Header="PO_PLAN_QTY" Binding="{Binding PO_PLAN_QTY}" Width="*" />
                <DataGridTextColumn Header="PO_PROD_QTY" Binding="{Binding PO_PROD_QTY}" Width="*" />
                <DataGridTextColumn Header="MAG_QTY" Binding="{Binding MAG_QTY}" Width="*" />
                <DataGridTextColumn Header="SequenceFlag" Binding="{Binding SequenceFlag}" Width="*" />

                <!-- 각 작업의 함수 진행 상태를 도형으로 표시하는 열 -->
                <DataGridTemplateColumn Header="Functions Status" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <!-- StackPanel로 각 함수를 가로로 나열 -->
                            <StackPanel Orientation="Horizontal">
                                <ItemsControl ItemsSource="{Binding FunctionStatuses}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Ellipse Width="20" Height="20" Stroke="Black" StrokeThickness="1">
                                                <!-- Tooltip에 함수 이름 표시 -->
                                                <Ellipse.ToolTip>
                                                    <TextBlock Text="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=DataContext.Functions[ItemsControl.AlternationIndex]}" />
                                                </Ellipse.ToolTip>
                                                <Ellipse.Style>
                                                    <Style TargetType="Ellipse">
                                                        <Style.Triggers>
                                                            <!-- 대기 중인 함수는 회색 -->
                                                            <DataTrigger Binding="{Binding}" Value="Waiting">
                                                                <Setter Property="Fill" Value="Gray"/>
                                                            </DataTrigger>
                                                            <!-- 실행 중인 함수는 스카이블루 -->
                                                            <DataTrigger Binding="{Binding}" Value="Running">
                                                                <Setter Property="Fill" Value="SkyBlue"/>
                                                            </DataTrigger>
                                                            <!-- 완료된 함수는 녹색 -->
                                                            <DataTrigger Binding="{Binding}" Value="Completed">
                                                                <Setter Property="Fill" Value="LightGreen"/>
                                                            </DataTrigger>
                                                            <!-- 에러가 발생한 함수는 빨간색 -->
                                                            <DataTrigger Binding="{Binding}" Value="Error">
                                                                <Setter Property="Fill" Value="Red"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Ellipse.Style>
                                            </Ellipse>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>

        <!-- 일시정지 및 다시 시작 버튼 -->
        <Button Content="Pause All" Command="{Binding PauseAllCommand}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="100" Margin="10"/>
        <Button Content="Resume All" Command="{Binding ResumeAllCommand}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="100" Margin="120,0,0,10"/>
    </Grid>
</Window>
주요 수정 사항:
StackPanel: ItemsControl 내부에 **StackPanel**을 사용하여 도형이 가로로 나열되도록 했습니다. **Orientation="Horizontal"**로 가로 배열을 설정했습니다.
TextBlock: 함수 이름을 표시하는 **ToolTip**에서 잘못된 IndexOf(.) 구문을 **ItemsControl.AlternationIndex**로 수정했습니다. 이 구문은 각 항목의 인덱스를 가져와서 정확한 함수 이름을 보여줍니다.
이제 각 행에서 함수 상태를 도형으로 시각적으로 표시하며, 도형 위에 마우스를 올리면 함수 이름이 툴팁으로 표시됩니