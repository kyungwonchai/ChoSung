lask 웹 애플리케이션에서 테이블을 조회하고 특정 컬럼(item.CT)의 값이 100보다 클 경우 해당 셀의 배경을 빨갛게 설정하려면, 아래 단계로 구현할 수 있습니다.

1. Flask 백엔드 구현
테이블 데이터를 반환하는 라우트를 생성합니다. 예제에서는 data라는 리스트에 데이터를 저장한 후 HTML로 전달합니다.

python
코드 복사
from flask import Flask, render_template

app = Flask(__name__)

@app.route('/')
def table_view():
    # 예제 데이터
    data = [
        {'id': 1, 'name': 'Item A', 'CT': 95},
        {'id': 2, 'name': 'Item B', 'CT': 110},
        {'id': 3, 'name': 'Item C', 'CT': 50},
        {'id': 4, 'name': 'Item D', 'CT': 150}
    ]
    return render_template('table.html', items=data)

if __name__ == '__main__':
    app.run(debug=True)
2. HTML 템플릿 (table.html)
Flask에서 전달받은 데이터를 반복문으로 테이블에 출력하고, CT 값이 100보다 크면 조건에 따라 셀의 배경색을 빨갛게 설정합니다.

html
코드 복사
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Table Highlight</title>
    <style>
        table {
            width: 100%;
            border-collapse: collapse;
        }
        th, td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: center;
        }
        th {
            background-color: #f2f2f2;
        }
        .highlight {
            background-color: red;
            color: white;
        }
    </style>
</head>
<body>
    <h1>CT Table</h1>
    <table>
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>CT</th>
            </tr>
        </thead>
        <tbody>
            {% for item in items %}
            <tr>
                <td>{{ item.id }}</td>
                <td>{{ item.name }}</td>
                <td class="{% if item.CT > 100 %}highlight{% endif %}">{{ item.CT }}</td>
            </tr>
            {% endfor %}
        </tbody>
    </table>
</body>
</html>
3. 결과