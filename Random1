import os
import glob
from PyQt5.QtWidgets import QApplication, QWidget, QLabel, QLineEdit, QPushButton, QTextEdit, QVBoxLayout


class SearchWindow(QWidget):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("파일 검색")
        
        # UI 요소 초기화
        self.search_input = QLineEdit()
        self.search_button = QPushButton("검색")
        self.result_text = QTextEdit()
        self.result_text.setReadOnly(True)
        self.found_text = QLabel()
        
        # 레이아웃 설정
        layout = QVBoxLayout()
        layout.addWidget(QLabel("입력"))
        layout.addWidget(self.search_input)
        layout.addWidget(self.search_button)
        layout.addWidget(QLabel("결과"))
        layout.addWidget(self.result_text)
        layout.addWidget(self.found_text)
        
        self.setLayout(layout)
        
        # 검색 버튼 클릭 시 이벤트 처리
        self.search_button.clicked.connect(self.search_files)
    
    def search_files(self):
        folder_path = "c:/A"
        search_text = self.search_input.text()
        
        # 폴더 내 *.data 파일 검색
        file_paths = glob.glob(os.path.join(folder_path, "*.data"))
        
        found_line = None
        
        for file_path in file_paths:
            with open(file_path, "r") as file:
                lines = file.readlines()
                for index, line in enumerate(lines):
                    if line[:11] == search_text:
                        found_line = line
                        break
                if found_line:
                    break
        
        if found_line:
            self.found_text.setText("찾았습니다.")
            self.result_text.setText(found_line)
        else:
            self.found_text.setText("찾지 못했습니다.")
            self.result_text.clear()


if __name__ == '__main__':
    app = QApplication([])
    window = SearchWindow()
    window.show()
    app.exec_()
