수정된 VBA 코드 (한 행씩 순서대로 정렬)
vba
코드 복사
Sub ExportToMSSQL()
    Dim conn As Object
    Dim cmd As Object
    Dim ws As Worksheet
    Dim lastRow As Long
    Dim i As Long, j As Integer
    Dim insertQuery As String
    Dim values As String
    Dim colA, colB, colF, colG, colH, colI As String
    Dim tempValues As String
    Dim firstSet As Boolean

    ' MSSQL 연결 설정
    Set conn = CreateObject("ADODB.Connection")
    conn.Open "Provider=SQLOLEDB;Data Source=서버이름;Initial Catalog=DB이름;User ID=사용자이름;Password=비밀번호;"
    
    ' 엑셀 시트 설정
    Set ws = ThisWorkbook.Sheets("Sheet1")
    
    ' 마지막 행 찾기
    lastRow = ws.Cells(ws.Rows.Count, "A").End(xlUp).Row

    ' INSERT 시작 (모든 컬럼 나열)
    insertQuery = "INSERT INTO dbo.ExcelData (그룹, 라인, 모델, 타입, ECN, Edition, " & _
                  "BCT1_1, BCT1_2, BCT1_3, BCT1_4, BCT1_5, BCT1_6, BCT1_7, BCT1_8, " & _
                  "BCT2_1, BCT2_2, BCT2_3, BCT2_4, BCT2_5, BCT2_6, BCT2_7, BCT2_8, " & _
                  "TCT1_1, TCT1_2, TCT1_3, TCT1_4, TCT1_5, TCT1_6, TCT1_7, TCT1_8, " & _
                  "TCT2_1, TCT2_2, TCT2_3, TCT2_4, TCT2_5, TCT2_6, TCT2_7, TCT2_8) VALUES "

    values = ""
    firstSet = True

    ' 데이터 처리 및 삽입 (한 행씩 순서대로)
    For i = 5 To lastRow Step 4
        ' 그룹, 라인, 모델, 타입, ECN, Edition 추출 (첫 번째 행 기준)
        colA = Trim(ws.Cells(i, 1).Value)
        colB = Trim(ws.Cells(i, 2).Value)
        colF = Trim(ws.Cells(i, 6).Value)
        colG = Trim(ws.Cells(i, 7).Value)
        colH = Trim(ws.Cells(i, 8).Value)
        colI = Trim(ws.Cells(i, 9).Value)

        ' 데이터 초기화
        tempValues = "('" & colA & "', '" & colB & "', '" & colF & "', '" & colG & "', '" & colH & "', '" & colI & "'"

        ' 한 행씩 **순서대로 삽입**
        For j = 1 To 8
            tempValues = tempValues & ", " & IIf(ws.Cells(i, 18 + j).Value = "" Or ws.Cells(i, 18 + j).Value = "-", 0, ws.Cells(i, 18 + j).Value)
        Next j
        For j = 1 To 8
            tempValues = tempValues & ", " & IIf(ws.Cells(i + 1, 18 + j).Value = "" Or ws.Cells(i + 1, 18 + j).Value = "-", 0, ws.Cells(i + 1, 18 + j).Value)
        Next j
        For j = 1 To 8
            tempValues = tempValues & ", " & IIf(ws.Cells(i + 2, 18 + j).Value = "" Or ws.Cells(i + 2, 18 + j).Value = "-", 0, ws.Cells(i + 2, 18 + j).Value)
        Next j
        For j = 1 To 8
            tempValues = tempValues & ", " & IIf(ws.Cells(i + 3, 18 + j).Value = "" Or ws.Cells(i + 3, 18 + j).Value = "-", 0, ws.Cells(i + 3, 18 + j).Value)
        Next j

        tempValues = tempValues & ")"

        ' 처음이면 그냥 추가, 이후부터는 쉼표 추가 후 붙이기
        If firstSet Then
            values = values & tempValues
            firstSet = False
        Else
            values = values & ", " & tempValues
        End If
    Next i

    ' SQL 실행 (한 번의 실행으로 모든 데이터 삽입)
    Set cmd = CreateObject("ADODB.Command")
    cmd.ActiveConnection = conn
    cmd.CommandText = insertQuery & values
    cmd.Execute

    ' 연결 해제
    conn.Close
    Set conn = Nothing
    Set cmd = Nothing

    MsgBox "데이터가 성공적으로 MSSQL에 삽입되었습니다.", vbInformation
End Sub
✅ 변경된 점
한 행씩 순서대로 VALUES 추가

기존: 1, 10, 100, 1000, 2, 20, 200, 2000, ... (잘못된 순서)
변경: 1, 2, 3, 4, 5, 6, 7, 0, 10, 20, 30, 40, ... (올바른 순서)
한 행을 다 채운 뒤 다음 행으로 이동

For j = 1 To 8을 4번 반복하여 4개 행을 정확히 삽입
쉼표(, ) 자동 처리

firstSet 변수를 사용하여 첫 번째 VALUES에는 쉼표 없음, 이후에는 쉼표 추가
한 번의 SQL 실행으로 여러 개의 세트 삽입 가능

기존: INSERT INTO ... VALUES (...); INSERT INTO ... VALUES (...); (여러 번 실행)
변경: INSERT INTO ... VALUES (...), (...), (...); (한 번의 실행)
✅ MSSQL 실행 결과 예시
sql
코드 복사
INSERT INTO dbo.ExcelData (그룹, 라인, 모델, 타입, ECN, Edition, 
BCT1_1, BCT1_2, BCT1_3, BCT1_4, BCT1_5, BCT1_6, BCT1_7, BCT1_8, 
BCT2_1, BCT2_2, BCT2_3, BCT2_4, BCT2_5, BCT2_6, BCT2_7, BCT2_8, 