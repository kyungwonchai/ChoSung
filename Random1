using System.Windows;
using System.Windows.Input;
using DevExpress.Xpf.Grid;

namespace YourNamespace
{
    public partial class MainWindow : Window
    {
        public ICommand Ctrl1Command { get; set; }
        public ICommand Ctrl2Command { get; set; }

        public MainWindow()
        {
            InitializeComponent();
            DataContext = this;

            // Initialize commands
            Ctrl1Command = new RelayCommand(ExecuteCtrl1Command, CanExecuteCtrlCommands);
            Ctrl2Command = new RelayCommand(ExecuteCtrl2Command, CanExecuteCtrlCommands);
        }

        private bool CanExecuteCtrlCommands(object parameter)
        {
            // GridControl에 선택된 컬럼이 있는 경우에만 실행 가능하도록 설정
            return gridControl1.View.FocusedRowHandle >= 0;
        }

        private void ExecuteCtrl1Command(object parameter)
        {
            // Ctrl+1 키 조합이 눌렸을 때 실행할 함수
            MessageBox.Show("Ctrl+1 Pressed");
            // 함수 A의 로직을 여기에 추가
        }

        private void ExecuteCtrl2Command(object parameter)
        {
            // Ctrl+2 키 조합이 눌렸을 때 실행할 함수
            MessageBox.Show("Ctrl+2 Pressed");
            // 함수 B의 로직을 여기에 추가
        }
    }

    // RelayCommand 클래스 정의 (필요한 경우)
    public class RelayCommand : ICommand
    {
        private readonly Action<object> _execute;
        private readonly Predicate<object> _canExecute;

        public RelayCommand(Action<object> execute, Predicate<object> canExecute = null)
        {
            _execute = execute;
            _canExecute = canExecute;
        }

        public bool CanExecute(object parameter)
        {
            return _canExecute == null || _canExecute(parameter);
        }

        public void Execute(object parameter)
        {
            _execute(parameter);
        }

        public event EventHandler CanExecuteChanged
        {
            add { CommandManager.RequerySuggested += value; }
            remove { CommandManager.RequerySuggested -= value; }
        }
    }
}
