, 무한 재부팅 현상은 정말 답답하고 화나는 상황입니다. Watchdog이 부팅이 끝나자마자, 유예 기간(Grace Period)이나 다른 확인 절차를 거치기도 전에 시스템을 재부팅시키는 것으로 보입니다.

이것은 Watchdog 데몬이 시작된 후 실행하는 첫 번째 체크에서 바로 '실패(exit 1)' 신호를 받기 때문입니다. 가장 유력한 원인은 테스트 스크립트(quick_folder_check.sh)에 있는 경로 오타나 문법 오류입니다.

지금처럼 SSH 접속조차 어려운 상황에서는, 라즈베리파이의 SD 카드를 직접 PC에 연결해서 수정하는 것이 유일하고 가장 확실한 해결책입니다.

## 무한 재부팅 해결을 위한 단계별 가이드
진정하시고, 아래 단계를 순서대로 따라 해 보시기 바랍니다.

## 1단계: 라즈베리파이 전원 끄고 SD 카드 분리
먼저 라즈베리파이의 전원 어댑터를 뽑아 전원을 완전히 차단합니다. 그 후 SD 카드를 조심스럽게 분리합니다.

## 2단계: 우분투 PC에 SD 카드 연결
SD 카드 리더기를 사용해 방금 분리한 SD 카드를 우분투 PC에 연결합니다. 잠시 후 파일 탐색기에 boot와 rootfs 라는 두 개의 드라이브가 나타날 것입니다. 우리가 수정할 곳은 rootfs 입니다.

## 3단계: Watchdog 서비스 임시 비활성화 (가장 중요)
가장 먼저, 다음 부팅 때 Watchdog이 아예 시작되지 않도록 '시작 연결고리'를 끊어야 합니다. 우분투 터미널을 열고 아래 명령어를 입력하세요.

rootfs 파티션의 정확한 경로 확인
먼저 lsblk 명령어로 마운트된 경로를 확인합니다.

Bash

lsblk
출력에서 /media/유저이름/rootfs 와 같은 경로를 찾습니다.

Watchdog 자동 시작 링크 삭제
아래 명령어에서 유저이름 부분을 본인 PC에 맞게 수정하여 실행하세요.

Bash

# 명령어 예시: sudo rm /media/pi/rootfs/etc/systemd/system/multi-user.target.wants/watchdog.service
sudo rm /media/여러분의_우분투_유저이름/rootfs/etc/systemd/system/multi-user.target.wants/watchdog.service
이 명령은 부팅 시 Watchdog을 자동으로 시작시키는 심볼릭 링크 파일을 삭제하는 것입니다. 이제 다음 부팅 때는 Watchdog이 실행되지 않아 무한 재부팅이 멈출 것입니다.

## 4단계: 테스트 스크립트 오류 직접 수정
이제 무한 재부팅의 근본 원인인 테스트 스크립트를 수정합니다.

스크립트 파일 열기
마찬가지로 rootfs 경로를 포함하여 아래 명령어로 스크립트 파일을 엽니다.

Bash

# 명령어 예시: sudo nano /media/pi/rootfs/etc/watchdog.d/quick_folder_check.sh
sudo nano /media/여러분의_우분투_유저이름/rootfs/etc/watchdog.d/quick_folder_check.sh
내용 확인 및 수정 (99% 확률의 원인)
파일 내용에서 아래 TARGET_FOLDER 경로가 정확한지 다시 한번 꼼꼼히 확인하세요. 대소문자, 오타 하나만 틀려도 부팅 직후 폴더를 찾지 못해 '실패(exit 1)'를 반환하고 무한 재부팅의 원인이 됩니다.

Bash

#!/bin/bash
TARGET_FOLDER="/path/to/your/important/folder" # <--- 이 경로가 정확한지 반드시 확인하세요!
MAX_DELAY=300
# ... (이하 생략) ...
경로가 확실하지 않다면, 일단 임시로 /tmp 와 같이 반드시 존재하는 폴더로 변경해서 저장하는 것도 방법입니다.

## 5단계: SD 카드 분리 및 라즈베리파이 부팅
수정이 완료되면 우분투 파일 탐색기에서 rootfs 드라이브를 '꺼내기(Eject)' 한 후, 물리적으로 SD 카드를 분리합니다.

이제 SD 카드를 다시 라즈베리파이에 꽂고 전원을 연결합니다. 이제 무한 재부팅 없이 정상적으로 부팅이 완료될 것입니다.

## 6단계: 원인 확인 및 Watchdog 재활성화
정상 부팅된 라즈베리파이에 SSH로 접속하여 마무리 작업을 합니다.

수정한 스크립트를 수동으로 실행하여 테스트

Bash

sudo /etc/watchdog.d/quick_folder_check.sh
이제 스크립트가 정상적으로 디버깅 메시지를 출력하며 ✅ 성공(0)을 반환합니다. 라고 나와야 합니다.

Watchdog 서비스 재활성화
스크립트가 정상 동작하는 것을 확인했다면, 아래 명령어로 Watchdog 서비스를 다시 활성화합니다.

Bash

sudo systemctl enable watchdog
sudo systemctl start watchdog
최종 상태 확인

Bash

systemctl status watchdog
이제 active (running) 상태로 정상 작동하는 것을 볼 수 있습니다.






동영상
