import paramiko
import logging
import os

# paramiko의 상세한 디버그 로그를 활성화하여 모든 통신 과정을 출력합니다.
logging.basicConfig(level=logging.DEBUG)
paramiko_logger = logging.getLogger("paramiko")
paramiko_logger.setLevel(logging.DEBUG)

# --- ★★★★★ 사용자 설정 ★★★★★ ---
# 테스트할 라즈베리파이의 IP 주소 하나만 입력하세요.
HOST_IP = '192.168.1.101' # 테스트할 IP 하나
SSH_USER = 'kw'
# kw 계정의 id_rsa 키 파일 경로를 정확하게 지정합니다.
SSH_KEY_FILE = os.path.expanduser('~/.ssh/id_rsa')
# --- 설정 끝 ---

print("="*50)
print(f"SSH 연결 진단 스크립트 시작")
print(f"대상 호스트: {HOST_IP}")
print(f"사용자: {SSH_USER}")
print(f"키 파일 경로: {SSH_KEY_FILE}")
print("="*50)

# 키 파일이 존재하는지 먼저 확인합니다.
if not os.path.exists(SSH_KEY_FILE):
    print(f"!!!!!! [치명적 오류] SSH 키 파일을 찾을 수 없습니다: {SSH_KEY_FILE}")
    print("이전에 'ssh-keygen -t rsa' 명령어가 성공적으로 완료되었는지 확인해주세요.")
    exit()

client = paramiko.SSHClient()
client.set_missing_host_key_policy(paramiko.AutoAddPolicy())

try:
    print("\n>>> paramiko 연결 시도...")
    client.connect(
        hostname=HOST_IP,
        username=SSH_USER,
        key_filename=SSH_KEY_FILE,
        timeout=10
    )
    print("\n\n★★★★★ [성공] 인증에 성공했습니다! SSH 연결이 정상적으로 이루어졌습니다. ★★★★★")
    print("이제 deploy_watchdog_robust.py 스크립트도 작동할 것입니다.")

except Exception as e:
    print(f"\n\n!!!!!! [실패] 인증에 실패했습니다. 아래는 상세 오류 로그입니다. !!!!!!")
    print(f"발생한 오류 유형: {type(e).__name__}")
    print(f"오류 메시지: {e}")
    print("\n이 로그 전체를 복사해서 알려주시면 원인을 정확히 분석할 수 있습니다.")

finally:
    if client:
        client.close()