Box로 내용을 입력 받습니다. 메모는 마우스가 이탈하거나 포커스를 잃을 때 자동으로 내용과 위치를 C:\memokw 폴더에 저장합니다. 프로그램 시작 시 이 폴더에서 메모를 로드합니다.

먼저 MemoForm.cs 파일을 생성하고 아래의 코드를 추가하세요. 이 코드는 개별 메모를 위한 폼을 정의합니다:

csharp
Copy code
using System;
using System.IO;
using System.Windows.Forms;

public class MemoForm : Form
{
    TextBox textBox;
    string memoFileName;
    static string memoDirectory = @"C:\memokw";

    public MemoForm(string fileName)
    {
        this.memoFileName = fileName;
        InitializeComponents();
        LoadMemo();
    }

    private void InitializeComponents()
    {
        textBox = new TextBox
        {
            Multiline = true,
            Dock = DockStyle.Fill,
            ScrollBars = ScrollBars.Vertical
        };

        this.Controls.Add(textBox);
        this.TopMost = true;
        this.FormBorderStyle = FormBorderStyle.SizableToolWindow;
        this.Size = new Size(200, 200);
        this.StartPosition = FormStartPosition.CenterScreen;

        this.textBox.Leave += (sender, e) => SaveMemo();
        this.Move += (sender, e) => SaveMemo();
        this.Resize += (sender, e) => SaveMemo();
        this.FormClosing += (sender, e) => SaveMemo();
    }

    public void SaveMemo()
    {
        Directory.CreateDirectory(memoDirectory); // 폴더가 없으면 생성
        File.WriteAllText(Path.Combine(memoDirectory, memoFileName), textBox.Text);
        // 위치와 크기도 저장
        File.WriteAllText(Path.Combine(memoDirectory, memoFileName + "_pos"), $"{Location.X},{Location.Y},{Width},{Height}");
    }

    private void LoadMemo()
    {
        if (File.Exists(Path.Combine(memoDirectory, memoFileName)))
        {
            textBox.Text = File.ReadAllText(Path.Combine(memoDirectory, memoFileName));
            if (File.Exists(Path.Combine(memoDirectory, memoFileName + "_pos")))
            {
                string[] pos = File.ReadAllText(Path.Combine(memoDirectory, memoFileName + "_pos")).Split(',');
                Location = new Point(int.Parse(pos[0]), int.Parse(pos[1]));
                Width = int.Parse(pos[2]);
                Height = int.Parse(pos[3]);
            }
        }
    }
}
다음은 MainForm.cs 파일의 코드입니다. 이 폼은 새 메모를 추가하는 기능과 기존 메모를 로드하는 기능을 담당합니다:

csharp
Copy code
using System;
using System.IO;
using System.Windows.Forms;

public class MainForm : Form
{
    Button addButton;

    public MainForm()
    {
        InitializeComponents();
        LoadMemos();
    }

    private void InitializeComponents()
    {
        addButton = new Button
        {
            Text = "+",
            Dock = DockStyle.Top
        };

        addButton.Click += (sender, e) => CreateNewMemo();

        this.Controls.Add(addButton);
        this.Width = 240;
        this.Height = 320;
    }

    private void LoadMemos()
    {
        string memoDirectory = MemoForm.memoDirectory;
        if (Directory.Exists(memoDirectory))
        {
            foreach (string filePath in Directory.GetFiles(memoDirectory, "*_pos"))
            {
                string fileName = Path.GetFileNameWithoutExtension(filePath).Replace("_pos", "");
                MemoForm memo = new MemoForm(fileName);
                memo.Show();
            }
        }
    }

    private void CreateNewMemo()
    {
        string memoFileName = $"Memo_{Guid.NewGuid()}.txt";
        MemoForm memo = new MemoForm(memoFileName);
        memo.Show();
    }
}

[STAThread]
static void Main()
{
    Application.EnableVisualStyles();
    Application.SetCompatibleTextRenderingDefault(false);
    Application.Run(new MainForm());
}
이 코드는 C:\memokw 디렉토리에 메모의 내용과 위치 정보를 저장합니다. 저장된 메모는 어플리케이션을 다시 시작할 때 로드됩니다. 메모 폼이 닫히거나 위치가 변경되거나 크기가 조정될 때마다 정보가 자동으로 저장됩니다.

사용하기 전에 몇 가지 