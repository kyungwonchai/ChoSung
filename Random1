VBA에서 Like 연산자는 문자열이 특정 패턴과 일치하는지 여부를 확인하는 데 사용됩니다. SQL의 LIKE와 유사하며, 와일드카드 문자를 사용하여 유연한 문자열 비교를 할 수 있습니다.

Like 연산자 기본 사용법

VBA

결과 = 문자열 Like 패턴
결과: True 또는 False 값을 반환합니다.
문자열: 비교할 대상 문자열입니다.
패턴: 와일드카드 문자를 포함할 수 있는 비교 패턴 문자열입니다.
주요 와일드카드 문자

와일드카드	설명	예시 (패턴)	일치하는 문자열 예시
*	0개 이상의 모든 문자 (만능 문자)	"a*"	"a", "ab", "abc"
?	정확히 하나의 모든 문자	"a?c"	"abc", "axc"
#	정확히 하나의 숫자 (0-9)	"## Street"	"12 Street", "99 Street"
[charlist]	charlist에 있는 문자 중 하나와 일치	"[AB]cd"	"Acd", "Bcd"
[!charlist]	charlist에 없는 문자 중 하나와 일치	"[!AB]cd"	"Ccd", "Xcd"
[숫자-숫자]	지정된 범위 내의 숫자 하나와 일치	"[0-9]xx"	"1xx", "7xx"
[문자-문자]	지정된 범위 내의 문자 하나와 일치 (A-Z)	"[A-C]pple"	"Apple", "Bpple"

Sheets로 내보내기
주의사항:

Like 연산자는 기본적으로 대소문자를 구분합니다 (Option Compare Binary가 기본값).
대소문자를 구분하지 않으려면 모듈 상단에 Option Compare Text를 선언해야 합니다.
와일드카드 문자 자체(*, ?, #, [, ])를 일반 문자로 검색하려면 해당 문자를 대괄호([])로 묶어야 합니다.
예: Like "[*]"는 실제 별표 문자 *와 일치합니다.
예: Like "[[]"는 실제 대괄호 문자 [와 일치합니다.
VBA 예제 코드

모듈 상단에 다음을 추가하여 대소문자 구분 여부를 설정할 수 있습니다.

VBA

' 대소문자 구분 안 함 (선택 사항)
' Option Compare Text

' 대소문자 구분 (기본값)
' Option Compare Binary
특별히 지정하지 않으면 Option Compare Binary (대소문자 구분)로 작동합니다.

VBA

Sub TestLikeOperator()
    Dim textToSearch As String
    Dim pattern As String

    textToSearch = "Apple Pie 123"
    Debug.Print "원본 문자열: " & textToSearch
    Debug.Print "--- --- ---"

    ' 1. 특정 문자로 시작하는지 확인 ("첫자에 시작")
    pattern = "App*"
    If textToSearch Like pattern Then
        Debug.Print """" & textToSearch & """는 """ & pattern & """ 패턴과 일치합니다. (App로 시작)"
    Else
        Debug.Print """" & textToSearch & """는 """ & pattern & """ 패턴과 일치하지 않습니다."
    End If

    pattern = "apple*" ' Option Compare Text 가 아니면 False
    If textToSearch Like pattern Then
        Debug.Print """" & textToSearch & """는 """ & pattern & """ 패턴과 일치합니다. (apple로 시작, 대소문자 테스트)"
    Else
        Debug.Print """" & textToSearch & """는 """ & pattern & """ 패턴과 일치하지 않습니다. (apple로 시작, 대소문자 테스트)"
    End If
    Debug.Print "--- --- ---"


    ' 2. 특정 문자로 끝나는지 확인 ("끝자에 시작" -> "끝자로 끝나는지"로 이해)
    pattern = "*123"
    If textToSearch Like pattern Then
        Debug.Print """" & textToSearch & """는 """ & pattern & """ 패턴과 일치합니다. (123으로 끝남)"
    Else
        Debug.Print """" & textToSearch & """는 """ & pattern & """ 패턴과 일치하지 않습니다."
    End If

    pattern = "*Pie" ' "Apple Pie 123"은 "Pie"로 끝나지 않음
    If textToSearch Like pattern Then
        Debug.Print """" & textToSearch & """는 """ & pattern & """ 패턴과 일치합니다. (Pie로 끝남)"
    Else
        Debug.Print """" & textToSearch & """는 """ & pattern & """ 패턴과 일치하지 않습니다. (Pie로 끝남)"
    End If
    Debug.Print "--- --- ---"


    ' 3. 특정 문자를 포함하는지 확인
    pattern = "*Pie*"
    If textToSearch Like pattern Then
        Debug.Print """" & textToSearch & """는 """ & pattern & """ 패턴과 일치합니다. (Pie 포함)"
    Else
        Debug.Print """" & textToSearch & """는 """ & pattern & """ 패턴과 일치하지 않습니다."
    End If

    pattern = "*xyz*"
    If textToSearch Like pattern Then
        Debug.Print """" & textToSearch & """는 """ & pattern & """ 패턴과 일치합니다. (xyz 포함)"
    Else
        Debug.Print """" & textToSearch & """는 """ & pattern & """ 패턴과 일치하지 않습니다. (xyz 포함)"
    End If
    Debug.Print "--- --- ---"


    ' 4. 특정 길이 및 패턴 확인
    textToSearch = "A3B"
    pattern = "A#B" ' A로 시작, 숫자로 끝나고, 그 사이에 숫자 하나
    If textToSearch Like pattern Then
        Debug.Print """" & textToSearch & """는 """ & pattern & """ 패턴과 일치합니다. (A + 숫자 1개 + B)"
    Else
        Debug.Print """" & textToSearch & """는 """ & pattern & """ 패턴과 일치하지 않습니다."
    End If
    Debug.Print "--- --- ---"


    ' 5. 문자 목록 중 하나와 일치하는지 확인
    textToSearch = "Cat"
    pattern = "[CD]at" ' C 또는 D로 시작하고 at로 끝남
    If textToSearch Like pattern Then
        Debug.Print """" & textToSearch & """는 """ & pattern & """ 패턴과 일치합니다. (Cat 또는 Dat)"
    Else
        Debug.Print """" & textToSearch & """는 """ & pattern & """ 패턴과 일치하지 않습니다."
    End If
    Debug.Print "--- --- ---"


    ' 6. 문자 목록에 없는 문자와 일치하는지 확인
    textToSearch = "Bat"
    pattern = "[!CD]at" ' C 또는 D가 아닌 문자로 시작하고 at로 끝남
    If textToSearch Like pattern Then
        Debug.Print """" & textToSearch & """는 """ & pattern & """ 패턴과 일치합니다. (Cat, Dat가 아님)"
    Else
        Debug.Print """" & textToSearch & """는 """ & pattern & """ 패턴과 일치하지 않습니다."
    End If
    Debug.Print "--- --- ---"

    ' 7. 와일드카드 문자 자체를 검색
    textToSearch = "This is a test[*]"
    pattern = "*[*]" ' 문자열 끝에 실제 별표(*)가 있는지 확인
    If textToSearch Like pattern Then
        Debug.Print """" & textToSearch & """는 """ & pattern & """ 패턴과 일치합니다. (실제 * 문자 포함)"
    Else
        Debug.Print """" & textToSearch & """는 """ & pattern & """ 패턴과 일치하지 않습니다."
    End If

    textToSearch = "This has a question?"
    pattern = "*[?]" ' 문자열 끝에 실제 물음표(?)가 있는지 확인
    If textToSearch Like pattern Then
        Debug.Print """" & textToSearch & """는 """ & pattern & """ 패턴과 일치합니다. (실제 ? 문자 포함)"
    Else
        Debug.Print """" & textToSearch & """는 """ & pattern & """ 패턴과 일치하지 않습니다."
    End If

End Sub
실행 방법:

VBA 편집기(Alt + F11)를 엽니다.
새 모듈을 삽입합니다 (삽입 > 모듈).
위 코드를 복사하여 모듈에 붙여넣습니다.
TestLikeOperator 서브루틴 내에 커서를 놓고 F5 키를 누르거나 실행 버튼을 클릭합니다.
결과는 직접 실행 창(Ctrl + G)에 출력됩니다.
이 예제들을 통해 Like 연산자와 다양한 와일드카드를 활용하여 문자열을 효과적으로 비교하고 검색하는 방법을 익힐 수 있습니다. "첫자에 시작"은 "문자*" 패턴으로, "끝자에 시작"은 "특정 문자로 끝나는지"로 이해하여 "*"&"문자" 패턴으로 사용할 수 있습니