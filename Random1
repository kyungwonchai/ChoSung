로 메인 창의 컬럼과 밴드의 순서를 변경하려는 것으로 이해했습니다. 이를 위해서는 몇 가지 단계를 거쳐야 합니다.

    새 창 정의: 컬럼과 밴드를 나열하고 순서를 변경할 수 있는 새 창을 정의합니다. 이 창에는 컬럼과 밴드의 목록을 표시하고, 사용자가 이 목록의 항목을 드래그 앤 드롭으로 정렬할 수 있도록 해야합니다.

    데이터 전달: 메인 창에서 새 창을 열 때 현재 컬럼과 밴드의 정보를 전달하고, 새 창에서 확인 버튼을 클릭하면 변경된 순서를 메인 창에 전달해야합니다.

    순서 변경: 메인 창에서 새 창에서 전달받은 순서 정보를 사용하여 컬럼과 밴드의 순서를 변경합니다.

아래의 코드 예제는 위의 단계를 수행하는 방법을 보여줍니다.

MainWindow.xaml:

xaml

<Window x:Class="YourNamespace.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="MainWindow" Height="350" Width="525">
    <Grid>
        <Button Content="Open Order Window" Click="Button_Click" Width="150" Height="50" />
        <!-- Your GridControl -->
        <dxg:GridControl x:Name="grid" ... />
    </Grid>
</Window>

MainWindow.xaml.cs:

csharp

using DevExpress.Xpf.Grid;
using System.Windows;

namespace YourNamespace
{
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
        }

        private void Button_Click(object sender, RoutedEventArgs e)
        {
            OrderWindow orderWindow = new OrderWindow(grid);
            orderWindow.ShowDialog();
        }
    }
}

OrderWindow.xaml:

xaml

<Window x:Class="YourNamespace.OrderWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Order Window" Height="350" Width="525">
    <Grid>
        <!-- Your UI for ordering columns and bands -->
        <!-- ... -->
        <Button Content="Confirm" Click="ConfirmButton_Click" Width="100" Height="30" />
    </Grid>
</Window>

OrderWindow.xaml.cs:

csharp

using DevExpress.Xpf.Grid;
using System.Windows;

namespace YourNamespace
{
    public partial class OrderWindow : Window
    {
        private GridControl grid;

        public OrderWindow(GridControl grid)
        {
            InitializeComponent();
            this.grid = grid;
            // Initialize your UI with the current order of columns and bands
            // ...
        }

        private void ConfirmButton_Click(object sender, RoutedEventArgs e)
        {
            // Apply the new order to the columns and bands of the main window's GridControl
            // ...
            Close();
        }
    }
}

이 예제에서는 MainWindow에서 Button_Click 이벤트 핸들러를 사용하여 OrderWindow를 열고, OrderWindow의 생성자에 GridControl을 전달합니다. OrderWindow에서는 사용자가 컬럼과 밴드의 순서를 변경할 수 있으며, ConfirmButton_Click 이벤트 핸들러에서 이 변경 사항을 메인 창의 GridControl에 적용합니다