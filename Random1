. 파이썬 테스트 코드
아래 코드를 control_dotstar.py 같은 이름으로 저장하세요.

Python

#!/usr/bin/env python3
import time
import board
import adafruit_dotstar  # 4선식 (CLK, DATA)용 라이브러리
import sys

# --- ★★★ 설정 ★★★ ---
NUM_LEDS = 30  # 여기에 가지고 계신 LED의 총 개수를 입력하세요
BRIGHTNESS = 0.2  # 밝기 (0.0 ~ 1.0) / 12V는 매우 밝으니 0.2 정도로 낮게 시작하세요
# ---

# --- 색상 정의 ---
COLOR_OFF = (0, 0, 0)
COLOR_ON = (255, 0, 0)  # '켜짐' 상태의 색상 (빨간색)
# ---

# DotStar 객체 초기화 (하드웨어 SPI 사용)
try:
    # board.SCLK = GPIO 11 (Clock)
    # board.MOSI = GPIO 10 (Data)
    dots = adafruit_dotstar.DotStar(
        board.SCLK, board.MOSI, NUM_LEDS, brightness=BRIGHTNESS, auto_write=False
    )
except RuntimeError as e:
    print(f"오류: SPI 장치를 초기화할 수 없습니다.")
    print(f"1. 'sudo raspi-config'에서 SPI가 활성화되고 재부팅했는지 확인하세요.")
    print(f"2. 'sudo apt install python3-adafruit-circuitpython-dotstar'로 라이브러리가 설치되었는지 확인하세요.")
    print(f"({e})")
    sys.exit(1)


def set_led(index: int, state: bool):
    """
    지정된 인덱스(주소)의 LED를 켜거나 끕니다.
    """
    if not 0 <= index < NUM_LEDS:
        print(f"오류: LED 주소 {index}번이 범위를 벗어났습니다 (0 ~ {NUM_LEDS - 1}).")
        return False

    if state:
        dots[index] = COLOR_ON
    else:
        dots[index] = COLOR_OFF

    # 변경 사항을 LED 스트립에 즉시 반영
    try:
        dots.show()
        return True
    except Exception as e:
        print(f"오류: LED에 데이터를 쓰는 데 실패했습니다. ({e})")
        return False


def all_off():
    """모든 LED를 끕니다."""
    dots.fill(COLOR_OFF)
    dots.show()


# --- 메인 실행 ---
if __name__ == "__main__":
    if len(sys.argv) != 3:
        # sys.argv[0] = 스크립트 이름
        # sys.argv[1] = 첫 번째 파라미터 (주소)
        # sys.argv[2] = 두 번째 파라미터 (상태)
        print(f"사용법: python3 {sys.argv[0]} <LED주소> <on|off>")
        print(f"예시 (0번째 켜기): python3 {sys.argv[0]} 0 on")
        print(f"예시 (1번째 끄기): python3 {sys.argv[0]} 1 off")
        sys.exit(1)

    try:
        # 1. 주소 파라미터 (숫자로 변환)
        index = int(sys.argv[1])

        # 2. 상태 파라미터 (on/off)
        state_str = sys.argv[2].lower()
        state_bool = state_str in ['on', 'true', '1', '켜기']

        # 3. 함수 호출
        print(f"실행: [DotStar] LED {index}번 주소를 {'ON' if state_bool else 'OFF'} 합니다...")
        if set_led(index, state_bool):
            print("성공.")
        else:
            print("실패.")

    except ValueError:
        print(f"오류: LED 주소는 숫자여야 합니다: {sys.argv[1]}")
        sys.exit(1)
    except KeyboardInterrupt:
        print("\n종료. 모든 LED를 끕니다.")
        all_off()
3. 실행 방법 (터미널)
터미널에서 이 파이썬 파일을 파라미터와 함께 실행합니다.

예시 1: 0번째 (첫 번째) LED를 켤 때

Bash

python3 control_dotstar.py 0 on
예시 2: 1번째 (두 번째) LED를 켤 때

Bash

python3 control_dotstar.py 1 on
예시 3: 0번째 LED를 끌 때

Bash

python3 control_dotstar.py 0 off
예시 4: 5번째 LED를 켤 때

Bash