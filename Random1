, 맞습니다. 정확히 짚으셨습니다. 회사 방화벽(프록시) 환경에서는 GPG 키를 받아오는 curl 명령어부터 인터넷 연결이 필요한 모든 과정이 막히는 것이 정상입니다.

이 문제를 해결하려면 터미널, apt, 도커 데몬 세 군데에 모두 프록시 설정을 해주어야 합니다.

아래 순서대로 따라 하시면 문제를 해결하고 설치를 완료할 수 있습니다.

## 1단계: 터미널(Shell)에 프록시 설정하기
우선 GPG 키를 받고 apt 명령어를 실행할 수 있도록, 현재 사용 중인 터미널에 임시로 프록시 설정을 적용해야 합니다.

본인의 프록시 주소와 포트, 계정 정보를 확인한 뒤 아래 명령어를 터미널에 입력하세요.

Bash

# 프록시 서버 주소와 포트를 입력하세요. (예: http://proxy.mycompany.com:8080)
export http_proxy="http://your-proxy-address:port"
export https_proxy="http://your-proxy-address:port"

# 만약 프록시에 아이디와 비밀번호가 필요하다면 아래 형식으로 입력하세요.
# export http_proxy="http://user:password@your-proxy-address:port"
# export https_proxy="http://user:password@your-proxy-address:port"
주의: 이 설정은 현재 터미널 창에만 적용됩니다. 터미널을 껐다 켜면 다시 입력해야 합니다.

## 2단계: APT에 프록시 영구 설정하기
sudo apt-get update 나 install 시 프록시를 사용하도록 영구적인 설정 파일을 만듭니다.

아래 명령어로 99proxy.conf 파일을 생성하고 내용을 채워 넣습니다. (복사해서 그대로 붙여넣기 하시면 됩니다. 주소 부분만 수정하세요.)

Bash

sudo tee /etc/apt/apt.conf.d/99proxy.conf <<EOF
Acquire::http::Proxy "http://your-proxy-address:port";
Acquire::httpss::Proxy "http://your-proxy-address:port";
EOF
## 3단계: 도커 데몬(Daemon)에 프록시 설정하기
이 설정은 도커 설치 후에 docker pull 명령어가 프록시를 통해 이미지를 잘 받아올 수 있도록 해줍니다.

1. 도커 서비스용 폴더 생성
Bash

sudo mkdir -p /etc/systemd/system/docker.service.d
2. 프록시 설정 파일 생성
아래 명령어로 http-proxy.conf 파일을 생성하고 내용을 채웁니다. (주소 부분만 수정하세요.)

Bash

sudo tee /etc/systemd/system/docker.service.d/http-proxy.conf <<EOF
[Service]
Environment="HTTP_PROXY=http://your-proxy-address:port"
Environment="HTTPS_PROXY=http://your-proxy-address:port"
Environment="NO_PROXY=localhost,127.0.0.1"
EOF
## 최종: 프록시 환경을 위한 전체 설치 과정 (A to Z)
이제 위 설정들을 모두 종합하여, 처음부터 다시 설치하는 전체 과정을 안내해 드리겠습니다.

터미널 프록시 설정 (본인 정보로 수정)

Bash

export http_proxy="http://your-proxy-address:port"
export https_proxy="http://your-proxy-address:port"
APT 프록시 설정 (본인 정보로 수정)

Bash

sudo tee /etc/apt/apt.conf.d/99proxy.conf <<EOF
Acquire::http::Proxy "http://your-proxy-address:port";
Acquire::httpss::Proxy "http://your-proxy-address:port";
EOF
이제 GPG 키 추가 및 도커 설치를 다시 시도합니다. (이제 멈추지 않을 겁니다)

Bash

# 시스템 패키지 업데이트
sudo apt-get update
sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common

# GPG 키 추가 (이제 프록시 설정 덕분에 성공)
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

# 저장소 설정
echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

# 도커 엔진 설치
sudo apt-get update
sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin
도커 설치 완료 후, 도커 데몬에 프록시 설정 적용 (본인 정보로 수정)

Bash

# 폴더 생성
sudo mkdir -p /etc/systemd/system/docker.service.d

# 설정 파일 생성
sudo tee /etc/systemd/system/docker.service.d/http-proxy.conf <<EOF
[Service]
Environment="HTTP_PROXY=http://your-proxy-address:port"
Environment="HTTPS_PROXY=http://your-proxy-address:port"
Environment="NO_PROXY=localhost,127.0.0.1"
EOF
설정 적용 및 도커 재시작

Bash

sudo systemctl daemon-reload
sudo systemctl restart docker
sudo usermod -aG docker ${USER}
최종 확인 (SSH 재접속 후)
SSH 접속을 끊었다가 다시 접속한 뒤, 아래 명령어가 성공하면 모든 설정이 완료된 것입니다.

Bash

docker run hello-world