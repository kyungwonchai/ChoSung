 코드가 부정확했습니다. DevExpress의 dxe:CheckEdit 컨트롤을 사용할 때는, EditValueChanging 이벤트의 이벤트 아규먼트에 Cancel 속성이 없습니다. 대신, Allow 속성을 사용하여 체크/체크 해제 동작을 허용하거나 취소할 수 있습니다. 다음은 수정된 코드 예제입니다:

csharp

using System;
using System.Windows;
using DevExpress.Xpf.Editors;

namespace YourNamespace
{
    public partial class MainWindow : Window
    {
        private bool 변수B = false;
        private bool 변수C = false;

        public MainWindow()
        {
            InitializeComponent();
        }

        private void CheckEdit_EditValueChanging(object sender, EditValueChangingEventArgs e)
        {
            CheckEdit checkEdit = sender as CheckEdit;

            if (checkEdit != null)
            {
                bool? newValue = e.NewValue as bool?;
                
                if (newValue == true && !변수B)
                {
                    e.Allow = false;  // 변수B가 false인 경우 체크 동작을 취소합니다.
                }
                else if (newValue == false && !변수C)
                {
                    e.Allow = false;  // 변수C가 false인 경우 체크 해제 동작을 취소합니다.
                }
            }
        }
    }
}

xml

<Window x:Class="YourNamespace.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
        Title="MainWindow" Height="350" Width="525">
    <Grid>
        <dxe:CheckEdit Name="CheckEdit" Content="Check Me" EditValueChanging="CheckEdit_EditValueChanging"/>
    </Grid>
</Window>

이 수정된 코드에서는 e.Allow 속성을 false로 설정하여 체크 또는 체크 해제 동작을 취소합니다. 변수B와 변수C의 상태를 