apPanel 안에 배치하는 방식으로 수정하겠습니다. 이를 통해 WrapPanel 내부의 요소가 제대로 스크롤되도록 합니다.

MainWindow.xaml
WrapPanel을 StackPanel로 감싸고, ScrollViewer를 WrapPanel 안에 배치합니다.

xml
코드 복사
<dx:ThemedWindow x:Class="QRMAKER.MainWindow"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
                 xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                 mc:Ignorable="d"
                 Title="MainWindow" Height="600" Width="800"
                 ThemeName="Office2019Color"
                 Closing="Window_Closing"
                 SizeChanged="Window_SizeChanged">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <TextBlock Text="제목" FontSize="24" HorizontalAlignment="Center" Margin="10" Grid.Row="0"/>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <!-- GridControl -->
            <dxg:GridControl Name="gridControl" AutoGenerateColumns="None">
                <dxg:GridControl.Columns>
                    <dxg:GridColumn FieldName="No" Header="No" Width="70" ReadOnly="True"/>
                    <dxg:GridColumn FieldName="Magazine" Header="Magazine" ReadOnly="True"/>
                </dxg:GridControl.Columns>
                <dxg:GridControl.View>
                    <dxg:TableView Name="tableView" AutoWidth="False" SelectionChanged="TableView_SelectionChanged"/>
                </dxg:GridControl.View>
            </dxg:GridControl>

            <!-- QR 코드 영역 -->
            <WrapPanel Name="qrCodePanel" HorizontalAlignment="Left" VerticalAlignment="Top" IsItemsHost="True"/>
        </Grid>

        <!-- 슬라이더 설정 -->
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="10" Grid.Row="2">
            <Button Content="클립보드에서 데이터 가져오기" Click="LoadFromClipboard"/>
            <TextBlock Text="QR 코드 크기: " VerticalAlignment="Center" Margin="10,0,0,0"/>
            <Slider Name="sizeSlider" Minimum="50" Maximum="200" Width="100" ValueChanged="SizeSlider_ValueChanged"/>
            <TextBox Name="sizeTextBox" Width="50" TextChanged="SizeTextBox_TextChanged" VerticalAlignment="Center"/>
            <TextBlock Text="QR 코드 간격: " VerticalAlignment="Center" Margin="10,0,0,0"/>
            <Slider Name="spacingSlider" Minimum="10" Maximum="50" Width="100" ValueChanged="SpacingSlider_ValueChanged"/>
            <TextBox Name="spacingTextBox" Width="50" TextChanged="SpacingTextBox_TextChanged" VerticalAlignment="Center"/>
        </StackPanel>
    </Grid>
</dx:ThemedWindow>
MainWindow.xaml.cs (관련 이벤트 핸들러만)
csharp
코드 복사
private void TableView_SelectionChanged(object sender, GridSelectionChangedEventArgs e)
{
    if (gridControl.SelectedItem is Item selectedItem)
    {
        HighlightQRCode(selectedItem.Magazine);
        ScrollToQRCode(selectedItem.Magazine);
    }
}

private void ScrollToQRCode(string magazine)
{
    if (_qrCodePanels.ContainsKey(magazine))
    {
        var stackPanel = _qrCodePanels[magazine];
        stackPanel.BringIntoView();
    }
}
동작 설명
WrapPanel의 요소 배치: WrapPanel은 자식 요소를 가로로 나열하고, 가로 공간이 부족하면 다음 줄로 넘깁니다.
ScrollViewer를 내부에 배치: ScrollViewer를 WrapPanel 내부에 배치하여 자식 요소가 많을 경우 스크롤이 가능하도록 합니다.
QR 코드 생성 및 배치: GenerateQRCodes 메서드에서 QR 코드를 생성하고, 이를 StackPanel에 추가합니다.
TableView_SelectionChanged 이벤트: GridControl에서 선택된 항목이 변경되면, 해당 항목에 대한 QR 코드를 강조하고, QR 코드로 스크롤을 이동시킵니다.
위의 코드에서는 WrapPanel 내부에 Sc