vExpress의 WPF Chart Control에서 MarkerModel, CircleMarkerModel과 같은 클래스 및 속성이 없는 경우, DevExpress 22.2 버전에 맞는 마커 및 점 스타일 설정 방법을 사용해야 합니다.

아래는 마커 크기, 색상, 스타일을 설정하고 각 선과 점을 요청하신 대로 설정하는 수정된 코드입니다.

수정된 코드 (MainWindow.xaml.cs)
csharp
코드 복사
using DevExpress.Xpf.Charts;
using System;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.Linq;
using System.Windows;
using System.Windows.Media;

namespace LineDataViewer
{
    public partial class MainWindow : Window
    {
        private List<DataPoint> allData;

        public MainWindow()
        {
            InitializeComponent();
            LoadData();
            InitializeLineChart();
        }

        private void LoadData()
        {
            allData = new List<DataPoint>();
            var connectionString = "YourConnectionStringHere";

            using (var connection = new SqlConnection(connectionString))
            {
                connection.Open();
                var query = @"
                    SELECT ModelName, Timestamp, MP1DATA, MP2DATA, MP3DATA, MP4DATA, MP5DATA
                    FROM View_InspectionResult
                    ORDER BY Timestamp DESC";

                using (var command = new SqlCommand(query, connection))
                using (var reader = command.ExecuteReader())
                {
                    while (reader.Read())
                    {
                        allData.Add(new DataPoint
                        {
                            ModelName = reader.GetString(0),
                            Timestamp = reader.GetDateTime(1),
                            MP1 = reader.GetDouble(2),
                            MP2 = reader.GetDouble(3),
                            MP3 = reader.GetDouble(4),
                            MP4 = reader.GetDouble(5),
                            MP5 = reader.GetDouble(6),
                        });
                    }
                }
            }
        }

        private void InitializeLineChart()
        {
            var diagram = LineChart.Diagram as XYDiagram2D;
            if (diagram == null)
                return;

            diagram.Series.Clear();

            // Define colors for L and R series
            var blueColors = new[] { Colors.Blue, Colors.SkyBlue, Colors.DodgerBlue, Colors.CornflowerBlue, Colors.LightBlue };
            var redColors = new[] { Colors.Red, Colors.OrangeRed, Colors.Crimson, Colors.IndianRed, Colors.LightCoral };

            // L 모델 데이터 시리즈 추가
            var lData = allData.Where(d => d.ModelName.EndsWith("L")).ToList();
            for (int i = 1; i <= 5; i++)
            {
                var series = new LineSeries2D
                {
                    DisplayName = $"L 모델 MP{i}",
                    DataSource = lData,
                    ArgumentDataMember = "Timestamp",
                    ValueDataMember = $"MP{i}",
                    MarkerVisible = true,
                    LineStyle = new LineStyle { Thickness = 2 }, // 선 두께 설정
                };

                // 마커 스타일 적용
                var markerStyle = new MarkerStyle
                {
                    Size = 10, // 마커 크기 설정
                    Fill = new SolidColorBrush(blueColors[i - 1]) // 파란색 계열 색상 적용
                };
                series.MarkerStyle = markerStyle;
                series.Brush = new SolidColorBrush(blueColors[i - 1]); // 선 색상 적용
                diagram.Series.Add(series);
            }

            // R 모델 데이터 시리즈 추가
            var rData = allData.Where(d => d.ModelName.EndsWith("R")).ToList();
            for (int i = 1; i <= 5; i++)
            {
                var series = new LineSeries2D
                {
                    DisplayName = $"R 모델 MP{i}",
                    DataSource = rData,
                    ArgumentDataMember = "Timestamp",
                    ValueDataMember = $"MP{i}",
                    MarkerVisible = true,
                    LineStyle = new LineStyle { Thickness = 2 }, // 선 두께 설정
                };

                // 마커 스타일 적용
                var markerStyle = new MarkerStyle
                {
                    Size = 10, // 마커 크기 설정
                    Fill = new SolidColorBrush(redColors[i - 1]) // 빨간색 계열 색상 적용
                };
                series.MarkerStyle = markerStyle;
                series.Brush = new SolidColorBrush(redColors[i - 1]); // 선 색상 적용
                diagram.Series.Add(series);
            }
        }
    }

    public class DataPoint
    {
        public string ModelName { get; set; }
        public DateTime Timestamp { get; set; }
        public double MP1 { get; set; }
        public double MP2 { get; set; }
        public double MP3 { get; set; }
        public double MP4 { get; set; }
        public double MP5 { get; set; }
    }
}
주요 변경 사항
MarkerStyle 사용:

MarkerStyle 클래스를 사용하여 마커의 크기(Size)와 색상(Fill)을 설정했습니다.
선 색상 및 두께:

각 시리즈의 Brush 속성에 색상을 지정하고, LineStyle을 통해 선 두께를 설정했습니다.
L과 R 색상 구분:

L 모델: 파란색 계열(5단계)로 설정.
R 모델: 빨간색 계열(5단계)로 설정.
축은 공통:

X축과 Y축은 공통으로 사용하여 데이터가 같은 축을 공유하도록 했습니다.
결과
L 모델: 선과 점이 파란색 계열(5단계)로 표시됩니다.
R 모델: 선과 점이 빨간색 계열(5단계)로 표시됩니다.
X축: 공통 시간(Timestamp).