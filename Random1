using System;
using System.Text;
using System.Windows;
using Microsoft.Web.WebView2.Core;
using System.Collections.Generic;
using System.Threading.Tasks;

namespace YourNamespace
{
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
            MyWebView.Source = new Uri("https://www.example.com"); // 원하는 URL로 변경
            MyWebView.CoreWebView2InitializationCompleted += MyWebView_CoreWebView2InitializationCompleted;
        }

        private void MyWebView_CoreWebView2InitializationCompleted(object? sender, EventArgs e)
        {
            // WebView2 초기화 후 추가 설정 가능
        }

        private async void CopyTextButton_Click(object sender, RoutedEventArgs e)
        {
            // 텍스트 데이터를 청크 단위로 나누어 가져오기 위한 JavaScript 코드
            string scriptInit = @"
                (function() {
                    let container = document.querySelector('div.Box-sc-g0xbh4-0.iJOeCH');
                    if (container) {
                        let textArea = container.querySelector('#read-only-cursor-text-area');
                        if (textArea) {
                            const text = textArea.value;
                            const chunkSize = 1000; // 청크 크기 설정
                            let chunks = [];
                            for (let i = 0; i < text.length; i += chunkSize) {
                                chunks.push(btoa(text.substr(i, chunkSize))); // Base64 인코딩된 청크 저장
                            }
                            return chunks; // Base64 인코딩된 청크 배열 반환
                        }
                    }
                    return [];
                })();";

            // JavaScript 코드 실행 및 결과 가져오기 (Base64 인코딩된 청크 배열)
            string result = await MyWebView.ExecuteScriptAsync(scriptInit);

            // 결과 JSON 파싱 및 각 청크를 결합하여 최종 문자열 생성
            result = result.Trim('[', ']', '"'); // 대괄호와 큰따옴표 제거
            string[] chunks = result.Split(new string[] { "\",\"" }, StringSplitOptions.None); // 청크 분리
            List<byte> byteList = new List<byte>();

            foreach (string chunk in chunks)
            {
                if (!string.IsNullOrWhiteSpace(chunk))
                {
                    byte[] data = Convert.FromBase64String(chunk);
                    byteList.AddRange(data); // 각 청크를 디코딩하여 바이트 리스트에 추가
                }
            }

            // 바이트 배열을 문자열로 변환하여 클립보드에 복사
            string decodedText = Encoding.UTF8.GetString(byteList.ToArray());

            if (!string.IsNullOrEmpty(decodedText))
            {
                Clipboard.SetText(decodedText);
                MessageBox.Show("텍스트가 클립보드에 복사되었습니다.", "복사 완료");
            }
            else
            {
                MessageBox.Show("텍스트를 찾을 수 없습니다.", "오류");
            }
        }
    }
}
