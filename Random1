드 예제를 제공하겠습니다.

    MainForm 코드:

csharp

using System;
using System.Data;
using System.Data.SqlClient;
using System.Net;
using System.Windows.Forms;

namespace PW1
{
    public partial class MainForm : Form
    {
        private string ipAddress; // IP 주소 필드
        private SqlConnection connection;

        public MainForm()
        {
            InitializeComponent();
            connection = new SqlConnection("your_connection_string"); // 데이터베이스 연결 문자열 입력
        }

        private void PermissionRequestButton_Click(object sender, EventArgs e)
        {
            // IP 주소 설정 (변경 불가능)
            ipAddress = GetIPAddress();
            IPTextBox.Text = ipAddress;
            IPTextBox.Enabled = false;

            // 이름, 부서 등 입력 폼 열기
            var permissionForm = new PermissionRequestForm();
            permissionForm.ShowDialog();

            // 신청한 내용을 처리하는 로직 추가
            if (permissionForm.IsSubmitted)
            {
                try
                {
                    connection.Open();

                    string query = "INSERT INTO table_신청IP (IP, Name, Department) VALUES (@IP, @Name, @Department)";
                    SqlCommand command = new SqlCommand(query, connection);
                    command.Parameters.AddWithValue("@IP", ipAddress);
                    command.Parameters.AddWithValue("@Name", permissionForm.Name);
                    command.Parameters.AddWithValue("@Department", permissionForm.Department);
                    command.ExecuteNonQuery();

                    MessageBox.Show("권한 신청이 완료되었습니다.");
                }
                catch (Exception ex)
                {
                    MessageBox.Show("권한 신청 중 오류가 발생했습니다: " + ex.Message);
                }
                finally
                {
                    connection.Close();
                }
            }
        }

        private void StatusButton_Click(object sender, EventArgs e)
        {
            // 미결 상태를 보여주는 폼 열기
            var statusForm = new StatusForm();
            statusForm.ShowDialog();

            // 허가를 클릭한 경우 처리하는 로직 추가
            if (statusForm.IsApproved)
            {
                try
                {
                    connection.Open();

                    string query = "UPDATE table_신청IP SET ApprovalStatus = 1, ApprovalDate = @ApprovalDate WHERE IP = @IP";
                    SqlCommand command = new SqlCommand(query, connection);
                    command.Parameters.AddWithValue("@IP", statusForm.SelectedIP);
                    command.Parameters.AddWithValue("@ApprovalDate", DateTime.Now);
                    command.ExecuteNonQuery();

                    MessageBox.Show("권한이 허가되었습니다.");
                }
                catch (Exception ex)
                {
                    MessageBox.Show("권한 허가 중 오류가 발생했습니다: " + ex.Message);
                }
                finally
                {
                    connection.Close();
                }
            }
        }

        private string GetIPAddress()
        {
            // IP 주소를 가져오는 로직 추가
            // 예: return "192.168.0.1";
            return "127.0.0.1"; // 테스트를 위해 임시로 로컬 IP를 반환하도록 설정
        }
    }
}

    PermissionRequestForm 코드:

csharp

using System;
using System.Windows.Forms;

namespace PW1
{
    public partial class PermissionRequestForm : Form
    {
        public bool IsSubmitted { get; private set; }
        public string Name { get; private set; }
        public string Department { get; private set; }

        public PermissionRequestForm()
        {
            InitializeComponent();
        }

        private void SubmitButton_Click(object sender, EventArgs e)
        {
            if (string.IsNullOrEmpty(NameTextBox.Text) || string.IsNullOrEmpty(DepartmentTextBox.Text))
            {
                MessageBox.Show("이름과 부서를 입력해주세요.");
                return;
            }

            Name = NameTextBox.Text;
            Department = DepartmentTextBox.Text;
            IsSubmitted = true;

            this.Close();
        }
    }
}

    StatusForm 코드:

csharp

using System;
using System.Data;
using System.Data.SqlClient;
using System.Windows.Forms;

namespace PW1
{
    public partial class StatusForm : Form
    {
        private SqlConnection connection;
        public bool IsApproved { get; private set; }
        public string SelectedIP { get; private set; }

        public StatusForm()
        {
            InitializeComponent();
            connection = new SqlConnection("your_connection_string"); // 데이터베이스 연결 문자열 입력
        }

        private void StatusForm_Load(object sender, EventArgs e)
        {
            try
            {
                connection.Open();

                string query = "SELECT IP FROM table_신청IP WHERE ApprovalStatus = 0";
                SqlCommand command = new SqlCommand(query, connection);
                SqlDataAdapter adapter = new SqlDataAdapter(command);
                DataTable dataTable = new DataTable();
                adapter.Fill(dataTable);

                StatusDataGridView.DataSource = dataTable;
            }
            catch (Exception ex)
            {
                MessageBox.Show("미결 상태를 가져오는 중 오류가 발생했습니다: " + ex.Message);
            }
            finally
            {
                connection.Close();
            }
        }

        private void ApproveButton_Click(object sender, EventArgs e)
        {
            if (StatusDataGridView.SelectedRows.Count == 0)
            {
                MessageBox.Show("허가할 IP를 선택해주세요.");
                return;
            }

            DialogResult result = MessageBox.Show("선택한 IP를 허가하시겠습니까?", "허가", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
            if (result == DialogResult.Yes)
            {
                SelectedIP = StatusDataGridView.SelectedRows[0].Cells["IP"].Value

User
이어서요
ChatGPT

이어서 코드를 제공해드리겠습니다.

StatusForm 코드:

csharp

using System;
using System.Data;
using System.Data.SqlClient;
using System.Windows.Forms;

namespace PW1
{
    public partial class StatusForm : Form
    {
        private SqlConnection connection;
        public bool IsApproved { get; private set; }
        public string SelectedIP { get; private set; }

        public StatusForm()
        {
            InitializeComponent();
            connection = new SqlConnection("your_connection_string"); // 데이터베이스 연결 문자열 입력
        }

        private void StatusForm_Load(object sender, EventArgs e)
        {
            try
            {
                connection.Open();

                string query = "SELECT IP FROM table_신청IP WHERE ApprovalStatus = 0";
                SqlCommand command = new SqlCommand(query, connection);
                SqlDataAdapter adapter = new SqlDataAdapter(command);
                DataTable dataTable = new DataTable();
                adapter.Fill(dataTable);

                StatusDataGridView.DataSource = dataTable;
            }
            catch (Exception ex)
            {
                MessageBox.Show("미결 상태를 가져오는 중 오류가 발생했습니다: " + ex.Message);
            }
            finally
            {
                connection.Close();
            }
        }

        private void ApproveButton_Click(object sender, EventArgs e)
        {
            if (StatusDataGridView.SelectedRows.Count == 0)
            {
                MessageBox.Show("허가할 IP를 선택해주세요.");
                return;
            }

            DialogResult result = MessageBox.Show("선택한 IP를 허가하시겠습니까?", "허가", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
            if (result == DialogResult.Yes)
            {
                SelectedIP = StatusDataGridView.SelectedRows[0].Cells["IP"].Value.ToString();

                try
                {
                    connection.Open();

                    string query = "UPDATE table_신청IP SET ApprovalStatus = 1, ApprovalDate = @ApprovalDate WHERE IP = @IP";
                    SqlCommand command = new SqlCommand(query, connection);
                    command.Parameters.AddWithValue("@IP", SelectedIP);
                    command.Parameters.AddWithValue("@ApprovalDate", DateTime.Now);
                    command.ExecuteNonQuery();

                    MessageBox.Show("권한이 허가되었습니다.");
                    IsApproved = true;
                    this.Close();
                }
                catch (Exception ex)
                {
                    MessageBox.Show("권한 허가 중 오류가 발생했습니다: " + ex.Message);
                }
                finally
                {
                    connection.Close();
                }
            }
        }
    }
}

URLRegistrationForm 코드:

csharp

using System;
using System.Data;
using System.Data.SqlClient;
using System.Windows.Forms;

namespace PW1
{
    public partial class URLRegistrationForm : Form
    {
        private SqlConnection connection;
        public bool IsRegistered { get; private set; }

        public URLRegistrationForm()
        {
            InitializeComponent();
            connection = new SqlConnection("your_connection_string"); // 데이터베이스 연결 문자열 입력
        }

        private void RegisterURLButton_Click(object sender, EventArgs e)
        {
            string urlName = URLNameTextBox.Text;

            // 기존 URL명과 중복 체크하는 로직 추가
            if (IsURLNameExists(urlName))
            {
                MessageBox.Show("URL명이 이미 존재합니다.");
                return;
            }

            try
            {
                connection.Open();

                string query = "INSERT INTO table_신청URL (URLName) VALUES (@URLName)";
                SqlCommand command = new SqlCommand(query, connection);
                command.Parameters.AddWithValue("@URLName", urlName);
                command.ExecuteNonQuery();

                MessageBox.Show("URL 등록이 완료되었습니다.");
                IsRegistered = true;
                this.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show("URL 등록 중 오류가 발생했습니다: " + ex.Message);
            }
            finally
            {
                connection.Close();
            }
        }

        private bool IsURLNameExists(string urlName)
        {
            try
            {
                connection.Open();

                string query = "SELECT COUNT(*) FROM table_신청URL WHERE URLName = @URLName";
                SqlCommand command = new SqlCommand(query, connection);
                command.Parameters.AddWithValue("@URLName", urlName);
                int count = Convert.ToInt32(command.ExecuteScalar());

                return count > 0;
            }
            catch (Exception ex)
            {
                MessageBox.Show("URL 중복 확인 중 오류가 발생했습니다: " + ex.Message);
                return false;
            }
            finally
            {
                connection.Close();
            }
        }
    }
}

위의 코드에서 "your_connection_string"을 실제 데이터베이스 연결 문자열로 변경해야 합니다. 이외에도 필요에 따라 데이터베이스 연결 설정을 수정해야 할 수 있습니다.

위의 코드 예제는 주요 기능을 담고 있으므로 필요에 따라 추가적인 로직을 구현하실 수 있습니다.
