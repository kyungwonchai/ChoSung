수만 주입한다면, 값 변경을 다른 클래스에서 동기화하려면 직접적인 변수 주입만으로는 불가능합니다. 변수 자체는 변경을 감지할 수 없기 때문에, 값 변경 시 동기화를 원한다면 별도의 이벤트나 Action을 활용해야 합니다. 여기서는 bool 변수를 직접 주입하고, 변경을 동기화하는 방법을 설명하겠습니다.

1. 단순 변수 주입
단순히 변수만 주입하고 싶다면, ref나 Action을 사용할 수 있습니다.

1.1 ref로 값 주입
ref를 사용하면 변수 자체를 참조로 전달하여 값을 변경할 수 있습니다.

csharp
코드 복사
public class AnotherClass
{
    public void UpdateValue(ref bool isRunning)
    {
        isRunning = !isRunning; // 변수 값 변경
        Console.WriteLine($"isRunning 값 변경: {isRunning}");
    }
}
사용 방식

csharp
코드 복사
bool isRunning = false;
var anotherClass = new AnotherClass();

anotherClass.UpdateValue(ref isRunning); // 변수 참조로 전달
Console.WriteLine($"현재 isRunning: {isRunning}");
제약 사항
ref는 함수 호출 시에만 동작합니다. 지속적인 값 연동은 불가능합니다.
2. Action 또는 Func를 사용한 값 전달
값 변경을 동기화하려면 Action을 사용하는 것이 더 유연한 방법입니다.

csharp
코드 복사
public class AnotherClass
{
    private Action<bool> _updateAction;

    public void InjectUpdateAction(Action<bool> updateAction)
    {
        _updateAction = updateAction;
    }

    public void ToggleValue(bool currentValue)
    {
        var newValue = !currentValue;
        _updateAction?.Invoke(newValue); // 값 변경 알림
    }
}
사용 방식

csharp
코드 복사
bool isRunning = false;
var anotherClass = new AnotherClass();

// 값을 업데이트하는 로직 연결
anotherClass.InjectUpdateAction(updatedValue =>
{
    isRunning = updatedValue;
    Console.WriteLine($"isRunning 업데이트됨: {isRunning}");
});

// 값 변경 호출
anotherClass.ToggleValue(isRunning);
장점
함수 호출 없이도 값 변경을 통지할 수 있습니다.
값 변경 로직이 분리되어 코드가 더 깔끔해집니다.
3. 이벤트 기반 값 변경 알림
변수만 주입하면서 변경 시 알림을 보내고 싶다면 이벤트를 사용할 수 있습니다.

csharp
코드 복사
public class AnotherClass
{
    public event Action<bool> ValueChanged;

    public void ChangeValue(bool newValue)
    {
        ValueChanged?.Invoke(newValue); // 값 변경 이벤트 발생
    }
}
사용 방식

csharp
코드 복사
bool isRunning = false;
var anotherClass = new AnotherClass();

// 이벤트 구독
anotherClass.ValueChanged += updatedValue =>
{
    isRunning = updatedValue;
    Console.WriteLine($"isRunning 변경됨: {isRunning}");
};

// 값 변경 호출
anotherClass.ChangeValue(true);
장점
값 변경 통지가 이벤트로 처리되므로 다른 클래스에서도 쉽게 구독 가능.
단일 변수뿐 아니라 여러 클래스에서 동작을 공유 가능.
4. Observable 없이 값 변경 동기화 구현
Observable 없이 값을 동기화하려면 위 방법 중 2번 (Action) 또는 **3번 (이벤트)**가 가장 적합합니다.

단순히 값을 동기화하고 싶다면 2번 (Action).