reamlit Code (MSSQL2014 데이터 조회 - cursor.fetchall() 방식으로 변경)
아래 코드는 pandas 대신 cursor.fetchall()을 사용하여 Get_min_bestdifferent 프로시저의 결과를 가져옵니다.

python
코드 복사
import streamlit as st
import pymssql

# MSSQL 서버 연결 설정 함수
def get_connection():
    return pymssql.connect(
        server="YOUR_SERVER",
        user="YOUR_USER",
        password="YOUR_PASSWORD",
        database="YOUR_DATABASE"
    )

# Get_min_bestdifferent 프로시저 호출 함수 (cursor.fetchall() 방식)
def fetch_main_data():
    conn = get_connection()
    cursor = conn.cursor()
    cursor.execute("EXEC Get_min_bestdifferent")
    rows = cursor.fetchall()
    columns = [desc[0] for desc in cursor.description]  # 컬럼 이름 가져오기
    conn.close()
    
    # 데이터를 딕셔너리 리스트로 변환
    data = [dict(zip(columns, row)) for row in rows]
    return data, columns

# 테이블에서 최대값을 노란색으로 강조하는 HTML 스타일 함수
def generate_html_table(data, columns):
    html = "<table border='1' style='width:100%; border-collapse: collapse;'>"
    html += "<thead><tr>"
    for col in columns:
        html += f"<th>{col}</th>"
    html += "</tr></thead><tbody>"

    act2_columns = [f'act2_{i}' for i in range(1, 9)]

    for row in data:
        html += "<tr>"
        # act2_1 ~ act2_8 값 중 최대값 찾기
        act2_values = [row[col] for col in act2_columns]
        max_value = max(act2_values)
        
        for col in columns:
            value = row[col]
            if col in act2_columns and value == max_value:
                html += f"<td style='background-color: yellow;'>{value}</td>"
            else:
                html += f"<td>{value}</td>"
        html += "</tr>"

    html += "</tbody></table>"
    return html

# Streamlit 앱 구성
def main():
    st.set_page_config(layout="wide")
    st.title("Ranked Data Table - act2_1 ~ act2_8 Highlighting (Cursor 방식)")

    # 데이터 가져오기
    data, columns = fetch_main_data()
    
    st.subheader("act2_1 ~ act2_8 데이터 테이블")
    
    # HTML 테이블 생성 및 표시
    html_table = generate_html_table(data, columns)
    st.markdown(html_table, unsafe_allow_html=True)

if __name__ == "__main__":
    main()
📌 코드 설명
MSSQL 연결 설정 (get_connection())

pymssql.connect()를 사용하여 MSSQL 서버에 연결합니다.

서버 정보 (YOUR_SERVER, YOUR_USER, YOUR_PASSWORD, YOUR_DATABASE)는 본인의 값으로 변경하세요.

데이터 조회 (fetch_main_data())

cursor.fetchall() 방식을 사용하여 데이터를 가져옵니다.

cursor.description으로 컬럼 이름을 가져옵니다.

가져온 데이터를 딕셔너리 형식으로 변환하여 리스트로 반환합니다.

HTML 테이블 생성 (generate_html_table())

데이터를 HTML 형식의 테이블로 변환합니다.

act2_1 ~ act2_8 값 중 최대값을 노란색으로 강조하여 표시합니다.

Streamlit 앱 구성 (main())

HTML 테이블을 st.markdown()으로 표시합니다.

unsafe_allow_html=True 옵션을 사용하여 HTML 렌더링을 허용합니다.

📌 설치 필요 라이브러리
bash
코드 복사
pip install streamlit pymssql
📌 Streamlit 실행 방법
bash
코드 복사
streamlit run your_script_name.py
💡 결과 화면 설명
각 행마다 act2_1 ~ act2_8 값 중 최대값이 노란색으로 강조됩니다.

pandas 대신 cursor.fetchall() 방식을 사용하여 데이터를 가져오도록 변경되었습니다.

Streamlit에서 HTML로 렌더링하여 표시합니다.