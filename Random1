#BFS
# 미로찾기
maze = [
    [0, 1, 0, 0, 0, 1],
    [0, 1, 0, 1, 0 ,1],
    [0, 0, 0, 1, 0 ,1],
    [1, 0, 1, 0, 0, 0],
    [0, 0, 0, 0, 1 ,0],
    [0, 1, 0, 1, 0, 0],
    [0, 1, 0, 1, 0, 0]
]

def bfs(maze):
    rows,cols=len(maze),len(maze[0])
    visited=set()  # set()을  그냥 ()로 하면안되 ()는 투퓰,  그렇다고 {}로 하면 딕셔너리니까 안대
    direction=[(-1,0),(1,0),(0,1),(0,-1)]
    queue=[(0,0,[(0,0)])]

    while(queue):
        y,x,path=queue.pop(0)
        if x==cols-1 and y==rows-1:
            return path

        for dy,dx in direction:
            ny,nx=dy+y,dx+x

            if 0<=nx<cols and 0<=ny<rows and (ny,nx) not in visited and maze[ny][nx]==0:
                visited.add((ny,nx))
                queue.append((ny,nx,path+[(ny,nx)]))