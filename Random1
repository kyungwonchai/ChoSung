서 프로시저를 생성하는 코드를 보여드리고, 그 후에 C# 코드를 제공하겠습니다.

MSSQL 프로시저 생성
이 예시에서는 'YourDatabaseName'을 데이터베이스 이름으로, 'TBL1'과 'TBL2'를 테이블 이름으로 가정합니다. IP는 문자열(20자)로 처리합니다.

sql
Copy code
USE YourDatabaseName;
GO

CREATE PROCEDURE InsertIP
    @ipAddress VARCHAR(20)
AS
BEGIN
    -- 현재 날짜와 시간
    DECLARE @currentDateTime DATETIME = GETDATE();

    -- TBL2에 IP와 날짜 삽입
    INSERT INTO TBL2 (IPAddress, Date)
    VALUES (@ipAddress, @currentDateTime);

    -- TBL1에 TBL2의 데이터 삽입
    INSERT INTO TBL1 (IPAddress, Date)
    SELECT IPAddress, Date
    FROM TBL2
    WHERE IPAddress = @ipAddress;
END;
GO
C# 코드
C#에서 위 프로시저를 호출하는 코드입니다. 'connectionString'은 데이터베이스 연결 문자열이며, 'ipAddress'는 전달할 IP 주소입니다.

csharp
Copy code
using System;
using System.Data;
using System.Data.SqlClient;

public class DatabaseHandler
{
    private string connectionString = "YourConnectionStringHere";

    public void InsertIP(string ipAddress)
    {
        using (SqlConnection connection = new SqlConnection(connectionString))
        {
            using (SqlCommand command = new SqlCommand("InsertIP", connection))
            {
                command.CommandType = CommandType.StoredProcedure;
                command.Parameters.AddWithValue("@ipAddress", ipAddress);

                connection.Open();
                command.ExecuteNonQuery();
            }
        }
    }
}

// 사용 예시
public class Program
{
    public static void Main()
    {
        DatabaseHandler dbHandler = new DatabaseHandler();
        dbHandler.InsertIP("192.168.1.1"); // 예시 IP 주소
    }
}
이 코드는 Visual Studio에서 C# 프로젝트에 추가하여 사용할 수 있습니다. 데이터베이스 연결 문자열과 IP 주소는 실제 환경에 맞게 수정해야 합니다.

에러 처리와 예외 처리는 상황에 맞게 추가해야 합니다. 데이터베이스 연결이나 프로시저 호출 시 발생할 수 있는 예외를 적절히 처리하는 것이 중요합니다