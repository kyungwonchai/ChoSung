사용한 예시 코드를 다시 작성하겠습니다. 이번에는 각 기능에 대한 코드를 더 명확하게 작성하고, 필요한 주석을 추가하겠습니다.

XAML 코드:
xml
Copy code
<Window x:Class="YourNamespace.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
        Title="MainWindow" Height="450" Width="800">
    <Grid>
        <dxg:GridControl x:Name="gridControl" Loaded="GridControl_Loaded">
            <dxg:GridControl.View>
                <dxg:TableView Name="tableView" AutoWidth="True"
                               RowHeight="27"
                               AutoRowHeight="True"
                               MouseWheel="TableView_MouseWheel">
                    <!-- 여기에 DataTemplate을 포함하여 특정 컬럼의 줄 바꿈 및 행 높이 설정 가능 -->
                </dxg:TableView>
            </dxg:GridControl.View>
            <dxg:GridControl.Columns>
                <!-- 여기에 컬럼 정의 -->
            </dxg:GridControl.Columns>
        </dxg:GridControl>
    </Grid>
</Window>
C# 코드 (Code-Behind):
csharp
Copy code
using DevExpress.Xpf.Grid;
using System.Windows;
using System.Windows.Input;

namespace YourNamespace
{
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
        }

        private void GridControl_Loaded(object sender, RoutedEventArgs e)
        {
            // 여기에서 데이터 로드 및 기타 초기화 수행

            // 컬럼 너비를 콘텐츠에 맞게 자동 조정하려면, 데이터 로드 후 이 코드를 실행
            foreach (GridColumn column in gridControl.Columns)
            {
                column.BestFit();
            }
        }

        private void TableView_MouseWheel(object sender, MouseWheelEventArgs e)
        {
            if (Keyboard.Modifiers != ModifierKeys.Control) return;

            var scale = tableView.FontSize;
            scale += (e.Delta > 0) ? 1 : -1;
            if (scale < 5) scale = 5;  // 최소 글꼴 크기 제한
            if (scale > 30) scale = 30; // 최대 글꼴 크기 제한

            tableView.FontSize = scale;
        }
    }
}
주요 변경 사항:

GridControl_Loaded: 데이터가 로드될 때 이벤트 핸들러를 호출합니다. 여기에서 BestFit 메소드를 사용하여 모든 컬럼의 너비를 콘텐츠에 맞게 조정합니다.
TableView_MouseWheel: 확대/축소 로직을 보다 명확하게 구현했습니다. Ctrl 키와 마우스 휠을 사용하여 TableView의 FontSize를 조절함으로써, 전체 그리드의 확대/축소를 수행합니다.
이 코드는 기본적인 DevExpress WPF GridControl 사용 방법을 보여줍니다. 실제 사용 시에는 프로젝트의 구체적인 요구사항에 맞게 코드를 조정