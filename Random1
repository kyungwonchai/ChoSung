using DevExpress.XtraGrid.Views.Grid;
using DevExpress.XtraGrid.Columns;
using System;
using System.Drawing;
using System.Windows.Forms;

namespace WinFormsApp
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();

            // 텍스트 박스의 KeyDown 이벤트 핸들러를 설정
            textBox1.KeyDown += TextBox1_KeyDown;
        }

        private void TextBox1_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter)
            {
                // 텍스트 박스의 값을 가져옴
                int inputValue = int.Parse(textBox1.Text);

                // GridView와 컬럼을 가져옴
                GridView view = gridControl1.MainView as GridView;
                GridColumn colSS = view.Columns["SS"];
                GridColumn colRF = view.Columns["RF"];
                GridColumn colMatch = view.Columns["일치"];
                GridColumn colDate1 = view.Columns["날짜1"];
                GridColumn colCol1 = view.Columns["컬럼1"];
                GridColumn colCol2 = view.Columns["컬럼2"];
                GridColumn colCol3 = view.Columns["컬럼3"];
                GridColumn colCol4 = view.Columns["컬럼4"];

                for (int i = 0; i < view.RowCount; i++)
                {
                    int ssValue = Convert.ToInt32(view.GetRowCellValue(i, colSS));
                    int rfValue = Convert.ToInt32(view.GetRowCellValue(i, colRF));

                    if (inputValue == (ssValue + rfValue))
                    {
                        int matchValue = Convert.ToInt32(view.GetRowCellValue(i, colMatch));
                        
                        if (matchValue == 1)
                        {
                            // 행의 배경색을 노란색으로 설정
                            view.Appearance.FocusedRow.BackColor = Color.Yellow;
                        }
                        else
                        {
                            // '일치' 컬럼의 값을 1로 설정
                            view.SetRowCellValue(i, colMatch, 1);
                            
                            // 현재 날짜와 시간을 '날짜1' 컬럼에 설정
                            view.SetRowCellValue(i, colDate1, DateTime.Now);

                            // 메시지 박스에 나머지 컬럼 값 표시
                            string col1Value = view.GetRowCellValue(i, colCol1).ToString();
                            string col2Value = view.GetRowCellValue(i, colCol2).ToString();
                            string col3Value = view.GetRowCellValue(i, colCol3).ToString();
                            string col4Value = view.GetRowCellValue(i, colCol4).ToString();
                            MessageBox.Show($"컬럼1: {col1Value}, 컬럼2: {col2Value}, 컬럼3: {col3Value}, 컬럼4: {col4Value}");
                        }
                    }
                }
            }
        }
    }
}