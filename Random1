재 제공된 코드는 QR 코드와 바코드 모두를 인식할 수 있어야 하지만, QR 코드 인식이 되지 않는다면 몇 가지 문제를 점검해 볼 필요가 있습니다. DecoratedBarcodeView는 기본적으로 QR 코드와 바코드 모두를 인식할 수 있는 MultiFormatReader를 사용합니다.

아래에 코드를 다시 한번 수정하여, QR 코드와 바코드를 모두 인식할 수 있도록 확실히 설정해 보겠습니다.

최종 수정된 MainActivity.kt
kotlin
코드 복사
package com.dxmxsmd.mobilechecker

import android.Manifest
import android.content.pm.PackageManager
import android.os.Bundle
import android.widget.TextView
import androidx.activity.ComponentActivity
import androidx.activity.result.contract.ActivityResultContracts
import androidx.core.content.ContextCompat
import com.google.zxing.BarcodeFormat
import com.google.zxing.DecodeHintType
import com.journeyapps.barcodescanner.DecoratedBarcodeView
import com.journeyapps.barcodescanner.DefaultDecoderFactory

class MainActivity : ComponentActivity() {

    private lateinit var barcodeView: DecoratedBarcodeView

    private val requestPermissionLauncher =
        registerForActivityResult(ActivityResultContracts.RequestPermission()) { isGranted: Boolean ->
            if (isGranted) {
                setupBarcodeView()
            } else {
                // 권한이 거부된 경우 처리
            }
        }

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        if (ContextCompat.checkSelfPermission(this, Manifest.permission.CAMERA)
            != PackageManager.PERMISSION_GRANTED) {
            requestPermissionLauncher.launch(Manifest.permission.CAMERA)
        } else {
            setupBarcodeView()
        }
    }

    private fun setupBarcodeView() {
        barcodeView = findViewById(R.id.camera_preview)

        // QR 코드와 바코드를 모두 인식하도록 설정
        val formats = listOf(BarcodeFormat.QR_CODE, BarcodeFormat.CODE_39, BarcodeFormat.CODE_128)
        val hints = mapOf(
            DecodeHintType.POSSIBLE_FORMATS to formats
        )
        barcodeView.barcodeView.decoderFactory = DefaultDecoderFactory(formats, hints, null, null)

        barcodeView.decodeContinuous { result ->
            result?.let {
                findViewById<TextView>(R.id.text_view_result).text =
                    "Scanned: ${it.text} (${it.barcodeFormat})"
            }
        }
    }

    override fun onResume() {
        super.onResume()
        barcodeView.resume()
    }

    override fun onPause() {
        super.onPause()
        barcodeView.pause()
    }
}
주요 변경 사항:
DefaultDecoderFactory 설정: QR 코드(BarcodeFormat.QR_CODE)와 일반 바코드(BarcodeFormat.CODE_39, BarcodeFormat.CODE_128) 등을 인식하도록 명시적으로 설정하였습니다.
DecodeHintType.POSSIBLE_FORMATS 사용: 이 힌트를 통해 지정된 형식의 코드를 우선적으로 인식하도록 하였습니다.
이제 이 코드를 사용하면 QR 코드와 바코드 모두를 인식할 수 있어야 합니다. 두 형식을 동시에 인식하는지 테스트해 보세요