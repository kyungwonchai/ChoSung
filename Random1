idControl.ItemsSource를 캐스팅하는 부분에서 문제가 발생한 것 같습니다. 명시적으로 RowData 객체 목록을 가져오도록 코드를 수정하겠습니다. 아래는 수정된 코드입니다.

XAML 파일 (MainWindow.xaml):
xml
코드 복사
<Window x:Class="YourNamespace.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Grid>
        <dxg:GridControl x:Name="gridControl" AutoGenerateColumns="AddNew">
            <dxg:GridControl.Columns>
                <dxg:GridColumn FieldName="확정일" />
                <dxg:GridColumn FieldName="모델값" />
                <dxg:GridColumn FieldName="Key1" />
                <dxg:GridColumn FieldName="Key2" />
                <dxg:GridColumn FieldName="여유1" />
            </dxg:GridControl.Columns>
        </dxg:GridControl>
        <Button Content="Print Rows" VerticalAlignment="Bottom" Click="OnPrintRowsClick" />
    </Grid>
</Window>
C# 파일 (MainWindow.xaml.cs):
csharp
코드 복사
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Windows;
using DevExpress.Xpf.Grid;

namespace YourNamespace
{
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
            LoadData();
        }

        private void LoadData()
        {
            var data = new List<RowData>
            {
                new RowData { 확정일 = "2024-07-11", 모델값 = "ModelA", Key1 = "Value1", Key2 = "Value2", 여유1 = "Extra1" },
                new RowData { 확정일 = "2024-07-12", 모델값 = "ModelB", Key1 = "Value3", Key2 = "Value4", 여유1 = "Extra2" },
                // 필요한 만큼 데이터 추가
            };

            gridControl.ItemsSource = data;
        }

        private void OnPrintRowsClick(object sender, RoutedEventArgs e)
        {
            string desiredDate = "2024-07-11";
            string desiredModel = "ModelA";

            IEnumerable<RowData> itemsSource = gridControl.ItemsSource as IEnumerable<RowData>;
            if (itemsSource != null)
            {
                var matchingRows = itemsSource.Where(row => row.확정일 == desiredDate && row.모델값 == desiredModel);

                foreach (var row in matchingRows)
                {
                    Debug.WriteLine($"Key1: {row.Key1}, Key2: {row.Key2}, 여유1: {row.여유1}");
                }
            }
            else
            {
                Debug.WriteLine("ItemsSource is null or not of type IEnumerable<RowData>");
            }
        }
    }

    public class RowData
    {
        public string 확정일 { get; set; }
        public string 모델값 { get; set; }
        public string Key1 { get; set; }
        public string Key2 { get; set; }
        public string 여유1 { get; set; }
    }
}
이제 gridControl.ItemsSource를 명시적으로 IEnumerable<RowData>로 캐스팅하여 원하는 데이터를 필터링하고 출력할 수 있습니다. 추가로 필요한 부분은 자유롭게 수정하시면 됩니다. 이 코드가 제대로 작동