폼 애플리케이션에서 시그널R 클라이언트를 사용하여 연결을 설정하고 연결이 완료될 때까지 기다리는 예제 코드를 작성하겠습니다. 이 코드는 Microsoft.AspNetCore.SignalR.Client 패키지를 사용하며, 연결 상태를 확인하고, 연결이 끊어졌을 때 자동으로 재연결을 시도합니다.

예제 코드
NuGet 패키지 설치: 먼저 프로젝트에 시그널R 클라이언트 패키지를 설치해야 합니다.

bash
코드 복사
Install-Package Microsoft.AspNetCore.SignalR.Client
윈폼 애플리케이션 코드:

csharp
코드 복사
using System;
using System.Threading.Tasks;
using System.Windows.Forms;
using Microsoft.AspNetCore.SignalR.Client;

namespace SignalRWinFormsApp
{
    public partial class Form1 : Form
    {
        private HubConnection connection;

        public Form1()
        {
            InitializeComponent();
            InitializeSignalR();
        }

        private async void InitializeSignalR()
        {
            connection = new HubConnectionBuilder()
                .WithUrl("https://your-signalr-server-url/hub")
                .Build();

            connection.Closed += async (error) =>
            {
                MessageBox.Show("연결이 종료되었습니다. 재연결을 시도합니다...");
                await Task.Delay(new Random().Next(0, 5) * 1000);
                await StartConnectionAsync();
            };

            await StartConnectionAsync();
        }

        private async Task StartConnectionAsync()
        {
            while (true)
            {
                try
                {
                    await connection.StartAsync();
                    MessageBox.Show("시그널R에 연결되었습니다.");
                    break; // 연결에 성공하면 루프 종료
                }
                catch (Exception ex)
                {
                    MessageBox.Show($"연결 시도 실패: {ex.Message}");
                    await Task.Delay(5000); // 연결 실패 시 5초 대기 후 재시도
                }
            }
        }

        // 폼이 닫힐 때 연결 해제
        private async void Form1_FormClosing(object sender, FormClosingEventArgs e)
        {
            if (connection != null)
            {
                await connection.StopAsync();
                await connection.DisposeAsync();
            }
        }
    }
}
코드 설명
HubConnectionBuilder: 시그널R 서버의 URL을 사용하여 HubConnection 객체를 생성합니다.
connection.Closed: 연결이 종료되었을 때 자동으로 재연결을 시도하는 이벤트 핸들러를 설정합니다.
StartConnectionAsync: 연결을 시도하고 성공할 때까지 무한 루프로 재시도합니다. 연결이 실패하면 5초 대기 후 재시도합니다.
await connection.StartAsync(): 비동기적으로 연결을 시도합니다.
Form1_FormClosing: 폼이 닫힐 때 연결을 정리합니다.
폼 디자인
이 코드에서 Form1은 기본 폼이며, 특별한 컨트롤을 추가할 필요는 없습니다. 폼이 로드될 때 시그널R 연결이 설정되며, 연결 상태에 따라 메시지 박스가 표시됩니다.

주의 사항
https://your-signalr-server-url/hub를 실제 시그널R 서버 URL로 변경하세요.
이 코드는 기본적인 연결 설정과 재연결 기능을 포함하고 있습니다. 실제 애플리케이션에서는 추가적인 로직이 필요할 수 있습니다.
이제 이 코드를 사용하여 윈폼 애플리케이션에서 시그널R 서버에 연결하고, 