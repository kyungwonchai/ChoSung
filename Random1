코드를 수정하기 위해 먼저 존재하는 FormatValue 메소드의 반환 값이 항상 0000 혹은 D4 포맷의 숫자로 고정되는 점을 수정해야 할 것 같습니다. 명령 프로토콜에 따르면 값이 1일 경우 "0100**", 값이 2일 경우 "0200**"으로 반환해야 하므로, 값의 길이에 따라 자리 수를 조정하는 로직을 추가하겠습니다. 그리고 명령어 자체에 불필요한 별표(**)가 들어가있는 것 같습니다. 이를 명령어 생성 과정에서 제거하겠습니다.

아래는 수정된 FormatValue 메소드와 명령어 생성 로직입니다:

csharp
코드 복사
// 값 변환 함수 (숫자와 문자열 구분, 수정된 로직)
private string FormatValue(string value)
{
    if (int.TryParse(value, out int numericValue))
    {
        // 값이 숫자인 경우, 입력된 값에 따라 포맷을 조정합니다.
        // 예: 1 -> "0100", 2 -> "0200", 12 -> "1200"
        return numericValue.ToString("D2") + "00";
    }
    else
    {
        return "0000"; // 잘못된 값일 경우 기본값
    }
}

// 명령어 생성 (쓰기, 별표 제거)
private string CreateWriteCommand(string address, string value)
{
    string plcAddress = FormatAddress(address);
    string formattedValue = FormatValue(value);
    
    // %01#WDD0230000230000001 (별표 제거)
    string command = $"%01#W{address[0]}D{plcAddress}{plcAddress}{formattedValue}";
    return command;
}

// 명령어 생성 (읽기, 별표 제거)
private string CreateReadCommand(string address)
{
    string plcAddress = FormatAddress(address);
    
    // %01#RDD023000 (별표 제거)
    string command = $"%01#R{address[0]}D{plcAddress}";
    return command;
}
이제 FormatValue 메소드는 값에 따라 "0100", "0200", "1200" 등으로 적절히 반환하며, 명령어 생성 로직에서는 불필요한 별표를 제거하여 프로토콜에 맞게 명령어를 생성합니