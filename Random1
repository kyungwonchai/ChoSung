requestPreviewFocus() 메서드에서 빨간 줄이 나타나는 문제를 해결하기 위해, JourneyApps ZXing 라이브러리에서는 수동으로 초점을 조정하는 대신, CameraSettings의 추가 설정을 통해 초점 조정을 더욱 효과적으로 처리할 수 있습니다.

수정된 MainActivity.kt 코드
아래는 초점 조정을 위한 보다 안정적인 접근 방식을 적용한 코드입니다.

kotlin
코드 복사
package com.dxmxsmd.mobilechecker

import android.Manifest
import android.content.pm.PackageManager
import android.os.Bundle
import android.widget.TextView
import androidx.activity.ComponentActivity
import androidx.activity.result.contract.ActivityResultContracts
import androidx.core.content.ContextCompat
import com.google.zxing.BarcodeFormat
import com.google.zxing.ResultPoint
import com.journeyapps.barcodescanner.CameraSettings
import com.journeyapps.barcodescanner.DecoratedBarcodeView
import com.journeyapps.barcodescanner.BarcodeCallback
import com.journeyapps.barcodescanner.BarcodeResult
import com.journeyapps.barcodescanner.DefaultDecoderFactory

class MainActivity : ComponentActivity() {

    private lateinit var barcodeView: DecoratedBarcodeView

    private val requestPermissionLauncher =
        registerForActivityResult(ActivityResultContracts.RequestPermission()) { isGranted: Boolean ->
            if (isGranted) {
                setupBarcodeView()
            } else {
                // 권한이 거부된 경우 처리
            }
        }

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        if (ContextCompat.checkSelfPermission(this, Manifest.permission.CAMERA)
            != PackageManager.PERMISSION_GRANTED) {
            requestPermissionLauncher.launch(Manifest.permission.CAMERA)
        } else {
            setupBarcodeView()
        }
    }

    private fun setupBarcodeView() {
        barcodeView = findViewById(R.id.camera_preview)

        // 카메라 설정: 자동 초점 및 프리뷰 활성화
        val cameraSettings = CameraSettings()
        cameraSettings.isAutoFocusEnabled = true
        cameraSettings.focusMode = CameraSettings.FocusMode.CONTINUOUS // 연속 초점 모드 사용
        barcodeView.barcodeView.cameraSettings = cameraSettings

        // QR 코드와 바코드를 모두 인식할 수 있도록 설정
        val formats = listOf(BarcodeFormat.QR_CODE, BarcodeFormat.CODE_39, BarcodeFormat.CODE_128)
        barcodeView.barcodeView.decoderFactory = DefaultDecoderFactory(formats)

        barcodeView.decodeContinuous(object : BarcodeCallback {
            override fun barcodeResult(result: BarcodeResult?) {
                result?.let {
                    findViewById<TextView>(R.id.text_view_result).text =
                        "Scanned: ${it.text} (${it.barcodeFormat})"
                }
            }

            override fun possibleResultPoints(resultPoints: List<ResultPoint>) {
                // Optional: handle potential result points here
            }
        })
    }

    override fun onResume() {
        super.onResume()
        barcodeView.resume()
    }

    override fun onPause() {
        super.onPause()
        barcodeView.pause()
    }
}
주요 변경 사항:
CameraSettings의 focusMode 설정: 카메라가 연속 초점 모드(CONTINUOUS)로 설정되었습니다. 이 모드는 카메라가 자동으로 초점을 계속 조정하여 QR 코드와 바코드를 인식할 때 초점이 잘 맞도록 합니다.

불필요한 수동 초점 제거: 수동으로 초점을 조정하는 대신, CameraSettings에서 제공하는 자동 초점 기능을 최대한 활용하도록 했습니다.

이 코드로 QR 코드와 바코드 모두를 인식할 수 있도록 설정되며, 초점이 자동으로 조정되면서 인식률이 향상될 것입니