트가 회색으로 표시되는 문제와 페이지네이션을 개선하여 요청하신 사항을 반영한 코드를 제공하겠습니다.

주요 수정 사항
차트 회색 문제 해결:

canvas 요소의 크기를 명확히 지정하고 Chart.js 초기화를 철저히 확인.
Chart.js 데이터가 제대로 전달되지 않았을 가능성을 해결하기 위해 Flask의 데이터 출력 및 차트 데이터를 디버깅하도록 개선.
페이지네이션 개선:

페이지 번호를 버튼으로 생성하여 최대 10개까지 표시.
현재 페이지와 범위를 기준으로 페이지 번호를 동적으로 조정.
Flask 애플리케이션 코드 (app.py)
python
코드 복사
from flask import Flask, render_template, request, jsonify
import pymssql
import pandas as pd

app = Flask(__name__)

# MSSQL 데이터베이스 연결 정보
DB_CONFIG = {
    "server": "YOUR_SERVER",
    "database": "YOUR_DATABASE",
    "username": "YOUR_USERNAME",
    "password": "YOUR_PASSWORD"
}

# MSSQL 연결 함수
def get_db_connection():
    return pymssql.connect(
        server=DB_CONFIG['server'],
        user=DB_CONFIG['username'],
        password=DB_CONFIG['password'],
        database=DB_CONFIG['database']
    )

@app.route('/PLCErr', methods=['GET'])
def plcerr():
    conn = get_db_connection()
    query = """
        SELECT 
            linename AS '라인명',
            errN AS '에러번호',
            errValue AS '에러값',
            CONVERT(VARCHAR, Time1, 121) AS '시간'
        FROM View_PLCErrjoin
    """
    df = pd.read_sql(query, conn)
    conn.close()

    # 라인별 발생 수 데이터 준비
    line_counts = df['라인명'].value_counts().reset_index()
    line_counts.columns = ['라인명', '발생수']

    # 에러번호별 발생 수 데이터 준비
    error_counts = df['에러번호'].value_counts().reset_index()
    error_counts.columns = ['에러번호', '발생수']

    # 페이지네이션 처리
    page = int(request.args.get("page", 1))
    per_page = 20
    total_pages = -(-len(df) // per_page)  # 총 페이지 수
    df_page = df.iloc[(page - 1) * per_page : page * per_page]

    return render_template(
        'plcerr.html',
        data=df_page.to_dict(orient='records'),
        line_counts=line_counts.to_dict(orient='records'),
        error_counts=error_counts.to_dict(orient='records'),
        current_page=page,
        total_pages=total_pages,
        per_page=per_page
    )


if __name__ == '__main__':
    app.run(debug=True)
HTML 템플릿 (templates/plcerr.html)
html
코드 복사
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>PLC Error Viewer</title>
    <script src="{{ url_for('static', filename='js/Chart.min.js') }}"></script>
    <script src="{{ url_for('static', filename='js/jquery.min.js') }}"></script>
    <style>
        body {
            background-color: #121212;
            color: #e0e0e0;
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
        }
        h1 {
            text-align: center;
            color: #00bcd4;
        }
        .charts {
            display: flex;
            justify-content: space-between;
            gap: 20px;
            margin-bottom: 20px;
        }
        .chart-container {
            flex: 1;
            height: 300px;
            background-color: #1e1e1e;
            border-radius: 10px;
            padding: 10px;
        }
        canvas {
            width: 100% !important;
            height: 100% !important;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            background-color: #1e1e1e;
        }
        thead {
            background-color: #004d66;
        }
        thead th, tbody td {
            padding: 8px;
            text-align: left;
        }
        tbody tr:nth-child(even) {
            background-color: #2a2a2a;
        }
        tbody tr:hover {
            background-color: #3d3d3d;
        }
        .pagination {
            text-align: center;
            margin: 20px 0;
        }
        .pagination button {
            padding: 8px 16px;
            margin: 0 5px;
            border: none;
            border-radius: 5px;
            background-color: #00bcd4;
            color: #fff;
            cursor: pointer;
        }
        .pagination button.disabled {
            background-color: #555;
            cursor: not-allowed;
        }
    </style>
</head>
<body>
    <h1>PLC Error Logs</h1>
    <div class="charts">
        <div class="chart-container">
            <canvas id="lineChart"></canvas>
        </div>
        <div class="chart-container">
            <canvas id="errorChart"></canvas>
        </div>
    </div>
    <table>
        <thead>
            <tr>
                <th>라인명</th>
                <th>에러번호</th>
                <th>에러값</th>
                <th>시간</th>
            </tr>
        </thead>
        <tbody>
            {% for row in data %}
                <tr>
                    <td>{{ row['라인명'] }}</td>
                    <td>{{ row['에러번호'] }}</td>
                    <td>{{ row['에러값'] }}</td>
                    <td>{{ row['시간'] }}</td>
                </tr>
            {% endfor %}
        </tbody>
    </table>
    <div class="pagination">
        {% set start_page = max(1, current_page - 5) %}
        {% set end_page = min(total_pages, current_page + 4) %}
        {% for page in range(start_page, end_page + 1) %}
            <button 
                onclick="changePage({{ page }})" 
                class="{{ 'active' if page == current_page else '' }}"
            >
                {{ page }}
            </button>
        {% endfor %}
    </div>

    <script>
        $(document).ready(function () {
            const lineData = {{ line_counts | tojson }};
            const errorData = {{ error_counts | tojson }};
            const ctxLine = document.getElementById('lineChart').getContext('2d');
            const ctxError = document.getElementById('errorChart').getContext('2d');

            // 라인명별 발생수 차트
            new Chart(ctxLine, {
                type: 'bar',
                data: {
                    labels: lineData.map(d => d['라인명']),
                    datasets: [{
                        label: '라인별 발생수',
                        data: lineData.map(d => d['발생수']),
                        backgroundColor: '#007acc',
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: { display: false }
                    }
                }
            });

            // 에러번호별 발생수 차트
            new Chart(ctxError, {
                type: 'bar',
                data: {
                    labels: errorData.map(d => d['에러번호']),
                    datasets: [{
                        label: '에러번호별 발생수',
                        data: errorData.map(d => d['발생수']),
                        backgroundColor: '#ff5722',
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: { display: false }
                    }
                }
            });
        });

        function changePage(page) {
            window.location.href = `/PLCErr?page=${page}`;
        }
    </script>
</body>
</html>
주요 변경 내용
차트 회색 문제 해결:

Chart.js의 초기화가 DOM 로드 후에 이뤄지도록 수정.
canvas 크기를 명확히 지정하고 차트 데이터를 제대로 출력하도록 디버깅.
페이지네이션 개선:

페이지 번호를 동적으로 생성하고, 최대 10개까지 표시.