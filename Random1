using System;
using System.Drawing;
using System.Runtime.InteropServices;
using System.Windows.Forms;
using DevExpress.XtraEditors;

namespace MouseColorPicker
{
    public partial class Form1 : XtraForm
    {
        private bool colorPickerMode = false;
        private Point lastCursorPosition;

        public Form1()
        {
            InitializeComponent();
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            MouseMove += Form1_MouseMove;
        }

        private void btnToggleMode_Click(object sender, EventArgs e)
        {
            colorPickerMode = !colorPickerMode;
            btnToggleMode.Text = colorPickerMode ? "종료" : "시작";

            if (!colorPickerMode)
            {
                txtRed.EditValue = "";
                txtGreen.EditValue = "";
                txtBlue.EditValue = "";
            }
        }

        private void Form1_MouseMove(object sender, MouseEventArgs e)
        {
            if (colorPickerMode && e.Location != lastCursorPosition)
            {
                lastCursorPosition = e.Location;
                Point screenPoint = PointToScreen(e.Location);
                Color pixelColor = GetPixelColor(screenPoint);
                txtRed.EditValue = pixelColor.R;
                txtGreen.EditValue = pixelColor.G;
                txtBlue.EditValue = pixelColor.B;
            }
        }

        private Color GetPixelColor(Point location)
        {
            IntPtr desktopDC = GetDC(IntPtr.Zero);
            int pixel = GetPixel(desktopDC, location.X, location.Y);
            ReleaseDC(IntPtr.Zero, desktopDC);
            Color color = Color.FromArgb((int)(pixel & 0x000000FF),
                                         (int)(pixel & 0x0000FF00) >> 8,
                                         (int)(pixel & 0x00FF0000) >> 16);
            return color;
        }

        [DllImport("user32.dll")]
        public static extern IntPtr GetDC(IntPtr hwnd);

        [DllImport("user32.dll")]
        public static extern int ReleaseDC(IntPtr hwnd, IntPtr hdc);

        [DllImport("gdi32.dll")]
        public static extern uint GetPixel(IntPtr hdc, int nXPos, int nYPos);
    }
}
