vExpress WPF GridControl에서 특정 컬럼을 숨기거나 표시하는 기능을 구현하려면, 외부의 체크박스를 사용하여 해당 컬럼의 Visible 속성을 제어할 수 있습니다. 예를 들어, UnboundType 컬럼이 3개 있고, 체크박스를 체크하면 이 컬럼들이 보이고, 체크를 해제하면 숨겨지게 할 수 있습니다.

다음은 간단한 예시 코드입니다.

XAML 코드
xml
Copy code
<Window x:Class="YourNamespace.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
        Title="MainWindow" Height="350" Width="525">

    <StackPanel>
        <CheckBox x:Name="chkUnboundColumns" Content="Show Unbound Columns" Checked="chkUnboundColumns_Checked" Unchecked="chkUnboundColumns_Unchecked"/>
        <dxg:GridControl x:Name="gridControl">
            <dxg:GridControl.Columns>
                <!-- Unbound Columns -->
                <dxg:GridColumn x:Name="unboundColumn1" FieldName="UnboundColumn1" UnboundType="String" Header="Unbound Column 1"/>
                <dxg:GridColumn x:Name="unboundColumn2" FieldName="UnboundColumn2" UnboundType="String" Header="Unbound Column 2"/>
                <dxg:GridColumn x:Name="unboundColumn3" FieldName="UnboundColumn3" UnboundType="String" Header="Unbound Column 3"/>

                <!-- Other Columns -->
                <!-- ... -->
            </dxg:GridControl.Columns>
            <dxg:GridControl.View>
                <dxg:TableView/>
            </dxg:GridControl.View>
        </dxg:GridControl>
    </StackPanel>
</Window>
C# 코드 (Code-Behind)
csharp
Copy code
using System.Windows;
using DevExpress.Xpf.Grid;

namespace YourNamespace
{
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
            // 초기 컬럼 가시성 설정
            SetUnboundColumnsVisibility(false);
        }

        private void chkUnboundColumns_Checked(object sender, RoutedEventArgs e)
        {
            SetUnboundColumnsVisibility(true);
        }

        private void chkUnboundColumns_Unchecked(object sender, RoutedEventArgs e)
        {
            SetUnboundColumnsVisibility(false);
        }

        private void SetUnboundColumnsVisibility(bool isVisible)
        {
            unboundColumn1.Visible = isVisible;
            unboundColumn2.Visible = isVisible;
            unboundColumn3.Visible = isVisible;
        }
    }
}
이 코드는 다음과 같이 작동합니다:

CheckBox를 추가하여 사용자가 컬럼의 표시 여부를 제어할 수 있게 합니다.
Checked 및 Unchecked 이벤트를 사용하여 체크박스의 상태 변화를 감지합니다.
SetUnboundColumnsVisibility 메서드를 사용하여 Unbound 컬럼들의 Visible 속성을 제어합니다.
이 예시를 기반으로 하여, 필요에 따라 컬럼들의 구성이나 기타 세부 사항들을 조정할 수 있습니다.





