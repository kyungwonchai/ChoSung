해했습니다. 첫 실행 시, MoveFileToBackup()을 먼저 실행하여 백업 파일을 모두 이동시킨 뒤, 그 이후에 **백업 디렉토리 감지(MonitorBackupDirectory)**를 실행하도록 하길 원하시는군요. 즉, 첫 번째 백업 파일 이동 작업이 끝난 후에 백업 디렉토리 감시가 시작되도록 하려면, MoveFileToBackup() 작업이 완료될 때까지 기다린 뒤에 백업 감시를 시작하면 됩니다.

다음은 처음 실행 순서를 수정한 전체 흐름입니다.

수정된 StartProcessing() 함수 및 관련 흐름
csharp
코드 복사
/// <summary>
/// 파일 감지 및 처리 작업 시작 (첫 번째 이동 작업이 완료된 후 모니터링 시작)
/// </summary>
public async void StartProcessing()
{
    // 첫 실행 시 파일 이동 작업이 완료된 후 모니터링을 시작
    await Task.Run(() => MoveFileToBackup());

    // 파일 이동 작업이 끝난 후, 백업 디렉토리 감지 시작
    MonitorBackupDirectory();
}

/// <summary>
/// 주기적으로 원본 디렉토리에서 파일을 백업 디렉토리로 이동 (비동기)
/// </summary>
private async Task MoveFileToBackup()
{
    while (true)
    {
        var files = Directory.GetFiles(_inputDirectory, "*.txt");
        foreach (var file in files)
        {
            MoveFileToBackupHelper(file);
        }

        // 첫 번째 루프는 즉시 실행하고 끝낸 후, 이후 루프는 주기적으로 5초마다 실행
        if (_isInitialRun)
        {
            _isInitialRun = false;
            return;  // 첫 실행 시, 완료 후 바로 모니터링으로 이동
        }

        await Task.Delay(5000);  // 5초마다 디렉토리 확인
    }
}

/// <summary>
/// 파일을 백업 폴더로 이동하는 작업을 도와주는 헬퍼 함수
/// </summary>
private void MoveFileToBackupHelper(string filePath)
{
    try
    {
        // 백업 폴더 경로 생성 (yyyyMMdd 형식)
        string backupSubDirectory = Path.Combine(_backupDirectory, DateTime.Now.ToString("yyyyMMdd"));
        if (!Directory.Exists(backupSubDirectory))
        {
            Directory.CreateDirectory(backupSubDirectory);
        }

        // 백업 파일 경로 설정
        string destinationPath = Path.Combine(backupSubDirectory, Path.GetFileName(filePath));

        // 파일 이동
        File.Move(filePath, destinationPath);

        Console.WriteLine($"Moved file to backup: {destinationPath}");
    }
    catch (Exception ex)
    {
        Console.WriteLine($"Error moving file to backup: {ex.Message}");
    }
}

/// <summary>
/// 백업 폴더를 감시하여 새 파일을 처리하는 메서드
/// </summary>
private void MonitorBackupDirectory()
{
    if (_isInitialRun)
    {
        // 첫 실행 시 최근 10개 파일을 미리 완료 처리
        ProcessRecentFiles();
        _isInitialRun = false;  // 초기 실행 체크 해제
    }

    while (true)
    {
        var newFiles = Directory.GetFiles(_backupDirectory, "*.txt")
                                .Where(f => File.GetLastWriteTime(f) > _lastProcessedTime)
                                .OrderBy(f => File.GetLastWriteTime(f));

        foreach (var file in newFiles)
        {
            _lastProcessedTime = File.GetLastWriteTime(file);  // 마지막 처리 시간을 업데이트
            ProcessFile(file);  // 새로 감지된 파일 처리
        }

        Task.Delay(5000).Wait();  // 5초마다 백업 디렉토리 확인
    }
}
주요 수정 사항:
StartProcessing():

MoveFileToBackup()을 비동기로 실행하지만, 첫 번째 실행이 끝날 때까지 대기합니다.
백업 디렉토리에 파일을 이동시킨 후에 백업 폴더 모니터링을 시작합니다.
MoveFileToBackup():

첫 번째 파일 이동 작업이 끝나면 루프를 중단하고, 그 후에 감지 루프를 돌게 합니다.
첫 번째 실행 시 완료된 후에 **MonitorBackupDirectory()**로 넘어가도록 수정되었습니다.
이 방식으로, 처음 한 번은 파일 이동 작업이 완료된 후에만 백업 디렉토리를 감지하게 됩니다