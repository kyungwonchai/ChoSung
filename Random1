public async Task<string> SendCommandAsync(string cmd)
{
    try
    {
        // CancellationTokenSource 생성 (2초 타임아웃 설정)
        using (var cts = new CancellationTokenSource(TimeSpan.FromSeconds(2)))
        {
            // 비동기 작업을 타임아웃 처리와 함께 실행
            var result = await Task.Run(async () =>
            {
                // PLC에 명령어 전송
                await _serialPort.WriteLineAsync(cmd);
                
                // PLC 응답 대기 (await 사용)
                string response = await _serialPort.ReadLineAsync();
                return response;
            }, cts.Token);

            return result; // 성공 시 응답 반환
        }
    }
    catch (OperationCanceledException)
    {
        // 2초 안에 응답이 오지 않으면 예외가 발생하여 타임아웃 처리
        return "Timeout: No response from PLC within 2 seconds.";
    }
    catch (Exception ex)
    {
        // 다른 예외 처리
        return $"Error: {ex.Message}";
    }
}
