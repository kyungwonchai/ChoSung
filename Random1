using System.Drawing;
using System.IO;

public byte[] ResizeAndConvertImage(byte[] originalBytes, int width, int height)
{
    Image ByteArrayToImage(byte[] byteArray)
    {
        using (var ms = new MemoryStream(byteArray))
        {
            Image returnImage = Image.FromStream(ms);
            return returnImage;
        }
    }

    Image ResizeImage(Image img, int targetWidth, int targetHeight)
    {
        var destRect = new Rectangle(0, 0, targetWidth, targetHeight);
        var destImage = new Bitmap(targetWidth, targetHeight);

        destImage.SetResolution(img.HorizontalResolution, img.VerticalResolution);

        using (var graphics = Graphics.FromImage(destImage))
        {
            graphics.CompositingMode = System.Drawing.Drawing2D.CompositingMode.SourceCopy;
            graphics.CompositingQuality = System.Drawing.Drawing2D.CompositingQuality.HighQuality;
            graphics.InterpolationMode = System.Drawing.Drawing2D.InterpolationMode.HighQualityBicubic;
            graphics.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.HighQuality;
            graphics.PixelOffsetMode = System.Drawing.Drawing2D.PixelOffsetMode.HighQuality;

            using (var wrapMode = new System.Drawing.Imaging.ImageAttributes())
            {
                wrapMode.SetWrapMode(System.Drawing.Drawing2D.WrapMode.TileFlipXY);
                graphics.DrawImage(img, destRect, 0, 0, img.Width, img.Height, GraphicsUnit.Pixel, wrapMode);
            }
        }

        return destImage;
    }

    byte[] ImageToByteArray(Image img)
    {
        using (var stream = new MemoryStream())
        {
            img.Save(stream, System.Drawing.Imaging.ImageFormat.Jpeg);
            return stream.ToArray();
        }
    }

    // Byte array로부터 Image를 생성합니다.
    var originalImage = ByteArrayToImage(originalBytes);

    // 이미지를 리사이징합니다.
    var resizedImage = ResizeImage(originalImage, width, height);

    // 리사이징된 이미지를 Byte array로 다시 변환합니다.
    var resizedBytes = ImageToByteArray(resizedImage);

    return resizedBytes;
}
