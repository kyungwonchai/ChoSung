은 C 드라이브의 특정 폴더(예: C:\MountCrbShare)를 포함한 전체 구현 코드입니다. 프로그램은 지정된 경로가 없으면 폴더를 생성하며, Y 드라이브와 모든 하위 폴더에서 .crb 파일을 찾아 복사합니다.

완전한 구현 코드
XAML UI
xml
코드 복사
<Window x:Class="CrbFileMonitor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="CRB File Monitor" Height="400" Width="600">
    <Grid>
        <ListBox x:Name="LogListBox" Margin="10" />
    </Grid>
</Window>
C# 코드
csharp
코드 복사
using System;
using System.IO;
using System.Threading.Tasks;
using System.Timers;
using System.Windows;

namespace CrbFileMonitor
{
    public partial class MainWindow : Window
    {
        private const string SourceDirectory = @"Y:\"; // 원본 디렉토리 (네트워크 드라이브)
        private const string DestinationDirectory = @"C:\MountCrbShare"; // 복사 대상 디렉토리
        private Timer _timer; // 주기적으로 실행될 타이머
        private readonly object _logLock = new object(); // 로그 동기화용 Lock

        public MainWindow()
        {
            InitializeComponent();
            InitializeFileMonitor();
        }

        /// <summary>
        /// 파일 모니터링 초기화
        /// </summary>
        private void InitializeFileMonitor()
        {
            // 대상 폴더가 없으면 생성
            if (!Directory.Exists(DestinationDirectory))
            {
                Directory.CreateDirectory(DestinationDirectory);
                AddLog($"폴더 생성: {DestinationDirectory}");
            }

            // 타이머 설정 (1분 주기)
            _timer = new Timer(60000); // 60,000ms = 1분
            _timer.Elapsed += async (sender, e) => await MonitorFilesAsync();
            _timer.Start();

            AddLog("CRB 파일 모니터링 시작.");
        }

        /// <summary>
        /// Y 드라이브에서 파일 검색 및 복사
        /// </summary>
        private async Task MonitorFilesAsync()
        {
            try
            {
                // Y 드라이브 및 하위 폴더에서 모든 .crb 파일 찾기
                string[] crbFiles = Directory.GetFiles(SourceDirectory, "*.crb", SearchOption.AllDirectories);

                foreach (var file in crbFiles)
                {
                    FileInfo fileInfo = new FileInfo(file);

                    // 파일명 생성: 마지막 쓰기 시간 + 기존 파일명
                    string formattedTime = fileInfo.LastWriteTime.ToString("yyyyMMddHHmmss");
                    string relativePath = Path.GetRelativePath(SourceDirectory, fileInfo.DirectoryName);
                    string destinationFolder = Path.Combine(DestinationDirectory, relativePath);

                    // 대상 폴더가 없으면 생성
                    if (!Directory.Exists(destinationFolder))
                    {
                        Directory.CreateDirectory(destinationFolder);
                        AddLog($"폴더 생성: {destinationFolder}");
                    }

                    // 파일 복사
                    string destinationPath = Path.Combine(destinationFolder, $"{formattedTime}_{fileInfo.Name}");
                    await Task.Run(() => File.Copy(file, destinationPath, true));

                    AddLog($"파일 복사 완료: {destinationPath}");
                }

                if (crbFiles.Length == 0)
                {
                    AddLog("새로운 .crb 파일이 없습니다.");
                }
            }
            catch (Exception ex)
            {
                AddLog($"에러 발생: {ex.Message}");
            }
        }

        /// <summary>
        /// 로그 추가 (ListBox에 출력)
        /// </summary>
        /// <param name="message">로그 메시지</param>
        private void AddLog(string message)
        {
            string logEntry = $"[{DateTime.Now:yyyyMMdd HHmmss}] {message}";

            Dispatcher.Invoke(() =>
            {
                lock (_logLock)
                {
                    if (LogListBox.Items.Count >= 50)
                    {
                        LogListBox.Items.RemoveAt(0); // 오래된 로그 제거
                    }

                    LogListBox.Items.Add(logEntry); // 새 로그 추가
                }
            });
        }
    }
}
코드 동작 방식
폴더 생성

프로그램 실행 시 대상 폴더(C:\MountCrbShare)가 없으면 자동으로 생성합니다.
하위 폴더가 필요한 경우 파일 복사 시 동적으로 생성됩니다.
파일 검색

Directory.GetFiles 메서드와 SearchOption.AllDirectories를 사용하여 상위 및 하위 폴더에서 .crb 파일을 검색합니다.
파일 복사

파일의 마지막 쓰기 시간을 기반으로 파일명을 변경하고, 기존 폴더 구조를 유지한 상태로 복사합니다.
예: Y:\Folder1\File1.crb → C:\MountCrbShare\Folder1\yyyyMMddHHmmss_File1.crb
로그

ListBox에 최대 50개의 로그를 출력합니다.
에러 발생 시에도 로그에 메시지가 기록됩니다.
비동기 처리

Task.Run을 사용하여 파일 복사 작업이 비동기로 실행되므로 UI가 멈추지 않습니다.
주기적 실행

Timer를 사용해 1분 주기로 .crb 파일을 검색합니다.
실행 시 시나리오
프로그램 실행 → C:\MountCrbShare 폴더 생성 → .crb 파일 검색 → 변경된 파일 복사 → 로그 출력.
예:
csharp
코드 복사
[20250116 150101] CRB 파일 모니터링 시작.
[20250116 150201] 폴더 생성: C:\MountCrbShare\Folder1