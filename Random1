. DevExpress의 WPF GridControl에서 ShowingEditor 이벤트와 셀 스타일을 설정하는 것을 다루겠습니다.

XAML:

xaml

<Window x:Class="WpfApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
        Title="MainWindow" Height="350" Width="525">
    <Grid>
        <dxg:GridControl Name="gridControl1">
            <dxg:GridControl.View>
                <dxg:TableView Name="tableView1" ShowingEditor="tableView1_ShowingEditor">
                    <dxg:TableView.RowStyle>
                        <Style TargetType="dxg:GridRowContent">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RowData.Row.IsLocked}" Value="True">
                                    <Setter Property="Background" Value="Gray"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </dxg:TableView.RowStyle>
                </dxg:TableView>
            </dxg:GridControl.View>
        </dxg:GridControl>
    </Grid>
</Window>

ShowingEditor 이벤트는 TableView 요소에 추가됩니다. 이것이 C# 코드의 gridView_ShowingEditor 메서드와 연결됩니다.

셀의 스타일은 RowStyle을 통해 지정되며, IsLocked 프로퍼티의 값에 따라 배경색이 변경됩니다.

이제, C#에서 발생하는 ShowingEditor 이벤트를 다루는 코드를 연결하면 됩니다.

csharp

private void tableView1_ShowingEditor(object sender, DevExpress.Xpf.Grid.TreeList.TreeListShowingEditorEventArgs e)
{
    var row = e.RowHandle;
    var column = e.Column.VisibleIndex;

    var cellInfo = cellInfos.FirstOrDefault(c => c.Row == row && c.Column == column);
    if (cellInfo != null && cellInfo.IsLocked)
    {
        e.Cancel = true;  // 셀이 잠겨 있으면 편집을 취소합니다.
    }
}

이 예제에서는 cellInfos가 Row와 Column을 키로 사용하여 셀의 잠금 상태(IsLocked)를 추적하는 ObservableCollection<CellInfo>입니다. 이 정보를 사용하여 셀이 편