조건문 (Conditional Statements) - "만약 ...라면?" 똑똑한 선택! 💡

무엇? 프로그램이 특정 조건을 확인하고, 그 결과(참/거짓)에 따라 서로 다른 명령을 실행하도록 만드는 문법입니다. (갈림길에서 상황에 맞는 길을 선택하는 것과 같아요!)
왜 필요할까? 상황에 따라 유연하게 대처하는 프로그램을 만들 수 있습니다.
주요 형태 (VBA 기준 예시):
If ... Then ... End If (만약 ~라면 ~해라)
If 점수 >= 60 Then MsgBox "합격입니다!" End If
If ... Then ... Else ... End If (만약 ~라면 ~하고, 아니라면 다른거 해라)
If 날씨 = "맑음" Then MsgBox "소풍가자!" Else MsgBox "집에서 놀자!" End If
If ... Then ... ElseIf ... Then ... Else ... End If (여러 조건 중 하나를 골라 실행)
If 점수 >= 90 Then 등급 = "A" ElseIf 점수 >= 80 Then 등급 = "B" Else 등급 = "C" End If
핵심 비유: "상황에 따라 길을 안내하는 내비게이션 🗺️"
2. 반복문 (Loops) - "정해진 만큼 / 될 때까지!" 지루한 작업 자동화! 🔁

무엇? 특정 명령들을 여러 번 자동으로 되풀이해서 실행하도록 만드는 문법입니다. (노래의 후렴구나, 복사-붙여넣기를 여러 번 하는 것과 같아요!)
왜 필요할까? 단순하고 반복적인 작업을 컴퓨터에게 맡겨 효율을 높일 수 있습니다.
주요 형태 (VBA 기준 예시):
For ... To ... Next (정해진 횟수만큼 반복)
For i = 1 To 10 : Debug.Print i & "번째 반복 중..." : Next i (10번 반복)
For Each ... In ... Next (모음(컬렉션, 배열 등)의 각 항목에 대해 반복)
For Each 셀 In Range("A1:A5").Cells : 셀.Value = "확인됨" : Next 셀
Do While ... Loop (조건이 참인 동안 계속 반복 - 시작 전 조건 검사)
Do While 돈 > 0 : 물건구매 : 돈 = 돈 - 가격 : Loop (돈이 있을 때까지 계속 구매)
Do Until ... Loop (조건이 참이 될 때까지 계속 반복 - 시작 전 조건 검사)