럼 어떻게 해결해야 할까요?
해결 방법은 두 가지로 나뉩니다. 서버 설정을 변경할 수 있는 권한이 있는지에 따라 다릅니다.

해결책 1: 서버 관리자인 경우 (가장 이상적인 방법)
만약 사용자님이 해당 내부망 서버의 관리자이거나 개발팀에 요청할 수 있는 상황이라면, 서버의 보안 설정을 변경하는 것이 가장 확실한 해결책입니다.

주의: 이 작업은 보안 수준을 낮추는 것이므로, 반드시 내부망에서만 사용하고 위험성을 인지한 상태에서 진행해야 합니다.

방법: 웹 서버(Apache, Nginx 등) 또는 WAS(Tomcat 등) 설정에서 X-Frame-Options 헤더를 제거하거나 수정합니다.
Nginx 예시: nginx.conf 파일에서 proxy_hide_header X-Frame-Options; 를 추가하여 헤더를 숨깁니다.
Apache 예시: .htaccess 또는 httpd.conf 파일에서 Header always unset X-Frame-Options 를 추가하여 헤더를 제거합니다.
Java/JSP (Spring Security 등) 예시: web.xml의 필터 설정이나 Spring Security와 같은 보안 프레임워크 설정에서 frameOptions() 관련 설정을 sameOrigin()으로 변경하거나 비활성화합니다.
해결책 2: 일반 사용자 또는 개발자인 경우 (개인 PC에서만 적용되는 우회법)
서버 설정을 변경할 수 없다면, 사용자님의 크롬 브라우저만이라도 서버의 X-Frame-Options 헤더를 무시하도록 만들 수 있습니다.

이 방법은 다른 사람에게는 효과가 없으며, 오직 내 PC에서 테스트/사용 용도로만 유효합니다.

방법: 브라우저 확장 프로그램을 사용하여 강제로 HTTP 응답 헤더를 수정합니다.

크롬 웹 스토어에서 'ModHeader - Modify HTTP headers' 확장 프로그램을 검색하여 설치합니다.
크롬 오른쪽 위에 생긴 ModHeader 아이콘을 클릭합니다.
'Response Headers' 섹션을 선택합니다.
'+ ADD' 버튼을 누릅니다.
아래와 같이 두 개의 규칙을 추가합니다.
Name: X-Frame-Options, Value: (비워둠), Action: Remove
Name: Content-Security-Policy, Value: (비워둠), Action: Remove
필요하다면 필터(Filter)를 추가하여 특정 내부망 URL에만 이 규칙이 적용되도록 설정할 수 있습니다.
이렇게 설정한 후, 다시 처음에 만들었던 index.html 파일을 열면 <iframe> 안에서 정상적으로 페이지가 표시될 것입니다.

결론
문제 원인: 코드가 아니라, 보안 때문에 접속하려는 서버가 <iframe>을 거부하는 것입니다.