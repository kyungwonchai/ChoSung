합니다. DetailCMD와 별개 파일에 대해 MAG 값의 변경에 따른 CCC 값 토글을 구현해야 했는데, 조건이 DetailCMD 안에 포함되도록 잘못 작성했습니다. 요청하신 대로 MAG: 값의 변경에 따라 CCC 값을 토글하는 로직을 DetailCMD 파일과 다른 파일 모두에서 독립적으로 처리하도록 수정하겠습니다.

수정된 전체 코드
csharp
코드 복사
using DevExpress.Xpf.Grid;
using System;
using System.Collections.ObjectModel;
using System.IO;
using System.Text.RegularExpressions;
using System.Windows;
using System.Windows.Forms;
using System.Linq;
using System.Collections.Generic;

namespace FileAnalysisApp
{
    public partial class MainWindow : Window
    {
        private string selectedFolderPath = @"c:\prod_file_logs";
        public ObservableCollection<LogEntry> Sheet2Entries { get; set; } = new ObservableCollection<LogEntry>();

        public MainWindow()
        {
            InitializeComponent();
            Sheet2Grid.ItemsSource = Sheet2Entries;
        }

        private void SelectFolder_Click(object sender, RoutedEventArgs e)
        {
            using (var dialog = new FolderBrowserDialog())
            {
                dialog.SelectedPath = selectedFolderPath;
                if (dialog.ShowDialog() == System.Windows.Forms.DialogResult.OK)
                {
                    selectedFolderPath = dialog.SelectedPath;
                    SelectedFolderText.Text = selectedFolderPath;
                }
            }
        }

        private void Analyze_Click(object sender, RoutedEventArgs e)
        {
            if (string.IsNullOrEmpty(selectedFolderPath))
            {
                System.Windows.MessageBox.Show("Please select a folder first.");
                return;
            }

            Sheet2Entries.Clear();
            AnalyzeFiles(selectedFolderPath);
        }

        private void AnalyzeFiles(string folderPath)
        {
            var threeDaysAgo = DateTime.Now.AddDays(-3);
            var responseTracker = new Dictionary<string, string>();
            var sheet2Data = new List<LogEntry>();

            var timePattern = new Regex(@"\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}\.\d{3}");
            var keyPattern = new Regex(@"고유키:[^\s]+");
            var sendPattern = new Regex(@"보낸값:[^\s]+");
            var recvPattern = new Regex(@"받은값:[^\s]+");
            var magPattern = new Regex(@"MAG:\s([A-Za-z0-9]+)"); // MAG: 뒤에 공백과 특정 문자열 추출

            // CCC 토글 상태를 관리하는 변수
            int cccToggleState = 1;

            foreach (var filePath in Directory.GetFiles(folderPath, "*", SearchOption.AllDirectories))
            {
                var fileCreationTime = File.GetCreationTime(filePath);
                if (fileCreationTime < threeDaysAgo) continue;

                string fileName = Path.GetFileName(filePath);
                var lines = File.ReadAllLines(filePath);

                // 각 파일에서 MAG 값 추출 및 CCC 토글 적용
                foreach (var line in lines)
                {
                    var timeMatch = timePattern.Match(line);
                    var magMatch = magPattern.Match(line);

                    if (timeMatch.Success && magMatch.Success && fileName.Contains("TaskqueueModel"))
                    {
                        // 시간을 포맷하고 MAG 값을 추출
                        string timeStr = timeMatch.Value;
                        string magValue = magMatch.Groups[1].Value;
                        DateTime time = DateTime.ParseExact(timeStr, "yyyy-MM-dd HH:mm:ss.fff", null);
                        string formattedTime = time.ToString("yyMMdd HHmmss");

                        // MAG 값이 이전과 다를 경우 CCC 값을 토글
                        if (responseTracker.ContainsKey(fileName))
                        {
                            if (responseTracker[fileName] != magValue)
                            {
                                cccToggleState = cccToggleState == 1 ? 2 : 1;
                            }
                        }
                        responseTracker[fileName] = magValue;

                        // 데이터 추가
                        sheet2Data.Add(new LogEntry
                        {
                            Filename = fileName,
                            Time = formattedTime,
                            LengthOrRemainingData = line.Substring(timeMatch.Length).Trim(),
                            CCC = cccToggleState.ToString()
                        });
                    }
                    else if (timeMatch.Success)
                    {
                        // 시간만 있는 경우 기본 데이터 추가
                        string timeStr = timeMatch.Value;
                        DateTime time = DateTime.ParseExact(timeStr, "yyyy-MM-dd HH:mm:ss.fff", null);
                        string formattedTime = time.ToString("yyMMdd HHmmss");

                        sheet2Data.Add(new LogEntry
                        {
                            Filename = fileName,
                            Time = formattedTime,
                            LengthOrRemainingData = line.Substring(timeMatch.Length).Trim()
                        });
                    }
                }
            }

            foreach (var entry in sheet2Data.OrderBy(e => e.Time))
                Sheet2Entries.Add(entry);
        }
    }

    public class LogEntry
    {
        public string Filename { get; set; }
        public string Time { get; set; }
        public string UniqueKey { get; set; }
        public string SentValue { get; set; }
        public string ReceivedValue { get; set; }
        public string LengthOrRemainingData { get; set; }
        public string CCC { get; set; }  // CCC 토글 상태를 반영
    }
}
코드 설명