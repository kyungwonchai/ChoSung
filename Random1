evExpress WPF ChartControl에서 XAML을 통해 Y축의 범위를 설정하고 특정 값에 기준선을 추가하려면, AxisY2D의 WholeRange 속성을 사용하여 최소값과 최대값을 지정하고, ConstantLine 요소를 추가하여 원하는 위치에 기준선을 그릴 수 있습니다.

XAML 예시:

xml
코드 복사
<Window x:Class="LineDataViewer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/charts"
        Title="Line Data Viewer" Height="450" Width="800">
    <Grid>
        <dxc:ChartControl Name="LineChart">
            <dxc:ChartControl.Diagram>
                <dxc:XYDiagram2D>
                    <!-- Y축 설정 -->
                    <dxc:XYDiagram2D.AxisY>
                        <dxc:AxisY2D>
                            <!-- Y축 범위 설정 -->
                            <dxc:AxisY2D.WholeRange>
                                <dxc:Range MinValue="-1" MaxValue="1"/>
                            </dxc:AxisY2D.WholeRange>
                            <!-- 상한선 0.6 -->
                            <dxc:AxisY2D.ConstantLines>
                                <dxc:ConstantLine Value="0.6" Brush="Green">
                                    <dxc:ConstantLine.Title>
                                        <dxc:ConstantLineTitle Content="Upper Limit" Visibility="Visible"/>
                                    </dxc:ConstantLine.Title>
                                    <dxc:ConstantLine.LineStyle>
                                        <dxc:LineStyle Thickness="1" DashStyle="Dash"/>
                                    </dxc:ConstantLine.LineStyle>
                                </dxc:ConstantLine>
                                <!-- 하한선 -0.6 -->
                                <dxc:ConstantLine Value="-0.6" Brush="Red">
                                    <dxc:ConstantLine.Title>
                                        <dxc:ConstantLineTitle Content="Lower Limit" Visibility="Visible"/>
                                    </dxc:ConstantLine.Title>
                                    <dxc:ConstantLine.LineStyle>
                                        <dxc:LineStyle Thickness="1" DashStyle="Dash"/>
                                    </dxc:ConstantLine.LineStyle>
                                </dxc:ConstantLine>
                            </dxc:AxisY2D.ConstantLines>
                        </dxc:AxisY2D>
                    </dxc:XYDiagram2D.AxisY>

                    <!-- 시리즈 정의 -->
                    <dxc:LineSeries2D DisplayName="L 모델 MP1" ArgumentDataMember="Timestamp" ValueDataMember="MP1" MarkerVisible="True" Brush="Blue"/>
                    <dxc:LineSeries2D DisplayName="L 모델 MP2" ArgumentDataMember="Timestamp" ValueDataMember="MP2" MarkerVisible="True" Brush="SkyBlue"/>
                    <dxc:LineSeries2D DisplayName="L 모델 MP3" ArgumentDataMember="Timestamp" ValueDataMember="MP3" MarkerVisible="True" Brush="DodgerBlue"/>
                    <dxc:LineSeries2D DisplayName="L 모델 MP4" ArgumentDataMember="Timestamp" ValueDataMember="MP4" MarkerVisible="True" Brush="CornflowerBlue"/>
                    <dxc:LineSeries2D DisplayName="L 모델 MP5" ArgumentDataMember="Timestamp" ValueDataMember="MP5" MarkerVisible="True" Brush="LightBlue"/>
                    <dxc:LineSeries2D DisplayName="R 모델 MP1" ArgumentDataMember="Timestamp" ValueDataMember="MP1" MarkerVisible="True" Brush="Red"/>
                    <dxc:LineSeries2D DisplayName="R 모델 MP2" ArgumentDataMember="Timestamp" ValueDataMember="MP2" MarkerVisible="True" Brush="OrangeRed"/>
                    <dxc:LineSeries2D DisplayName="R 모델 MP3" ArgumentDataMember="Timestamp" ValueDataMember="MP3" MarkerVisible="True" Brush="Crimson"/>
                    <dxc:LineSeries2D DisplayName="R 모델 MP4" ArgumentDataMember="Timestamp" ValueDataMember="MP4" MarkerVisible="True" Brush="IndianRed"/>
                    <dxc:LineSeries2D DisplayName="R 모델 MP5" ArgumentDataMember="Timestamp" ValueDataMember="MP5" MarkerVisible="True" Brush="LightCoral"/>
                </dxc:XYDiagram2D>
            </dxc:ChartControl.Diagram>
        </dxc:ChartControl>
    </Grid>
</Window>
설명:

Y축 범위 설정:

AxisY2D.WholeRange 내에 Range 요소를 사용하여 MinValue를 -1, MaxValue를 1로 설정하여 Y축의 표시 범위를 지정합니다.
상한선 및 하한선 추가:

AxisY2D.ConstantLines 컬렉션에 ConstantLine 요소를 추가하여 Y축에 기준선을 그립니다.
Value 속성으로 선이 그려질 값을 지정하고, Brush 속성으로 선의 색상을 설정합니다.
ConstantLine.Title을 통해 선의 제목을 설정하며, Visibility를 Visible로 설정하여 제목을 표시합니다.
ConstantLine.LineStyle을 사용하여 선의 두께(Thickness)와 스타일(DashStyle)을 설정합니다.
시리즈 정의:

LineSeries2D 요소를 사용하여 각 데이터 시리즈를 정의합니다.
DisplayName으로 시리즈의 이름을 설정하고, ArgumentDataMember와 ValueDataMember로 데이터 바인딩을 설정합니다.
MarkerVisible을 True로 설정하여 데이터 포인트 마커를 표시하며, Brush 속성으로 선과 마커의 색상을 지정합니다.
참고 자료:

DevExpress WPF ChartControl 문서