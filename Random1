고 대기하게 하려면, 비동기 작업을 기다릴 수 있도록 Task.Wait() 또는 Task.GetAwaiter().GetResult()를 사용할 수 있습니다. 하지만 이런 방법들은 비동기 메서드를 동기적으로 기다리기 때문에, 작업이 완료될 때까지 현재 스레드가 차단됩니다. 이는 UI 스레드에서는 사용하지 않는 것이 좋지만, 예시로는 다음과 같이 작성할 수 있습니다.

csharp
코드 복사
public void AddTask()
{
    // 비동기 메서드를 동기적으로 대기
    EnqueueTask().GetAwaiter().GetResult();
}
이 코드에서는 EnqueueTask()가 완료될 때까지 현재 메서드가 대기하게 됩니다. 비동기 작업을 동기적으로 기다리는 방법은 데드락을 발생시킬 가능성이 있으므로, 꼭 필요한 경우가 아니라면 권장하지는 않습니다. 특히, UI 스레드에서는 이러한 대기가 UI 응답을 멈추게 할 수 있습니다.

다른 방법으로는 비동기 메서드 내에서 await을 사용하여 자연스럽게 비동기 흐름을 유지하는 것이 좋습니다.

권장되지 않는 이유
데드락 위험: UI 스레드에서 사용하면 비동기 코드가 동기적으로 실행되어 데드락이 발생할 수 있습니다.