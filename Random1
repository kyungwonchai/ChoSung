SignalR을 사용하여 여러 사용자의 편집 상태를 공유하는 방법을 다룰 것이며, G_TBL1 이라는 DataTable을 GridControl에 연결하고 있다고 가정하겠습니다.
1. SignalR Hub 구현

먼저, SignalR Hub를 정의하여 실시간 업데이트를 처리합니다.

csharp

using Microsoft.AspNetCore.SignalR;
using System.Threading.Tasks;

public class EditHub : Hub
{
    public async Task UpdateEditStatus(string key1, string username, string column)
    {
        await Clients.Others.SendAsync("ReceiveEditStatus", key1, username, column);
    }
}

2. WPF 앱에서 SignalR Hub 연결

WPF 프로젝트에 SignalR 클라이언트 라이브러리를 설치한 후 Hub에 연결합니다.

csharp

HubConnection connection = new HubConnectionBuilder()
    .WithUrl("http://yourserver/editHub")
    .Build();

await connection.StartAsync();

3. 서버에서 편집 상태 관리

G_TBL1의 행에 편집 상태와 사용자 정보를 저장할 컬럼을 추가합니다. (예: EditStatus, EditUser)
4. 편집 시작/종료 시 서버에 알림

편집을 시작하거나 끝낼 때 Hub의 UpdateEditStatus 메서드를 호출하여 편집 상태를 업데이트합니다.

csharp

// 편집을 시작할 때
await connection.InvokeAsync("UpdateEditStatus", key1, username, "구분");

// 편집을 끝낼 때 (저장 버튼 클릭 등)
await connection.InvokeAsync("UpdateEditStatus", key1, "", "구분");

5. 다른 사용자의 편집 상태 수신

다른 사용자의 편집 상태를 받아 G_TBL1을 업데이트합니다.

csharp

connection.On<string, string, string>("ReceiveEditStatus", (key1, username, column) =>
{
    DataRow row = G_TBL1.Rows.Find(key1);
    if (row != null)
    {
        row["EditStatus"] = username;
        row["EditColumn"] = column;
    }
});

6. 업데이트 로직

변경된 행을 Table_수기입에 반영할 때 편집 상태와 사용자 정보도 같이 업데이트합니다.

csharp

// 행 업데이트 로직...

7. XAML에서 편집 가능한 컬럼 지정

각 컬럼의 편집 가능 여부를 EditStatus와 EditColumn에 따라 결정합니다.

xaml

<dxg:GridColumn Header="구분" AllowEditing="{Binding EditStatus, Converter={StaticResource yourConverter}}">
    <!-- ... -->
</dxg:GridColumn>

이 설계는 SignalR, 데이터베이스, 동시성 등을 다루고 있어서 상세 구현은 복잡할 수 있습니다. 또한 SignalR 서버 구축, 클라이언트 라이브러리 추가 등의 추가 작업이 필요합니다. 각 부분에 대한 추가적인 디테일이 필요하면 말씀해 주시기 바랍니다