MSSQL 서버에서 데이터를 파이썬으로 가져올 때는 **pandas**와 pyodbc 라이브러리를 사용하는 것이 가장 표준적이고 편리합니다.

## 1. 필수 라이브러리 설치
먼저 데이터를 불러오는 데 필요한 라이브러리들을 설치합니다. DataSpell 터미널이나 Anaconda Prompt에서 아래 명령어를 실행하세요.

Bash

pip install pandas pyodbc
## 2. 파이썬 코드로 데이터 가져오기
아래는 MSSQL 서버에 연결하고, 쿼리를 실행해 결과를 pandas 데이터프레임(DataFrame)으로 가져오는 전체 코드 예제입니다.

Python

import pandas as pd
import pyodbc

# 1. 접속 정보 설정
server = '서버_주소'  # 예: 192.168.0.1 또는 my-server.database.windows.net
database = '데이터베이스_이름'
username = '사용자_ID'
password = '비밀번호'

# 2. 연결 문자열(Connection String) 생성
# 사용하는 ODBC 드라이버 버전에 따라 이름이 다를 수 있습니다.
# 'ODBC Driver 17 for SQL Server'가 가장 일반적입니다.
connection_string = f'DRIVER={{ODBC Driver 17 for SQL Server}};SERVER={server};DATABASE={database};UID={username};PWD={password}'

# 3. 실행할 SQL 쿼리 작성
query = """
    SELECT *
    FROM YourTableName
    WHERE YourCondition = 'some_value'
"""

cnxn = None  # 연결 객체 초기화
try:
    # 4. 데이터베이스 연결 및 데이터 불러오기
    cnxn = pyodbc.connect(connection_string)
    df = pd.read_sql(query, cnxn)

    # 5. 결과 확인
    print(f"성공적으로 {len(df)}개의 행을 가져왔습니다.")
    print(df.head()) # 상위 5개 데이터 출력

except Exception as e:
    print(f"오류가 발생했습니다: {e}")

finally:
    # 6. 연결 종료 (매우 중요)
    if cnxn:
        cnxn.close()
        print("데이터베이스 연결을 닫았습니다.")
## 3. 코드 설명 및 주요 포인트
pyodbc: 파이썬이 MSSQL과 통신할 수 있게 해주는 다리(드라이버) 역할을 합니다.

Connection String (연결 문자열): 접속에 필요한 모든 정보(드라이버, 서버 주소, DB 이름, ID/PW)를 담고 있는 핵심적인 문자열입니다.

DRIVER: PC에 설치된 ODBC 드라이버 이름을 정확히 적어야 합니다. ODBC Driver 17 for SQL Server가 없다면 PC의 'ODBC 데이터 원본' 관리자에서 설치된 드라이버 이름을 확인해야 할 수 있습니다.

pd.read_sql(query, cnxn): 가장 중요한 함수입니다. pandas가 이 함수 하나로 지정된 query를 데이터베이스 cnxn에 실행하고, 그 결과를 깔끔한 표 형태의 데이터프레임으로 바로 만들어 줍니다.