서버 코드 작성: 아래는 Express를 사용하여 생성한 간단한 서버 코드입니다. 이 서버는 클라이언트로부터 location과 visa_ip 값을 받아, 해당 조건에 맞는 데이터베이스 내의 CORR_VAL 값을 업데이트합니다.

javascript
Copy code
// server.js
const express = require('express');
const sql = require('mssql');
const app = express();
const port = 3001; // 서버 포트 번호

// MSSQL 데이터베이스 연결 설정
const config = {
    user: 'your_username',
    password: 'your_password',
    server: 'your_server', // 예: 'localhost'
    database: 'DB123',
    options: {
        encrypt: true, // Azure 등의 클라우드 서비스 사용 시 필요
        trustServerCertificate: true // 개발 목적으로만 사용
    }
};

app.use(express.json()); // JSON 요청 본문 처리

// CORR_VAL 업데이트 엔드포인트
app.post('/updateCorrVal', async (req, res) => {
    try {
        const { location, visa_ip } = req.body;
        await sql.connect(config);
        const result = await sql.query`UPDATE 테이블A SET CORR_VAL = CORR_VAL + 1 WHERE Location = ${location} AND VISA_IP = ${visa_ip}`;
        res.json({ message: 'Update successful', rowsAffected: result.rowsAffected });
    } catch (err) {
        res.status(500).send({ message: 'Error updating CORR_VAL', error: err.message });
    }
});

app.listen(port, () => {
    console.log(`Server running on port ${port}`);
});
참고: 실제 운영 환경에서는 보안을 위해 환경 변수나 별도의 구성 파일을 통해 데이터베이스 연결 정보를 관리해야 합니다.

2. 리액트 프론트엔드에서 API 호출
리액트 앱에서는 fetch 함수나 axios 라이브러리를 사용하여 버튼 클릭 시 위에서 구축한 백엔드 API를 호출할 수 있습니다. 여기서는 fetch를 사용하는 예시를 보여줍니다.

jsx
Copy code
function updateCorrVal(location, visa_ip) {
  fetch('http://localhost:3001/updateCorrVal', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({ location, visa_ip }),
  })
    .then(response => response.json())
    .then(data => console.log(data))
    .catch(error => console.error('Error:', error));
}

// 사용 예:
// <button onClick={() => updateCorrVal(row.Location, row.VISA_IP)}>Update CORR_VAL</button>
요약
리액트 앱에서 바로 데이터베이스를 업데이트할 수 없으므로, Node.js와 Express를 사용하여 API 서버를 구축해야 합니다.
API 서버는 클라이언트로부터 받은 location과 visa_ip 값을 기반으로 MSSQL 데이터베이스의 CORR_VAL 값을 업데이트하는 역할을 합니다.
리액트 앱에서는 fetch 함수를 사용하여 이 API 서버에 데이터를 보내고 업데이트를