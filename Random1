WPF에서 DevExpress 22.2를 사용하여 요구하신 기능을 구현하기 위해 아래와 같은 단계를 따르도록 하겠습니다. 여기서는 GridControl과 QR코드를 포함한 레이아웃을 설정하고, 슬라이더와의 연동, 선택된 행 및 QR코드의 배경색 변경 등의 기능을 추가할 것입니다.

1. 프로젝트 설정
WPF 프로젝트를 생성하고 DevExpress 22.2를 설치합니다.
필요한 NuGet 패키지를 추가합니다.
2. MainWindow.xaml 설정
아래는 메인 윈도우의 XAML 설정입니다. GridControl, 슬라이더, QR코드 표시 영역, 제목 등을 포함합니다.

xml
코드 복사
<Window x:Class="YourNamespace.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
        xmlns:local="clr-namespace:YourNamespace"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <TextBlock Text="제목" FontSize="24" HorizontalAlignment="Center" Margin="10"/>
        
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            
            <!-- GridControl -->
            <dxg:GridControl Name="gridControl" AutoGenerateColumns="AddNew">
                <dxg:GridControl.View>
                    <dxg:TableView Name="tableView"/>
                </dxg:GridControl.View>
            </dxg:GridControl>
            
            <!-- QR 코드 영역 -->
            <ScrollViewer Grid.Column="1" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                <StackPanel Name="qrCodePanel" Orientation="Vertical" HorizontalAlignment="Center"/>
            </ScrollViewer>
        </Grid>
        
        <!-- 슬라이더 설정 -->
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="10">
            <TextBlock Text="QR 코드 크기: " VerticalAlignment="Center"/>
            <Slider Name="sizeSlider" Minimum="50" Maximum="200" Width="100" ValueChanged="Slider_ValueChanged"/>
            <TextBlock Text="QR 코드 간격: " VerticalAlignment="Center" Margin="10,0,0,0"/>
            <Slider Name="spacingSlider" Minimum="10" Maximum="50" Width="100" ValueChanged="Slider_ValueChanged"/>
        </StackPanel>
    </Grid>
</Window>
3. MainWindow.xaml.cs 설정
C# 코드를 통해 클립보드에서 데이터를 가져와 GridControl에 바인딩하고, QR코드를 생성하여 표시합니다.

csharp
코드 복사
using DevExpress.Xpf.Grid;
using QRCoder;
using System;
using System.Collections.ObjectModel;
using System.Drawing;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Media.Imaging;

namespace YourNamespace
{
    public partial class MainWindow : Window
    {
        public ObservableCollection<string> Items { get; set; }

        public MainWindow()
        {
            InitializeComponent();
            Items = new ObservableCollection<string>();
            gridControl.ItemsSource = Items;
        }

        private void Window_Loaded(object sender, RoutedEventArgs e)
        {
            // 클립보드에서 데이터 가져오기
            string clipboardText = Clipboard.GetText();
            if (!string.IsNullOrEmpty(clipboardText))
            {
                var lines = clipboardText.Split(new[] { '\r', '\n' }, StringSplitOptions.RemoveEmptyEntries);
                foreach (var line in lines)
                {
                    if (line.Length == 22 && IsAlphanumeric(line))
                    {
                        Items.Add(line);
                    }
                }
                GenerateQRCodes();
            }
        }

        private void Slider_ValueChanged(object sender, RoutedPropertyChangedEventArgs<double> e)
        {
            GenerateQRCodes();
        }

        private void GenerateQRCodes()
        {
            qrCodePanel.Children.Clear();
            foreach (var item in Items)
            {
                var qrCode = GenerateQRCode(item);
                var image = new Image
                {
                    Source = BitmapToImageSource(qrCode),
                    Width = sizeSlider.Value,
                    Height = sizeSlider.Value,
                    Margin = new Thickness(spacingSlider.Value)
                };
                var stackPanel = new StackPanel { Orientation = Orientation.Vertical, HorizontalAlignment = HorizontalAlignment.Center };
                var textBlock = new TextBlock
                {
                    Text = item,
                    Foreground = System.Windows.Media.Brushes.Blue,
                    HorizontalAlignment = HorizontalAlignment.Center
                };
                stackPanel.Children.Add(image);
                stackPanel.Children.Add(textBlock);

                image.MouseLeftButtonDown += (s, e) => 
                {
                    DeselectAllRows();
                    int index = Items.IndexOf(item);
                    tableView.FocusedRowHandle = index;
                    gridControl.View.FocusedRowHandle = index;
                };

                qrCodePanel.Children.Add(stackPanel);
            }
        }

        private Bitmap GenerateQRCode(string text)
        {
            QRCodeGenerator qrGenerator = new QRCodeGenerator();
            QRCodeData qrCodeData = qrGenerator.CreateQrCode(text, QRCodeGenerator.ECCLevel.Q);
            QRCode qrCode = new QRCode(qrCodeData);
            return qrCode.GetGraphic(20);
        }

        private BitmapImage BitmapToImageSource(Bitmap bitmap)
        {
            using (var memory = new System.IO.MemoryStream())
            {
                bitmap.Save(memory, System.Drawing.Imaging.ImageFormat.Png);
                memory.Position = 0;
                var bitmapImage = new BitmapImage();
                bitmapImage.BeginInit();
                bitmapImage.StreamSource = memory;
                bitmapImage.CacheOption = BitmapCacheOption.OnLoad;
                bitmapImage.EndInit();
                return bitmapImage;
            }
        }

        private bool IsAlphanumeric(string str)
        {
            foreach (char c in str)
            {
                if (!char.IsLetterOrDigit(c))
                {
                    return false;
                }
            }
            return true;
        }

        private void DeselectAllRows()
        {
            foreach (var rowHandle in gridControl.GetRowHandles())
            {
                tableView.UnselectRow(rowHandle);
            }
        }
    }
}
4. 이벤트 핸들러 설정
선택된 QR코드 및 GridControl 행의 배경색을 변경하는 이벤트 핸들러를 추가합니다.

csharp
코드 복사
private void tableView_FocusedRowChanged(object sender, FocusedRowChangedEventArgs e)
{
    DeselectAllQRCode();
    if (e.NewRow != null)
    {
        int index = Items.IndexOf(e.NewRow as string);
        HighlightQRCode(index);
    }
}

private void DeselectAllQRCode()
{
    foreach (StackPanel stackPanel in qrCodePanel.Children)
    {
        stackPanel.Background = System.Windows.Media.Brushes.Transparent;
    }
}

private void HighlightQRCode(int index)
{
    if (index >= 0 && index < qrCodePanel.Children.Count)
    {
        StackPanel stackPanel = qrCodePanel.Children[index] as StackPanel;
        stackPanel.Background = System.Windows.Media.Brushes.Yellow;
    }
}