-- AppSettings 테이블이 없으면 생성
IF OBJECT_ID('dbo.AppSettings', 'U') IS NULL
BEGIN
    CREATE TABLE dbo.AppSettings (
        SettingKey NVARCHAR(100) PRIMARY KEY NOT NULL, -- 설정 키 (예: "MasterKey", "NormalKey")
        SettingValue NVARCHAR(MAX) NULL                -- 설정 값 (비밀번호 등) - 실제 운영 시 암호화 고려
    );
    PRINT 'AppSettings 테이블 생성 완료.';
END
ELSE
BEGIN
    PRINT 'AppSettings 테이블이 이미 존재합니다.';
END
GO

-- 초기 비밀번호 설정 (이미 값이 있다면 업데이트, 없으면 삽입)
-- 마스터 키 초기값 설정 (App.config의 값과 동일하게 시작)
IF NOT EXISTS (SELECT 1 FROM dbo.AppSettings WHERE SettingKey = 'MasterKey')
    INSERT INTO dbo.AppSettings (SettingKey, SettingValue) VALUES ('MasterKey', 'admin123');
ELSE
    UPDATE dbo.AppSettings SET SettingValue = 'admin123' WHERE SettingKey = 'MasterKey'; -- 필요 시 기존 값 업데이트

PRINT 'MasterKey 설정 완료.';

-- 일반 키 초기값 설정 (App.config의 값과 동일하게 시작)
IF NOT EXISTS (SELECT 1 FROM dbo.AppSettings WHERE SettingKey = 'NormalKey')
    INSERT INTO dbo.AppSettings (SettingKey, SettingValue) VALUES ('NormalKey', 'user123');
ELSE
    UPDATE dbo.AppSettings SET SettingValue = 'user123' WHERE SettingKey = 'NormalKey'; -- 필요 시 기존 값 업데이트

PRINT 'NormalKey 설정 완료.';
GO
```

**주의:** 위 스크립트의 `admin123`과 `user123`은 예시 비밀번호입니다. 실제 사용할 초기 비밀번호로 변경하세요. 실제 운영 환경에서는 비밀번호를 평문으로 저장하는 대신 해시(Hash)하여 저장하는 것이 보안상 안전합니다.

---

**2. `Models/AppSetting.cs` (신규 파일)**

`Models` 폴더에 이 파일을 새로 추가하세요.

```csharp
// FILE_ID: Models/AppSetting_20250410104500
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using LockerManagementApp.Infrastructure; // ViewModelBase 사용 시 필요

namespace LockerManagementApp.Models
{
    [Table("AppSettings")]
    public class AppSetting : ViewModelBase // 값 변경 시 UI 알림이 필요할 수 있으므로 상속 (선택 사항)
    {
        private string _settingKey;
        private string _settingValue;

        [Key]
        [StringLength(100)]
        public string SettingKey
        {
            get => _settingKey;
            set => SetProperty(ref _settingKey, value);
        }

        [Column(TypeName = "NVARCHAR(MAX)")] // DB 타입과 일치
        public string SettingValue
        {
            get => _settingValue;
            set => SetProperty(ref _settingValue, value);
        }
    }
}
```