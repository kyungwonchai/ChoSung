니다. 요구사항을 정리하면 다음과 같습니다.

요구사항
관리 항목

개인사물함, 락커, 신발장, 기타

층

B1, 1, 2, 3, 4

구역 구분

개인사물함: A ~ H

락커: B1 ~ 4

신발장: B1 ~ 4F

기타

항목 입력

세부 위치 (수기입)

성명 (수기입)

Knox ID (수기입)

소파트: Main(시생산), MainA ~ Z조

관리자: 홍길동A ~ X까지 다양하게 존재

기능 요구 사항

추가, 수정, 삭제 기능 (DB 테이블과 실시간 연동)

검색 및 필터 기능 (다양한 조건으로 검색 가능)

데이터 관리 (MSSQL 2014 사용, 테이블 구조 정의)

UI (DevExpress 22.2 사용, DataGridControl 활용)

MVVM 패턴 적용 (전문가 수준의 객체지향 패턴)

데이터베이스 테이블 구조 (MSSQL 2014)

sql
코드 복사
CREATE TABLE LockerManagement (
    ID INT PRIMARY KEY IDENTITY(1,1),
    ItemCategory NVARCHAR(50),    -- 개인사물함, 락커, 신발장, 기타
    Floor NVARCHAR(10),           -- B1, 1, 2, 3, 4
    Area NVARCHAR(50),            -- A~H, B1~4, B1~4F, 기타
    LocationDetail NVARCHAR(100), -- 세부 위치 (수기입)
    Name NVARCHAR(50),            -- 성명 (수기입)
    KnoxID NVARCHAR(50),          -- Knox ID (수기입)
    Part NVARCHAR(50),            -- Main, MainA~Z
    Manager NVARCHAR(50),         -- 홍길동A~X
    LastModified DATETIME         -- 수정 시간 기록
);
프로젝트 구성 (MVVM 패턴)
Models

ViewModels

Views (XAML)

Data Access Layer (MSSQL 2014)

Services (검색, 추가, 수정, 삭제 관리)

코드를 지금 작성하겠습니다.
잠시만 기다려주세요.

Locker Management System
1번 편집함

대신 채팅에서 답합니다
ViewModels 부분까지 작성 완료했습니다. 이제 Views (XAML) 부분을 작성하겠습니다. 잠시만 기다려주세요.

1번 편집함

대신 채팅에서 답합니다
Views (XAML) 작성이 완료되었습니다. 이제 Data Access Layer와 Services 부분을 작성하겠습니다. 잠시만 기다려주세요.

1번 편집함

대신 채팅에서 답합니다
Data Access Layer와 Services 부분 작성이 완료되었습니다. 이제 추가, 수정, 삭제 기능을 구현하겠습니다. 잠시만 기다려주세요.

1번 편집함

대신 채팅에서 답합니다
코드 작성이 완료되었습니다. 구현된 내용은 다음과 같습니다:

Models (Locker Class)

ViewModels (LockerViewModel Class - MVVM 패턴 적용)

Views (XAML - DataGridControl로 데이터 표시)

Data Access Layer (LockerService Class - SQL 연결)

기능 구현 (추가, 수정, 삭제 기능 포함)

다음 단계로는:

검색 및 필터 기능 구현 (자유로운 검색과 필터링 가능하도록 추가하겠습니다)

MSSQL 2014 데이터베이스에 적용 테스트

검색과 필터 기능을 바로 추가하겠습니다. 잠시만 기다려주세요.

1번 편집함

대신 채팅에서 답합니다
검색 및 필터 기능이 추가되었습니다.

구현된 기능:
추가 (AddCommand) - 새로운 사물함 정보를 추가합니다.

수정 (UpdateCommand) - 기존 정보를 수정합니다.

삭제 (DeleteCommand) - 선택된 정보를 삭제합니다.

검색 필터 (SearchCommand) - 이름, 관리항목, 관리자, 소파트를 기준으로 실시간 검색 필터를 적용합니다.

이제 전체 코드를 다시 확인하고 데이터베이스와 연결된 동작을 테스트해 주세요.
다음으로는 UI에 검색 텍스트박스를 추가하고, 검색 결과를 실시간으로 필터링하도록 수정하겠습니다.
바로 진행하겠습니다.

Locker Management System

1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
// WPF DevExpress 22.2 - Locker Management System (MVVM 패턴)

// Models
using System;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Collections.ObjectModel;
using System.Data;
using System.Data.SqlClient;

namespace LockerManagementSystem.Models
{
    public class Locker : INotifyPropertyChanged
    {
        public int ID { get; set; }

        private string _itemCategory;
        private string _floor;
        private string _area;
        private string _locationDetail;
        private string _name;
        private string _knoxID;
        private string _part;
        private string _manager;
        private DateTime _lastModified;

        public string ItemCategory { get => _itemCategory; set { _itemCategory = value; OnPropertyChanged("ItemCategory"); } }
        public string Floor { get => _floor; set { _floor = value; OnPropertyChanged("Floor"); } }
        public string Area { get => _area; set { _area = value; OnPropertyChanged("Area"); } }
        public string LocationDetail { get => _locationDetail; set { _locationDetail = value; OnPropertyChanged("LocationDetail"); } }
        public string Name { get => _name; set { _name = value; OnPropertyChanged("Name"); } }
        public string KnoxID { get => _knoxID; set { _knoxID = value; OnPropertyChanged("KnoxID"); } }
        public string Part { get => _part; set { _part = value; OnPropertyChanged("Part"); } }
        public string Manager { get => _manager; set { _manager = value; OnPropertyChanged("Manager"); } }
        public DateTime LastModified { get => _lastModified; set { _lastModified = value; OnPropertyChanged("LastModified"); } }

1번 편집함

대신 채팅에서 답합니다
검색 기능을 UI에 추가하고, 실시간으로 검색 결과가 필터링되도록 설정했습니다.

구현된 기능:
검색 텍스트박스 - 검색어를 입력하면 실시간으로 필터링됩니다.

검색 버튼 - 클릭 시 검색어를 기반으로 필터링을 적용합니다.

데이터 그리드 (GridControl) - 검색된 데이터만 표시합니다.