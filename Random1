lender는 기본적으로 CPU를 사용하며, GPU 렌더링을 활성화하려면 수동으로 설정해야 합니다. 특히 **CUDA(엔비디아 GPU)**를 사용하려면 몇 가지 설정이 필요합니다.

✅ Blender에서 CUDA(GPU) 렌더링 설정 방법
1. Blender UI에서 설정 (수동 방법)
Blender를 실행
Edit(편집) → Preferences(환경설정) → System(시스템)
Cycles Render Devices에서 CUDA 또는 OptiX 체크
CUDA: 대부분의 엔비디아 GPU 지원 (GTX, RTX 시리즈)
OptiX: RTX GPU에서만 사용 가능
Save Preferences(환경설정 저장) 클릭
Render Properties(렌더 설정) → Device(장치) 에서 GPU Compute 선택
2. Python 스크립트로 CUDA 설정
아래 코드를 Blender의 Scripting Editor에서 실행하면 CUDA가 활성화됩니다.

python
코드 복사
import bpy

# Cycles 렌더 엔진 사용
bpy.context.scene.render.engine = 'CYCLES'

# GPU 사용 설정
bpy.context.preferences.addons['cycles'].preferences.compute_device_type = 'CUDA'

# 사용 가능한 GPU 목록 가져오기
devices = bpy.context.preferences.addons["cycles"].preferences.get_devices()

# 모든 GPU 활성화
for device in devices:
    if not device.use:
        device.use = True

# GPU로 렌더링 설정
bpy.context.scene.cycles.device = 'GPU'

# 설정 확인 출력
print("CUDA 설정 완료: GPU 사용 가능 장치 목록")
for device in devices:
    print(f"- {device.name}: {'활성화됨' if device.use else '비활성화됨'}")
✅ CUDA가 정상적으로 설정되었는지 확인
방법 1: Blender에서 직접 확인
Edit(편집) → Preferences(환경설정) → System(시스템)
Cycles Render Devices에서 CUDA/OptiX가 활성화되었는지 확인
Render Properties(렌더 설정) → Device(장치) 가 GPU Compute인지 확인
방법 2: Python 코드로 확인
Blender의 Python Console에서 실행:

python
코드 복사
import bpy
print(bpy.context.preferences.addons["cycles"].preferences.compute_device_type)
출력 결과:

"CUDA" → GPU 활성화됨
"NONE" → GPU 미사용 (설정 필요)
✅ 추가 설정
1. CPU + GPU 동시 사용
CUDA를 사용하면서 CPU도 함께 렌더링하도록 설정하려면:

python
코드 복사
bpy.context.scene.cycles.device = 'GPU'
bpy.context.preferences.addons['cycles'].preferences.compute_device_type = 'CUDA'

# 모든 GPU 및 CPU 활성화
for device in bpy.context.preferences.addons["cycles"].preferences.get_devices():
    device.use = True  # CPU 포함 모든 장치 활성화
✅ 결론
Blender는 기본적으로 CPU 렌더링 사용 → 수동으로 GPU 설정 필요
CUDA(엔비디아 GPU) 사용하려면
Blender UI에서 설정하거나
Python 코드로 자동 설정 가능