WinForms 애플리케이션에서 .NET Framework 4.8을 사용하여 오페라 브라우저로 특정 웹 주소를 비동기적으로 열고, 15초 대기 후 추가 작업을 수행하며, 메시지를 ListBox에 기록하고, 항목이 500개를 초과하면 가장 오래된 항목부터 제거하는 기능을 구현할 수 있습니다.

아래는 해당 기능을 구현한 코드 예제입니다:

csharp
코드 복사
using System;
using System.Diagnostics;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace OperaLauncher
{
    public partial class MainForm : Form
    {
        public MainForm()
        {
            InitializeComponent();
        }

        private async void LaunchOperaButton_Click(object sender, EventArgs e)
        {
            string operaPath = @"C:\Program Files\Opera\launcher.exe";
            string url = "https://www.example.com";

            try
            {
                Process.Start(operaPath, url);
                await Task.Delay(15000);
                LogMessage("15초 대기 완료. 추가 작업을 시작합니다.");
                PerformAdditionalTask();
            }
            catch (Exception ex)
            {
                LogMessage($"오페라 브라우저 실행 중 오류 발생: {ex.Message}");
            }
        }

        private void PerformAdditionalTask()
        {
            // 여기에 추가 작업 코드를 작성합니다.
            LogMessage("추가 작업이 완료되었습니다.");
        }

        private void LogMessage(string message)
        {
            if (listBox1.InvokeRequired)
            {
                listBox1.Invoke(new Action(() => AddMessageToListBox(message)));
            }
            else
            {
                AddMessageToListBox(message);
            }
        }

        private void AddMessageToListBox(string message)
        {
            listBox1.Items.Add($"{DateTime.Now}: {message}");

            if (listBox1.Items.Count > 500)
            {
                listBox1.Items.RemoveAt(0);
            }

            listBox1.TopIndex = listBox1.Items.Count - 1;
        }
    }
}
코드 설명:

비동기 메서드 사용: LaunchOperaButton_Click 이벤트 핸들러는 async 한정자를 사용하여 비동기 메서드로 정의되었습니다. 이를 통해 await 키워드를 사용하여 비동기 작업을 수행할 수 있습니다.

오페라 브라우저 실행: Process.Start(operaPath, url);를 통해 오페라 브라우저를 지정한 URL과 함께 실행합니다.

15초 대기: await Task.Delay(15000);를 사용하여 15초 동안 비동기적으로 대기합니다. 이 동안 UI 스레드는 차단되지 않아 애플리케이션이 응답성을 유지합니다.

로그 메시지 기록: LogMessage 메서드를 호출하여 ListBox에 메시지를 추가합니다. 이 메서드는 스레드 안전하게 UI 컨트롤에 접근하기 위해 InvokeRequired를 확인하고, 필요에 따라 Invoke를 사용합니다.

추가 작업 수행: PerformAdditionalTask 메서드에서 추가 작업을 수행하며, 작업 완료 후 로그 메시지를 기록합니다.

ListBox 항목 관리: AddMessageToListBox 메서드는 ListBox에 새로운 메시지를 추가하고, 항목 수가 500개를 초과하면 가장 오래된 항목을 제거합니다. 또한, TopIndex를 설정하여 최신 항목이 자동으로 표시되도록 합니다.