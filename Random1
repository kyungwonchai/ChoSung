 드롭 작업이 완료되었을 때 데이터베이스에 순서를 업데이트하는 방법을 설명드리겠습니다. 현재 GridControl에서 드래그 앤 드롭 기능을 설정해두셨으므로, 드래그 완료 시점에 데이터베이스에 변경 사항을 반영하도록 이벤트 핸들러와 데이터베이스 업데이트 로직을 추가하면 됩니다.

1. DragRecordOver 이벤트 핸들러 수정
DragRecordOver 이벤트는 드래그 동작 중에 발생하는 이벤트입니다. 그러나 드래그가 완료된 시점에는 Drop 또는 RowDrop 이벤트를 사용하여 드래그 완료 시점에 작업을 처리하는 것이 더 적합합니다.

xml
코드 복사
<dxg:GridControl.View>
    <dxg:TableView x:Name="view"
                   ShowFixedTotalSummary="True"
                   NavigationStyle="Row"
                   ShowGroupPanel="False"
                   AllowDragDrop="True"
                   RowDrop="OnRowDrop"  <!-- 드래그 완료 시점 이벤트 추가 -->
                   ShowDragDropHint="{Binding Path=IsChecked, ElementName=showDragDropHintCheckEdit}"
                   ShowTargetInfoInDragDropHint="{Binding Path=IsChecked, ElementName=showTargetInfoInDragDropHintCheckEdit}">
        <!-- 기타 설정 -->
    </dxg:TableView>
</dxg:GridControl.View>
2. RowDrop 이벤트 핸들러 구현
RowDrop 이벤트에서 드래그 완료 후 행의 순서를 데이터베이스에 반영하는 로직을 작성합니다.

csharp
코드 복사
private void OnRowDrop(object sender, DevExpress.Xpf.Grid.RowDropEventArgs e)
{
    // GridControl에서 현재 Task 목록을 가져옴
    var reorderedTasks = (ObservableCollection<TaskModel>)taskGrid.ItemsSource;

    // Task의 순서를 데이터베이스에 업데이트
    UpdateDatabaseWithNewOrder(reorderedTasks);
}

// 순서 업데이트 함수
private void UpdateDatabaseWithNewOrder(ObservableCollection<TaskModel> tasks)
{
    // 각 TaskModel의 Priority 또는 순서 컬럼을 업데이트
    for (int i = 0; i < tasks.Count; i++)
    {
        tasks[i].Priority = i + 1;  // 새로운 순서 반영
        SaveTaskToDatabase(tasks[i]);  // DB에 업데이트
    }
}

// 데이터베이스 업데이트 메서드 예시
private void SaveTaskToDatabase(TaskModel task)
{
    // 데이터베이스 연결 및 업데이트 로직
    using (var connection = new SqlConnection("your_connection_string"))
    {
        connection.Open();
        var command = new SqlCommand("UPDATE Tasks SET Priority = @Priority WHERE Id = @Id", connection);
        command.Parameters.AddWithValue("@Priority", task.Priority);
        command.Parameters.AddWithValue("@Id", task.Id);
        command.ExecuteNonQuery();
    }
}
설명
OnRowDrop 이벤트 핸들러: 드래그 앤 드롭이 완료된 시점에 호출됩니다. 여기서 ObservableCollection에 저장된 순서대로 데이터를 읽어와 데이터베이스에 업데이트합니다.
UpdateDatabaseWithNewOrder 메서드: 컬렉션을 순회하면서 각 TaskModel의 새로운 Priority 값을 설정하고 SaveTaskToDatabase 메서드로 데이터베이스에 저장합니다.
SaveTaskToDatabase 메서드: SQL 업데이트 명령을 사용하여 각 작업의 새로운 순서를 데이터베이스에 반영합니다.
이제 드래그 앤 드롭 후 자동으로 새로운 순서가 데이터베이스에 업데이트됩니다. 추가적인 요청 사항이 있으면 말씀해 주세요.











