WPF에서 특정 IP 값이 리스트에 포함되는지 확인하여 XAML 컨트롤의 Visibility 속성을 변경하려면 IValueConverter를 사용하여 리스트의 조건에 따라 Visibility를 설정하는 것이 좋습니다. 아래는 이 기능을 구현하는 코드입니다.

Converter 생성: IPVisibilityConverter 클래스를 작성하여, IP 리스트에 포함 여부에 따라 Visibility를 반환합니다.

ViewModel에 IP 리스트 추가: ViewModel에서 IP 리스트를 관리합니다.

XAML에서 Converter 사용: XAML에서 컨버터를 활용하여 Visibility를 바인딩합니다.

Step 1: IP 리스트를 관리하는 ViewModel
csharp
코드 복사
using System.Collections.ObjectModel;

public class MainViewModel
{
    // IP 주소를 포함하는 리스트
    public ObservableCollection<string> AllowedIPs { get; set; }

    // 현재의 IP 주소
    public string CurrentIP { get; set; }

    public MainViewModel()
    {
        // 리스트 초기화
        AllowedIPs = new ObservableCollection<string> { "192.168.0.1", "10.0.0.1" };
        // 예제 IP 설정
        CurrentIP = "192.168.0.1";
    }
}
Step 2: IPVisibilityConverter 생성
csharp
코드 복사
using System;
using System.Collections.ObjectModel;
using System.Globalization;
using System.Windows;
using System.Windows.Data;

public class IPVisibilityConverter : IValueConverter
{
    public object Convert(object value, Type targetType, object parameter, CultureInfo culture)
    {
        // 리스트와 현재 IP를 받아와서 리스트에 포함되는지 확인
        if (value is Tuple<ObservableCollection<string>, string> ipData)
        {
            var allowedIPs = ipData.Item1;
            var currentIP = ipData.Item2;

            // 리스트에 IP가 있으면 Visible, 없으면 Collapsed 반환
            return allowedIPs.Contains(currentIP) ? Visibility.Visible : Visibility.Collapsed;
        }

        return Visibility.Collapsed;
    }

    public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)
    {
        throw new NotImplementedException();
    }
}
Step 3: XAML에서 IP 리스트와 현재 IP를 전달하여 Visibility 바인딩
MainWindow.xaml의 Resources에 Converter를 추가하고, XAML 컨트롤에 Visibility 속성을 설정합니다.

xml
코드 복사
<Window x:Class="YourNamespace.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:YourNamespace"
        Title="MainWindow" Height="350" Width="525">
    <Window.Resources>
        <!-- Converter 등록 -->
        <local:IPVisibilityConverter x:Key="IPVisibilityConverter"/>
    </Window.Resources>
    
    <Grid DataContext="{Binding MainViewModel}">
        <!-- Visibility 속성을 IP 리스트에 따라 설정 -->
        <TextBlock Text="Visible when IP is allowed"
                   Visibility="{Binding DataContext, 
                                Converter={StaticResource IPVisibilityConverter}, 
                                RelativeSource={RelativeSource AncestorType=Window}}"/>
    </Grid>
</Window>
Step 4: 코드 바인딩 설정
MainWindow.xaml.cs에서 ViewModel을 설정해 바인딩합니다.

csharp
코드 복사
public partial class MainWindow : Window
{
    public MainViewModel ViewModel { get; set; }

    public MainWindow()
    {
        InitializeComponent();
        ViewModel = new MainViewModel();
        DataContext = ViewModel;
    }