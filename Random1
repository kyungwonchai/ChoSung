PF에서 DevExpress GridControl을 사용하여 특정 조건에 따라 셀을 비활성화하고 배경색을 변경하는 방법을 설명드리겠습니다. 이 예제에서는 귀책부서 컬럼이 부서공통으로 설정된 경우, 같은 행의 발생사유와 조치내역 컬럼을 비활성화하고 배경색을 회색으로 설정합니다.

1. XAML 설정
먼저, GridControl의 XAML 정의를 작성합니다.

xml
코드 복사
<Window x:Class="YourNamespace.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
        xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
        Title="MainWindow" Height="350" Width="525">
    <Grid>
        <dxg:GridControl x:Name="gridControl">
            <dxg:GridControl.Columns>
                <dxg:GridColumn FieldName="귀책부서" Header="귀책부서">
                    <dxg:GridColumn.EditSettings>
                        <dxe:ComboBoxEditSettings ItemsSource="{Binding DepartmentList}"/>
                    </dxg:GridColumn.EditSettings>
                </dxg:GridColumn>
                <dxg:GridColumn FieldName="발생사유" Header="발생사유">
                    <dxg:GridColumn.EditSettings>
                        <dxe:TextEditSettings Name="발생사유TextEdit"/>
                    </dxg:GridColumn.EditSettings>
                </dxg:GridColumn>
                <dxg:GridColumn FieldName="조치내역" Header="조치내역">
                    <dxg:GridColumn.EditSettings>
                        <dxe:TextEditSettings Name="조치내역TextEdit"/>
                    </dxg:GridColumn.EditSettings>
                </dxg:GridColumn>
            </dxg:GridControl.Columns>
        </dxg:GridControl>
    </Grid>
</Window>
2. C# 코드 설정
XAML에서 정의한 GridControl에 대해 조건에 따라 특정 셀의 편집을 비활성화하고 배경색을 회색으로 설정하는 코드를 작성합니다.

csharp
코드 복사
using DevExpress.Xpf.Grid;
using System.Windows;
using System.Windows.Media;

namespace YourNamespace
{
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
            
            // 샘플 데이터 추가
            gridControl.ItemsSource = new[]
            {
                new { 귀책부서 = "부서A", 발생사유 = "사유1", 조치내역 = "내역1" },
                new { 귀책부서 = "부서공통", 발생사유 = "사유2", 조치내역 = "내역2" },
            };
            
            gridControl.View.CellValueChanged += View_CellValueChanged;
            gridControl.View.CustomRowCellEdit += View_CustomRowCellEdit;
            gridControl.View.CustomRowCellEditForEditing += View_CustomRowCellEdit;
        }

        private void View_CellValueChanged(object sender, CellValueChangedEventArgs e)
        {
            if (e.Column.FieldName == "귀책부서")
            {
                gridControl.View.RefreshRow(e.RowHandle);
            }
        }

        private void View_CustomRowCellEdit(object sender, CustomRowCellEditEventArgs e)
        {
            var department = (string)((GridControl)sender).GetRow(e.RowHandle).GetType().GetProperty("귀책부서").GetValue(((GridControl)sender).GetRow(e.RowHandle), null);

            if (department == "부서공통" && (e.Column.FieldName == "발생사유" || e.Column.FieldName == "조치내역"))
            {
                e.RepositoryItem = new dxe::TextEditSettings
                {
                    IsEnabled = false,
                    Background = new SolidColorBrush(Colors.LightGray)
                };
            }
        }
    }
}
3. 코드 설명
CustomRowCellEdit 이벤트:

이 이벤트를 통해 행이 렌더링될 때마다 특정 조건에 따라 셀의 편집 설정을 커스터마이징합니다.
귀책부서 컬럼이 "부서공통"인 경우, 해당 행의 발생사유와 조치내역 컬럼의 셀을 비활성화하고 배경색을 회색으로 설정합니다.
CellValueChanged 이벤트:

사용자가 귀책부서 컬럼의 값을 변경할 때마다 해당 행을 새로고침하여 편집 설정이 올바르게 적용되도록 합니다.
배경색 설정:

SolidColorBrush를 사용하여 셀의 배경색을 회색(또는 원하는 색상)으로 설정합니다.
이렇게 설정하면, 귀책부서 컬럼이 "부서공통"인 경우 발생사유와 조치내역 셀의 편집을 비활성화하고 배경색을 회색으로 변경할 수 있습니다. 이 설정은 GridControl이 행 단위로 데이터를 렌더링할 때 자동으로 적용됩니