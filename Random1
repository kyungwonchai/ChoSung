이미지의 좌측상단, 우측상단, 좌측하단, 우측하단에 워터마크를 추가하는 작업은 Graphics 객체를 사용하여 각각의 위치에 텍스트를 그리는 것으로 구현할 수 있습니다. 각 위치에 따라 StringFormat을 적절히 설정하여 텍스트의 정렬을 조정합니다.

다음은 네 군데 모든 위치에 워터마크를 추가하는 예시 코드입니다:

csharp
Copy code
private void UpdateImageWithWatermarks()
{
    string watermarkText = "변수 ABC의 값"; // 워터마크 텍스트
    string imagePath = "path/to/your/image.jpg"; // 원본 이미지 경로

    Bitmap bitmap = new Bitmap(imagePath);
    using (Graphics graphics = Graphics.FromImage(bitmap))
    {
        Font font = new Font("Arial", 15, System.Drawing.FontStyle.Bold);
        Brush brush = new SolidBrush(Color.White);

        // 좌측 상단
        DrawWatermark(graphics, watermarkText, font, brush, new PointF(0, 0), StringAlignment.Near);

        // 우측 상단
        DrawWatermark(graphics, watermarkText, font, brush, new PointF(bitmap.Width, 0), StringAlignment.Far);

        // 좌측 하단
        DrawWatermark(graphics, watermarkText, font, brush, new PointF(0, bitmap.Height), StringAlignment.Near);

        // 우측 하단
        DrawWatermark(graphics, watermarkText, font, brush, new PointF(bitmap.Width, bitmap.Height), StringAlignment.Far);
    }

    BitmapImage bitmapImage = ConvertBitmapToBitmapImage(bitmap);
    imageControl.Source = bitmapImage;
}

private void DrawWatermark(Graphics graphics, string text, Font font, Brush brush, PointF point, StringAlignment alignment)
{
    StringFormat format = new StringFormat
    {
        Alignment = alignment,
        LineAlignment = alignment
    };

    graphics.DrawString(text, font, brush, point, format);
}
이 코드에서 DrawWatermark 메소드는 주어진 위치와 정렬에 따라 텍스트를 그리는 기능을 합니다. StringFormat 객체를 사용하여 텍스트의 수평 및 수직 정렬을 설정합니다. 각 위치에 대해 PointF를 조정하여 워터마크의 위치를 정의할 수 