private void AnalyzeFolders(string path, bool isRootCall)
{
    try
    {
        DirectoryInfo rootDir = new DirectoryInfo(path);
        foreach (DirectoryInfo dir in rootDir.GetDirectories())
        {
            // 폴더의 마지막 수정 시간을 재귀적으로 확인하여 가장 최신의 수정 시간을 구한다
            DateTime latestModification = GetLatestModificationDate(dir);

            // 최신 수정 날짜가 10일 이내인 경우에만 폴더 검사를 계속함
            if (DateTime.Now.Subtract(latestModification).TotalDays > 10)
            {
                continue;  // 마지막 수정 시간이 10일 이전인 경우 검사하지 않음
            }

            folderCount++;
            UpdateFolderCount();  // 라벨 업데이트 함수 호출

            try
            {
                long size = CalculateFolderSize(dir);
                if (size >= 1073741824) // 1GB 이상
                {
                    DateTime lastModified = GetMostRecentFileDate(dir);
                    string info = $"{dir.FullName} ({size} bytes) - Last Modified: {lastModified.ToString("yyyy-MM-dd HH:mm:ss")}";
                    Application.Current.Dispatcher.Invoke(() => UpdateListBoxes(info, lastModified));
                }
                AnalyzeFolders(dir.FullName, false);  // 하위 폴더 검사 계속 진행
            }
            catch (UnauthorizedAccessException)
            {
                continue;
            }
        }

        if (isRootCall)
        {
            Application.Current.Dispatcher.Invoke(() => UpdateListBox1("분석 완료"));
        }
    }
    catch (Exception ex)
    {
        MessageBox.Show($"An error occurred: {ex.Message}");
    }
}

private DateTime GetLatestModificationDate(DirectoryInfo directory)
{
    DateTime latestDate = directory.LastWriteTime;

    // 모든 하위 파일들의 최신 수정 날짜를 확인
    foreach (var file in directory.GetFiles("*", SearchOption.AllDirectories))
    {
        if (file.LastWriteTime > latestDate)
        {
            latestDate = file.LastWriteTime;
        }
    }

    // 모든 하위 폴더에 대해 재귀적으로 최신 수정 날짜를 확인
    foreach (var subDir in directory.GetDirectories())
    {
        DateTime subDirDate = GetLatestModificationDate(subDir);
        if (subDirDate > latestDate)
        {
            latestDate = subDirDate;
        }
    }

    return latestDate;
}
