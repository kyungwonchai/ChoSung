위에 제공된 코드는 일반적인 구조와 개념을 보여주는 예시입니다. 실제로 작동하는 애플리케이션을 만들기 위해서는 추가적인 구성과 코드 작성이 필요합니다. 아래에는 각 단계를 좀 더 구체적으로 설명합니다.

데이터 수집
먼저, 파이썬을 사용하여 데이터를 MSSQL로부터 가져옵니다. 이를 위해 pyodbc 패키지가 필요합니다.
sh
Copy code
pip install pyodbc
이제 파이썬을 사용하여 데이터베이스에 연결하고 데이터를 가져옵니다.

python
Copy code
import pyodbc
import pandas as pd

connection = pyodbc.connect("DRIVER={SQL Server};SERVER=your_server;DATABASE=your_database;UID=your_username;PWD=your_password")
query = "SELECT [업체 PN] FROM PLM부품"
data = pd.read_sql(query, connection)
모델 학습
scikit-learn을 사용하여 TF-IDF 벡터화를 수행하고 결과를 저장합니다. 이를 위해 먼저 scikit-learn을 설치해야 합니다.
sh
Copy code
pip install scikit-learn
그런 다음 모델을 학습시키고 저장합니다.

python
Copy code
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import linear_kernel
import joblib

vectorizer = TfidfVectorizer()
tfidf_matrix = vectorizer.fit_transform(data['업체 PN'])

joblib.dump(vectorizer, 'vectorizer.pkl')
joblib.dump(tfidf_matrix, 'tfidf_matrix.pkl')
모델 통합
C# 애플리케이션 내에서 파이썬 스크립트를 실행하기 위해 IronPython을 사용합니다. 이를 위해 NuGet을 사용하여 IronPython을 설치해야 합니다.
C# 코드에서 파이썬 스크립트를 로드하고 함수를 호출합니다. 아래 코드는 예시로, 파이썬 함수 get_similarity를 호출합니다. 이 함수는 입력 텍스트와 유사한 아이템을 찾아 반환합니다.

csharp
Copy code
using IronPython.Hosting;
using Microsoft.Scripting.Hosting;

ScriptEngine engine = Python.CreateEngine();
ScriptScope scope = engine.CreateScope();
engine.ExecuteFile("path_to_python_script.py", scope);
dynamic getSimilarity = scope.GetVariable("get_similarity");

string userInput = "user input from textbox";
List<string> similarItems = getSimilarity(userInput);
사용자 인터페이스
C# WinForms나 WPF를 사용하여 사용자 인터페이스를 생성합니다. 텍스트 입력 상자와 검색 버튼이 있어야 하며, 결과는 리스트 박스에 표시됩니다.
csharp
Copy code
private void searchButton_Click(object sender, EventArgs e)
{
    string userInput = inputTextBox.Text;
    List<string> similarItems = getSimilarity(userInput);
    
    resultsListBox.Items.Clear();
    foreach(var item in similarItems)
    {
        resultsListBox.Items




User
이어주세요
ChatGPT
아, 죄송합니다. 코드가 잘렸군요. 아래는 이어지는 부분입니다.

csharp
Copy code
        resultsListBox.Items.Add(item);
    }
}
이렇게 하면 사용자가 텍스트를 입력하고 검색 버튼을 누르면 유사한 항목이 결과 리스트 박스에 표시됩니다.

파이썬 함수 작성
앞서 언급한 파이썬 함수 get_similarity를 작성해야 합니다. 이 함수는 입력 텍스트를 받아 유사한 항목을 반환합니다.
파이썬 파일에 다음 함수를 추가하세요.

python
Copy code
def get_similarity(input_text):
    vectorizer = joblib.load('vectorizer.pkl')
    tfidf_matrix = joblib.load('tfidf_matrix.pkl')
    
    input_vectorized = vectorizer.transform([input_text])
    cosine_similarities = linear_kernel(input_vectorized, tfidf_matrix).flatten()
    
    # 유사도가 높은 순으로 정렬
    related_indices = cosine_similarities.argsort()[:-6:-1]
    
    # 결과 리스트 초기화
    similar_items = []
    
    for index in related_indices:
        similar_items.append(data['업체 PN'].iloc[index])
    
    return similar_items
프로젝트 실행
이제 C# 애플리케이션을 실행해 보세요. 사용자 인터페이스를 통해 텍스트를 입력하고 검색 버튼을 누르면, 파이썬 함수가 호출되어 유사한 항목들을 찾고, 그 결과가 리스트 박스에 표시됩니다.
주의사항:

이 코드는 예시를 위한 것이며, 실제 프로덕션 환경에서 사용하기 전에 추가적인 에러 처리, 최적화, 보안 고려사항 등을 반영해야 합니다.
데이터베이스 연결 정보 (서버 이름, 사용자 이름, 비밀번호 등)를 코드에 직접 적지 말고, 보안을 위해 별도의 설정 파일이나 환경 변수를 사용하세요.