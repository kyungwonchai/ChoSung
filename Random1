x를 사용하지 않고 포트 8111로 들어오는 요청을 포트 8000으로 리다이렉트하는 다른 방법은 iptables를 이용하는 것입니다. iptables는 리눅스 커널의 방화벽 및 네트워크 트래픽 제어 도구로, 포트 포워딩과 같은 작업을 설정할 수 있습니다.

방법 1: iptables를 사용한 포트 포워딩 설정
iptables를 사용하여 포트 8111로 들어오는 요청을 포트 8000으로 포워딩하는 방법입니다.

1. iptables 명령어를 사용하여 포트 포워딩 설정
bash
코드 복사
sudo iptables -t nat -A PREROUTING -p tcp --dport 8111 -j REDIRECT --to-port 8000
-t nat: NAT(Network Address Translation) 테이블을 지정합니다. 포트 포워딩은 NAT 테이블의 일부입니다.
-A PREROUTING: 들어오는 트래픽을 처리하기 위해 PREROUTING 체인에 규칙을 추가합니다.
-p tcp --dport 8111: TCP 프로토콜의 포트 8111에서 들어오는 패킷에 대해 규칙을 적용합니다.
-j REDIRECT --to-port 8000: 해당 패킷을 포트 8000으로 리다이렉트합니다.
2. iptables 설정 확인
설정이 제대로 되었는지 확인하려면 다음 명령어를 사용합니다.

bash
코드 복사
sudo iptables -t nat -L -n -v
이 명령어는 NAT 테이블의 규칙을 표시합니다. 포트 8111에서 포트 8000으로 리다이렉트하는 규칙이 포함되어 있는지 확인합니다.

3. iptables 규칙 저장
우분투에서 시스템을 재부팅하면 iptables 규칙이 사라질 수 있으므로, 규칙을 영구적으로 저장해야 합니다. 우분투에서는 iptables-persistent 패키지를 사용하여 이를 간단히 설정할 수 있습니다.

bash
코드 복사
sudo apt install iptables-persistent
설치 후 설정을 저장합니다.

bash
코드 복사
sudo netfilter-persistent save
규칙이 영구적으로 저장되었는지 확인하려면 시스템을 재부팅한 후에도 규칙이 유지되는지 확인합니다.

방법 2: Flask 애플리케이션에서 직접 리다이렉트 설정
Flask 애플리케이션 자체에서 포트 8111로 요청이 들어올 때 8000으로 리다이렉트하도록 설정하는 방법입니다. Flask 자체 코드에서 리다이렉트를 처리할 수 있습니다.

1. Flask 코드 수정
Flask 앱에 리다이렉트를 추가하려면 아래와 같이 라우트를 하나 더 추가합니다.

python
코드 복사
from flask import Flask, redirect, request

app = Flask(__name__)

@app.before_request
def redirect_to_port_8000():
    # 포트 8111에서 요청이 들어오는지 확인합니다.
    if request.host.split(":")[1] == '8111':
        # 포트 8000으로 리다이렉트합니다.
        return redirect(f"http://{request.host.split(':')[0]}:8000{request.path}", code=302)

@app.route('/')
def home():
    return "Hello, Flask is running on port 8000!"

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=8000)
@app.before_request: 이 데코레이터는 모든 요청이 처리되기 전에 실행되는 함수를 지정합니다.
redirect_to_port_8000 함수: request.host에서 포트를 확인하고, 포트 8111로 요청이 들어오면 포트 8000으로 리다이렉트합니다.
이 코드에서는 Flask가 포트 8000에서 실행되고 있으므로, 포트 8111로 접근하면 자동으로 8000으로 리다이렉트됩니다.
2. Flask 애플리케이션 실행
bash
코드 복사
flask run --host=0.0.0.0 --port=8000
이제 http://<서버 IP>:8111로 접근하면 http://<서버 IP>:8000으로 자동 리다이렉트됩니다.

방법 3: 시스템 레벨의 포트 포워딩 설정 (sysctl과 iptables 결합)
만약 iptables 사용이 어렵거나 복잡한 네트워크 설정이 필요하다면, **sysctl**과 **iptables**를 함께 사용할 수 있습니다.

1. IP 포워딩 활성화
리눅스 시스템에서 IP 포워딩을 활성화해야 합니다.

bash
코드 복사
sudo sysctl -w net.ipv4.ip_forward=1
영구적으로 설정하려면 /etc/sysctl.conf 파일을 수정하여 아래 줄을 추가하거나 주석 해제합니다.

bash
코드 복사
net.ipv4.ip_forward = 1
2. iptables 규칙 추가
이제 iptables를 사용하여 포트 포워딩을 설정합니다.

bash
코드 복사
sudo iptables -t nat -A PREROUTING -p tcp --dport 8111 -j DNAT --to-destination 127.0.0.1:8000
sudo iptables -t nat -A POSTROUTING -j MASQUERADE
첫 번째 명령은 포트 8111으로 들어오는 모든 요청을 127.0.0.1:8000으로 포워딩합니다.
두 번째 명령은 NAT 변환을 통해 외부에서 들어오는 요청이 로컬로 전달될 수 있도록 합니다.
3. 규칙 저장
bash
코드 복사
sudo netfilter-persistent save
이렇게 설정하면 우분투 시스템에서 Flask 서버로의 포트 포워딩이 설정되고, 모든 요청이 포트 8111에서 포트 8000으로 자동 리다이렉트됩니다.

결론
Nginx: 가장 강력하고 유연한 리버스 프록시 방식 (이전 답변에서 설명).
iptables: Nginx 없이 간단히 포트 포워딩을 설정하는 방법.