private async Task MonitorAndDisplayFilesToDelete(string folderPath, string fileExtension, string driveName)
{
    while (true)
    {
        try
        {
            long freeSpace = await Task.Run(() => _fileCleaner.GetDriveFreeSpace(driveName));
            List<FileInfo> filesToDelete;

            if (freeSpace <= MinimumFreeSpace)
            {
                filesToDelete = await Task.Run(() => _fileCleaner.GetFilesToDelete(folderPath, fileExtension, forceDelete: true));
                _logger.LogRecentActivity($"용량이 {freeSpace / (1024 * 1024 * 1024)} GB 남아서 강제 삭제를 진행합니다.");
            }
            else
            {
                filesToDelete = await Task.Run(() => _fileCleaner.GetFilesToDelete(folderPath, fileExtension));
                if (filesToDelete.Count > 0)
                {
                    _logger.LogRecentActivity("삭제를 진행합니다.");
                }
            }

            Dispatcher.Invoke(() => DisplayFilesToDelete(filesToDelete));
            await _fileCleaner.DeleteFilesAsync(filesToDelete, folderPath, forceDelete: freeSpace <= MinimumFreeSpace);

            await Task.Run(() => _fileCleaner.UpdateFolderStatistics(folderPath, fileExtension));
            await Task.Delay(TimeSpan.FromMinutes(10)); // 10분마다 체크
        }
        catch (Exception ex)
        {
            _logger.LogError("모니터링 중 오류 발생: " + ex.Message);
        }
    }
}
