히 4칸의 공백 또는 알파벳, 숫자, 하이픈(-)으로 이루어진 문자열을 반드시 포함하고, 이 두 가지 중 하나를 매칭하려면 다음과 같은 정규식을 사용할 수 있습니다:

정규식 패턴 설명:
\s{4}: 정확히 4개의 공백을 매칭합니다.
[a-zA-Z0-9-]+: 하나 이상의 알파벳(대소문자), 숫자, 하이픈으로 이루어진 문자열을 매칭합니다.
이 두 가지 조건 중 하나가 포함된 문자열을 찾기 위해, 정규식을 | 연산자를 사용하여 결합할 수 있습니다. 하지만, 반드시 두 가지 중 하나를 포함해야 한다고 하셨으므로, 정규식을 통해 조건을 더 정확하게 표현할 필요가 있습니다.

정규식 패턴:
csharp
코드 복사
string pattern = @"(?=.*(\s{4}|[a-zA-Z0-9-]+))(\s{4}|[a-zA-Z0-9-]+)";
이 정규식은 다음과 같이 작동합니다:

(?=.*(\s{4}|[a-zA-Z0-9-]+)): 앞쪽에 정확히 4칸의 공백 또는 알파벳, 숫자, 하이픈으로 이루어진 문자열이 존재해야 합니다.
(\s{4}|[a-zA-Z0-9-]+): 정확히 4칸의 공백 또는 알파벳, 숫자, 하이픈으로 이루어진 문자열을 찾습니다.
C# 예제 코드:
아래는 정규식을 사용하여 조건에 맞는 문자열을 찾는 C# 코드입니다:

csharp
코드 복사
using System;
using System.Text.RegularExpressions;

class Program
{
    static void Main()
    {
        string input = "    abc-123 XYZ-789    test 1234----"; // 테스트 문자열
        string pattern = @"(?=.*(\s{4}|[a-zA-Z0-9-]+))(\s{4}|[a-zA-Z0-9-]+)"; // 정규식 패턴

        MatchCollection matches = Regex.Matches(input, pattern);

        foreach (Match match in matches)
        {
            Console.WriteLine($"매칭된 문자열: '{match.Value}'");
        }
    }
}
코드 설명:
string input: 검사할 테스트 문자열입니다.
string pattern: 정규식 패턴입니다. 정확히 4개의 공백이나 알파벳, 숫자, 하이픈으로 이루어진 문자열을 포함해야 하는 조건을 정의합니다.
Regex.Matches(input, pattern): 입력 문자열에서 패턴에 맞는 모든 매칭 결과를 찾습니다.
foreach 루프: 모든 매칭된 문자열을 출력합니다.
이 코드는 입력된 문자열에서 정확히 4개의 공백이나 알파벳, 숫자, 하이픈으로 이루어진 문자열을 반드시 포함하는 경우, 해당 부분을 출력합니