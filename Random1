파일을 Visual Studio 디자이너에서 직접 선택할 수 없다고 하셨으니, 코드에서 직접 리소스를 연결하는 방법을 사용해야 할 것 같습니다. Visual Studio 디자이너에서는 컨트롤의 속성에 리소스 파일을 직접 연결하는 UI가 없을 수 있으므로, 프로그램 코드에서 리소스 파일을 연결하는 방법을 안내드리겠습니다.

리소스 파일을 이용한 다국어 처리 방법 (코드에서 직접 처리)
1. 리소스 파일 추가
프로젝트에 리소스 파일을 추가합니다:

프로젝트를 우클릭 > 추가(Add) > 새 항목(New Item) > **리소스 파일(Resource File)**을 선택합니다.
기본 언어를 위한 파일은 Strings.resx로 추가하고, 한국어를 위한 파일은 Strings.ko.resx로 추가합니다.
리소스 파일에 문자열 추가:

Strings.resx: 기본적으로 영어 문자열을 입력합니다.
Greeting: Hello
Farewell: Goodbye
Strings.ko.resx: 한국어 문자열을 입력합니다.
Greeting: 안녕하세요
Farewell: 안녕히 가세요
2. WinForms 코드에서 리소스 적용하기
리소스 파일에서 다국어 문자열을 불러와서 버튼이나 라벨 같은 컨트롤에 설정하는 방법을 코드로 처리합니다.

csharp
코드 복사
using System.Globalization;
using System.Resources;
using System.Threading;
using System.Windows.Forms;

namespace WinFormsMultiLang
{
    public partial class MainForm : Form
    {
        // 리소스 매니저 선언
        ResourceManager resManager;
        CultureInfo cultureInfo;

        public MainForm()
        {
            InitializeComponent();

            // 리소스 매니저 초기화 (Namespace는 프로젝트 이름으로 수정 필요)
            resManager = new ResourceManager("WinFormsMultiLang.Strings", typeof(MainForm).Assembly);

            // 기본 언어 설정 (영어로 설정)
            cultureInfo = CultureInfo.CurrentCulture;

            // 폼 로드시 리소스 적용
            ApplyLocalization();
        }

        // 다국어 적용 함수
        private void ApplyLocalization()
        {
            // 버튼이나 라벨에 리소스 값을 적용
            button1.Text = resManager.GetString("Greeting", cultureInfo);
            label1.Text = resManager.GetString("Farewell", cultureInfo);
        }

        // 언어 변경 (예: 한국어로 변경)
        private void ChangeLanguage(string culture)
        {
            cultureInfo = new CultureInfo(culture);
            Thread.CurrentThread.CurrentUICulture = cultureInfo;
            ApplyLocalization(); // 새로운 언어로 리소스 재적용
        }

        // 이벤트 핸들러 예시: 한국어로 변경하는 버튼 클릭 시
        private void buttonChangeToKorean_Click(object sender, EventArgs e)
        {
            ChangeLanguage("ko");
        }

        // 이벤트 핸들러 예시: 영어로 변경하는 버튼 클릭 시
        private void buttonChangeToEnglish_Click(object sender, EventArgs e)
        {
            ChangeLanguage("en");
        }
    }
}
3. 각 컨트롤에 리소스 적용
위 코드에서는 ApplyLocalization() 함수에서 각 컨트롤의 Text 속성을 리소스 파일에서 가져와 설정하고 있습니다.

resManager.GetString("Greeting", cultureInfo)를 통해 Greeting 키에 해당하는 문자열을 현재 문화권(CultureInfo)에 맞춰 가져와 button1.Text에 설정합니다.
동일하게 Farewell 키를 사용하여 라벨의 텍스트도 다국어로 설정합니다.
4. 실행 시 언어 변경
한국어로 변경: ChangeLanguage("ko") 메서드를 호출하면 한국어 리소스(Strings.ko.resx)가 적용되고, 버튼과 라벨의 텍스트가 각각 "안녕하세요", "안녕히 가세요"로 변경됩니다.
영어로 변경: ChangeLanguage("en")을 호출하면 영어 리소스(Strings.resx)가 적용되어 "Hello", "Goodbye"로 변경됩니다.