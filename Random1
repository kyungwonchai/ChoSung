겠습니다. MySQL에서 주기적으로 데이터를 삭제하는 작업은 MySQL Event Scheduler를 사용하여 등록할 수 있으며, 등록된 작업 목록과 세부 내용을 보는 쿼리도 함께 알려드리겠습니다.

1. MySQL Event Scheduler를 사용하여 주기적으로 데이터 삭제하기

MySQL Event Scheduler는 특정 시간에 또는 주기적으로 SQL 문이나 스토어드 프로시저를 실행할 수 있게 해주는 기능입니다.

1.1 Event Scheduler 활성화 확인 및 설정

먼저 Event Scheduler가 활성화되어 있는지 확인하고, 비활성화되어 있다면 활성화해야 합니다.

상태 확인:

SQL

SHOW VARIABLES LIKE 'event_scheduler';
Value가 ON이면 활성화된 상태입니다. OFF라면 활성화해야 합니다.

활성화 (권한 필요):

SQL

SET GLOBAL event_scheduler = ON;
이 설정은 MySQL 서버 재시작 시 유지되지 않을 수 있습니다. 서버 재시작 후에도 계속 활성화하려면 MySQL 설정 파일 (my.cnf 또는 my.ini)의 [mysqld] 섹션에 다음 줄을 추가해야 합니다:

Ini, TOML

event_scheduler=ON
1.2 주기적 삭제 이벤트 생성 예시

매일 특정 시간에 3개월 이전 데이터를 삭제하는 이벤트를 생성하는 예시입니다. 지난번 "Lost connection" 오류를 경험하셨으므로, 이벤트 내에서 실행되는 DELETE 문도 한 번에 너무 많은 행을 삭제하지 않도록 LIMIT를 사용하는 것이 좋습니다. 또는 지난번에 안내해 드린 배치 삭제용 스토어드 프로시저를 호출하는 것이 더 안정적일 수 있습니다.

예시 1: 이벤트에서 직접 LIMIT를 사용하여 삭제

SQL

CREATE EVENT delete_old_data_periodically
ON SCHEDULE EVERY 1 DAY  -- 매일 실행
STARTS CURRENT_TIMESTAMP + INTERVAL 1 HOUR -- 예: 지금으로부터 1시간 뒤에 시작해서 매일 같은 시간에 실행
DO
  DELETE FROM your_table_name
  WHERE your_date_column < DATE_SUB(CURDATE(), INTERVAL 3 MONTH)
  LIMIT 10000; -- 한 번 실행 시 삭제할 최대 행 수 (서버 부하 및 타임아웃 고려하여 조절)
your_table_name과 your_date_column을 실제 테이블명과 컬럼명으로 변경하세요.
LIMIT 10000: 이 값은 서버 환경, 테이블 크기, 삭제되는 데이터 양에 따라 적절히 조절해야 합니다. 너무 크면 이벤트 실행 중 타임아웃이 발생할 수 있습니다.
STARTS: 이벤트가 처음 시작될 시간을 지정합니다. 예시에서는 지금으로부터 1시간 뒤로 설정했지만, STARTS 'YYYY-MM-DD HH:MM:SS'와 같이 특정 날짜/시간으로 지정할 수도 있습니다. 예를 들어, 매일 새벽 2시에 실행하려면 STARTS DATE_FORMAT(CURDATE() + INTERVAL 1 DAY, '%Y-%m-%d 02:00:00') 또는 STARTS CURDATE() + INTERVAL 1 DAY + INTERVAL 2 HOUR 와 같이 설정할 수 있습니다.
예시 2: 배치 삭제용 스토어드 프로시저 호출 (더 안정적)

지난번 답변에서 DeleteOldDataInBatches라는 이름의 스토어드 프로시저를 만들었다고 가정합니다.

SQL

-- (DeleteOldDataInBatches 프로시저가 아직 없다면 먼저 생성해야 합니다)
DELIMITER $$
CREATE PROCEDURE DeleteOldDataInBatches(IN batch_size INT)
BEGIN
    DECLARE rows_affected INT;
    SET rows_affected = batch_size;
    WHILE rows_affected = batch_size DO
        DELETE FROM your_table_name
        WHERE your_date_column < DATE_SUB(CURDATE(), INTERVAL 3 MONTH)
        LIMIT batch_size;
        SET rows_affected = ROW_COUNT();
        -- DO SLEEP(0.5); -- 필요시 약간의 딜레이 (0.5초)
    END WHILE;
END$$
DELIMITER ;

-- 이벤트 생성 (프로시저 호출)
CREATE EVENT delete_old_data_via_procedure
ON SCHEDULE EVERY 1 DAY
STARTS CURRENT_TIMESTAMP + INTERVAL 1 DAY + INTERVAL 2 HOUR -- 예: 내일 새벽 2시부터 매일 실행
DO
  CALL DeleteOldDataInBatches(5000); -- 프로시저 호출 시 배치 크기 전달 (예: 5000건씩)
CALL DeleteOldDataInBatches(5000); : 여기서 5000은 프로시저 내에서 한 번에 삭제할 행의 수입니다. 적절히 조절하세요.
2. 등록된 작업(이벤트) 목록 보기

MySQL에 등록된 모든 이벤트를 보려면 다음 쿼리를 사용합니다:

SQL

SHOW EVENTS;
또는 INFORMATION_SCHEMA 데이터베이스를 직접 쿼리할 수도 있습니다:

SQL

SELECT * FROM INFORMATION_SCHEMA.EVENTS;
이 쿼리는 이벤트에 대한 더 많은 세부 정보를 보여줍니다.

3. 특정 작업(이벤트)의 세부 내용 보기

특정 이벤트의 생성 구문(세부 설정)을 보려면 다음 쿼리를 사용합니다:

SQL

SHOW CREATE EVENT your_event_name;
your_event_name을 확인하고 싶은 실제 이벤트의 이름으로 변경하세요. 예를 들어, 위에서 delete_old_data_periodically라는 이름으로 이벤트를 생성했다면:
SQL

SHOW CREATE EVENT delete_old_data_periodically;
이벤트 수정 및 삭제:

이벤트 수정: ALTER EVENT 사용 (예: ALTER EVENT your_event_name ON SCHEDULE EVERY 2 DAY;)