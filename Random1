ollection의 마지막 항목만 선택하도록 필터링할 수 있습니다. 이를 위해 OnFilter 이벤트 핸들러에서 ObservableCollection의 길이를 확인하고, 마지막 항목에 해당하는 아이템만 통과시켜야 합니다.

1. XAML 설정
기본적인 XAML 설정은 이전과 동일합니다. 여기서 중요한 부분은 CollectionViewSource에 필터링 로직을 적용하여 마지막 항목만 선택하는 것입니다.

XAML 코드:
xml
코드 복사
<Window x:Class="YourNamespace.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="MainWindow" Height="350" Width="525">
    <Window.DataContext>
        <local:MainViewModel />
    </Window.DataContext>

    <Window.Resources>
        <!-- CollectionViewSource 정의 -->
        <CollectionViewSource x:Key="FilteredItems" Source="{Binding ItemsA}" Filter="OnFilter" />
    </Window.Resources>

    <Grid>
        <!-- 부모 데이터 바인딩 -->
        <ItemsControl ItemsSource="{Binding Source={StaticResource FilteredItems}}">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <StackPanel>
                        <!-- 부모 항목 (Name) 표시 -->
                        <TextBlock Text="{Binding Name}" FontWeight="Bold" Margin="5"/>

                        <!-- 자식 컬렉션에서 마지막 항목만 표시 -->
                        <ContentControl Content="{Binding ItemsB.Last}">
                            <ContentControl.ContentTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding DetailName}" Margin="5"/>
                                        <TextBlock Text="{Binding Value}" Margin="5"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ContentControl.ContentTemplate>
                        </ContentControl>
                    </StackPanel>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </Grid>
</Window>
2. Filter 이벤트 핸들러 수정
이제 OnFilter 이벤트 핸들러에서 ObservableCollection의 마지막 항목만 통과시키도록 설정합니다.

ViewModel 또는 Code-behind (MainWindow.xaml.cs):
csharp
코드 복사
private void OnFilter(object sender, FilterEventArgs e)
{
    var collectionViewSource = sender as CollectionViewSource;
    var item = e.Item as ItemModelA;

    if (item != null && ItemsA.IndexOf(item) == ItemsA.Count - 1)
    {
        e.Accepted = true;  // 마지막 항목만 통과
    }
    else
    {
        e.Accepted = false; // 나머지는 필터링
    }
}
설명:
ItemsA.Count - 1: ItemsA 컬렉션의 마지막 항목을 선택하기 위해 인덱스를 사용합니다. ItemsA.IndexOf(item) == ItemsA.Count - 1 조건을 통해 마지막 항목에 해당하는 데이터만 필터링을 통과시킵니다.

ItemsB.Last 바인딩: 부모 항목의 ItemsB에서 마지막 아이템을 선택하기 위해 ItemsB.Last를 사용합니다. XAML에서 Last를 직접적으로 사용하여 마지막 항목을 바인딩할 수 있습니다.

ContentControl: ContentControl을 사용하여 마지막 아이템만을 표시하도록 설정하였습니다. 마지막 아이템의 DetailName과 Value가 표시됩니다.

결과:
이 코드는 ObservableCollection의 마지막 항목만 필터링하여 ItemsControl이나 ContentControl에 바인딩하는 방식입니다. 필터링 로직