# WPF에서 IP 주소가 특정 조건에 맞는지 확인하는 조건문을 작성하려면, 먼저 IP 주소를 문자열로 받아서 특정 형식에 맞는지 검사해야 합니다. 아래는 IP 주소가 10.56.1 또는 10.56.2로 시작하고 30 또는 35로 끝나는지 확인하는 조건문을 만드는 방법을 보여줍니다.

코드 예제
csharp
코드 복사
using System;

namespace IPAddressValidation
{
    class Program
    {
        static void Main(string[] args)
        {
            // IP 주소를 문자열로 입력받습니다.
            string ipAddress = "10.56.1.30"; // 테스트할 IP 주소

            // IP 주소가 특정 형식에 맞는지 검사합니다.
            if (IsValidIPAddress(ipAddress))
            {
                Console.WriteLine("조건에 맞는 IP 주소입니다.");
            }
            else
            {
                Console.WriteLine("조건에 맞지 않는 IP 주소입니다.");
            }
        }

        static bool IsValidIPAddress(string ipAddress)
        {
            // IP 주소를 '.' 기준으로 나눕니다.
            string[] parts = ipAddress.Split('.');
            
            // IP 주소가 4부분으로 나뉘어야 합니다.
            if (parts.Length != 4)
                return false;
            
            // IP 주소의 첫 세 부분을 검사합니다.
            if (parts[0] == "10" && (parts[1] == "56") &&
                (parts[2] == "1" || parts[2] == "2") &&
                (parts[3] == "30" || parts[3] == "35"))
            {
                return true;
            }
            
            return false;
        }
    }
}
코드 설명
IP 주소 입력: string ipAddress = "10.56.1.30"; 에서 IP 주소를 문자열로 입력받습니다.

검사 함수: IsValidIPAddress 함수는 IP 주소를 검사합니다.

IP 주소 분리: ipAddress.Split('.')를 사용하여 IP 주소를 .을 기준으로 나눕니다.
부분 검사: IP 주소의 각 부분이 원하는 형식에 맞는지 확인합니다.
첫 번째 부분(parts[0])은 10이어야 합니다.
두 번째 부분(parts[1])은 56이어야 합니다.
세 번째 부분(parts[2])은 1 또는 2여야 합니다.
네 번째 부분(parts[3])은 30 또는 35여야 합니다.
결과 출력: 조건에 맞는지 여부에 따라 적절한 메시지를 출력합니다.

이 코드는 IP 주소가 지정된 형식에 맞는지 확인하고, 조건에 맞는 경우와 맞지 않는 경우를 처리하는 방법을 보여줍니다. 필요에 따라 입력 부분이나 조건을 수정하여 사용할 수 있습니다.