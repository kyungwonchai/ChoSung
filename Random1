습니다. 로그 폴더가 없으면 생성하도록 Logging.cs 파일을 수정하고, 모든 줄마다 한글 주석을 추가하여 제공하겠습니다.

Logging.cs
Logging.cs

csharp
코드 복사
using System;
using System.IO;

namespace RouterFlowSync.Logging
{
    public static class Logger
    {
        // 로그를 남길 디렉토리 경로
        private static readonly string LogDirectory = @"C:\agent\logs";

        // 정적 생성자
        static Logger()
        {
            // 로그 디렉토리가 존재하지 않으면 생성
            if (!Directory.Exists(LogDirectory))
            {
                Directory.CreateDirectory(LogDirectory);
            }
        }

        // 정보 로그를 기록하는 메서드
        public static void LogInfo(string message)
        {
            Log(message, "INFO");
        }

        // 에러 로그를 기록하는 메서드
        public static void LogError(string message, Exception ex)
        {
            Log($"{message}: {ex.Message}", "ERROR");
        }

        // 로그를 기록하는 메서드
        private static void Log(string message, string level)
        {
            // 로그 파일 이름 설정
            string logFile = Path.Combine(LogDirectory, $"{DateTime.Now:yyyyMMdd}_log.txt");

            // 로그 메시지 작성
            string logMessage = $"{DateTime.Now:yyyy-MM-dd HH:mm:ss} [{level}] {message}";

            // 로그 메시지를 파일에 기록
            File.AppendAllText(logFile, logMessage + Environment.NewLine);
        }

        // 마지막 읽은 라인 정보를 가져오는 메서드
        public static (string filePath, int lastReadLine) GetLastReadLine()
        {
            // 마지막 읽은 라인 정보를 저장하는 파일 경로
            string filePath = Path.Combine(LogDirectory, "lastReadLine.txt");

            // 파일이 존재하지 않으면 초기 값 반환
            if (!File.Exists(filePath))
            {
                return (string.Empty, 0);
            }

            // 파일에서 마지막 읽은 라인 정보를 읽어옴
            var lines = File.ReadAllLines(filePath);
            return (lines[0], int.Parse(lines[1]));
        }

        // 마지막 읽은 라인 정보를 저장하는 메서드
        public static void LogLastReadLine(string filePath, int lastReadLine)
        {
            // 마지막 읽은 라인 정보를 저장하는 파일 경로
            string logFilePath = Path.Combine(LogDirectory, "lastReadLine.txt");

            // 마지막 읽은 라인 정보를 파일에 기록
            File.WriteAllText(logFilePath, $"{filePath}{Environment.NewLine}{lastReadLine}");
        }
    }
}
이제 Logging.cs 파일에서 로그 폴더가 없으면 생성하도록 수정하였으며, 각 줄마다 상세한 한글 주석을 추가하였습니다. 이 파일을 사용하여 프로젝트를 수정해 보시기 바랍니