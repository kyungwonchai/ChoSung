using Microsoft.Win32;
using System;
using System.IO;
using System.Windows.Forms;

namespace CustomContextMenu
{
    class Program
    {
        static void Main(string[] args)
        {
            RegisterContextMenu();
            MessageBox.Show("우클릭 메뉴가 등록되었습니다.", "알림", MessageBoxButtons.OK, MessageBoxIcon.Information);
        }

        private static void RegisterContextMenu()
        {
            const string RegistryPath = "Directory\\Background\\shell\\백업_경원";
            const string CommandRegistryPath = RegistryPath + "\\command";

            try
            {
                // 컨텍스트 메뉴 등록
                using (RegistryKey key = Registry.ClassesRoot.CreateSubKey(RegistryPath))
                {
                    key.SetValue(null, "백업_경원");
                }

                // 커맨드 등록
                using (RegistryKey key = Registry.ClassesRoot.CreateSubKey(CommandRegistryPath))
                {
                    key.SetValue(null, "\"" + Application.ExecutablePath + "\" \"%V\"");
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show("우클릭 메뉴 등록 중 오류가 발생했습니다: " + ex.Message, "오류", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        private static void BackupSelectedItems(string[] selectedItems)
        {
            string backupFolderPath = @"D:\ddd\";

            try
            {
                foreach (string selectedItem in selectedItems)
                {
                    string sourcePath = selectedItem;
                    string fileName = DateTime.Now.ToString("yyMMddHHmmssff") + "_" + Path.GetFileName(sourcePath);
                    string destinationPath = Path.Combine(backupFolderPath, fileName);

                    if (File.Exists(sourcePath))
                    {
                        File.Copy(sourcePath, destinationPath);
                    }
                    else if (Directory.Exists(sourcePath))
                    {
                        DirectoryCopy(sourcePath, destinationPath);
                    }
                }

                MessageBox.Show("선택한 항목이 백업되었습니다.", "알림", MessageBoxButtons.OK, MessageBoxIcon.Information);
            }
            catch (Exception ex)
            {
                MessageBox.Show("백업 중 오류가 발생했습니다: " + ex.Message, "오류", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        private static void DirectoryCopy(string sourceDirPath, string destDirPath)
        {
            DirectoryInfo sourceDir = new DirectoryInfo(sourceDirPath);
            DirectoryInfo destDir = new DirectoryInfo(destDirPath);

            if (!destDir.Exists)
            {
                destDir.Create();
                destDir.Attributes = sourceDir.Attributes;
            }

            foreach (FileInfo file in sourceDir.GetFiles())
            {
                file.CopyTo(Path.Combine(destDir.FullName, file.Name), true);
            }

            foreach (DirectoryInfo subDir in sourceDir.GetDirectories())
            {
                DirectoryCopy(subDir.FullName, Path.Combine(destDir.FullName, subDir.Name));
            }
        }
    }
}
