ridView에서 특정 컬럼에 대해 검색을 제한하고, 행을 더블클릭하면 해당 행의 컬럼1, 컬럼2 값을 메시지박스로 표시하는 방법을 설명드리겠습니다.

1. 특정 컬럼에 대한 검색 제한
GridView.OptionsFind를 사용하여 특정 컬럼에 대해서만 검색을 제한할 수 있습니다.

2. 행을 더블클릭했을 때 메시지 박스 표시
GridView.DoubleClick 이벤트를 사용하여 행을 더블클릭했을 때 특정 값을 메시지 박스로 표시할 수 있습니다.

전체 코드 예제
csharp
코드 복사
using DevExpress.XtraGrid;
using DevExpress.XtraGrid.Views.Grid;
using System;
using System.Data;
using System.Drawing;
using System.Windows.Forms;

public partial class Form1 : Form
{
    public Form1()
    {
        InitializeComponent();

        // GridControl과 GridView를 초기화합니다.
        GridControl gridControl = new GridControl();
        GridView gridView = new GridView(gridControl);
        gridControl.MainView = gridView;
        gridControl.Dock = DockStyle.Fill;
        this.Controls.Add(gridControl);

        // 데이터 소스를 설정합니다.
        DataTable dataTable = new DataTable();
        dataTable.Columns.Add("날짜1", typeof(DateTime));
        dataTable.Columns.Add("컬럼1", typeof(string));
        dataTable.Columns.Add("컬럼2", typeof(string));
        dataTable.Columns.Add("컬럼3", typeof(int));

        dataTable.Rows.Add(DateTime.Now, "Value1", "Value2", 1);
        dataTable.Rows.Add(DateTime.Now.AddDays(-1), "Value3", "Value4", 2);
        dataTable.Rows.Add(DateTime.Now.AddDays(-2), "Value5", "Value6", 3);

        gridControl.DataSource = dataTable;

        // GridView의 RowStyle 이벤트 핸들러를 추가합니다.
        gridView.RowStyle += GridView_RowStyle;

        // 날짜1 컬럼을 내림차순으로 정렬합니다.
        gridView.BeginSort();
        try
        {
            gridView.Columns["날짜1"].SortOrder = DevExpress.Data.ColumnSortOrder.Descending;
        }
        finally
        {
            gridView.EndSort();
        }

        // 특정 컬럼에 대한 검색 제한
        gridView.OptionsFind.FindFilterColumns = "컬럼1;컬럼2"; // 컬럼1, 컬럼2만 검색 가능

        // 행 더블클릭 이벤트 핸들러 추가
        gridView.DoubleClick += GridView_DoubleClick;
    }

    // RowStyle 이벤트 핸들러를 정의합니다.
    private void GridView_RowStyle(object sender, RowStyleEventArgs e)
    {
        GridView view = sender as GridView;
        if (view == null) return;

        // 현재 행의 컬럼3 값 가져오기
        int column3Value = Convert.ToInt32(view.GetRowCellValue(e.RowHandle, view.Columns["컬럼3"]));

        // 컬럼3의 값에 따라 행 색상 변경
        if (column3Value == 1)
        {
            e.Appearance.BackColor = Color.Yellow; // 컬럼3의 값이 1이면 노랑색
        }
        else if (column3Value >= 2)
        {
            e.Appearance.BackColor = Color.Orange; // 컬럼3의 값이 2 이상이면 주황색
        }
    }

    // 행 더블클릭 이벤트 핸들러 정의
    private void GridView_DoubleClick(object sender, EventArgs e)
    {
        GridView view = sender as GridView;
        if (view == null || view.FocusedRowHandle < 0) return;

        // 선택된 행의 컬럼1, 컬럼2 값 가져오기
        string column1Value = view.GetRowCellValue(view.FocusedRowHandle, view.Columns["컬럼1"]).ToString();
        string column2Value = view.GetRowCellValue(view.FocusedRowHandle, view.Columns["컬럼2"]).ToString();

        // 메시지 박스 표시
        MessageBox.Show($"컬럼1: {column1Value}, 컬럼2: {column2Value}", "행 정보", MessageBoxButtons.OK, MessageBoxIcon.Information);
    }
}
설명
검색 제한: gridView.OptionsFind.FindFilterColumns 속성을 사용하여 검색 가능한 컬럼을 제한합니다. 여기서는 컬럼1과 컬럼2만 검색 가능하도록 설정했습니다.
행 더블클릭 이벤트: GridView.DoubleClick 이벤트를 통해 행이 더블클릭되었을 때 GridView_DoubleClick 이벤트 핸들러가 호출되도록 설정했습니다. 이 핸들러는 선택된 행의 컬럼1과 컬럼2 값을 가져와 메시지 박스로 표시합니다.
이 코드를 Form1.cs에 추가하면 특정 컬럼에 대한 검색 제한과 행 더블클릭 시 특정 값 표시 기능을 구현할 수 있습니다.