래는 테이블과 컬럼명이 겹치지 않도록 수정한 코드입니다.

테이블 구조 변경 (SQL 스크립트)
sql
코드 복사
-- Favorites 테이블 생성
CREATE TABLE Favorites (
    Id INT IDENTITY(1,1) PRIMARY KEY,   -- 고유 ID
    UserId NVARCHAR(50) NOT NULL,       -- 사용자 ID
    FavoriteItems NVARCHAR(MAX) NOT NULL -- 즐겨찾기 버튼 목록 (구분자 사용)
);

-- 사용자별 즐겨찾기 데이터를 빠르게 조회하기 위한 인덱스 생성
CREATE INDEX IDX_Favorites_UserId ON Favorites (UserId);
수정된 코드
전역 변수
csharp
코드 복사
private static readonly string ConnectionString = "Server=your_server,1633;Database=your_database;User Id=your_user;Password=your_password;";
private const string Separator = ","; // 즐겨찾기 구분자
LoadFavorites 함수
csharp
코드 복사
private void LoadFavorites()
{
    // user 객체가 null이거나 user.idnum이 비어 있으면 빈 목록 유지
    if (user == null || string.IsNullOrWhiteSpace(user.idnum))
    {
        favoriteKeys.Clear();
        Console.WriteLine("[Info] LoadFavorites: User is null or idnum is invalid.");
        return;
    }

    try
    {
        favoriteKeys.Clear();

        using (var connection = new SqlConnection(ConnectionString))
        {
            connection.Open();
            var command = new SqlCommand("SELECT FavoriteItems FROM Favorites WHERE UserId = @UserId", connection);
            command.Parameters.AddWithValue("@UserId", user.idnum);

            using (var reader = command.ExecuteReader())
            {
                if (reader.Read() && !reader.IsDBNull(0))
                {
                    var favorites = reader.GetString(0);
                    favoriteKeys.UnionWith(favorites.Split(new[] { Separator }, StringSplitOptions.RemoveEmptyEntries));
                }
            }
        }
    }
    catch (Exception ex)
    {
        // 에러 발생 시 로그 기록
        Console.WriteLine($"[Error] LoadFavorites: {ex.Message}");
    }
}
SaveFavorites 함수
csharp
코드 복사
private void SaveFavorites()
{
    // user 객체가 null이거나 user.idnum이 비어 있으면 저장하지 않음
    if (user == null || string.IsNullOrWhiteSpace(user.idnum))
    {
        Console.WriteLine("[Info] SaveFavorites: User is null or idnum is invalid.");
        return;
    }

    try
    {
        using (var connection = new SqlConnection(ConnectionString))
        {
            connection.Open();

            // 즐겨찾기 문자열 생성
            var favorites = string.Join(Separator, favoriteKeys);

            // 사용자별 즐겨찾기 업데이트 또는 삽입
            var command = new SqlCommand(@"
                IF EXISTS (SELECT 1 FROM Favorites WHERE UserId = @UserId)
                BEGIN
                    UPDATE Favorites SET FavoriteItems = @FavoriteItems WHERE UserId = @UserId
                END
                ELSE
                BEGIN
                    INSERT INTO Favorites (UserId, FavoriteItems) VALUES (@UserId, @FavoriteItems)
                END", connection);

            command.Parameters.AddWithValue("@UserId", user.idnum);
            command.Parameters.AddWithValue("@FavoriteItems", favorites);
            command.ExecuteNonQuery();
        }
    }
    catch (Exception ex)
    {
        // 에러 발생 시 로그 기록
        Console.WriteLine($"[Error] SaveFavorites: {ex.Message}");
    }
}
ToggleFavorite 함수
csharp
코드 복사
private void ToggleFavorite(string buttonName, BarButtonItem button)
{
    if (favoriteKeys.Contains(buttonName))
    {
        favoriteKeys.Remove(buttonName);
        ResetButtonStyle(button);
        RemoveFromFavorites(button);
    }
    else
    {
        favoriteKeys.Add(buttonName);
        ApplyFavoriteStyle(button);
        AddToFavorites(button, GetButtonGroupName(button));
    }

    SaveFavorites(); // DB에 즉시 반영
}
주요 변경 사항
테이블 컬럼 이름 수정:

FavoriteItems: 사용자별 즐겨찾기 버튼 목록을 저장하는 컬럼 이름으로 변경.
쿼리 수정:

기존의 Favorites 컬럼 이름을 FavoriteItems로 변경.
코드 개선:

나머지 동작은 이전 코드와 동일하나 컬럼 이름 변경에 맞춰 조정.
동작 흐름
테이블 구조:

사용자별로 FavoriteItems 컬럼에 쉼표로 구분된 즐겨찾기 버튼 목록을 저장.
데이터 로드:

LoadFavorites: FavoriteItems 컬럼에서 데이터를 읽고 favoriteKeys에 변환.
데이터 저장:

SaveFavorites: favoriteKeys를 문자열로 변환해 FavoriteItems 컬럼에 저장.
즐겨찾기 추가/삭제:
