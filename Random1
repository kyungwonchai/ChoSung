래는 InitializeLineChart를 수정하여 List<DataPoint>를 전달받고, LineSeries2D의 DisplayName에 각 데이터의 Timestamp, ModelName, LineName을 포함하도록 커스터마이즈한 코드입니다.

수정된 코드
C# 코드
csharp
코드 복사
private void InitializeLineChart(List<DataPoint> data)
{
    var diagram = new XYDiagram2D();

    // L 모델 데이터 필터링
    var lData = data.Where(d => d.ModelName.EndsWith("L")).ToList();

    for (int i = 1; i <= 5; i++)
    {
        // 시리즈 생성
        var series = new LineSeries2D
        {
            DataSource = lData, // 필터링된 데이터 사용
            ArgumentDataMember = "Timestamp", // X축: 시간
            ValueDataMember = $"MP{i}",      // Y축: MP1~MP5
            MarkerVisible = true,            // 마커 표시
            CrosshairEnabled = true          // Crosshair 활성화
        };

        // DisplayName에 Timestamp, ModelName, LineName을 설정
        if (lData.Count > 0)
        {
            var firstPoint = lData.First(); // 첫 번째 데이터 기준으로 DisplayName 생성
            series.DisplayName = $"MP{i} | Model: {firstPoint.ModelName} | Line: {firstPoint.LineName} | Timestamp: {firstPoint.Timestamp:yy-MM-dd HH:mm:ss}";
        }

        // 차트에 시리즈 추가
        diagram.Series.Add(series);
    }

    // 차트 다이어그램 설정
    LineChart.Diagram = diagram;
}
코드 설명
lData 필터링:

전달된 data에서 ModelName이 "L"로 끝나는 데이터를 필터링.
for 루프:

MP1~MP5 각각에 대해 LineSeries2D를 생성.
ArgumentDataMember와 ValueDataMember를 설정하여 데이터 바인딩.
DisplayName 설정:

DisplayName에 Timestamp, ModelName, LineName을 포함.
lData.First()를 사용하여 첫 번째 데이터의 값을 기준으로 설정.
형식: MP{i} | Model: {ModelName} | Line: {LineName} | Timestamp: {Timestamp}.
다이어그램에 시리즈 추가:

생성된 LineSeries2D를 XYDiagram2D에 추가.
데이터 모델
DataPoint 클래스
csharp
코드 복사
public class DataPoint
{
    public string LineName { get; set; } // 라인 이름
    public string ModelName { get; set; } // 모델 이름
    public DateTime Timestamp { get; set; } // 시간
    public double MP1 { get; set; } // MP1 값
    public double MP2 { get; set; } // MP2 값
    public double MP3 { get; set; } // MP3 값
    public double MP4 { get; set; } // MP4 값
    public double MP5 { get; set; } // MP5 값
}
예제 사용
데이터 준비
csharp
코드 복사
var data = new List<DataPoint>
{
    new DataPoint { LineName = "Line1", ModelName = "ModelL1", Timestamp = DateTime.Now, MP1 = 0.1, MP2 = 0.2, MP3 = 0.3, MP4 = 0.4, MP5 = 0.5 },
    new DataPoint { LineName = "Line1", ModelName = "ModelL1", Timestamp = DateTime.Now.AddMinutes(-1), MP1 = 0.15, MP2 = 0.25, MP3 = 0.35, MP4 = 0.45, MP5 = 0.55 }
};

// InitializeLineChart 호출
InitializeLineChart(data);
결과
차트의 시리즈 이름:

각 LineSeries2D의 DisplayName에 다음 형식으로 표시됩니다:
yaml
코드 복사
MP1 | Model: ModelL1 | Line: Line1 | Timestamp: 25-01-11 15:45:00
툴팁:

Crosshair 기능을 활성화했으므로 마우스를 올리면 DisplayName 정보가 표시됩니다.
확장 가능성
Dynamic DisplayName:
특정 조건에 따라 DisplayName을 다르게 설정할 수 있습니다.
CrosshairLabelTemplate와 병합**: