일을 추가했지만 파일을 찾을 수 없다는 오류가 발생하는 이유는 경로 문제나 파일의 빌드 액션 설정 때문입니다. 이를 해결하려면 다음 단계를 확인하고 적용하세요.

문제 해결 방법
1. 경로 문제 확인
LoadIcon("Icons/new.png")에서 "Icons/new.png"는 프로젝트 기준 경로입니다.
파일을 찾을 수 없는 이유는:
실행 파일(.exe)이 빌드된 위치가 솔루션 폴더와 다를 수 있음.
상대 경로가 실행 디렉터리를 기준으로 설정되기 때문.
해결 방법
Path.Combine을 사용해 실행 경로를 기준으로 아이콘 파일 경로를 설정합니다:
csharp
코드 복사
private Image LoadIcon(string path)
{
    string basePath = AppDomain.CurrentDomain.BaseDirectory; // 실행 파일 경로
    string fullPath = System.IO.Path.Combine(basePath, path);
    return Image.FromFile(fullPath);
}
위 코드로 수정하면 Icons 폴더는 실행 파일(bin/Debug 또는 bin/Release) 폴더 안에 존재해야 합니다. 따라서 파일 복사 설정을 확인해야 합니다.
2. 아이콘 파일의 빌드 액션 설정
솔루션 탐색기에서 아이콘 파일을 선택하고 속성 창에서 다음을 확인:
빌드 액션: Content로 설정.
출력 디렉터리에 복사: 복사 항상 또는 새로 고칠 때 복사로 설정.
이 설정을 통해 빌드 시 Icons 폴더와 파일이 실행 디렉터리에 복사됩니다.
3. Icons 폴더 경로 확인
솔루션 탐색기에서 Icons 폴더를 만들었다면 프로젝트 폴더 안에 위치해야 합니다.
폴더가 올바르게 생성되었는지 확인:
올바른 위치: YourProjectFolder/Icons
잘못된 위치: YourSolutionFolder/Icons (프로젝트 폴더 외부)
해결 방법
Icons 폴더가 프로젝트 루트에 없으면 프로젝트 내로 이동시키고, 다시 프로젝트에 추가하세요.
아이콘 파일을 Icons 폴더에 복사한 뒤 솔루션 탐색기에서 **"추가 > 기존 항목"**으로 파일을 추가하세요.
4. 전체 경로 확인 예제
다음은 실행 디렉터리를 기준으로 아이콘 파일을 정확히 로드하는 코드입니다:

csharp
코드 복사
private Image LoadIcon(string path)
{
    // 실행 파일 디렉터리를 기준으로 경로 계산
    string basePath = AppDomain.CurrentDomain.BaseDirectory;
    string fullPath = System.IO.Path.Combine(basePath, path);

    if (!System.IO.File.Exists(fullPath))
    {
        throw new FileNotFoundException($"Icon not found: {fullPath}");
    }

    return Image.FromFile(fullPath);
}
사용 예제:
csharp
코드 복사
var icon = LoadIcon("Icons/new.png");
테스트 및 결과 확인
빌드 후 출력 디렉터리 확인:

빌드 후 bin/Debug 또는 bin/Release 폴더에 Icons 폴더와 파일이 복사되었는지 확인합니다.
Icons 폴더가 없거나 파일이 누락되었다면 위 설정을 다시 확인하세요.
경로 문제 해결:

경로를 절대 경로로 출력하여 디버깅:
csharp
코드 복사
Console.WriteLine($"Loading icon from: {System.IO.Path.Combine(AppDomain.CurrentDomain.BaseDirectory, "Icons/new.png")}");
모든 경로가 올바르게 설정된 상태에서 실행: