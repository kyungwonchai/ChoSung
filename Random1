인했습니다. 다른 접근 방식을 시도해보겠습니다. 이번에는 ZXing.Net 라이브러리를 사용하여 QR 코드를 생성하고, WPF 프로젝트를 처음부터 새로 설정하여 기본적인 UI와 QR 코드 생성 기능을 구현하겠습니다.

1. NuGet 패키지 설치
ZXing.Net 패키지를 설치합니다. NuGet 패키지 관리자 콘솔에서 다음 명령을 실행하세요:

mathematica
코드 복사
Install-Package ZXing.Net
2. MainWindow.xaml
기본적인 UI를 설정합니다.

xml
코드 복사
<dx:ThemedWindow x:Class="QRMAKER.MainWindow"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
                 xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                 mc:Ignorable="d"
                 Title="MainWindow" Height="600" Width="800"
                 ThemeName="Office2019Color">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <TextBlock Text="제목" FontSize="24" HorizontalAlignment="Center" Margin="10" Grid.Row="0"/>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <!-- GridControl -->
            <dxg:GridControl Name="gridControl" AutoGenerateColumns="AddNew">
                <dxg:GridControl.View>
                    <dxg:TableView Name="tableView" AutoWidth="True"/>
                </dxg:GridControl.View>
            </dxg:GridControl>

            <!-- QR 코드 영역 -->
            <ScrollViewer Grid.Column="1" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                <StackPanel Name="qrCodePanel" Orientation="Vertical" HorizontalAlignment="Center"/>
            </ScrollViewer>
        </Grid>

        <!-- 슬라이더 설정 -->
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="10" Grid.Row="2">
            <Button Content="클립보드에서 데이터 가져오기" Click="LoadFromClipboard"/>
            <TextBlock Text="QR 코드 크기: " VerticalAlignment="Center" Margin="10,0,0,0"/>
            <Slider Name="sizeSlider" Minimum="50" Maximum="200" Width="100" ValueChanged="Slider_ValueChanged"/>
            <TextBlock Text="QR 코드 간격: " VerticalAlignment="Center" Margin="10,0,0,0"/>
            <Slider Name="spacingSlider" Minimum="10" Maximum="50" Width="100" ValueChanged="Slider_ValueChanged"/>
        </StackPanel>
    </Grid>
</dx:ThemedWindow>
3. MainWindow.xaml.cs
ZXing.Net 라이브러리를 사용하여 QR 코드를 생성합니다.

csharp
코드 복사
using DevExpress.Xpf.Core;
using DevExpress.Xpf.Grid;
using System;
using System.Collections.Generic;
using System.Drawing;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Media.Imaging;
using ZXing;

namespace QRMAKER
{
    public partial class MainWindow : ThemedWindow
    {
        private List<string> _items;

        public MainWindow()
        {
            InitializeComponent();
            _items = new List<string>();
        }

        private void LoadFromClipboard(object sender, RoutedEventArgs e)
        {
            try
            {
                _items.Clear();
                qrCodePanel.Children.Clear();
                gridControl.ItemsSource = null;

                // 클립보드에서 데이터 가져오기
                string clipboardText = Clipboard.GetText();
                if (!string.IsNullOrEmpty(clipboardText))
                {
                    var lines = clipboardText.Split(new[] { '\r', '\n' }, StringSplitOptions.RemoveEmptyEntries);
                    foreach (var line in lines)
                    {
                        if (line.Length == 22 && IsAlphanumeric(line))
                        {
                            _items.Add(line);
                        }
                    }
                    gridControl.ItemsSource = _items;
                    GenerateQRCodes();
                }
                else
                {
                    MessageBox.Show("클립보드에 데이터가 없습니다.", "Error", MessageBoxButton.OK, MessageBoxImage.Error);
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show($"Clipboard loading error: {ex.Message}", "Error", MessageBoxButton.OK, MessageBoxImage.Error);
            }
        }

        private void Slider_ValueChanged(object sender, RoutedPropertyChangedEventArgs<double> e)
        {
            if (_items != null && _items.Count > 0)
            {
                try
                {
                    GenerateQRCodes();
                }
                catch (Exception ex)
                {
                    MessageBox.Show($"Slider value changed error: {ex.Message}", "Error", MessageBoxButton.OK, MessageBoxImage.Error);
                }
            }
        }

        private void GenerateQRCodes()
        {
            try
            {
                qrCodePanel.Children.Clear();
                foreach (var item in _items)
                {
                    try
                    {
                        var qrCode = GenerateQRCode(item);
                        var image = new System.Windows.Controls.Image
                        {
                            Source = BitmapToImageSource(qrCode),
                            Width = sizeSlider.Value,
                            Height = sizeSlider.Value,
                            Margin = new Thickness(spacingSlider.Value)
                        };
                        var stackPanel = new StackPanel { Orientation = Orientation.Vertical, HorizontalAlignment = HorizontalAlignment.Center };
                        var textBlock = new TextBlock
                        {
                            Text = item,
                            Foreground = System.Windows.Media.Brushes.Blue,
                            HorizontalAlignment = HorizontalAlignment.Center
                        };
                        stackPanel.Children.Add(image);
                        stackPanel.Children.Add(textBlock);

                        image.MouseLeftButtonDown += (s, e) =>
                        {
                            DeselectAllRows();
                            int index = _items.IndexOf(item);
                            tableView.FocusedRowHandle = index;
                            gridControl.View.FocusedRowHandle = index;
                        };

                        qrCodePanel.Children.Add(stackPanel);
                    }
                    catch (Exception ex)
                    {
                        MessageBox.Show($"QR Code generation error for item '{item}': {ex.Message}", "Error", MessageBoxButton.OK, MessageBoxImage.Error);
                    }
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show($"QR Code generation error: {ex.Message}", "Error", MessageBoxButton.OK, MessageBoxImage.Error);
            }
        }

        private Bitmap GenerateQRCode(string text)
        {
            try
            {
                BarcodeWriter writer = new BarcodeWriter
                {
                    Format = BarcodeFormat.QR_CODE,
                    Options = new ZXing.Common.EncodingOptions
                    {
                        Height = 200,
                        Width = 200
                    }
                };
                return writer.Write(text);
            }
            catch (Exception ex)
            {
                throw new Exception($"Error generating QR Code: {ex.Message}");
            }
        }

        private BitmapImage BitmapToImageSource(Bitmap bitmap)
        {
            try
            {
                using (var memory = new System.IO.MemoryStream())
                {
                    bitmap.Save(memory, System.Drawing.Imaging.ImageFormat.Png);
                    memory.Position = 0;
                    var bitmapImage = new BitmapImage();
                    bitmapImage.BeginInit();
                    bitmapImage.StreamSource = memory;
                    bitmapImage.CacheOption = BitmapCacheOption.OnLoad;
                    bitmapImage.EndInit();
                    return bitmapImage;
                }
            }
            catch (Exception ex)
            {
                throw new Exception($"Error converting Bitmap to ImageSource: {ex.Message}");
            }
        }

        private bool IsAlphanumeric(string str)
        {
            foreach (char c in str)
            {
                if (!char.IsLetterOrDigit(c))
                {
                    return false;
                }
            }
            return true;
        }

        private void DeselectAllRows()
        {
            try
            {
                for (int i = 0; i < gridControl.VisibleRowCount; i++)
                {
                    int rowHandle = gridControl.GetRowHandleByVisibleIndex(i);
                    tableView.UnselectRow(rowHandle);
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show($"Error deselecting rows: {ex.Message}", "Error", MessageBoxButton.OK, MessageBoxImage.Error);
            }
        }
    }
}
이제 이 코드를 실행하여 WPF 창이 정상적으로 열리는지 확인해 주세요. ZXing.Net 라이브러리를 사용하여 QR 코드를 생성하고, UI에 표시하도록 하였습니다. 이 코드가 제대로 작동하면 이후 필요한 기능들을 추가적으로 구현할 수 있