 알겠습니다. Streamlit 앱을 특정 포트(8096)로 서비스하는 방법을 안내해 드리겠습니다.

Ubuntu에서 서비스를 운영하는 방법은 크게 두 가지가 있습니다.

간단한 방법: nohup을 사용하여 터미널을 종료해도 앱이 계속 실행되게 하는 방법
권장하는 방법: systemd에 서비스로 등록하여 서버 부팅 시 자동으로 실행하고 안정적으로 관리하는 방법
방법 1: nohup으로 간단하게 실행하기
터미널 접속을 끊어도 계속 실행되게 하는 가장 빠른 방법입니다.

app.py 파일이 있는 디렉토리로 이동

Bash

# 예시: cd /home/ubuntu/my_app
cd /path/to/your/app
아래 명령어 실행
--server.port 8096 옵션을 추가하여 실행 포트를 지정하고, nohup과 &를 사용해 백그라운드에서 실행합니다.

Bash

nohup streamlit run app.py --server.port 8096 &
nohup: "no hang up"의 약자로, 터미널 세션이 끊겨도 프로세스를 계속 실행시킵니다.
&: 명령어를 백그라운드에서 실행합니다.
실행 후 로그는 같은 디렉토리에 nohup.out 파일로 저장됩니다.
프로세스 종료 방법
나중에 서비스를 중지하려면 아래 명령어로 실행 중인 streamlit 프로세스를 찾아 종료해야 합니다.

Bash

# 프로세스 ID(PID) 찾기
ps -ef | grep streamlit

# 찾은 PID를 사용하여 프로세스 종료 (예: PID가 1234인 경우)
kill 1234
방법 2: systemd 서비스로 등록하기 (권장)
서버 재부팅 시 자동으로 앱이 실행되고, 에러가 발생했을 때 자동으로 재시작하는 등 안정적인 운영이 가능하여 실제 서비스를 운영할 때 권장되는 방법입니다.

1단계: Streamlit 실행 파일 경로 확인
systemd 서비스 파일에는 streamlit 명령어의 전체 경로가 필요합니다. 터미널에 아래 명령어를 입력하여 경로를 확인하고 복사해두세요.

Bash

which streamlit
출력 예시: /home/ubuntu/.local/bin/streamlit 또는 /usr/local/bin/streamlit

2단계: 서비스 파일 생성
systemd 서비스 설정 파일을 생성합니다.

Bash

sudo nano /etc/systemd/system/streamlit_app.service
3단계: 서비스 파일 내용 작성
열린 편집기에 아래 내용을 붙여넣으세요. User, WorkingDirectory, ExecStart의 경로 정보는 반드시 사용자 환경에 맞게 수정해야 합니다.

Ini, TOML

[Unit]
Description=Streamlit Log Viewer App
After=network.target

[Service]
# 'ubuntu' 대신 실제 스크립트를 실행할 리눅스 사용자 계정으로 변경하세요.
User=ubuntu

# app.py 파일이 있는 디렉토리의 전체 경로를 입력하세요.
WorkingDirectory=/home/ubuntu/my_app

# 'which streamlit'으로 찾은 경로와 app.py 경로를 조합하여 입력하세요.
# --server.headless true 옵션은 백그라운드 서비스 실행 시 불필요한 GUI 관련 오류를 방지합니다.
ExecStart=/home/ubuntu/.local/bin/streamlit run app.py --server.port 8096 --server.headless true

Restart=always
RestartSec=10

[Install]
WantedBy=multi-user.target
WorkingDirectory: app.py 파일이 위치한 디렉토리의 전체 경로
ExecStart: 1단계에서 찾은 streamlit 실행 파일 경로와 run app.py --server.port 8096을 조합한 전체 명령어
수정이 끝났으면 Ctrl+X를 누르고, Y를 눌러 저장한 후 Enter를 쳐서 편집기를 종료합니다.
4단계: 방화벽 포트 허용
Ubuntu의 방화벽(ufw)을 사용 중이라면 8096 포트를 열어주어야 외부에서 접속할 수 있습니다.

Bash

sudo ufw allow 8096/tcp
sudo ufw reload
5단계: 서비스 시작 및 활성화
아래 명령어를 순서대로 실행하여 서비스를 시스템에 등록하고 시작합니다.

Bash

# systemd가 새로운 서비스 파일을 인식하도록 리로드
sudo systemctl daemon-reload

# 방금 만든 서비스 시작
sudo systemctl start streamlit_app

# 서버 부팅 시 자동으로 서비스가 시작되도록 활성화
sudo systemctl enable streamlit_app
서비스 상태 확인 및 관리
상태 확인: sudo systemctl status streamlit_app (정상 실행 중인지, 오류는 없는지 확인)
서비스 중지: sudo systemctl stop streamlit_app