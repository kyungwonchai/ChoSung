용하여 Visual Studio 환경에서 외부 프로그램(uppy1.exe)을 실행하고, 선택한 폴더를 인자로 넘기며 실행 후 완료 메시지를 출력하는 예제 코드는 다음과 같습니다:

csharp

using System;
using System.Diagnostics;
using System.IO;
using System.Windows;

// ... (다른 필요한 using 지시문)

public partial class MainWindow : Window
{
    public MainWindow()
    {
        InitializeComponent();
    }

    private void RunExternalExe(string folderPath)
    {
        try
        {
            // exe 파일 경로 지정
            string exePath = Path.Combine(Environment.CurrentDirectory, "exefiles", "uppy1.exe");

            // ProcessStartInfo 생성
            ProcessStartInfo processStartInfo = new ProcessStartInfo
            {
                FileName = exePath,
                Arguments = $"\"{folderPath}\"", // 인자에 폴더 경로 추가, 공백이 있을 수 있으므로 따옴표로 묶음
                UseShellExecute = false,
                RedirectStandardOutput = true,
                CreateNoWindow = true
            };

            // 프로세스 실행
            using (Process process = Process.Start(processStartInfo))
            {
                // 프로세스가 완료될 때까지 대기
                process.WaitForExit();

                // 완료 메시지 출력
                MessageBox.Show("프로그램이 완료되었습니다.");
            }
        }
        catch (Exception ex)
        {
            MessageBox.Show($"프로그램을 실행하는 동안 오류가 발생했습니다: {ex.Message}");
        }
    }

    // 버튼 클릭 이벤트 핸들러 (예를 들어 "Run" 버튼에 연결됨)
    private void btnRunExe_Click(object sender, RoutedEventArgs e)
    {
        // 폴더 선택 대화상자를 사용하여 폴더 경로 선택 (System.Windows.Forms.FolderBrowserDialog 사용)
        using (var dialog = new System.Windows.Forms.FolderBrowserDialog())
        {
            System.Windows.Forms.DialogResult result = dialog.ShowDialog();
            if (result == System.Windows.Forms.DialogResult.OK)
            {
                // 선택한 폴더를 파라미터로 외부 프로그램 실행
                RunExternalExe(dialog.SelectedPath);
            }
        }
    }
}

이 코드는 WPF 애플리케이션의 메인 윈도우 클래스 내부에 위치해야 합니다. 사용자가 버튼을 클릭하면 FolderBrowserDialog가 나타나고, 사용자가 폴더를 선택하면 해당 폴더 경로를 uppy1.exe에 파라미터로 전달하여 실행합니다. 프로그램이 완료되면 메시지 박스를 통해 사용자에게 알립니다.

이 코드를 사용하기 위해서는 System.Windows.Forms 어셈블리 참조를 추가해야 하며, Project -> Add Reference 메뉴를 통해 추가할 수 있습니다. 또한, System.Windows.Forms 네임스페이스를 사용하기 위해 프로젝트의 속성에서 UseWPF를 true로 설정해야 할 수도 있