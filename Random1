#!/bin/bash
set -e

# ###################### 설정 부분 (여기 3개만 수정하세요) ######################
MY_PROXY="http://your-proxy-address:port"
CERT_FILE_PATH="/home/your_user/company_ca.crt" # 서버에 업로드한 인증서 파일 경로
COMPANY_DIR_NAME="우리회사이름"                 # 인증서를 설치할 회사 폴더 이름
# ##########################################################################


echo "--- 1단계: 프록시 및 인증서 설정 시작 ---"
export http_proxy="$MY_PROXY"
export https_proxy="$MY_PROXY"
sudo tee /etc/apt/apt.conf.d/99proxy.conf > /dev/null <<EOF
Acquire::http::Proxy "$MY_PROXY";
Acquire::httpss::Proxy "$MY_PROXY";
EOF

if [ ! -f "$CERT_FILE_PATH" ]; then
    echo "?? 에러: 인증서 파일($CERT_FILE_PATH)을 찾을 수 없습니다. 경로를 확인하고 다시 시도하세요."
    exit 1
fi
CERT_INSTALL_PATH="/usr/share/ca-certificates/$COMPANY_DIR_NAME"
sudo mkdir -p "$CERT_INSTALL_PATH"
sudo cp "$CERT_FILE_PATH" "$CERT_INSTALL_PATH/"
sudo update-ca-certificates
echo "? 프록시 및 인증서 설정 완료."
echo

echo "--- 2단계: 도커 저장소 추가 및 설치 시작 ---"
sudo apt-get update
sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt-get update
sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin
echo "? 도커 엔진 설치 완료."
echo

echo "--- 3단계: 도커 서비스(Daemon) 프록시 설정 ---"
sudo mkdir -p /etc/systemd/system/docker.service.d
sudo tee /etc/systemd/system/docker.service.d/http-proxy.conf > /dev/null <<EOF
[Service]
Environment="HTTP_PROXY=$MY_PROXY"
Environment="HTTPS_PROXY=$MY_PROXY"
Environment="NO_PROXY=localhost,127.0.0.1"
EOF
sudo systemctl daemon-reload
sudo systemctl restart docker
echo "? 도커 서비스 프록시 설정 및 재시작 완료."
echo

echo "--- 4단계: 설치 후 작업 ---"
sudo usermod -aG docker ${USER}
echo "? 사용자를 docker 그룹에 추가했습니다."
echo
echo "?? 모든 과정이 최종 완료되었습니다! SSH 접속을 끊고 다시 로그인한 뒤 'docker run hello-world'를 실행해보세요."