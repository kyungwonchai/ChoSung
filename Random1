벤트를 사용하여 SeriesPoint의 정보를 얻는데 문제가 있다면, 간단한 해결책으로 시리즈의 이름을 별도로 저장하고 이를 사용하는 방법을 고려할 수 있습니다. 다음은 이 접근법을 사용하는 예제 코드입니다:

시리즈를 생성할 때 각 시리즈의 이름을 저장합니다.
ObjectSelected 이벤트에서 시리즈 이름을 조회합니다.
csharp
Copy code
// 시리즈 이름을 저장하기 위한 딕셔너리
Dictionary<Series, string> seriesNames = new Dictionary<Series, string>();

private void InitializeChartData()
{
    // ... 데이터 테이블 생성 및 차트 설정 ...

    foreach (string type in new[] { "A", "B", "C" })
    {
        Series series = new Series(type, ViewType.Bar);
        chartControl.Series.Add(series);
        seriesNames[series] = type; // 시리즈 이름 저장

        // ... 시리즈 포인트 추가 ...
    }

    // ... 차트 커스터마이징 ...
}

private void ChartControl_ObjectSelected(object sender, HotTrackEventArgs e)
{
    if (e.HitInfo.InSeries)
    {
        SeriesPoint point = e.HitInfo.SeriesPoint;
        Series series = point.Series;

        if (series != null && seriesNames.TryGetValue(series, out string seriesName))
        {
            string usage = point.Argument;
            string type = seriesName;

            // 여기에서 DB 조회 및 GridControl 업데이트 로직을 추가합니다.
        }
    }
}
이 코드에서는 seriesNames 딕셔너리를 사용하여 각 시리즈의 이름을 저장하고, 이후에 ObjectSelected 이벤트에서 이 딕셔너리를 조회하여 시리즈 이름을 얻습니다. 이 방법은 SeriesPoint 객체에서 직접 N