using System.Windows.Threading;

// WPF에서 타이머는 DispatcherTimer를 사용합니다
private DispatcherTimer _connectionCheckTimer;

// 서버와의 연결 상태를 5초마다 체크하는 메서드
private void StartConnectionCheck()
{
    if (_connectionCheckTimer == null)
    {
        _connectionCheckTimer = new DispatcherTimer();
        _connectionCheckTimer.Interval = TimeSpan.FromMilliseconds(_checkInterval); // 5초 간격 설정
        _connectionCheckTimer.Tick += CheckConnectionStatus; // 타이머 틱 이벤트에 핸들러 연결
        _connectionCheckTimer.Start(); // 타이머 시작
    }
}

// 연결 상태 확인을 위한 메서드
private void CheckConnectionStatus(object sender, EventArgs e)
{
    if (_client != null && (!_client.Connected || (_client.Client.Poll(0, SelectMode.SelectRead) && _client.Client.Available == 0)))
    {
        // 연결이 끊어졌으면 재연결 시도
        _isConnected = false;
        ConnectionStatusChanged?.Invoke(false); // 연결 해제 이벤트 호출
        StopConnectionCheck(); // 연결 확인 타이머 중지
        StartConnectionAttemptAsync(); // 재연결 시도
    }
}

// 연결 상태 확인을 중지하는 메서드
private void StopConnectionCheck()
{
    _connectionCheckTimer?.Stop(); // 타이머 중지
    _connectionCheckTimer = null; // 타이머 해제
}
