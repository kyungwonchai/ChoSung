래는 devexpress gridcontrol를 사용하여 WPF에서 요구하신 기능을 수행하는 예시 코드입니다. 코드의 설명과 주석은 모두 한국어로 작성되었습니다.

csharp

using DevExpress.Xpf.Grid;
using System;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.Windows;
using Microsoft.AspNet.SignalR.Client;

namespace WpfApp
{
    public partial class MainWindow : Window
    {
        // 데이터베이스 연결 문자열
        private string connectionString = "your_connection_string_here";
        private HubConnection hubConnection;
        private IHubProxy hubProxy;

        public MainWindow()
        {
            InitializeComponent();
            InitializeSignalR();
            LoadData();
        }

        private void InitializeSignalR()
        {
            hubConnection = new HubConnection("your_signalr_server_url_here");
            hubProxy = hubConnection.CreateHubProxy("YourHubName");

            hubConnection.Start().Wait();
        }

        private void LoadData()
        {
            using (SqlConnection connection = new SqlConnection(connectionString))
            {
                connection.Open();
                SqlCommand command = new SqlCommand("SELECT * FROM Table_수기입", connection);
                SqlDataReader reader = command.ExecuteReader();
                List<YourDataClass> data = new List<YourDataClass>();

                while (reader.Read())
                {
                    data.Add(new YourDataClass
                    {
                        Key1 = reader["key1"].ToString(),
                        사용자이름 = reader["사용자이름"].ToString(),
                        편집상태 = Convert.ToInt32(reader["편집상태"])
                    });
                }

                gridControl1.ItemsSource = data;
                reader.Close();
            }
        }

        private void TableView_CellValueChanging(object sender, CellValueChangedEventArgs e)
        {
            if (e.Column.FieldName == "편집상태" && e.Row != null)
            {
                // 편집 상태가 변경되었을 때의 로직
                YourDataClass rowData = e.Row as YourDataClass;
                if (rowData != null)
                {
                    string selectedKey = rowData.Key1;

                    // 데이터베이스 업데이트 로직 실행 (사용자 이름 및 편집상태 변경)

                    // 알림 전송 및 lock1 함수 실행
                    hubProxy.Invoke("Lock1Function", selectedKey);

                    // 행 배경색 변경
                    rowData.편집상태 = 1;
                    TableView view = sender as TableView;
                    view.SetRowState(e.RowHandle, DevExpress.Xpf.Grid.GridRowState.Modified);
                    view.SetRowCellValue(e.RowHandle, "편집상태", 1);
                }
            }
        }

        private void 조회Button_Click(object sender, RoutedEventArgs e)
        {
            LoadData();
        }

        // 기타 메서드 및 이벤트 핸들러 정의
    }

    public class YourDataClass
    {
        public string Key1 { get; set; }
        public string 사용자이름 { get; set; }
        public int 편집상태 { get; set; }
    }
}

이 코드는 DevExpress GridControl를 사용하여 행 편집 상태 및 데이터 업데이트를 관리하고, SignalR를 통해 다른 프로그램에 알림을 보내는 등의 기능을 구현하는 예시입니다. 필요한 부분을 수정하여 프로젝트에 통합해보세요.