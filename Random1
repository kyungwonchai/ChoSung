표: 테이블의 행마다 배경색을 번갈아가며 설정하여 가독성 향상하기
행마다 다른 배경색을 적용하여 가독성을 높이는 방식으로 표를 스타일링할 수 있습니다.
여기서는 Streamlit의 st.dataframe() 및 st.write()를 사용하여 스타일을 설정하는 방법을 보여줍니다.

✅ 코드 수정 (행마다 배경색 설정)
python
코드 복사
import streamlit as st
import pymssql
import pandas as pd

# MSSQL 서버 연결 설정 함수
def get_connection():
    return pymssql.connect(
        server="YOUR_SERVER",
        user="YOUR_USER",
        password="YOUR_PASSWORD",
        database="YOUR_DATABASE"
    )

# Get_min_bestdifferent 프로시저 호출 함수 (cursor.fetchall() 방식)
def fetch_main_data(proc_name):
    conn = get_connection()
    cursor = conn.cursor()
    cursor.execute(f"EXEC {proc_name}")
    rows = cursor.fetchall()
    conn.close()
    return rows

# DataFrame 생성 함수 (전체 높이 사용)
def create_dataframe(rows):
    original_columns = [
        "group1", "line1", "model1", "type1", "ecn1", "edition1",
        "ACT2_1", "ACT2_2", "ACT2_3", "ACT2_4",
        "ACT2_5", "ACT2_6", "ACT2_7", "ACT2_8"
    ]

    new_columns = [
        "group1", "line1", "model1", "type1", "ecn1", "edition1",
        "MC1", "MC2", "MC3", "MC4", "MC5", "MC6", "MC7", "MC8"
    ]

    df = pd.DataFrame(rows, columns=original_columns)
    df.columns = new_columns

    mc_columns = [f"MC{i}" for i in range(1, 9)]
    df[mc_columns] = df[mc_columns].astype(float).round(2)

    return df

# Streamlit 앱 구성
def main():
    st.set_page_config(page_title="MC1 ~ MC8 Data Table", layout="wide")
    st.title("MC1 ~ MC8 Data Table - 가독성 개선")

    rows = fetch_main_data("Get_min_bestdifferent_t1")
    
    if not rows:
        st.error("데이터를 가져오지 못했습니다. 프로시저 또는 데이터베이스 연결을 확인하세요.")
    else:
        df = create_dataframe(rows)

        # 테이블 스타일링: 홀수 행과 짝수 행에 서로 다른 배경색 설정
        def alternate_row_colors(row_index):
            if row_index % 2 == 0:
                return ['background-color: #f2f2f2'] * len(df.columns)
            else:
                return ['background-color: #ffffff'] * len(df.columns)

        styled_df = df.style.apply(alternate_row_colors, axis=1)

        # 스타일 적용하여 표시
        st.write(styled_df)

if __name__ == "__main__":
    main()
✅ 코드 설명
행 배경색 번갈아가며 설정하기 (alternate_row_colors())

python
코드 복사
def alternate_row_colors(row_index):
    if row_index % 2 == 0:
        return ['background-color: #f2f2f2'] * len(df.columns)
    else:
        return ['background-color: #ffffff'] * len(df.columns)
짝수 행 (index % 2 == 0) → 연한 회색 (#f2f2f2)

홀수 행 (index % 2 != 0) → 흰색 (#ffffff)

DataFrame의 모든 열에 대해 스타일을 적용.

Streamlit 표 스타일링 (st.write())

python
코드 복사
st.write(styled_df)
pandas.DataFrame.style 객체를 직접 표시하여 스타일링을 적용.