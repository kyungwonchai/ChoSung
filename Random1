립보드에서 이미지를 가져와 다양한 방법으로 이미지를 처리하고 QR 코드를 인식하는 자동화된 C# WPF 프로그램을 작성해보겠습니다. 이 프로그램에서는 Python을 사용하여 이미지 처리를 수행한 후 결과를 반환하는 방식으로 동작합니다.

준비 단계
Python 스크립트 작성: QR 코드 인식을 위한 Python 스크립트를 작성합니다.
C#과 Python 간의 통신 설정: C#에서 Python 스크립트를 호출하고 결과를 받아오는 방법을 설정합니다.
Python 스크립트 (qr_code_recognition.py)
Python 스크립트는 OpenCV와 다양한 이미지 처리 기법을 사용하여 QR 코드를 인식하는 작업을 수행합니다.

python
코드 복사
import cv2
import numpy as np
import sys

def change_color(image, color):
    gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
    colored = cv2.cvtColor(gray, cv2.COLOR_GRAY2BGR)
    colored += color
    return colored

def enhance_image(image):
    return cv2.detailEnhance(image, sigma_s=10, sigma_r=0.15)

def detect_qr_code(image):
    qr_decoder = cv2.QRCodeDetector()
    data, points, _ = qr_decoder.detectAndDecode(image)
    return data, points

def main(image_path):
    image = cv2.imread(image_path)
    if image is None:
        print("Failed to load image")
        return

    colors = [np.array([50, 0, 0]), np.array([0, 50, 0]), np.array([0, 0, 50])]
    processed_images = [change_color(image, color) for color in colors]
    processed_images.append(enhance_image(image))
    processed_images.append(cv2.cvtColor(image, cv2.COLOR_BGR2GRAY))

    for idx, img in enumerate(processed_images):
        data, points = detect_qr_code(img)
        if data:
            if points is not None:
                points = points[0].astype(int)
                for i in range(len(points)):
                    cv2.line(img, tuple(points[i]), tuple(points[(i + 1) % len(points)]), (0, 255, 0), 2)
            cv2.imwrite(f"result_{idx}.png", img)
            print(f"QR Code detected: {data}")
            return

    print("QR Code not detected")

if __name__ == "__main__":
    main(sys.argv[1])
C# 코드
C# 코드에서 Python 스크립트를 호출하여 이미지를 처리하고 결과를 받아옵니다.

csharp
코드 복사
using System;
using System.Diagnostics;
using System.IO;
using System.Windows;
using System.Windows.Media.Imaging;
using OpenCvSharp;
using OpenCvSharp.Extensions;

namespace WpfApp
{
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
            ProcessClipboardImage();
        }

        private void ProcessClipboardImage()
        {
            // 클립보드에서 이미지를 가져옵니다.
            if (Clipboard.ContainsImage())
            {
                BitmapSource clipboardImage = Clipboard.GetImage();
                Mat src = clipboardImage.ToMat();

                // 임시 파일로 저장
                string imagePath = Path.Combine(Path.GetTempPath(), "clipboard_image.png");
                src.SaveImage(imagePath);

                // Python 스크립트 실행
                string resultPath = RunPythonScript(imagePath);
                if (!string.IsNullOrEmpty(resultPath) && File.Exists(resultPath))
                {
                    // 결과 이미지를 로드하여 표시
                    Mat resultImage = new Mat(resultPath, ImreadModes.Color);
                    ImageControl.Source = BitmapSourceConverter.ToBitmapSource(resultImage);
                }
                else
                {
                    MessageBox.Show("QR 코드를 인식할 수 없습니다.");
                }
            }
            else
            {
                MessageBox.Show("클립보드에 이미지가 없습니다.");
            }
        }

        private string RunPythonScript(string imagePath)
        {
            string pythonScriptPath = "qr_code_recognition.py"; // Python 스크립트 경로
            string pythonExePath = @"C:\Python39\python.exe"; // Python 실행 파일 경로

            ProcessStartInfo start = new ProcessStartInfo
            {
                FileName = pythonExePath,
                Arguments = $"{pythonScriptPath} {imagePath}",
                UseShellExecute = false,
                RedirectStandardOutput = true,
                CreateNoWindow = true
            };

            using (Process process = Process.Start(start))
            {
                using (StreamReader reader = process.StandardOutput)
                {
                    string result = reader.ReadToEnd();
                    process.WaitForExit();
                    string[] lines = result.Split(new[] { Environment.NewLine }, StringSplitOptions.RemoveEmptyEntries);
                    foreach (string line in lines)
                    {
                        if (line.StartsWith("QR Code detected"))
                        {
                            return Path.Combine(Path.GetDirectoryName(imagePath), "result_0.png"); // 결과 파일 경로
                        }
                    }
                }
            }

            return null;
        }
    }

    public static class BitmapSourceExtensions
    {
        public static Mat ToMat(this BitmapSource bitmapsource)
        {
            var width = bitmapsource.PixelWidth;
            var height = bitmapsource.PixelHeight;
            var stride = width * ((bitmapsource.Format.BitsPerPixel + 7) / 8);
            var memoryBlockPointer = IntPtr.Zero;
            try
            {
                memoryBlockPointer = System.Runtime.InteropServices.Marshal.AllocHGlobal(height * stride);
                bitmapsource.CopyPixels(
                  new Int32Rect(0, 0, width, height),
                  memoryBlockPointer,
                  height * stride,
                  stride);

                using (var mat = new Mat(height, width, MatType.CV_8UC4, memoryBlockPointer))
                {
                    return mat.Clone();
                }
            }
            finally
            {
                if (memoryBlockPointer != IntPtr.Zero)
                {
                    System.Runtime.InteropServices.Marshal.FreeHGlobal(memoryBlockPointer);
                }
            }
        }
    }
}
요약
Python 스크립트: 이미지를 다양한 색상으로 변환하고 QR 코드를 인식합니다. 인식된 QR 코드가 있으면 그 이미지를 저장합니다.
C# 코드: 클립보드에서 이미지를 가져와 임시 파일로 저장한 후 Python 스크립트를 호출하여 이미지 처리를 수행합니다. 결과 이미지를 로드하여 표시합니다.
이 방식은 여러 번 시도하여 QR 코드를 인식하는 과정을 자동화합니다. 각 시도에서 다른 방법을 사용하여 이미지를 처리하고, 최종적으로 QR 코드를 인식합니다.