cs - 기본 폴더 경로 설정 및 파일 저장
D:\_KwTaskist 경로를 기준으로 작업 데이터를 저장하도록 설정합니다.

csharp
코드 복사
using System;
using System.Collections.ObjectModel;
using System.IO;
using SwiftAIMaster.Models;
using SwiftAIMaster.Services;

namespace SwiftAIMaster.ViewModels
{
    public class TaskManager
    {
        private readonly DatabaseService _databaseService;  
        public ObservableCollection<TaskModel> Tasks { get; set; }

        // 기본 폴더 경로 설정
        private readonly string _baseFolderPath = @"D:\_KwTaskist";

        public TaskManager(DatabaseService databaseService)
        {
            _databaseService = databaseService;

            // 기본 폴더가 없을 경우 생성
            if (!Directory.Exists(_baseFolderPath))
            {
                Directory.CreateDirectory(_baseFolderPath);
            }

            Tasks = new ObservableCollection<TaskModel>(_databaseService.GetAllTasks());
            Tasks.CollectionChanged += Tasks_CollectionChanged;
        }

        public void AddTask(TaskModel task)
        {
            task.Priority = Tasks.Count + 1;
            Tasks.Insert(0, task);                           
            _databaseService.AddTask(task);                  

            // 작업 추가 시, 기본 폴더에 기록
            SaveTaskToFile(task);
        }

        private void SaveTaskToFile(TaskModel task)
        {
            // 작업 파일 경로 생성
            string taskFilePath = Path.Combine(_baseFolderPath, $"{task.FolderPath}.txt");

            // 작업 정보를 파일에 기록
            File.WriteAllText(taskFilePath, $"Task ID: {task.Id}\nPriority: {task.Priority}\nCreated Time: {task.CreatedTime}\n...");
        }

        public void UpdateTask(TaskModel task)
        {
            task.UpdateCount++;
            task.LastUpdateTime = DateTime.Now;
            _databaseService.UpdateTask(task);

            // 작업 업데이트 시 파일도 수정
            SaveTaskToFile(task);
        }

        private void Tasks_CollectionChanged(object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
        {
            if (e.Action == System.Collections.Specialized.NotifyCollectionChangedAction.Move)
            {
                UpdateTaskPriorities();   
            }
        }

        private void UpdateTaskPriorities()
        {
            for (int i = 0; i < Tasks.Count; i++)
            {
                var task = Tasks[i];
                task.Priority = i + 1;  
                _databaseService.UpdateTaskPriority(task.Id, task.Priority); 
            }
        }
    }
}
설명