네, 알겠습니다. 답답하셨을 것 같습니다. 처음부터 끝까지, 군더더기 없이 딱 필요한 명령어만 순서대로 다시 알려드리겠습니다. 중간에 막히는 부분 없이 성공하실 수 있도록 차근차근 따라오시면 됩니다.

🔥 우분투에서 사내 GitHub으로 첫 푸시까지 A to Z 가이드
총 4단계로 구성되어 있습니다. 1단계부터 순서대로 진행해 주세요.

1단계: 내 컴퓨터(Ubuntu)에 프로젝트 폴더 준비
가장 먼저 내 컴퓨터에 코드를 저장할 폴더를 만들고, Git이 관리할 수 있도록 설정합니다.

프로젝트 폴더 생성 및 이동
터미널을 열고 아래 명령어를 입력하세요. MyProject는 원하시는 폴더명으로 바꾸셔도 됩니다.

Bash

mkdir MyProject
cd MyProject
Git 저장소로 초기화
현재 폴더를 Git이 관리하는 공간으로 만듭니다. .git 숨김 폴더가 생성됩니다.

Bash

git init
Git 사용자 정보 설정 (최초 한 번만)
커밋할 때마다 기록될 이름과 이메일입니다. 본인의 사내 계정 정보로 입력하세요.

Bash

git config --global user.name "Your Name"
git config --global user.email "your.email@samsung.com"
2단계: 사내 GitHub에 원격 저장소 만들기
이제 코드를 최종적으로 업로드할 사내 GitHub 서버에 공간을 만듭니다.

사내 GitHub 접속 및 로그인
웹 브라우저로 사내 GitHub 사이트에 접속해서 로그인하세요.

'New Repository' 클릭
오른쪽 위에 있는 '+' 버튼이나 'New' 버튼을 눌러 새 저장소를 만듭니다.

저장소 설정

Repository name: 내 컴퓨터에 만든 폴더명과 똑같이 MyProject로 입력합니다.

Public/Private: Private으로 설정합니다.

'Create repository' 버튼을 누릅니다.

HTTPS 주소 복사
저장소가 만들어지면 아래와 같은 화면이 나옵니다. 여기서 HTTPS 주소를 복사 버튼을 눌러 복사해두세요.

3단계: 🚨 SSL 인증서 오류 해결 (가장 중요!)
"certificate verify failed" 오류는 내 컴퓨터가 사내 GitHub 서버를 믿지 못해서 발생합니다. 가장 빠르고 확실한 방법으로 해결하겠습니다.

터미널에 아래 명령어를 그대로 입력하고 엔터를 누르세요. 이 명령어는 Git이 SSL 인증서를 검증하는 보안 절차를 일단 건너뛰게 만들어, 연결 자체를 허용해 줍니다.

Bash

git config --global http.sslVerify false
이 설정은 지금 겪고 계신 문제를 가장 확실하게 우회할 수 있는 방법입니다. 나중에 회사 보안 정책에 따라 IT팀에 문의하여 정식 인증서를 등록할 수도 있지만, 일단은 이 방법으로 푸시를 먼저 성공시키는 것이 중요합니다.

4단계: 코드 올리기 (연결 및 첫 푸시)
이제 준비는 모두 끝났습니다. 내 컴퓨터의 폴더와 GitHub의 저장소를 연결하고 코드를 올립니다.

로컬 저장소와 원격 저장소 연결
터미널(1단계의 MyProject 폴더)로 돌아와서, 아까 복사해둔 HTTPS 주소를 붙여넣어 아래 명령어를 실행합니다. origin은 원격 저장소의 별명입니다.

Bash

git remote add origin <2단계에서_복사한_HTTPS_주소>
테스트 파일 생성 및 추가
푸시할 파일이 있어야 하니, 간단한 README 파일을 만듭니다.

Bash

echo "# My First Project" >> README.md
git add .
첫 커밋 (변경 내용 기록)
변경 사항에 대해 메모를 남깁니다.

Bash

git commit -m "Initial commit"
★ 최종 푸시 (Push) ★
드디어 서버에 코드를 올립니다!

Bash

git push origin main
만약 main 브랜치가 아니라 master 브랜치라면 git push origin master 라고 입력하세요.

로그인 정보 입력
위 명령어를 실행하면 사용자 이름과 비밀번호를 물어봅니다.

Username: 사내 GitHub 아이디 입력

Password: 절대 비밀번호를 입력하지 마세요! 사내 GitHub 설정에서 발급받은 **개인용 액세스 토큰(Personal Access Token, PAT)**을 붙여넣기 해야 합니다. (토큰은 입력해도 화면에 보이지 않는 것이 정상입니다.)