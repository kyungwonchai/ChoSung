using System;
using System.Net.Sockets;
using System.Threading.Tasks;

public class SocketClientMergeOI
{
    private TcpClient _client;  // TCP 클라이언트 객체
    private NetworkStream _stream;  // 네트워크 스트림
    private readonly string _ipAddress;  // 서버 IP 주소
    private readonly int _port;  // 서버 포트
    private bool _isConnected;  // 연결 상태 플래그
    private const int _retryInterval = 2000;  // 2초 간격으로 연결 시도
    private const int _maxRetryTime = 5 * 60 * 1000;  // 최대 5분 (300초)

    // 연결 상태가 변경될 때 호출될 이벤트
    public event Action<bool> ConnectionStatusChanged;

    public SocketClientMergeOI(string ipAddress, int port)
    {
        _ipAddress = ipAddress;
        _port = port;
        _isConnected = false;
        StartConnectionAttemptAsync();  // 연결 시도
    }

    // 서버에 연결 시도하는 비동기 함수
    private async void StartConnectionAttemptAsync()
    {
        int elapsedTime = 0;  // 경과 시간 측정

        while (elapsedTime < _maxRetryTime)
        {
            if (!_isConnected)
            {
                try
                {
                    _client = new TcpClient();
                    await _client.ConnectAsync(_ipAddress, _port);
                    _isConnected = true;  // 연결 성공
                    _stream = _client.GetStream();  // 스트림 설정
                    ConnectionStatusChanged?.Invoke(true);  // 연결 성공 이벤트 호출
                    StartReceiving();  // 데이터 수신 시작
                    break;  // 연결이 성공하면 반복문 종료
                }
                catch (SocketException)
                {
                    // 연결 실패, 2초 대기 후 재시도
                    await Task.Delay(_retryInterval);
                    elapsedTime += _retryInterval;
                }
            }
        }

        // 5분 동안 연결 실패 시, NG 처리
        if (!_isConnected)
        {
            ConnectionStatusChanged?.Invoke(false);  // 연결 실패 상태 전송
            Console.WriteLine("NG: 서버 연결에 실패하였습니다.");
        }
    }

    // 서버로부터 데이터를 수신하는 함수 (여기서는 구현 간략화)
    private async void StartReceiving()
    {
        byte[] buffer = new byte[1024];
        try
        {
            while (_isConnected)
            {
                int bytesRead = await _stream.ReadAsync(buffer, 0, buffer.Length);
                if (bytesRead == 0)
                {
                    // 서버와의 연결 끊김
                    _isConnected = false;
                    ConnectionStatusChanged?.Invoke(false);  // 연결 해제 알림
                    StartConnectionAttemptAsync();  // 재연결 시도
                }
                else
                {
                    // 데이터 처리 (필요에 따라 구현)
                    string receivedData = System.Text.Encoding.ASCII.GetString(buffer, 0, bytesRead);
                    Console.WriteLine($"수신된 데이터: {receivedData}");
                }
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"데이터 수신 중 오류 발생: {ex.Message}");
            _isConnected = false;
            ConnectionStatusChanged?.Invoke(false);  // 연결 해제 알림
            StartConnectionAttemptAsync();  // 재연결 시도
        }
    }
}
