 설명에서, ObservableCollection<string>을 사용하여 ListBox에 로그를 표시할 때, 새로운 로그가 추가될 때마다 ListBox의 스크롤을 마지막 항목으로 자동으로 이동시키려면 다음과 같이 설정할 수 있습니다.

ObservableCollection의 CollectionChanged 이벤트를 사용하여 새로운 항목이 추가될 때마다 ScrollIntoView 메서드를 호출하여 마지막 항목으로 스크롤하도록 설정할 수 있습니다.

수정된 MainWindow.xaml.cs 코드
MainWindow.xaml.cs에서 CollectionChanged 이벤트를 구독하고, 로그가 추가될 때마다 스크롤을 마지막 항목으로 이동시키도록 설정합니다.

csharp
코드 복사
using System.Windows;
using System.Windows.Controls;
using RouterMiddleACR.ViewModels;
using System.Collections.Specialized;

namespace RouterMiddleACR
{
    public partial class MainWindow : Window
    {
        private MainViewModel _viewModel;

        public MainWindow()
        {
            InitializeComponent();
            _viewModel = new MainViewModel();
            DataContext = _viewModel;

            // ObservableCollection의 CollectionChanged 이벤트를 구독하여 로그가 추가될 때마다 스크롤 이동
            _viewModel.LogMessages.CollectionChanged += LogMessages_CollectionChanged;
        }

        // 로그 메시지가 추가될 때마다 호출되는 이벤트 핸들러
        private void LogMessages_CollectionChanged(object sender, NotifyCollectionChangedEventArgs e)
        {
            // 로그가 추가된 경우
            if (e.Action == NotifyCollectionChangedAction.Add)
            {
                // 마지막 항목으로 스크롤
                LogListBox.ScrollIntoView(LogListBox.Items[LogListBox.Items.Count - 1]);
            }
        }
    }
}
코드 설명
CollectionChanged 이벤트 구독:

MainWindow의 생성자에서 LogMessages의 CollectionChanged 이벤트를 구독합니다. 이 이벤트는 ObservableCollection에 항목이 추가되거나 제거될 때 발생합니다.
이벤트 핸들러 구현 (LogMessages_CollectionChanged):

NotifyCollectionChangedEventArgs를 통해 컬렉션 변경의 종류를 확인합니다.
로그가 추가된 경우 (NotifyCollectionChangedAction.Add), ScrollIntoView 메서드를 사용하여 LogListBox의 마지막 항목으로 스크롤합니다.
LogListBox.Items[LogListBox.Items.Count - 1]는 LogListBox의 마지막 항목을 참조하며, ScrollIntoView는 해당 항목이 뷰에 표시되도록 스크롤을 이동시킵니다.
이 코드를 적용하면 새로운 로그 메시지가 추가될 때마다 ListBox의 스크롤이 자동으로 마지막 항목으로 이동하게 되어, 항상 최신 로그를 확인할 수 있게 됩니다.