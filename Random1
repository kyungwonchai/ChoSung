MP5RESULT를 포함한 컬럼 처리가 누락되었거나, 동적으로 처리하는 부분에서 인덱스 계산에 오류가 있을 가능성이 높습니다. 주어진 코드에서 4까지 처리되었다면, 다음 사항을 점검하고 수정해야 합니다.

점검 사항
AddDefaultColumn 함수 호출 범위 확인:

for 루프에서 MP5DATA 및 MP5RESULT를 포함하여 5까지 호출되었는지 확인.
for 루프 조건이 i <= 4로 설정되었을 가능성.
SQL 쿼리에서 MP5DATA 및 MP5RESULT 확인:

SQL INSERT 문에 @MP5DATA와 @MP5RESULT가 포함되었는지 확인.
디버그 로그 확인:

MP5DATA와 MP5RESULT가 제대로 처리되고 있는지 로그로 확인.
수정 사항
1. for 루프 범위 수정
GetNewRows 함수에서 MP2부터 MP10까지 처리하도록 for 루프 조건을 점검합니다.

csharp
코드 복사
// Optional 컬럼 처리 (MP2~MP10)
for (int i = 2; i <= 10; i++) // 기존 i <= 4에서 10까지 수정
{
    AddDefaultColumn(row, $"MP{i}DATA", values, (i * 2) + 3);    // MPxDATA
    AddDefaultColumn(row, $"MP{i}RESULT", values, (i * 2) + 4); // MPxRESULT
}
2. SQL 쿼리 확인 및 수정
SQL INSERT 문에 MP5DATA와 MP5RESULT가 누락되었을 가능성이 있습니다. 확인 후 포함되도록 수정합니다.

csharp
코드 복사
using (var command = new SqlCommand(
    @"INSERT INTO YourTable (ipname, InspectionTime, ModelName, AlignResult, MP1DATA, MP1RESULT, MP2DATA, MP2RESULT, MP3DATA, MP3RESULT, MP4DATA, MP4RESULT, MP5DATA, MP5RESULT)
      VALUES (@ipname, @InspectionTime, @ModelName, @AlignResult, @MP1DATA, @MP1RESULT, @MP2DATA, @MP2RESULT, @MP3DATA, @MP3RESULT, @MP4DATA, @MP4RESULT, @MP5DATA, @MP5RESULT)", connection))
{
    command.Parameters.AddWithValue("@ipname", row["ipname"]);
    command.Parameters.AddWithValue("@InspectionTime", row["InspectionTime"]);
    command.Parameters.AddWithValue("@ModelName", row["ModelName"]);
    command.Parameters.AddWithValue("@AlignResult", row["AlignResult"]);
    command.Parameters.AddWithValue("@MP1DATA", row["MP1DATA"]);
    command.Parameters.AddWithValue("@MP1RESULT", row["MP1RESULT"]);
    command.Parameters.AddWithValue("@MP2DATA", row["MP2DATA"]);
    command.Parameters.AddWithValue("@MP2RESULT", row["MP2RESULT"]);
    command.Parameters.AddWithValue("@MP3DATA", row["MP3DATA"]);
    command.Parameters.AddWithValue("@MP3RESULT", row["MP3RESULT"]);
    command.Parameters.AddWithValue("@MP4DATA", row["MP4DATA"]);
    command.Parameters.AddWithValue("@MP4RESULT", row["MP4RESULT"]);
    command.Parameters.AddWithValue("@MP5DATA", row["MP5DATA"]); // MP5DATA 추가
    command.Parameters.AddWithValue("@MP5RESULT", row["MP5RESULT"]); // MP5RESULT 추가

    await command.ExecuteNonQueryAsync();
}
3. 디버그 로그 추가
MP5DATA와 MP5RESULT가 올바르게 처리되고 있는지 확인하기 위해 디버그 로그를 추가합니다.

csharp
코드 복사
Debug.WriteLine($"MP5DATA: {row["MP5DATA"]}, MP5RESULT: {row["MP5RESULT"]}");
최종 확인
for 루프 범위 수정:

GetNewRows 함수에서 i <= 10으로 수정하여 MP2부터 MP10까지 처리.
SQL 쿼리 수정:

MP5DATA 및 MP5RESULT를 포함.
디버그 로그 추가:
