ectionChanged 이벤트를 사용할 수 있습니다. 이 방법은 더 간단하고 직접적입니다. 아래 코드는 ListBox 항목을 클릭하면 SelectionChanged 이벤트가 발생하고, 이 이벤트를 처리하여 원하는 작업을 수행하는 방법을 보여줍니다.

    MainWindow.xaml:

xml

<Window x:Class="YourNamespace.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:YourNamespace">
    <Window.DataContext>
        <local:ViewModel />
    </Window.DataContext>
    <Grid>
        <ListBox ItemsSource="{Binding Buttons}" 
                 SelectionChanged="ListBox_SelectionChanged">
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="Yellow" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Content}" />
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
    </Grid>
</Window>

    MainWindow.xaml.cs:

csharp

public partial class MainWindow : Window
{
    public ViewModel ViewModel { get; set; }

    public MainWindow()
    {
        InitializeComponent();
        ViewModel = new ViewModel();
        DataContext = ViewModel;
    }

    private void ListBox_SelectionChanged(object sender, SelectionChangedEventArgs e)
    {
        var listBox = sender as ListBox;
        var selectedButtonModel = listBox.SelectedItem as ButtonModel;
        if (selectedButtonModel != null)
        {
            // 여기에서 원하는 작업을 수행합니다.
            // 예: selectedButtonModel.Command.Execute(null);
        }
    }
}

    ViewModel 클래스 (이전과 동일):

csharp

public class ViewModel
{
    public ObservableCollection<ButtonModel> Buttons { get; set; }

    public ViewModel()
    {
        Buttons = new ObservableCollection<ButtonModel>();
        // 초기 버튼 데이터를 설정합니다.
    }
}

    ButtonModel 클래스 (이전과 동일):

csharp

public class ButtonModel
{
    public string Content { get; set; }
    public ICommand Command { get; set; }
}

이제 사용자가 리스트 박스 항목을 클릭하면 ListBox_SelectionChanged 이벤트 핸들러가 호출되며, 이 핸들러에서 선택된 ButtonModel의 Command를 실행할 수 있습니