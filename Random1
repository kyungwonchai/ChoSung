SMD 3교대 근무 스케줄 관리 애플리케이션을 WPF와 DevExpress 22.2를 사용하여 구축하기 위해 다음 단계를 따를 수 있습니다. 이 애플리케이션은 MSSQL2014와 연동되어 각 날짜마다 주/후/야 교대 근무 인계장을 관리하고 표시합니다.

1. 데이터베이스 설계
먼저 MSSQL2014에 데이터베이스 테이블을 설계합니다.

sql
코드 복사
CREATE TABLE ShiftReport (
    Id INT PRIMARY KEY IDENTITY(1,1),
    Date DATE NOT NULL,
    ShiftType NVARCHAR(50) NOT NULL, -- '주', '후', '야', '공통'
    Report1 NVARCHAR(MAX) NULL,
    Report2 NVARCHAR(MAX) NULL,
    Report3 NVARCHAR(MAX) NULL,
    Report4 NVARCHAR(MAX) NULL,
    CommonReport NVARCHAR(MAX) NULL
);
2. WPF 프로젝트 생성 및 DevExpress 설정
Visual Studio에서 새로운 WPF 프로젝트를 생성하고, NuGet 패키지를 사용하여 DevExpress 22.2를 설치합니다.

3. XAML 설정
MainWindow.xaml에 TabControl과 GridControl을 설정합니다.

xml
코드 복사
<Window x:Class="ShiftReportApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
        mc:Ignorable="d"
        Title="Shift Report Manager" Height="450" Width="800">
    <Grid>
        <TabControl>
            <TabItem Header="금일 인계장">
                <Grid>
                    <dxg:GridControl Name="gridControlToday">
                        <dxg:GridControl.Columns>
                            <dxg:GridColumn Header="주-1" FieldName="DayShiftReport1"/>
                            <dxg:GridColumn Header="주-2" FieldName="DayShiftReport2"/>
                            <dxg:GridColumn Header="주-3" FieldName="DayShiftReport3"/>
                            <dxg:GridColumn Header="주-4" FieldName="DayShiftReport4"/>
                            <dxg:GridColumn Header="후-1" FieldName="EveningShiftReport1"/>
                            <dxg:GridColumn Header="후-2" FieldName="EveningShiftReport2"/>
                            <dxg:GridColumn Header="후-3" FieldName="EveningShiftReport3"/>
                            <dxg:GridColumn Header="후-4" FieldName="EveningShiftReport4"/>
                            <dxg:GridColumn Header="야-1" FieldName="NightShiftReport1"/>
                            <dxg:GridColumn Header="야-2" FieldName="NightShiftReport2"/>
                            <dxg:GridColumn Header="야-3" FieldName="NightShiftReport3"/>
                            <dxg:GridColumn Header="야-4" FieldName="NightShiftReport4"/>
                            <dxg:GridColumn Header="공용인계장" FieldName="CommonReport"/>
                        </dxg:GridControl.Columns>
                    </dxg:GridControl>
                </Grid>
            </TabItem>
            <TabItem Header="검색">
                <Grid>
                    <DatePicker Name="datePicker" SelectedDateChanged="OnDateSelected"/>
                    <dxg:GridControl Name="gridControlSearch">
                        <dxg:GridControl.Columns>
                            <dxg:GridColumn Header="주-1" FieldName="DayShiftReport1"/>
                            <dxg:GridColumn Header="주-2" FieldName="DayShiftReport2"/>
                            <dxg:GridColumn Header="주-3" FieldName="DayShiftReport3"/>
                            <dxg:GridColumn Header="주-4" FieldName="DayShiftReport4"/>
                            <dxg:GridColumn Header="후-1" FieldName="EveningShiftReport1"/>
                            <dxg:GridColumn Header="후-2" FieldName="EveningShiftReport2"/>
                            <dxg:GridColumn Header="후-3" FieldName="EveningShiftReport3"/>
                            <dxg:GridColumn Header="후-4" FieldName="EveningShiftReport4"/>
                            <dxg:GridColumn Header="야-1" FieldName="NightShiftReport1"/>
                            <dxg:GridColumn Header="야-2" FieldName="NightShiftReport2"/>
                            <dxg:GridColumn Header="야-3" FieldName="NightShiftReport3"/>
                            <dxg:GridColumn Header="야-4" FieldName="NightShiftReport4"/>
                            <dxg:GridColumn Header="공용인계장" FieldName="CommonReport"/>
                        </dxg:GridControl.Columns>
                    </dxg:GridControl>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
4. 코드 비하인드 (C#)
MainWindow.xaml.cs 파일에서 MSSQL 데이터베이스와의 연동을 설정합니다.

csharp
코드 복사
using System;
using System.Data;
using System.Data.SqlClient;
using System.Windows;
using System.Windows.Controls;

namespace ShiftReportApp
{
    public partial class MainWindow : Window
    {
        private string connectionString = "your_connection_string_here";

        public MainWindow()
        {
            InitializeComponent();
            LoadTodayReport();
        }

        private void LoadTodayReport()
        {
            DateTime today = DateTime.Now.Date;
            DataTable dataTable = new DataTable();

            using (SqlConnection conn = new SqlConnection(connectionString))
            {
                string query = "SELECT * FROM ShiftReport WHERE Date = @Date";
                SqlCommand cmd = new SqlCommand(query, conn);
                cmd.Parameters.AddWithValue("@Date", today);

                SqlDataAdapter adapter = new SqlDataAdapter(cmd);
                adapter.Fill(dataTable);
            }

            gridControlToday.ItemsSource = dataTable;
        }

        private void OnDateSelected(object sender, SelectionChangedEventArgs e)
        {
            DateTime selectedDate = (DateTime)((DatePicker)sender).SelectedDate;
            LoadReportByDate(selectedDate);
        }

        private void LoadReportByDate(DateTime date)
        {
            DataTable dataTable = new DataTable();

            using (SqlConnection conn = new SqlConnection(connectionString))
            {
                string query = "SELECT * FROM ShiftReport WHERE Date = @Date";
                SqlCommand cmd = new SqlCommand(query, conn);
                cmd.Parameters.AddWithValue("@Date", date);

                SqlDataAdapter adapter = new SqlDataAdapter(cmd);
                adapter.Fill(dataTable);
            }

            gridControlSearch.ItemsSource = dataTable;
        }
    }
}
5. 추가 기능
데이터를 편집하고 저장하기 위해 저장 버튼을 추가합니다.
사용자 입력 유효성 검사와 오류 처리 로직을 추가합니다.
결론
이렇게 하면 WPF와 DevExpress 22.2를 사용하여 SMD 3교대 근무 인계장 애플리케이션을 구축할 수 있습니다. 필요한 경우 각 탭에서 데이터를 편집하고 저장할 수 있으며, 날짜별로 검색도 가능합니다. 데이터베이스와의 연동을 통해 실시간으로 데이터를 가져오고 업데이트할 수 있습니다.