목과 라벨을 가진 입력 창이 나타나고, 사용자가 "삭제"라는 텍스트를 입력한 후 확인 버튼을 누르면 삭제 작업을 수행하는 코드를 만드는 방법에 대해 설명드리겠습니다.

다음은 해당 기능을 구현하는 기본적인 예제 코드입니다:

XAML 코드 (MainWindow.xaml): 사용자 인터페이스를 설정합니다. 여기에는 "삭제" 버튼과, 입력과 메시지 표시를 위한 라벨이 포함됩니다.
xml
Copy code
<Window x:Class="WpfApp1.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="MainWindow" Height="200" Width="300">
    <StackPanel Margin="10">
        <Button Content="삭제" Click="DeleteButton_Click" />
        <Label x:Name="StatusLabel"/>
    </StackPanel>
</Window>
C# 코드 (MainWindow.xaml.cs): 버튼 클릭 이벤트를 처리하고, 입력 창을 표시하며, 사용자의 입력을 확인합니다.
csharp
Copy code
using System.Windows;

public partial class MainWindow : Window
{
    public MainWindow()
    {
        InitializeComponent();
    }

    private void DeleteButton_Click(object sender, RoutedEventArgs e)
    {
        // 입력창 생성 및 설정
        var inputDialog = new InputDialog("삭제", "삭제를 입력하세요.");
        if (inputDialog.ShowDialog() == true)
        {
            // 사용자가 '삭제'라고 입력했는지 확인
            if (inputDialog.ResponseText == "삭제")
            {
                StatusLabel.Content = "삭제되었습니다.";
                // 삭제 로직 수행
                DeleteSomething();
            }
            else
            {
                StatusLabel.Content = "삭제를 취소했습니다.";
            }
        }
    }

    private void DeleteSomething()
    {
        // 여기에 실제 삭제를 수행하는 코드 작성
    }
}

public class InputDialog : Window
{
    private TextBox InputBox;
    public string ResponseText { get; set; }

    public InputDialog(string title, string label)
    {
        Title = title;
        StackPanel panel = new StackPanel();
        Label lbl = new Label();
        lbl.Content = label;
        panel.Children.Add(lbl);

        InputBox = new TextBox();
        panel.Children.Add(InputBox);

        Button okButton = new Button();
        okButton.Content = "확인";
        okButton.Click += OkButton_Click;
        panel.Children.Add(okButton);

        Content = panel;
    }

    private void OkButton_Click(object sender, RoutedEventArgs e)
    {
        ResponseText = InputBox.Text;
        DialogResult = true;
    }
}
위 코드에서 InputDialog 클래스는 사용자 입력을 받는 다이얼로그 창을 정의하고 있습니다. 사용자가 "확인" 버튼을 클릭하면 입력된 텍스트를 메인 윈도우로 반환하고, 메인 윈도우에서는 이 텍스트를 검사하여 "삭제"가 정확히 입력되었는지 확인한 후에 삭제 로직을 실행합니