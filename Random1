 편집 종료 이벤트(CellEndEdit)에서 저장 기능을 구현할 때, 마지막으로 수정한 셀의 내용이 반영되지 않는 문제를 해결하려면, 편집이 끝난 후 변경된 내용을 명시적으로 저장하도록 해야 합니다. CellEndEdit 이벤트 핸들러 내에서 셀의 값을 가져와서 저장 기능에 반영하도록 코드를 수정하면 됩니다.

아래는 수정한 셀의 내용을 포함하여 저장하는 예제입니다:

먼저 XAML 파일을 정의합니다:

xml
코드 복사
<Window x:Class="YourNamespace.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
        xmlns:dxsp="http://schemas.devexpress.com/winfx/2008/xaml/spreadsheet"
        Title="MainWindow" Height="450" Width="800">
    <Grid>
        <dxsp:SpreadsheetControl Name="spreadsheetControl" 
                                 CellEndEdit="SpreadsheetControl_CellEndEdit"/>
    </Grid>
</Window>
다음으로, Code-behind 파일에서 이벤트 핸들러를 정의합니다:

csharp
코드 복사
using System.Windows;
using DevExpress.Spreadsheet;
using DevExpress.Xpf.Spreadsheet;

namespace YourNamespace
{
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
        }

        private void SpreadsheetControl_CellEndEdit(object sender, SpreadsheetCellEventArgs e)
        {
            // 셀 편집이 끝난 후 수정된 셀의 내용을 저장합니다.
            IWorkbook workbook = spreadsheetControl.Document;
            workbook.EndUpdate(); // 모든 변경사항을 적용
            SaveWorkbook(workbook);
        }

        private void SaveWorkbook(IWorkbook workbook)
        {
            // 여기에 워크북 저장 로직을 구현합니다.
            // 예를 들어, 파일로 저장하는 경우:
            string filePath = "your_file_path.xlsx";
            workbook.SaveDocument(filePath, DocumentFormat.Xlsx);
            MessageBox.Show("Workbook saved successfully.", "Save");
        }
    }
}
이 코드에서 CellEndEdit 이벤트가 발생할 때, workbook.EndUpdate()를 호출하여 모든 변경사항이 적용된 후 워크북을 저장합니다. 이렇게 하면 마지막으로 수정된 셀의 내용이 반영되어 저장됩니다.

SaveWorkbook 메서드에서 워크북을 파일로 저장하는 로직을 구현합니다. 이 예제에서는 엑셀 파일 형식으로 저장하도록 하였습니다. 필요에 따라 저장 경로나 형식을 변경할 수 있습니다.

이 방법으로 마지막으로 수정한 셀의 내용이 제대로 저장되도록 할 수 있습