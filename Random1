 현재 설치된 CUDA 상태 확인 (가상 환경 포함)
가상 환경에서 실행할 경우, 반드시 가상 환경을 활성화한 후 실행해야 합니다.

(1) 기본적인 CUDA 정보 확인
CUDA가 제대로 설치되었는지 확인하려면, 먼저 시스템에서 CUDA 드라이버를 감지하는지 확인해야 합니다.

① CUDA 버전 확인
터미널 또는 CMD에서 실행:

sh
코드 복사
nvcc --version
출력 예시:

arduino
코드 복사
nvcc: NVIDIA (R) Cuda compiler
release 12.8, V12.8.76
✅ 정상 동작하면 현재 설치된 CUDA 버전이 표시됨
❌ 만약 nvcc: command not found 또는 'nvcc' is not recognized 오류가 뜨면 CUDA가 감지되지 않는 것임. → [아래 2번 해결 방법 참고]

② NVIDIA 드라이버 및 GPU 상태 확인
sh
코드 복사
nvidia-smi
출력 예시:

pgsql
코드 복사
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 525.85.05    Driver Version: 525.85.05    CUDA Version: 12.8     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp   Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |          MIG M.      |
|===============================+======================+======================|
|   0  NVIDIA RTX 3090   On     | 00000000:65:00.0 Off |                  Off |
| 30%   50C    P8    15W / 350W |   500MiB / 24576MiB  |      5%      Default |
+-------------------------------+----------------------+----------------------+
✅ 정상 동작하면 GPU 정보와 CUDA 버전이 표시됨
❌ 만약 command not found 또는 Failed to initialize NVML 오류 발생 시, CUDA 드라이버가 감지되지 않음. → [아래 2번 해결 방법 참고]

2. CUDA가 감지되지 않을 때 해결 방법
CUDA가 감지되지 않는다면 환경 변수 문제 또는 드라이버 문제일 가능성이 높습니다.

(1) 환경 변수 확인 및 수정
CUDA가 설치된 경로를 Windows 환경 변수에서 확인해야 합니다.

① 현재 환경 변수 확인
CMD에서 실행:

sh
코드 복사
echo %PATH%
출력값에서 C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\bin 이 포함되어 있는지 확인.
만약 없다면 CUDA가 제대로 인식되지 않는 것임.

② CUDA 환경 변수 추가
CMD(관리자 권한)에서 실행:

sh
코드 복사
setx PATH "%PATH%;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\bin"
setx CUDA_HOME "C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8"
✅ 환경 변수 수정 후 반드시 시스템을 재부팅해야 적용됨!

(2) PyTorch에서 CUDA 감지 여부 확인
CUDA가 제대로 감지되는지 확인하기 위해 Python에서 실행:

① Python에서 PyTorch CUDA 상태 확인
python
코드 복사
import torch
print("CUDA Available:", torch.cuda.is_available())
print("CUDA Version:", torch.version.cuda)
print("Torch Version:", torch.__version__)
print("GPU Name:", torch.cuda.get_device_name(0) if torch.cuda.is_available() else "No GPU Found")
✅ 출력 예시 (정상 작동)

yaml
코드 복사
CUDA Available: True
CUDA Version: 12.1
Torch Version: 2.1.0
GPU Name: NVIDIA GeForce RTX 3090
❌ 출력 예시 (CUDA 감지 실패)

pgsql
코드 복사
CUDA Available: False
CUDA Version: None
Torch Version: 2.1.0
GPU Name: No GPU Found
🚨 CUDA 감지 실패 시 해결 방법 → 아래 (3)번 실행

(3) PyTorch에서 CUDA가 감지되지 않을 때 해결 방법
① PyTorch가 CUDA를 지원하는지 확인
현재 설치된 PyTorch가 CUDA를 지원하지 않는 CPU 전용 버전일 수 있음.

sh
코드 복사
pip show torch
출력에서 Location: ... 경로가 CPU 전용 패키지 (torch-*-cpu.whl) 라면, CUDA 지원 버전이 아님.

✅ 해결 방법: CUDA 버전 PyTorch 재설치

sh
코드 복사
pip uninstall torch torchvision torchaudio
pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu121
② torch.cuda.is_available() 가 계속 False일 경우
CUDA 드라이버 강제 재설정
sh
코드 복사
set CUDA_HOME=C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.1\
set PATH=C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.1\bin;%PATH%
Python 다시 실행 후 확인
python
코드 복사
import torch
print(torch.cuda.is_available())  # True면 정상 작동
3. 요약 (차례대로 진행)
1️⃣ nvcc --version → CUDA 버전 확인
2️⃣ nvidia-smi → GPU 및 드라이버 상태 확인
3️⃣ CUDA 환경 변수 설정 (setx PATH ...)
4️⃣ Python에서 torch.cuda.is_available() 실행하여 CUDA 감지 여부 확인
5️⃣ CUDA 감지되지 않으면 PyTorch CUDA 버전 (cu121) 다시 설치