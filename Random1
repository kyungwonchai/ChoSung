로 생성하는 C# 함수를 아래에 구현하였습니다. 이 함수는 중복을 방지하기 위해 HashSet을 사용하며, 생성된 값을 저장하고 다시 생성할 때 이미 존재하는 값이 나오면 재생성하는 방식을 사용합니다.

csharp
코드 복사
using System;
using System.Collections.Generic;

public class VirtualLogisticsLabelGenerator
{
    private HashSet<string> generatedLabels;
    private Random random;
    private const int labelLength = 12;

    public VirtualLogisticsLabelGenerator()
    {
        generatedLabels = new HashSet<string>();
        random = new Random();
    }

    public string GenerateUniqueLabel()
    {
        string label;
        do
        {
            label = GenerateLabel();
        } while (generatedLabels.Contains(label)); // 중복 체크

        generatedLabels.Add(label); // 중복 방지를 위해 저장
        return label;
    }

    private string GenerateLabel()
    {
        char[] label = new char[labelLength];
        label[0] = 'W'; // W로 시작

        for (int i = 1; i < labelLength; i++)
        {
            label[i] = (char)random.Next('0', '9' + 1); // 숫자 범위에서 랜덤 선택
        }

        return new string(label);
    }
}
사용법:
csharp
코드 복사
VirtualLogisticsLabelGenerator generator = new VirtualLogisticsLabelGenerator();
string uniqueLabel = generator.GenerateUniqueLabel();
Console.WriteLine(uniqueLabel); // 예: W123456789012
설명:
HashSet<string> generatedLabels: 중복을 방지하기 위해 이미 생성된 라벨을 저장합니다.
GenerateUniqueLabel: 중복되지 않는 12자리 라벨을 생성합니다.
GenerateLabel: W로 시작하고 그 뒤에 11자리 숫자를 랜덤으로 붙여서 라벨을 생성합니다.
중복이 발생하면 새로운 라벨을 다시 생성합니다.
이렇게 구현하면 중복 없이 랜덤한 12자리의 가상물류표를 계속 생성할 수 있습니다.






