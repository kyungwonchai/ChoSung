래는 MainWindow.xaml.cs 파일에 모든 기능을 구현한 방식입니다. UI에서 버튼을 클릭하면 30초에서 60초 사이의 랜덤 간격으로 파일을 생성하는 간단한 프로그램입니다. 비동기적으로 동작하도록 await와 Task.Delay를 사용하여 UI 차단을 방지합니다.

MainWindow.xaml.cs 코드
csharp
코드 복사
using System;
using System.IO;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;

namespace FileWatcherApp
{
    public partial class MainWindow : Window
    {
        private bool _isGenerating;

        public MainWindow()
        {
            InitializeComponent();
        }

        private async void StartButton_Click(object sender, RoutedEventArgs e)
        {
            // 파일 생성이 이미 진행 중이라면 중복 실행 방지
            if (_isGenerating)
            {
                Log("File generation is already running.");
                return;
            }

            _isGenerating = true;
            Log("Starting to generate files...");

            try
            {
                while (_isGenerating)
                {
                    // 30~60초 랜덤 간격 설정
                    var randomInterval = new Random().Next(30, 61);
                    Log($"Next file will be generated in {randomInterval} seconds...");

                    // 랜덤 간격 대기
                    await Task.Delay(randomInterval * 1000);

                    // 파일 생성 함수 호출
                    GenerateLogFile();
                }
            }
            catch (Exception ex)
            {
                Log($"Error during file generation: {ex.Message}");
            }
        }

        // 로그 파일 생성 함수
        private void GenerateLogFile()
        {
            try
            {
                var prodLogPath = @"C:\PROD_FILE_LOG";

                // 현재 시간을 기반으로 파일 이름 생성
                var currentTime = DateTime.Now.ToString("yyyyMMddHHmmss");
                var fileName = $"W_test_{currentTime}.txt";
                var filePath = Path.Combine(prodLogPath, fileName);

                // 폴더가 없으면 생성
                if (!Directory.Exists(prodLogPath))
                {
                    Directory.CreateDirectory(prodLogPath);
                }

                // 파일 내용 작성
                var fileContent = "MAG_NO='MAG1234'\nMAG_QTY=100\nBASIC_MODEL='MODEL_ABC'\nMODEL_CODE='CODE_XYZ'\nPO_NO='PO98765'\nPO_PLAN_QTY=500\nPO_PROD_QTY=450";

                // 파일 생성
                File.WriteAllText(filePath, fileContent);

                // 로그 출력
                Log($"Log file generated: {filePath}");
            }
            catch (Exception ex)
            {
                Log($"Error generating log file: {ex.Message}");
            }
        }

        // 로그 출력 함수
        private void Log(string message)
        {
            LogTextBox.AppendText($"{DateTime.Now}: {message}\n");
            LogTextBox.ScrollToEnd();
        }

        private void StopButton_Click(object sender, RoutedEventArgs e)
        {
            _isGenerating = false;
            Log("Stopped file generation.");
        }
    }
}
MainWindow.xaml
xml
코드 복사
<Window x:Class="FileWatcherApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="File Watcher" Height="350" Width="525">
    <Grid>
        <StackPanel>
            <!-- 로그 메시지를 표시하는 TextBox -->
            <TextBox Name="LogTextBox" Height="200" VerticalScrollBarVisibility="Auto" IsReadOnly="True"/>

            <!-- 파일 생성 시작 버튼 -->
            <Button Content="Start Generating Files" Click="StartButton_Click" />

            <!-- 파일 생성 중지 버튼 -->
            <Button Content="Stop Generating Files" Click="StopButton_Click" />
        </StackPanel>
    </Grid>
</Window>
설명
StartButton_Click: 버튼을 클릭하면 30초에서 60초 사이의 랜덤한 시간 간격으로 파일을 생성합니다. Task.Delay를 사용하여 비동기 대기를 처리하고, UI 차단을 방지합니다. 생성 중에 다시 시작 버튼을 눌러도 중복 실행되지 않도록 _isGenerating 플래그로 상태를 관리합니다.

파일 생성: GenerateLogFile 함수가 호출되어 C:\PROD_FILE_LOG 경로에 W_test_yyyyMMddHHmmss.txt 형식의 파일을 생성합니다. 파일 내용은 예시 데이터로 작성됩니다.

로그 출력: 로그는 LogTextBox에 출력됩니다. Log 함수가 호출될 때마다 메시지가 텍스트 박스에 추가되고, 자동으로 스크롤됩니다.

중지 기능: StopButton_Click을 통해 파일 생성을 중지할 수 있습니다.

실행 방법
시작: "Start Generating Files" 버튼을 클릭하면 파일 생성이 시작됩니다.
중지: "Stop Generating Files" 버튼을 클릭하면 파일 생성이 중지됩니다.
로그: 생성된 파일의 경로와 상태 메시지가 LogTextBox에 출력됩니다.
이 프로그램은 요구 사항에 따라 버튼을 누르면 랜덤한 간격으로 파일을 생성하며, UI가 비동기적으로 처리됩니다