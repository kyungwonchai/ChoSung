사항 정리
모든 시간대(24시간)에 대해 HH:30 ~ HH+1:20 사이의 시간을 HH+1로 표시해야 함.

예를 들어:

05:30 ~ 06:20 ➔ 06

06:30 ~ 07:20 ➔ 07

19:30 ~ 20:20 ➔ 20

23:30 ~ 00:20 ➔ 00 (다음 날로 넘어감)

최종 출력은 날짜와 시간이 포함된 YYYY-MM-DD HH 형식이어야 함 (CONVERT(VARCHAR(13), ..., 120) 사용).

📌 뷰 작성 쿼리
sql
코드 복사
CREATE VIEW view_lossdata AS
SELECT 
    line,
    CASE 
        WHEN 
            DATEPART(MINUTE, DATEADD(MINUTE, -10, datev)) BETWEEN 30 AND 59
            THEN CONVERT(VARCHAR(13), DATEADD(HOUR, 1, DATEADD(MINUTE, -DATEPART(MINUTE, DATEADD(MINUTE, -10, datev)), datev)), 120)
        WHEN 
            DATEPART(MINUTE, DATEADD(MINUTE, -10, datev)) BETWEEN 0 AND 20
            THEN CONVERT(VARCHAR(13), DATEADD(MINUTE, -DATEPART(MINUTE, DATEADD(MINUTE, -10, datev)), datev), 120)
        ELSE
            CONVERT(VARCHAR(13), DATEADD(MINUTE, -DATEPART(MINUTE, DATEADD(MINUTE, -10, datev)), datev), 120)
    END AS 시간,
    DATEADD(MINUTE, -10, datev) AS datev
FROM table_lossdata;
📌 설명
30분 ~ 20분 규칙 적용:

DATEPART(MINUTE, datev)를 사용해서 분 값을 가져옵니다.

30 <= 분 <= 59 사이일 때는 시간을 1시간 증가 (+1 hour).

0 <= 분 <= 20 사이일 때는 해당 시간을 그대로 표시.

21 <= 분 <= 29 사이의 데이터는 자동으로 해당 시간으로 처리됨.

결과 형식: 시간 컬럼은 YYYY-MM-DD HH 형식으로 표시됩니다.

예외 처리: 날짜 변경 시 (예: 23:30 -> 00) 자동으로 다음 날짜로 넘어갑니다.

📌 예시 출력
line	시간	datev
1	2025-04-01 08	2025-04-01 08:10:00
1	2025-04-01 08	2025-04-01 08:45:00
1	2025-04-01 06	2025-04-01 05:35:00
1	2025-04-01 00	2025-04-01 23:50:00
1	2025-04-02 00	2025-04-01 23:35:00