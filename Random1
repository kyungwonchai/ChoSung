아래는 WPF TreeView에서 프로그램 실행 시 모든 구역(Group)이 확장된 상태로 표시되도록 수정된 코드입니다.

수정된 C# 코드
csharp
코드 복사
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Linq;
using System.Windows;

namespace TreeViewCheckboxExample
{
    public partial class MainWindow : Window
    {
        public ObservableCollection<Group> Groups { get; set; }

        public MainWindow()
        {
            InitializeComponent();
            DataContext = this;

            // 데이터 로드 및 초기 설정
            LoadData();
            SetAllChecked(true);
            ExpandAllGroups();
        }

        /// <summary>
        /// 데이터를 로드합니다.
        /// </summary>
        private void LoadData()
        {
            Groups = new ObservableCollection<Group>
            {
                new Group
                {
                    Name = "Group A",
                    Lines = new ObservableCollection<Line>
                    {
                        new Line { Name = "Line 1.1" },
                        new Line { Name = "Line 1.2" }
                    }
                },
                new Group
                {
                    Name = "Group B",
                    Lines = new ObservableCollection<Line>
                    {
                        new Line { Name = "Line 2.1" },
                        new Line { Name = "Line 2.2" }
                    }
                }
            };
        }

        /// <summary>
        /// 모든 그룹과 라인을 체크 상태로 설정합니다.
        /// </summary>
        private void SetAllChecked(bool isChecked)
        {
            foreach (var group in Groups)
            {
                group.IsChecked = isChecked;
                foreach (var line in group.Lines)
                {
                    line.IsChecked = isChecked;
                }
            }
        }

        /// <summary>
        /// 모든 그룹을 확장 상태로 설정합니다.
        /// </summary>
        private void ExpandAllGroups()
        {
            foreach (var group in Groups)
            {
                group.IsExpanded = true;
            }
        }
    }

    public class Group : INotifyPropertyChanged
    {
        private bool _isChecked;
        private bool _isExpanded;
        public string Name { get; set; }
        public ObservableCollection<Line> Lines { get; set; } = new ObservableCollection<Line>();

        public bool IsChecked
        {
            get => _isChecked;
            set
            {
                if (_isChecked != value)
                {
                    _isChecked = value;
                    OnPropertyChanged(nameof(IsChecked));
                }
            }
        }

        public bool IsExpanded
        {
            get => _isExpanded;
            set
            {
                if (_isExpanded != value)
                {
                    _isExpanded = value;
                    OnPropertyChanged(nameof(IsExpanded));
                }
            }
        }

        public event PropertyChangedEventHandler PropertyChanged;
        protected void OnPropertyChanged(string propertyName)
        {
            PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    public class Line : INotifyPropertyChanged
    {
        private bool _isChecked;
        public string Name { get; set; }

        public bool IsChecked
        {
            get => _isChecked;
            set
            {
                if (_isChecked != value)
                {
                    _isChecked = value;
                    OnPropertyChanged(nameof(IsChecked));
                }
            }
        }

        public event PropertyChangedEventHandler PropertyChanged;
        protected void OnPropertyChanged(string propertyName)
        {
            PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}
수정된 XAML
TreeView에 **IsExpanded**를 바인딩하도록 HierarchicalDataTemplate에 변경 사항을 추가합니다.

xml
코드 복사
<Window x:Class="TreeViewCheckboxExample.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="TreeView with Checkboxes" Height="600" Width="400">
    <Grid>
        <TreeView x:Name="treeView" ItemsSource="{Binding Groups}" Margin="10">
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Lines}">
                    <StackPanel Orientation="Horizontal">
                        <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay}" 
                                  Checked="CheckBox_Checked" Unchecked="CheckBox_Unchecked" />
                        <TextBlock Text="{Binding Name}" Margin="5,0,0,0" />
                    </StackPanel>
                    <!-- 그룹 확장 상태 바인딩 -->
                    <HierarchicalDataTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsExpanded}" Value="True">
                            <Setter Property="TreeViewItem.IsExpanded" Value="True" />
                        </DataTrigger>
                    </HierarchicalDataTemplate.Triggers>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>
    </Grid>
</Window>
수정 사항 설명
그룹 확장 속성 추가:

Group 클래스에 IsExpanded 속성을 추가.
ExpandAllGroups 메서드를 통해 모든 그룹이 확장 상태로 표시됩니다.
XAML 수정:

**HierarchicalDataTemplate.Triggers**를 사용해 IsExpanded 속성에 따라 TreeViewItem의 확장 상태를 동기화.
프로그램 실행 시 기본 설정:

그룹과 라인의 체크박스가 모두 체크됩니다.
모든 그룹이 확장된 상태로 표시됩니다.
실행 결과
TreeView 초기 상태:
모든 그룹과 라인의 체크박스가 체크되어 있음.