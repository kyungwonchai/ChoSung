import pdfplumber
import traceback

def dump_raw_data_from_pdf(pdf_path: str, output_path: str):
    """
    pdfplumber가 추출하는 모든 'word' 객체의 원본 데이터를 텍스트 파일에 기록합니다.
    분석이나 그룹핑 로직은 일절 포함하지 않습니다.
    """
    print(f"'{pdf_path}' 파일의 원본 데이터 추출을 시작합니다...")
    print(f"결과는 '{output_path}' 파일에 저장됩니다.")
    
    with open(output_path, 'w', encoding='utf-8') as f:
        try:
            with pdfplumber.open(pdf_path) as pdf:
                f.write(f"PDF 파일 '{pdf_path}' 원본 데이터 분석\n")
                f.write("="*50 + "\n\n")
                
                for i, page in enumerate(pdf.pages, 1):
                    f.write(f"=============== PAGE {i} ===============\n")
                    
                    try:
                        # 페이지에서 모든 word 객체를 추출합니다.
                        words = page.extract_words(extra_attrs=["size", "fontname"])
                        
                        if not words:
                            f.write("-> 이 페이지에서 단어(word) 객체를 찾지 못했습니다.\n\n")
                            continue
                        
                        f.write(f"-> 총 {len(words)}개의 단어(word) 객체를 발견했습니다.\n\n")
                        
                        # 추출된 각 word 객체의 정보를 안전하게 기록합니다.
                        for j, word in enumerate(words, 1):
                            # .get()을 사용하여 KeyError가 발생하지 않도록 안전하게 값을 가져옵니다.
                            text_value = word.get('text', 'N/A')
                            x0 = word.get('x0', 0)
                            y0 = word.get('y0', None) # None으로 기본값을 설정하여 키 유무를 명확히 확인
                            x1 = word.get('x1', 0)
                            y1 = word.get('y1', 0)
                            
                            # 'y0' 키의 존재 여부를 명시적으로 확인합니다.
                            y0_status = "OK" if y0 is not None else "!!! 'y0' KEY MISSING !!!"
                            
                            f.write(
                                f"  - Obj [{j}]:\n"
                                f"    Value : '{text_value}'\n"
                                f"    Position: (x0={x0:.2f}, y0={y0 if y0 is not None else 'N/A'}, x1={x1:.2f}, y1={y1:.2f})\n"
                                f"    Status: {y0_status}\n"
                                f"    Raw Data: {word}\n\n"
                            )
                            
                    except Exception as page_error:
                        f.write(f"!!! 페이지 {i} 처리 중 심각한 오류 발생: {page_error} !!!\n")
                        f.write(traceback.format_exc() + "\n")
                        
            print("원본 데이터 추출이 성공적으로 완료되었습니다.")

        except Exception as e:
            error_message = f"!!! PDF 파일 처리 중 치명적인 오류 발생: {e} !!!"
            print(error_message)
            f.write(error_message + "\n")
            f.write(traceback.format_exc())

# --- 메인 실행 부분 ---
if __name__ == "__main__":
    # 1. 실제 PDF 파일 경로를 입력하세요.
    pdf_file_path = "YOUR_PDF_FILE_PATH.pdf"
    
    # 2. 결과가 저장될 파일 이름입니다.
    output_file_path = "raw_data_dump.txt"
    
    dump_raw_data_from_pdf(pdf_file_path, output_file_path)