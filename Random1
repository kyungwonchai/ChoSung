using System;
using System.IO;
using System.Windows;
using Microsoft.Office.Core;
using Microsoft.Office.Interop.PowerPoint;
using Application = Microsoft.Office.Interop.PowerPoint.Application;
using MessageBox = System.Windows.MessageBox;
using System.Windows.Clipboard;
using System.Drawing.Imaging;
using System.Drawing;
using System.Windows.Interop;
using System.Windows.Media.Imaging;

namespace PowerPointToVectorImage
{
    public partial class MainWindow : Window
    {
        private const int ImageWidth = 3; // 300% 크기 비율
        private const int ImageHeight = 3; // 300% 크기 비율

        public MainWindow()
        {
            InitializeComponent();
        }

        private void ConvertToImage_Click(object sender, RoutedEventArgs e)
        {
            string pptxFilePath = "your_pptx_file_path.pptx";

            Application pptApp = new Application();
            Presentation presentation = null;

            try
            {
                presentation = pptApp.Presentations.Open(pptxFilePath, MsoTriState.msoFalse, MsoTriState.msoFalse, MsoTriState.msoFalse);

                pptApp.WindowState = PpWindowState.ppWindowMinimized; // 앱 창 최소화

                var imageList = new System.Collections.Generic.List<System.Drawing.Image>();

                foreach (Slide slide in presentation.Slides)
                {
                    string tempImagePath = Path.GetTempFileName() + ".emf";
                    slide.Export(tempImagePath, "EMF", ImageWidth * slide.Master.Width, ImageHeight * slide.Master.Height);

                    using (var image = Image.FromFile(tempImagePath))
                    {
                        imageList.Add((System.Drawing.Image)image.Clone());
                    }

                    File.Delete(tempImagePath);
                }

                var clipboardImages = new System.Collections.Specialized.StringCollection();

                foreach (var image in imageList)
                {
                    var bitmapSource = Imaging.CreateBitmapSourceFromHBitmap(
                        image.GetHbitmap(),
                        IntPtr.Zero,
                        System.Windows.Int32Rect.Empty,
                        BitmapSizeOptions.FromEmptyOptions());

                    Clipboard.SetImage(bitmapSource);

                    clipboardImages.Add(image.GetHashCode().ToString());
                }

                Clipboard.SetFileDropList(new System.Collections.Specialized.StringCollection());

                Clipboard.SetImage(null);

                MessageBox.Show("Conversion completed. Result images are copied to the clipboard.");
            }
            catch (Exception ex)
            {
                MessageBox.Show("An error occurred during conversion: " + ex.Message);
            }
            finally
            {
                if (presentation != null)
                {
                    presentation.Close();
                    System.Runtime.InteropServices.Marshal.ReleaseComObject(presentation);
                }
                if (pptApp != null)
                {
                    pptApp.Quit();
                    System.Runtime.InteropServices.Marshal.ReleaseComObject(pptApp);
                }
            }
        }
    }
}
