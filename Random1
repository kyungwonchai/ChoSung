네, 맞습니다. 제가 이전에 "파란색 굵은 글씨" 기능을 설명하면서 MainViewModel.cs만 먼저 드렸었네요. 죄송합니다. 해당 기능을 완성하기 위해 필요한 나머지 3개 파일의 수정된 최종 원본 코드(주석 제외)를 드리겠습니다.

수정/추가해야 할 파일 목록:

Infrastructure/EntityStateToBrushConverter.cs (신규)
Infrastructure/EntityStateToFontWeightConverter.cs (신규)
Views/MainWindow.xaml (수정)
1. Infrastructure/EntityStateToBrushConverter.cs (신규 파일)

이 파일을 Infrastructure 폴더에 새로 추가하세요.

C#

using LockerManagementApp.ViewModels;
using System;
using System.Data.Entity;
using System.Globalization;
using System.Windows;
using System.Windows.Data;
using System.Windows.Media;

namespace LockerManagementApp.Infrastructure
{
    public class EntityStateToBrushConverter : IMultiValueConverter
    {
        public object Convert(object[] values, Type targetType, object parameter, CultureInfo culture)
        {
            if (values != null && values.Length == 2 && values[0] != null && values[1] is MainViewModel viewModel)
            {
                object entity = values[0];
                try
                {
                    EntityState state = viewModel.GetEntityState(entity);
                    if (state == EntityState.Added || state == EntityState.Modified)
                    {
                        return Brushes.Blue;
                    }
                }
                catch (Exception ex)
                {
                     System.Diagnostics.Debug.WriteLine($"EntityStateToBrushConverter Error: {ex.Message}");
                }
            }
            // 기본값 또는 Unchanged 상태일 때 (테마나 기본값 사용)
            // return Brushes.Black; // 또는 다른 기본 브러시
            return DependencyProperty.UnsetValue; // 테마 기본값 사용
        }

        public object[] ConvertBack(object value, Type[] targetTypes, object parameter, CultureInfo culture)
        {
            throw new NotImplementedException();
        }
    }
}
2. Infrastructure/EntityStateToFontWeightConverter.cs (신규 파일) ? 

이 파일도 Infrastructure 폴더에 새로 추가하세요.

C#

using LockerManagementApp.ViewModels;
using System;
using System.Data.Entity;
using System.Globalization;
using System.Windows;
using System.Windows.Data;

namespace LockerManagementApp.Infrastructure
{
    public class EntityStateToFontWeightConverter : IMultiValueConverter
    {
        public object Convert(object[] values, Type targetType, object parameter, CultureInfo culture)
        {
            if (values != null && values.Length == 2 && values[0] != null && values[1] is MainViewModel viewModel)
            {
                object entity = values[0];
                 try
                 {
                     EntityState state = viewModel.GetEntityState(entity);
                     if (state == EntityState.Added || state == EntityState.Modified)
                     {
                         return FontWeights.Bold;
                     }
                 }
                 catch (Exception ex)
                 {
                      System.Diagnostics.Debug.WriteLine($"EntityStateToFontWeightConverter Error: {ex.Message}");
                 }
            }
            return FontWeights.Normal; // 기본값
        }

        public object[] ConvertBack(object value, Type[] targetTypes, object parameter, CultureInfo culture)
        {
            throw new NotImplementedException();
        }
    }
}
3. Views/MainWindow.xaml (수정) ? 

<dx:ThemedWindow.Resources>에 새로 만든 컨버터 2개를 추가합니다.
UnsavedCellStyle이라는 새로운 Style을 정의합니다. 이 스타일은 Foreground와 FontWeight를 설정하기 위해 위에서 만든 컨버터와 MultiBinding을 사용합니다.
메인 그리드의 편집 가능한 모든 컬럼(GridColumn)에 CellStyle="{StaticResource UnsavedCellStyle}"을 추가합니다. (기존 HighlightCellStyle은 제거하거나 그대로 두어도 괜찮지만, UnsavedCellStyle이 우선 적용됩니다.)
XML

<dx:ThemedWindow
    x:Class="LockerManagementApp.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
    xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys"
    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
    xmlns:dxlc="http://schemas.devexpress.com/winfx/2008/xaml/layoutcontrol"
    xmlns:local="clr-namespace:LockerManagementApp.Views"
    xmlns:viewmodels="clr-namespace:LockerManagementApp.ViewModels"
    xmlns:models="clr-namespace:LockerManagementApp.Models"
    xmlns:infra="clr-namespace:LockerManagementApp.Infrastructure"
    Title="사물함 관리 프로그램 (DevExpress MVVM - .NET Framework 4.8)" Height="750" Width="1300"
    Loaded="MainWindow_Loaded" Closing="MainWindow_Closing"
    FontSize="14"
    >

    <dx:ThemedWindow.DataContext>
        <viewmodels:MainViewModel/>
    </dx:ThemedWindow.DataContext>

    <dx:ThemedWindow.Resources>
        <infra:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <infra:HighlightCellConverter x:Key="HighlightCellConverter"/>
        <infra:EntityStateToBrushConverter x:Key="EntityStateToBrushConverter"/>
        <infra:EntityStateToFontWeightConverter x:Key="EntityStateToFontWeightConverter"/>

        <Style x:Key="LightBlueHeaderStyle" TargetType="dxg:BaseGridHeader"> <Setter Property="Background" Value="LightBlue"/> <Setter Property="HorizontalContentAlignment" Value="Center"/> <Setter Property="FontWeight" Value="Bold"/> <Setter Property="Foreground" Value="Black"/> </Style>
        <Style TargetType="dxg:GridColumnHeader" BasedOn="{StaticResource LightBlueHeaderStyle}"/> <Style TargetType="dxg:BandHeaderControl" BasedOn="{StaticResource LightBlueHeaderStyle}"/>

        <Style x:Key="HighlightCellStyle" TargetType="dxg:CellContentPresenter"> <Setter Property="Background"> <Setter.Value> <MultiBinding Converter="{StaticResource HighlightCellConverter}"> <Binding Path="Value"/> <Binding Path="Column.FieldName"/> <Binding Path="View.DataContext.SelectedCellValue"/> <Binding Path="View.DataContext.SelectedCellColumnFieldName"/> </MultiBinding> </Setter.Value> </Setter> </Style>

        <Style x:Key="UnsavedCellStyle" TargetType="dxg:CellContentPresenter">
            <Setter Property="Foreground">
                <Setter.Value>
                    <MultiBinding Converter="{StaticResource EntityStateToBrushConverter}">
                        <Binding Path="RowData.Row"/> <Binding Path="View.DataContext"/> </MultiBinding>
                </Setter.Value>
            </Setter>
            <Setter Property="FontWeight">
                <Setter.Value>
                    <MultiBinding Converter="{StaticResource EntityStateToFontWeightConverter}">
                        <Binding Path="RowData.Row"/> <Binding Path="View.DataContext"/> </MultiBinding>
                </Setter.Value>
            </Setter>
            </Style>

    </dx:ThemedWindow.Resources>

    <Grid>
        <Grid.RowDefinitions> <RowDefinition Height="Auto"/> <RowDefinition Height="*"/> <RowDefinition Height="Auto"/> </Grid.RowDefinitions>

        <DockPanel Grid.Row="0" LastChildFill="True">
            <StackPanel Orientation="Horizontal" DockPanel.Dock="Right" Margin="5"> <TextBlock Text="마스터 키:" VerticalAlignment="Center" Margin="0,0,5,0"/> <PasswordBox x:Name="MasterPasswordBox" Width="100" VerticalAlignment="Center" infra:PasswordHelper.Attach="True" infra:PasswordHelper.Password="{Binding MasterPasswordInput, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/> <Button Content="확인" Margin="5,0,0,0" Command="{Binding CheckMasterPasswordCommand}"/> </StackPanel>
            <Border Background="LightGray" Padding="5"> <StackPanel Orientation="Horizontal"> <Button Content="?? 새로고침" Margin="3" Command="{Binding LoadDataCommand}"/> <Button Content="?? 변경 사항 저장" Margin="3" Command="{Binding SaveChangesCommand}"/> <Button Content="?? 마스터 데이터 관리" Margin="15,3,3,3" Command="{Binding OpenMasterDataWindowCommand}" ToolTip="마스터 데이터(층, 구역 등)를 관리하는 새 창을 엽니다." Visibility="{Binding IsMasterModeEnabled, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}"/> <Button Content="?? 로그 보기" Margin="5,3,3,3" Command="{Binding OpenLogWindowCommand}" ToolTip="데이터 변경 이력 로그를 확인합니다."/> </StackPanel> </Border>
        </DockPanel>

        <Grid Grid.Row="1" Margin="5">
            <Grid.RowDefinitions> <RowDefinition Height="Auto"/> <RowDefinition Height="*"/> </Grid.RowDefinitions>
            <Border Grid.Row="0" Background="WhiteSmoke" Padding="3"> <StackPanel Orientation="Horizontal"> <Button Content="? 새 사물함 추가" Margin="3" Command="{Binding AddNewCommand}"/> <Button Content="? 선택 항목 삭제" Margin="3" Command="{Binding DeleteCommand}"/> <Button Content="?? 배정 해제" Margin="3" Command="{Binding ClearAssignmentCommand}"/> </StackPanel> </Border>
            <dxg:GridControl Grid.Row="1" ItemsSource="{Binding LockerAssignments}" SelectedItem="{Binding SelectedAssignment, Mode=TwoWay}" CurrentItemChanged="GridControl_CurrentItemChanged">
                <dxg:GridControl.View> <dxg:TableView AllowPerPixelScrolling="True" ShowGroupPanel="True" AllowEditing="True" NavigationStyle="Cell" ShowAutoFilterRow="True" NewItemRowPosition="None" ShowIndicator="True" ShowSearchPanelMode="Always" FocusedColumnChanged="TableView_FocusedColumnChanged" UseLightweightTemplates="None"> <dxg:TableView.RowCellMenuCustomizations> <dxb:BarButtonItem Content="배정 해제" Command="{Binding View.DataContext.ClearAssignmentCommand}" Glyph="{dx:DXImage Svg/Actions/DeleteList.svg}"/> <dxb:BarItemSeparator/> <dxb:BarButtonItem Content="행 삭제" Command="{Binding View.DataContext.DeleteCommand}" Glyph="{dx:DXImage Svg/Actions/Delete.svg}"/> </dxg:TableView.RowCellMenuCustomizations> </dxg:TableView> </dxg:GridControl.View>
                <dxg:GridControl.Columns>
                    <dxg:GridColumn FieldName="LockerType" Header="종류" Width="100" Fixed="Left" HeaderStyle="{StaticResource LightBlueHeaderStyle}" CellStyle="{StaticResource UnsavedCellStyle}"> <dxg:GridColumn.EditSettings> <dxe:ComboBoxEditSettings ItemsSource="{Binding AllLockerTypes}" DisplayMember="Name" ValueMember="Name" IsTextEditable="False" HorizontalContentAlignment="Center"/> </dxg:GridColumn.EditSettings> </dxg:GridColumn>
                    <dxg:GridColumn FieldName="Floor" Header="층" Width="60" HeaderStyle="{StaticResource LightBlueHeaderStyle}" CellStyle="{StaticResource UnsavedCellStyle}"> <dxg:GridColumn.EditSettings> <dxe:ComboBoxEditSettings ItemsSource="{Binding AllFloors}" DisplayMember="Name" ValueMember="Name" IsTextEditable="False" HorizontalContentAlignment="Center"/> </dxg:GridColumn.EditSettings> </dxg:GridColumn>
                    <dxg:GridColumn FieldName="Zone" Header="구역" Width="80" HeaderStyle="{StaticResource LightBlueHeaderStyle}" CellStyle="{StaticResource UnsavedCellStyle}"> <dxg:GridColumn.EditSettings> <dxe:ComboBoxEditSettings ItemsSource="{Binding AllZones}" DisplayMember="Name" ValueMember="Name" IsTextEditable="True" HorizontalContentAlignment="Center"/> </dxg:GridColumn.EditSettings> </dxg:GridColumn>
                    <dxg:GridColumn FieldName="SpecificLocation" Header="세부 위치" Width="120" HeaderStyle="{StaticResource LightBlueHeaderStyle}" CellStyle="{StaticResource UnsavedCellStyle}"> <dxg:GridColumn.EditSettings> <dxe:TextEditSettings HorizontalContentAlignment="Center"/> </dxg:GridColumn.EditSettings> </dxg:GridColumn>
                    <dxg:GridColumn FieldName="UserName" Header="성명" Width="100" HeaderStyle="{StaticResource LightBlueHeaderStyle}" CellStyle="{StaticResource UnsavedCellStyle}"> <dxg:GridColumn.EditSettings> <dxe:TextEditSettings HorizontalContentAlignment="Center"/> </dxg:GridColumn.EditSettings> </dxg:GridColumn>
                    <dxg:GridColumn FieldName="KnoxId" Header="Knox ID" Width="100" HeaderStyle="{StaticResource LightBlueHeaderStyle}" CellStyle="{StaticResource UnsavedCellStyle}"> <dxg:GridColumn.EditSettings> <dxe:TextEditSettings HorizontalContentAlignment="Center"/> </dxg:GridColumn.EditSettings> </dxg:GridColumn>
                    <dxg:GridColumn FieldName="SubPart" Header="소파트" Width="120" HeaderStyle="{StaticResource LightBlueHeaderStyle}" CellStyle="{StaticResource UnsavedCellStyle}"> <dxg:GridColumn.EditSettings> <dxe:ComboBoxEditSettings ItemsSource="{Binding AllSubParts}" DisplayMember="Name" ValueMember="Name" IsTextEditable="True" HorizontalContentAlignment="Center"/> </dxg:GridColumn.EditSettings> </dxg:GridColumn>
                    <dxg:GridColumn FieldName="Administrator" Header="관리 담당자" Width="120" HeaderStyle="{StaticResource LightBlueHeaderStyle}" CellStyle="{StaticResource UnsavedCellStyle}"> <dxg:GridColumn.EditSettings> <dxe:ComboBoxEditSettings ItemsSource="{Binding AllAdministrators}" DisplayMember="Name" ValueMember="Name" IsTextEditable="True" HorizontalContentAlignment="Center"/> </dxg:GridColumn.EditSettings> </dxg:GridColumn>
                    <dxg:GridColumn FieldName="TransferStatus" Header="전배복직" Width="100" HeaderStyle="{StaticResource LightBlueHeaderStyle}" CellStyle="{StaticResource UnsavedCellStyle}"> <dxg:GridColumn.EditSettings> <dxe:TextEditSettings HorizontalContentAlignment="Center"/> </dxg:GridColumn.EditSettings> </dxg:GridColumn>
                    <dxg:GridColumn FieldName="Details" Header="내용" Width="150" HeaderStyle="{StaticResource LightBlueHeaderStyle}" CellStyle="{StaticResource UnsavedCellStyle}"> <dxg:GridColumn.EditSettings> <dxe:TextEditSettings HorizontalContentAlignment="Left"/> </dxg:GridColumn.EditSettings> </dxg:GridColumn>
                    <dxg:GridColumn FieldName="Remarks" Header="특이사항" Width="150" HeaderStyle="{StaticResource LightBlueHeaderStyle}" CellStyle="{StaticResource UnsavedCellStyle}"> <dxg:GridColumn.EditSettings> <dxe:TextEditSettings HorizontalContentAlignment="Left"/> </dxg:GridColumn.EditSettings> </dxg:GridColumn>
                    <dxg:GridColumn FieldName="Notes" Header="비고" Width="150" HeaderStyle="{StaticResource LightBlueHeaderStyle}" CellStyle="{StaticResource UnsavedCellStyle}"> <dxg:GridColumn.EditSettings> <dxe:TextEditSettings HorizontalContentAlignment="Left"/> </dxg:GridColumn.EditSettings> </dxg:GridColumn>
                    <dxg:GridColumn FieldName="LastUpdated" Header="최종 수정일시" Width="150" AllowEditing="False" ReadOnly="True" HeaderStyle="{StaticResource LightBlueHeaderStyle}"> <dxg:GridColumn.EditSettings> <dxe:DateEditSettings MaskType="DateTime" Mask="yyyy-MM-dd HH:mm:ss" MaskUseAsDisplayFormat="True" HorizontalContentAlignment="Center"/> </dxg:GridColumn.EditSettings> </dxg:GridColumn>
                    <dxg:GridColumn FieldName="Id" Header="ID" Visible="False" ReadOnly="True"/>
                </dxg:GridControl.Columns>
            </dxg:GridControl>
        </Grid>

        <StatusBar Grid.Row="2" Background="LightGray"> <StatusBarItem><TextBlock Text="{Binding StatusBarText}" Margin="5,0"/></StatusBarItem> </StatusBar>
    </Grid>

</dx:ThemedWindow>
핵심 변경 사항:

Infrastructure/EntityStateToBrushConverter.cs (신규): 엔티티 상태가 Added 또는 Modified이면 Brushes.Blue를 반환하는 컨버터.
Infrastructure/EntityStateToFontWeightConverter.cs (신규): 엔티티 상태가 Added 또는 Modified이면 FontWeights.Bold를 반환하는 컨버터.
Views/MainWindow.xaml:
위 두 컨버터를 리소스로 추가 (EntityStateToBrushConverter, EntityStateToFontWeightConverter).
UnsavedCellStyle 스타일 정의: TargetType="dxg:CellContentPresenter", Foreground와 FontWeight 속성을 각각의 컨버터와 MultiBinding을 사용하여 설정. MultiBinding은 현재 행 데이터(RowData.Row)와 MainViewModel (View.DataContext)을 컨버터로 전달합니다.
메인 그리드의 편집 가능한 모든 컬럼에 CellStyle="{StaticResource UnsavedCellStyle}"을 적용했습니다. (읽기 전용인 LastUpdated, Id 제외)
이제 메인 그리드에서 셀 값을 수정하면 해당 셀의 글씨가 파란색 굵게 표시되고, 저장하면 다시 원래 스타일로 돌아올 것입니다. 새로 추가된 행의 모든 셀도 저장 전까지 파란색 굵게 표시됩니다.


소스 및 관련 콘텐츠
