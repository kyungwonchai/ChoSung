인: SQL Server가 Windows 인증만 허용하도록 설정된 경우, pymssql의 SQL Server 인증 방식이 실패합니다.
해결 방법:
SQL Server Management Studio(SSMS)에서 인증 모드를 확인합니다:
SQL Server의 인증 모드를 "SQL Server 및 Windows 인증"으로 변경.
SQL Server Management Studio에서 서버 속성 -> 보안 -> 서버 인증에서 확인 가능.
Windows 인증을 사용할 경우:
Integrated Security=True를 사용하여 Windows 인증으로 연결합니다.
python
코드 복사
conn = pymssql.connect(server='localhost', database='your_database', trusted=True)
pymssql 설치 및 호환성 문제
원인: pymssql이 Python 버전이나 SQL Server와 호환되지 않는 경우 문제가 발생할 수 있습니다.
해결 방법:
pymssql 설치 상태 확인
설치된 버전이 최신인지 확인:
bash
코드 복사
pip install pymssql --upgrade
대체 라이브러리 사용
pyodbc를 사용하는 것이 더 안정적일 수 있습니다:
python
코드 복사
import pyodbc
conn = pyodbc.connect(
    "DRIVER={ODBC Driver 17 for SQL Server};"
    "SERVER=localhost;"
    "DATABASE=your_database;"
    "UID=your_username;"
    "PWD=your_password;"
)
타임아웃 설정 문제
원인: 서버가 연결 응답을 주지 않으면 pymssql이 기본적으로 타임아웃이 날 때까지 멈춥니다.
해결 방법:
timeout을 명시적으로 설정하여 타임아웃 시간을 줄입니다.
python
코드 복사
conn = pymssql.connect(
    server='localhost',
    user='your_username',
    password='your_password',
    database='your_database',
    timeout=5  # 타임아웃 시간 (초 단위)
)
잘못된 사용자 이름 또는 비밀번호
원인: 잘못된 사용자 이름(UID) 또는 비밀번호(PWD)를 사용하는 경우.
해결 방법:
정확한 자격 증명을 사용하고, 비밀번호에 특수 문자가 포함된 경우 반드시 이스케이프 처리 또는 따옴표로 감싸야 합니다.
방화벽 문제
원인: 로컬 SQL Server에 접근하려는 연결이 방화벽에 의해 차단될 수 있습니다.
해결 방법:
1433 포트를 방화벽에서 열어야 합니다:
Windows 방화벽 설정에서 인바운드 규칙 추가.
포트를 열거나 SQL Server 프로세스가 허용되도록 설정.
예제 코드 (문제 해결 적용)
python
코드 복사
import pymssql

try:
    # 데이터베이스 연결
    conn = pymssql.connect(
        server='localhost',  # 또는 'localhost\SQLEXPRESS'
        user='your_username',
        password='your_password',
        database='your_database',
        timeout=5  # 타임아웃 시간 설정
    )
    print("Database connection successful!")

    # 커서 생성 및 쿼리 실행
    cursor = conn.cursor()
    cursor.execute("SELECT TOP 1 * FROM your_table")
    for row in cursor.fetchall():
        print(row)

    conn.close()

except pymssql.OperationalError as e:
    print(f"OperationalError: {e}")
except pymssql.InterfaceError as e:
    print(f"InterfaceError: {e}")
except Exception as e:
    print(f"Unexpected error: {e}")
진단 및 디버깅 체크리스트