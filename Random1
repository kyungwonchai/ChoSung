9초 동안 이성 처리 완료
아래 모든 과정을 순서대로 차근차근 해보시기 바랍니다.
윈도우 기준이며, CUDA 12.4 + PyTorch (cu124) 조합에서 torch.cuda.is_available() 가 False가 뜨는 일반적인 원인과 해결 방법을 한 번에 정리했습니다.

0. 전체 개요
GPU 드라이버가 12.4를 지원하는 버전인지 확인
CUDA 12.4가 제대로 설치되었는지(환경 변수 등) 확인
시스템에 깔려 있는 다른 CUDA (예: 12.8) 경로 제거
PyTorch가 정말 12.4용으로 설치되었는지 확인
재부팅 후 최종적으로 torch.cuda.is_available() 확인
nvidia-smi가 보여주는 CUDA 버전은 “드라이버가 지원하는 최대 CUDA 버전”이고, 실제 툴킷 버전은 nvcc --version 또는 PyTorch 내부에서 확인해야 합니다.

1. 현재 NVIDIA 드라이버, GPU 상태 먼저 확인
드라이버 버전 확인
터미널(CMD) 열어서:
bash
코드 복사
nvidia-smi
예시 출력:
pgsql
코드 복사
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 535.86.10    Driver Version: 535.86.10    CUDA Version: 12.8     |
+-----------------------------------------------------------------------------+
여기서 보는 “CUDA Version: 12.8”은 드라이버가 지원하는 버전일 뿐, 설치된 CUDA Toolkit 버전과는 다릅니다.
GPU가 CUDA 12.4를 지원하는지 (대부분 RTX 20 시리즈 이상이면 문제 없음)
구형 GPU이면 CUDA 12.x를 지원하지 않는 경우가 있습니다.
2. CUDA 12.4 완전 재설치 & 환경 변수 정리
2.1. 기존 CUDA(특히 12.8) 흔적 지우기
Windows 제어판 → 프로그램 추가/제거

“NVIDIA CUDA 12.8” 관련 항목이 있다면 모두 제거.
“NVIDIA Visual Studio Integration”, “NVIDIA Nsight ...” 등 부가툴도 제거.
환경 변수 편집(시스템 차원)으로 Path 확인

Windows 키 + R → sysdm.cpl → 고급 탭 → 환경 변수
“시스템 변수”에서 Path 더블 클릭
다음과 같은 경로가 남아있다면 삭제
makefile
코드 복사
C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\bin
C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\libnvvp
CUDA_HOME이라는 시스템 변수가 C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8 를 가리키고 있다면 삭제 또는 수정.
불필요한 DLL 확인 (고급)

C:\Windows\System32, C:\Windows\SysWOW64 등에 cudart64_12.dll (12.8짜리)이 남아있는 경우가 간혹 있습니다.
일반적으로는 잘 안 건드려도 되지만, 정말 충돌이 심하다면 이곳 DLL도 정리해야 함.
시스템 재부팅

위 과정 후 반드시 재부팅하여 환경 변수/드라이버 캐시가 초기화되도록 함.
2.2. CUDA 12.4 설치 (최소 구성)
NVIDIA CUDA 12.4 아카이브에서 Windows용 설치 파일(.exe) 다운로드
설치 마법사에서 Custom(사용자 지정) 선택
필수 항목만 체크
CUDA Toolkit (Core), NVCC Compiler, CUDA Libraries, CUDA Driver
Nsight, Demo Suite, Document 등 불필요한 항목 해제
설치 후, 성공적으로 끝났으면 다시 재부팅 권장
2.3. 설치 확인
환경 변수 재확인
아까와 같은 방법으로 “시스템 변수 → Path”에
makefile
코드 복사
C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.4\bin
C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.4\libnvvp
가 있는지 확인 (맨 위쪽에 있으면 우선순위가 높아짐).
CUDA_HOME(또는 CUDA_PATH)가 C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.4로 설정되어 있는지 확인.
nvcc --version
bash
코드 복사
nvcc --version
예시:
vbnet
코드 복사
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2023 ...
Built on ...
Cuda compilation tools, release 12.4, V12.4.XX
반드시 release 12.4 라고 나와야 함.
3. PyTorch (cu124) 설치 및 확인
3.1. PyTorch 완전 제거 후 재설치
PyTorch 제거

bash
코드 복사
pip uninstall torch torchvision torchaudio
CUDA 12.4 용 PyTorch 설치
PyTorch 다운로드 페이지 (https://pytorch.org/get-started/previous-versions/) 를 보면, 12.4용 패키지가 있을 수 있음.
보통 다음과 같이 설치:

bash
코드 복사
pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu124
cu124가 붙은 버전을 설치해야 CUDA 12.4를 지원합니다.
설치 확인

bash
코드 복사
pip show torch
Location 부분에 torch-2.x.x+cu124-*.whl 와 같은 식으로 나와야 함
3.2. torch.cuda.is_available() 확인
Python 진입
python
코드 복사
import torch

print("Torch version:", torch.__version__)
print("Torch CUDA version:", torch.version.cuda)
print("Is CUDA available?:", torch.cuda.is_available())
if torch.cuda.is_available():
    print("GPU Name:", torch.cuda.get_device_name(0))
    print("Device Count:", torch.cuda.device_count())
예상 출력
Torch CUDA version: 12.4 (또는 12.1 처럼 보이더라도 실제 빌드는 cu124)
Is CUDA available?: True
GPU 정보 출력
만약 여기서 계속 False라면, 아래 사항을 추가로 점검하세요.

4. 안 되는 경우 “추가” 점검 사항
DLL 충돌

Windows가 System32 등에 남아있는 예전 버전 DLL(12.8)을 먼저 로드하는 경우가 있음.
해결책:
bash
코드 복사
where cudart64_12.dll
→ 12.8 경로 DLL이 잡히면 삭제하거나 교체
GPU가 CUDA 12.4를 완전히 지원하지 않는 경우

구형 GPU (예: GTX 600/700/900 시리즈)는 12.x 지원이 제한적일 수 있음.
nvidia-smi에서 드라이버가 최신이어도, GPU 자체가 지원 불가할 수 있음.
(가상환경)에서 PATH 우선순위가 바뀌는 경우

예: 아나콘다 가상환경 activate 시에, C:\ProgramData\Anaconda3\Library\bin이 먼저 들어가면서 문제가 생길 수 있음.
이런 경우, activate.bat(conda는 ...\conda\activate.d\...bat) 안에서 다시 set PATH=C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.4\bin;%PATH% 식으로 우선순위 최상단에 둬야 함.
VSCode 터미널 or PowerShell 특수 설정

어떤 IDE나 툴에서 자체 PATH를 조작해서 12.8이 다시 잡히는 경우가 있음.
가급적 순수 CMD or 순수 PowerShell에서 테스트.
재부팅

Windows는 환경 변수와 DLL 캐시 문제가 자주 발생하므로, 꼭 재부팅 한 번은 해줘야 합니다.
5. 최종 결론
CUDA 12.8 흔적 완전히 제거
CUDA 12.4만 깔고 환경 변수 정리
nvcc --version에서 12.4 확인
PyTorch도 pip install --index-url https://download.pytorch.org/whl/cu124
재부팅
torch.cuda.is_available() → True
위 과정을 차례로 따라 하면 99% 문제없이 돌아갑니다. 그래도 안 된다면, GPU가 12.4 미지원이거나 Windows DLL 충돌이 남아있을 가능성이 큽니다. 그럴 땐 위에서 언급한 “DLL 교체”나 GPU 지원 여부를 다시 살펴보셔야 합니다.

추가 팁: 그래도 안 된다면
(1) 완전 포맷 or 다른 PC에서 재현
새 Windows + 최신 NVIDIA 드라이버 + CUDA 12.4 + PyTorch(cu124) → 대부분 한 번에 됨.
(2) GPU 호환성
nvidia-smi로 GPU 모델 확인 후, NVIDIA 공식 문서에서 CUDA 12.x 호환 여부 확인.
(3) 로그 확인