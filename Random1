import bpy
from math import radians

# 기존 씬에 있는 모든 오브젝트 삭제
bpy.ops.object.select_all(action='SELECT')
bpy.ops.object.delete(use_global=False)

# 텍스트 오브젝트 추가
bpy.ops.object.text_add(location=(0, 0, 0))
text_obj = bpy.context.object
text_obj.data.body = "Router ACR Middleware"  # 텍스트 내용 설정
text_obj.data.size = 1.7  # 텍스트 크기 설정 (크기 조정 가능)

# 글꼴 설정 (커스텀 폰트를 사용할 경우 파일 경로 입력)
font_path = "/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf"
text_obj.data.font = bpy.data.fonts.load(font_path)  # 폰트 로드

# 3D 효과를 위한 두께 추가
text_obj.data.extrude = 0.2
text_obj.data.bevel_depth = 0.02  # 모서리 둥글게
text_obj.rotation_euler = (radians(90), 0, radians(0))

# 재질 추가 및 설정
mat = bpy.data.materials.new(name="TextMaterial")
mat.use_nodes = True
bsdf = mat.node_tree.nodes["Principled BSDF"]
bsdf.inputs['Base Color'].default_value = (1, 0.84, 0, 1)  # 황금색
bsdf.inputs['Roughness'].default_value = 0.3  # 약간의 광택
text_obj.data.materials.append(mat)

# 카메라 추가 및 위치 설정
bpy.ops.object.camera_add(location=(0, -10, 5))
camera = bpy.context.object
camera.rotation_euler = (radians(90), 0, radians(0))
bpy.context.scene.camera = camera

# 황금 시간대의 따뜻한 광원 추가
# 첫 번째 메인 광원 (햇빛처럼 따뜻한 느낌)
bpy.ops.object.light_add(type='SUN', location=(5, -5, 10))
sun_light = bpy.context.object
sun_light.data.energy = 5  # 광원 세기 조정
sun_light.data.color = (1, 0.75, 0.5)  # 따뜻한 색상 설정
sun_light.rotation_euler = (radians(45), radians(-30), 0)

# 보조 광원 (그림자를 강조하기 위한)
bpy.ops.object.light_add(type='POINT', location=(-5, -5, 3))
point_light = bpy.context.object
point_light.data.energy = 300  # 강한 빛으로 설정하여 그림자 강조
point_light.data.color = (1, 0.75, 0.5)

# 배경 환경 조명 설정 (어두운 배경)
bpy.context.scene.world.use_nodes = True
bg = bpy.context.scene.world.node_tree.nodes['Background']
bg.inputs['Color'].default_value = (0.05, 0.05, 0.1, 1)  # 어두운 밤하늘 느낌
bg.inputs['Strength'].default_value = 0.5  # 배경광 약하게 설정

# 렌더링 설정
bpy.context.scene.render.engine = 'CYCLES'  # Cycles 렌더링 엔진 사용
bpy.context.scene.cycles.samples = 500  # 샘플 수 조정
bpy.context.scene.render.resolution_x = 1920  # 해상도 설정
bpy.context.scene.render.resolution_y = 1080

# 파일로 렌더링 출력 설정
bpy.context.scene.render.filepath = "/tmp/router_acr_middleware_render.png"
bpy.ops.render.render(write_still=True)
