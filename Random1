 창에 테두리를 그려 PictureBox에 표시하기
현재 감지한 창을 PictureBox에서 확인할 수 있도록 창의 테두리를 그려서 표시하겠습니다. 🚀

1. 추가 기능
감지된 창에 테두리(빨간색) 그리기
감지된 창의 좌표를 콘솔에 출력
테두리가 그려진 이미지를 PictureBox에 표시
2. 수정된 코드 (Form1.cs)
csharp
코드 복사
using System;
using System.Drawing;
using System.IO;
using System.Windows.Forms;
using OpenCvSharp;
using OpenCvSharp.Extensions;

namespace WinFormsOpenCv
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
            pictureBox1.SizeMode = PictureBoxSizeMode.StretchImage; // 이미지 맞추기
        }

        // 버튼 클릭 시 실행
        private void btnProcess_Click(object sender, EventArgs e)
        {
            // 화면 캡처
            Bitmap screenshot = CaptureScreen();

            // OpenCV Mat 변환 및 이진화 적용
            Mat matImage = BitmapConverter.ToMat(screenshot);
            Mat gray = new Mat();
            Cv2.CvtColor(matImage, gray, ColorConversionCodes.BGR2GRAY);
            Mat binary = new Mat();
            Cv2.Threshold(gray, binary, 200, 255, ThresholdTypes.Binary);

            // 창 감지
            Rect detectedWindow = DetectWindow(binary, matImage);

            if (detectedWindow != Rect.Empty)
            {
                // 우측 상단 기준 좌표에서 x -10, y -10 지점 클릭
                int clickX = detectedWindow.Right - 10;
                int clickY = detectedWindow.Top - 10;
                Cursor.Position = new System.Drawing.Point(clickX, clickY);
                mouse_event(MOUSEEVENTF_LEFTDOWN | MOUSEEVENTF_LEFTUP, clickX, clickY, 0, IntPtr.Zero);

                Console.WriteLine($"닫기 버튼 클릭: ({clickX}, {clickY})");
            }
            else
            {
                Console.WriteLine("해당 조건의 창을 찾을 수 없습니다.");
            }

            // PictureBox에 감지된 창 표시
            pictureBox1.Image = ConvertMatToBitmap(matImage);
            pictureBox1.Refresh();
        }

        // 화면 캡처 함수 (전체 화면 캡처)
        private Bitmap CaptureScreen()
        {
            Rectangle bounds = Screen.PrimaryScreen.Bounds;
            Bitmap bitmap = new Bitmap(bounds.Width, bounds.Height);
            using (Graphics g = Graphics.FromImage(bitmap))
            {
                g.CopyFromScreen(Point.Empty, Point.Empty, bounds.Size);
            }
            return bitmap;
        }

        // Mat → Bitmap 변환 함수
        private Bitmap ConvertMatToBitmap(Mat mat)
        {
            return BitmapConverter.ToBitmap(mat);
        }

        // 창 감지 및 테두리 그리기 함수
        private Rect DetectWindow(Mat binary, Mat originalImage)
        {
            // 컨투어 찾기
            Cv2.FindContours(binary, out OpenCvSharp.Point[][] contours, out _, RetrievalModes.External, ContourApproximationModes.ApproxSimple);

            Rect detectedWindow = Rect.Empty;
            int screenWidth = Screen.PrimaryScreen.Bounds.Width;
            int screenCenterX = screenWidth / 2;
            double maxArea = 0;

            foreach (var contour in contours)
            {
                Rect rect = Cv2.BoundingRect(contour);
                double area = rect.Width * rect.Height;

                // 창 감지 조건 (너무 작은 것 제외, 화면 중앙, y > 150)
                if (rect.Width > 100 && rect.Height > 50 && rect.Y > 150 && 
                    Math.Abs(rect.X + rect.Width / 2 - screenCenterX) < 200 && area > maxArea)
                {
                    maxArea = area;
                    detectedWindow = rect;

                    // 창 테두리 그리기 (빨간색)
                    Cv2.Rectangle(originalImage, rect, new Scalar(0, 0, 255), 3);
                    Console.WriteLine($"창 감지: 위치 ({rect.X}, {rect.Y}), 크기 ({rect.Width}x{rect.Height})");
                }
            }

            return detectedWindow;
        }

        // 마우스 클릭을 위한 WinAPI
        [DllImport("user32.dll", SetLastError = true)]
        static extern void mouse_event(uint dwFlags, int dx, int dy, uint dwData, IntPtr dwExtraInfo);

        const uint MOUSEEVENTF_LEFTDOWN = 0x02;
        const uint MOUSEEVENTF_LEFTUP = 0x04;
    }
}
3. 주요 변경점
✅ 1) 창 테두리 그리기
감지된 창을 Cv2.Rectangle()을 사용해 빨간색 테두리로 표시
csharp
코드 복사
Cv2.Rectangle(originalImage, rect, new Scalar(0, 0, 255), 3);
결과 이미지가 PictureBox에 표시됨 → 제대로 감지되는지 시각적으로 확인 가능!
✅ 2) 감지된 창의 좌표 출력
창을 감지하면 좌표와 크기를 Console에 출력하여 디버깅 가능
csharp
코드 복사
Console.WriteLine($"창 감지: 위치 ({rect.X}, {rect.Y}), 크기 ({rect.Width}x{rect.Height})");
✅ 3) PictureBox에 결과 이미지 표시
감지된 창의 테두리가 포함된 이미지를 PictureBox에 표시
csharp
코드 복사
pictureBox1.Image = ConvertMatToBitmap(matImage);
pictureBox1.Refresh();
4. 실행 결과
WinForms 실행 후 "이진화 적용" 버튼 클릭
현재 화면을 캡처하여 Y ≥ 150 & 중앙에 있는 창을 감지
창의 테두리를 빨간색으로 그림
감지된 창이 있으면 우측 상단 닫기 버튼 클릭