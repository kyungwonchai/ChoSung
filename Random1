밀번호를 암호화하여 파일(encrypted_password.bin)에 저장하는 예입니다.

python

from cryptography.fernet import Fernet

# 키 생성
key = Fernet.generate_key()
cipher_suite = Fernet(key)

# 비밀번호 암호화
password = "your_password"
cipher_text = cipher_suite.encrypt(password.encode())

# 암호화된 비밀번호와 키를 파일에 저장
with open("encrypted_password.bin", "wb") as file:
    file.write(cipher_text)

with open("key.key", "wb") as file:
    file.write(key)

Python 복호화 및 사용

이제 암호화된 비밀번호를 읽어 복호화하는 코드를 작성할 수 있습니다.

python

# 키 로드
with open("key.key", "rb") as file:
    key = file.read()

# 암호화된 비밀번호 로드
with open("encrypted_password.bin", "rb") as file:
    encrypted_password = file.read()

cipher_suite = Fernet(key)

# 비밀번호 복호화
decrypted_password = cipher_suite.decrypt(encrypted_password).decode()

# 이제 decrypted_password 변수를 사용하여 DB에 접속할 수 있습니다.

이렇게 하면 key.key 파일과 encrypted_password.bin 파일을 안전한 위치에 보관해두면 됩니다. 필요할 때마다 복호화하여 사용할 수 있고, 코드 내에 평문 비밀번호를 저장할 필요가 없습니다.
