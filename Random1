물론이죠. GridControl에 컨텍스트 메뉴를 추가하고, "열기" 메뉴 아이템을 클릭했을 때 해당 행의 ID 값을 가져와 FormMemo를 열어 파라미터로 보내는 코드 예시는 다음과 같습니다.

csharp
Copy code
// 폼 로드 이벤트에서 컨텍스트 메뉴를 설정합니다.
private void Form1_Load(object sender, EventArgs e)
{
    ContextMenu contextMenu = new ContextMenu();
    MenuItem openMenuItem = new MenuItem("열기");
    openMenuItem.Click += OpenMenuItem_Click;
    contextMenu.MenuItems.Add(openMenuItem);
    gridControl1.ContextMenu = contextMenu;
}

// "열기" 메뉴 아이템 클릭 이벤트 핸들러입니다.
private void OpenMenuItem_Click(object sender, EventArgs e)
{
    int rowHandle = gridView1.FocusedRowHandle; // 현재 선택된 행의 핸들을 가져옵니다.
    if (rowHandle >= 0)
    {
        int id = Convert.ToInt32(gridView1.GetRowCellValue(rowHandle, "ID")); // 해당 행의 ID 값을 가져옵니다.
        FormMemo formMemo = new FormMemo(id); // ID 값을 파라미터로 FormMemo 인스턴스를 생성합니다.
        formMemo.Show(); // FormMemo를 엽니다.
    }
}
위 코드에서 FormMemo는 ID 값을 받는 생성자를 가지고 있어야 하며, 해당 ID를 사용해 메모를 불러와야 합니다. 예를 들어, FormMemo에서는 다음과 같이 작성할 수 있습니다.

csharp
Copy code
public class FormMemo : Form
{
    private int memoId;

    public FormMemo(int id)
    {
        this.memoId = id;
        // memoId를 사용하여 데이터베이스에서 메모를 불러와서 화면에 표시하는 로직
    }
}
이렇게 하면 GridControl을 우클릭했을 때 "열기" 메뉴가 나타나고, 해당 메뉴를 클릭하면 선택된 행의 ID 값을 사용하여 FormMemo를 열게 됩니다