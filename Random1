o sort data in a DevExpress GridControl with a TableView in WPF, you can define the sorting order directly in XAML or programmatically in your code-behind. Here's how to achieve sorting by multiple columns, such as Timestamp in descending order and another column in ascending order.

1. Sorting in XAML:

You can specify the sort order for each column within the GridControl by setting the SortOrder and SortIndex properties. The SortOrder property determines the direction of the sort (ascending or descending), and the SortIndex property specifies the priority of the sort when multiple columns are involved.

xml
코드 복사
<dxg:GridControl ItemsSource="{Binding YourDataSource}">
    <dxg:GridControl.Columns>
        <!-- Timestamp Column -->
        <dxg:GridColumn FieldName="Timestamp" SortOrder="Descending" SortIndex="0" />

        <!-- Another Column -->
        <dxg:GridColumn FieldName="AnotherColumn" SortOrder="Ascending" SortIndex="1" />

        <!-- Other columns -->
    </dxg:GridControl.Columns>
    <dxg:GridControl.View>
        <dxg:TableView />
    </dxg:GridControl.View>
</dxg:GridControl>
Explanation:

SortOrder="Descending": This sets the sort direction for the Timestamp column to descending.

SortIndex="0": This assigns the highest priority to the Timestamp column in the sorting hierarchy.

SortOrder="Ascending": This sets the sort direction for AnotherColumn to ascending.

SortIndex="1": This assigns the next priority level to AnotherColumn.

By setting these properties, the GridControl will first sort the data by Timestamp in descending order and then by AnotherColumn in ascending order.

2. Sorting Programmatically in Code-Behind:

If you prefer to set the sorting order programmatically, you can do so in your code-behind file. Here's an example in C#:

csharp
코드 복사
using DevExpress.Xpf.Grid;

// Assuming 'gridControl' is your GridControl instance
TableView view = gridControl.View as TableView;
if (view != null)
{
    view.SortInfo.ClearAndAddRange(new[]
    {
        new GridSortInfo { FieldName = "Timestamp", SortOrder = DevExpress.Data.ColumnSortOrder.Descending },
        new GridSortInfo { FieldName = "AnotherColumn", SortOrder = DevExpress.Data.ColumnSortOrder.Ascending }
    });
}
Explanation:

view.SortInfo.ClearAndAddRange: This method clears any existing sorting and applies the new sorting criteria specified in the array.

new GridSortInfo: This object defines the field name and sort order for each column.

By executing this code, the GridControl will sort the data first by Timestamp in descending order and then by AnotherColumn in ascending order.

References:

Sorting Modes and Custom Sorting

GridControl.SortBy Method