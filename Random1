_SHOWMAXIMIZED 옵션을 사용해야 합니다. 이렇게 하면 기존 인스턴스가 최대화 상태로 복원됩니다.

아래는 SW_SHOWMAXIMIZED를 사용하여 기존 창을 최대화 상태로 활성화하는 예제 코드입니다.

csharp
코드 복사
using System;
using System.Runtime.InteropServices;
using System.Threading;
using System.Windows;

namespace YourNamespace
{
    public partial class App : Application
    {
        private static Mutex mutex;

        // Windows API를 사용하여 창 활성화
        [DllImport("user32.dll")]
        private static extern bool SetForegroundWindow(IntPtr hWnd);

        [DllImport("user32.dll")]
        private static extern bool ShowWindow(IntPtr hWnd, int nCmdShow);
        private const int SW_SHOWMAXIMIZED = 3; // 최대화 상태로 창 표시

        protected override void OnStartup(StartupEventArgs e)
        {
            const string appMutexName = "UniqueWpfAppMutexName";
            bool isNewInstance;

            // Mutex 생성 및 고유 이름 설정
            mutex = new Mutex(true, appMutexName, out isNewInstance);

            if (!isNewInstance)
            {
                // 기존 인스턴스 찾기
                var currentProcess = System.Diagnostics.Process.GetCurrentProcess();
                foreach (var process in System.Diagnostics.Process.GetProcessesByName(currentProcess.ProcessName))
                {
                    if (process.Id != currentProcess.Id)
                    {
                        // 창 최대화 및 활성화
                        ShowWindow(process.MainWindowHandle, SW_SHOWMAXIMIZED);
                        SetForegroundWindow(process.MainWindowHandle);
                        break;
                    }
                }

                // 이중 실행 중이므로 종료
                Shutdown();
                return;
            }

            // 기본 시작
            base.OnStartup(e);
        }

        protected override void OnExit(ExitEventArgs e)
        {
            // Mutex 해제
            mutex?.ReleaseMutex();
            base.OnExit(e);
        }
    }
}
설명
SW_SHOWMAXIMIZED 설정: ShowWindow 함수에서 SW_SHOWMAXIMIZED를 사용하여 창을 최대화 상태로 표시합니다.