래는 요청하신 대로 같은 축을 사용하되, L과 R의 차트를 서로 다른 색상 계열로 설정하는 코드입니다. 각각의 선과 점을 **파란색 계열(5단계)**과 **빨간색 계열(5단계)**로 다르게 설정했습니다.

수정된 C# 코드 (MainWindow.xaml.cs)
csharp
코드 복사
using DevExpress.Xpf.Charts;
using System;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.Linq;
using System.Windows;
using System.Windows.Media;

namespace LineDataViewer
{
    public partial class MainWindow : Window
    {
        private List<DataPoint> allData;

        public MainWindow()
        {
            InitializeComponent();
            LoadData();
            InitializeLineChart();
        }

        private void LoadData()
        {
            allData = new List<DataPoint>();
            var connectionString = "YourConnectionStringHere";

            using (var connection = new SqlConnection(connectionString))
            {
                connection.Open();
                var query = @"
                    SELECT ModelName, Timestamp, MP1DATA, MP2DATA, MP3DATA, MP4DATA, MP5DATA
                    FROM View_InspectionResult
                    ORDER BY Timestamp DESC";

                using (var command = new SqlCommand(query, connection))
                using (var reader = command.ExecuteReader())
                {
                    while (reader.Read())
                    {
                        allData.Add(new DataPoint
                        {
                            ModelName = reader.GetString(0),
                            Timestamp = reader.GetDateTime(1),
                            MP1 = reader.GetDouble(2),
                            MP2 = reader.GetDouble(3),
                            MP3 = reader.GetDouble(4),
                            MP4 = reader.GetDouble(5),
                            MP5 = reader.GetDouble(6),
                        });
                    }
                }
            }
        }

        private void InitializeLineChart()
        {
            var diagram = LineChart.Diagram as XYDiagram2D;
            if (diagram == null)
                return;

            diagram.Series.Clear();

            // Define colors for L and R series
            var blueColors = new[] { Colors.Blue, Colors.SkyBlue, Colors.DodgerBlue, Colors.CornflowerBlue, Colors.LightBlue };
            var redColors = new[] { Colors.Red, Colors.OrangeRed, Colors.Crimson, Colors.IndianRed, Colors.LightCoral };

            // Create series for L models
            var lData = allData.Where(d => d.ModelName.EndsWith("L")).ToList();
            for (int i = 1; i <= 5; i++)
            {
                var series = new LineSeries2D
                {
                    DisplayName = $"L 모델 MP{i}",
                    DataSource = lData,
                    ArgumentDataMember = "Timestamp",
                    ValueDataMember = $"MP{i}",
                    MarkerVisible = true,
                    MarkerModel = new CircleMarkerModel { Size = 10 },
                    Brush = new SolidColorBrush(blueColors[i - 1]),
                    MarkerBrush = new SolidColorBrush(blueColors[i - 1])
                };
                diagram.Series.Add(series);
            }

            // Create series for R models
            var rData = allData.Where(d => d.ModelName.EndsWith("R")).ToList();
            for (int i = 1; i <= 5; i++)
            {
                var series = new LineSeries2D
                {
                    DisplayName = $"R 모델 MP{i}",
                    DataSource = rData,
                    ArgumentDataMember = "Timestamp",
                    ValueDataMember = $"MP{i}",
                    MarkerVisible = true,
                    MarkerModel = new CircleMarkerModel { Size = 10 },
                    Brush = new SolidColorBrush(redColors[i - 1]),
                    MarkerBrush = new SolidColorBrush(redColors[i - 1])
                };
                diagram.Series.Add(series);
            }
        }
    }

    public class DataPoint
    {
        public string ModelName { get; set; }
        public DateTime Timestamp { get; set; }
        public double MP1 { get; set; }
        public double MP2 { get; set; }
        public double MP3 { get; set; }
        public double MP4 { get; set; }
        public double MP5 { get; set; }
    }
}
주요 변경 사항
색상 계열 추가:

파란색 계열 (L 모델): Colors.Blue, Colors.SkyBlue, Colors.DodgerBlue, Colors.CornflowerBlue, Colors.LightBlue.
빨간색 계열 (R 모델): Colors.Red, Colors.OrangeRed, Colors.Crimson, Colors.IndianRed, Colors.LightCoral.
Marker 및 Line 색상 설정:

각 시리즈의 Brush와 MarkerBrush를 위의 색상 계열에 따라 다르게 설정했습니다.
CircleMarkerModel을 사용해 점의 크기를 조절했습니다 (Size = 10).
공통 축 사용:

L과 R 데이터는 같은 축(Timestamp)을 공유하며, 차트의 시각적 구분을 위해 색상을 다르게 설정했습니다.
예상 결과
L 모델:
선과 점이 파란색 계열(5단계)로 표시됩니다.
R 모델:
선과 점이 빨간색 계열(5단계)로 표시됩니다.