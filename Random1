해했습니다. BSM-이 문자열 중간에 위치하고 있을 때, BSM- 이후의 문자열을 정규식으로 잡아낸 뒤, 그 문자열을 _로 나누고 네 번째 요소의 마지막 한 글자를 가져오는 방법을 C#으로 구현해 보겠습니다.

csharp
코드 복사
using System;
using System.Text.RegularExpressions;

class Program
{
    static void Main()
    {
        // 예시 문자열
        string text = "prefix_BSM-abc_def_ghi_jkl_mno_suffix";
        
        // 정규식으로 'BSM-' 이후의 문자열을 캡처
        Match match = Regex.Match(text, @"BSM-([^_]+(_[^_]+){3})");
        
        if (match.Success)
        {
            // 'BSM-' 이후의 문자열에서 네 번째 요소를 추출
            string capturedPart = match.Value.Substring(4); // 'BSM-' 이후 부분
            string[] parts = capturedPart.Split('_');
            
            if (parts.Length >= 4)
            {
                // 네 번째 요소의 마지막 한 글자 가져오기
                string fourthPart = parts[3];
                char lastChar = fourthPart[fourthPart.Length - 1];
                
                // 결과 출력
                Console.WriteLine(lastChar);
            }
            else
            {
                Console.WriteLine("네 번째 요소가 존재하지 않습니다.");
            }
        }
        else
        {
            Console.WriteLine("문자열에서 'BSM-' 이후의 패턴을 찾을 수 없습니다.");
        }
    }
}
코드 설명:
Regex.Match(text, @"BSM-([^_]+(_[^_]+){3})"):

정규식을 사용하여 BSM-로 시작하고, _로 구분된 문자열을 잡아냅니다.
([^_]+(_[^_]+){3})는 언더스코어로 구분된 총 네 개의 부분을 찾습니다.
match.Value.Substring(4):

정규식으로 매칭된 문자열에서 BSM-을 제외한 부분을 추출합니다.
capturedPart.Split('_'):

추출된 문자열을 _로 나누어 배열에 저장합니다.
if (parts.Length >= 4):

배열에 네 번째 요소가 있는지 확인합니다.
fourthPart[fourthPart.Length - 1]:

네 번째 요소의 마지막 한 글자를 추출합니다.
Console.WriteLine(lastChar);:

마지막 글자를 출력합니다.
이 코드는 문자열 중간에 BSM-이 포함된 경우에도 해당 패턴 이후의 부분을 추출하여 처리할 수 있습니다. BSM- 이후의 문자열을 _로 나누고 네 번째 요소의 마지막 글자를 얻을 수 있습니다