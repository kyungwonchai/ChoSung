그 문제를 정확히 이해했습니다. 비밀번호를 변경해도 즉시 적용되지 않고 이전 비밀번호로 로그인이 되는 현상은 MainViewModel이 가지고 있는 DbContext 인스턴스의 캐시(Cache) 때문입니다.

MainViewModel은 생성될 때 DbContext 인스턴스(_context)를 하나 만들어서 계속 사용합니다. 비밀번호를 확인할 때 (CheckMasterPassword, CheckNormalPassword) 이 _context를 통해 AppSettings 테이블을 조회하는데, Entity Framework는 성능을 위해 한번 읽어온 데이터를 내부 캐시에 저장해 둡니다. 비밀번호 변경 창(PasswordChangeViewModel)에서는 별도의 DbContext 인스턴스를 사용하여 DB 값을 변경했기 때문에, MainViewModel의 _context는 DB 값이 변경된 것을 모르고 캐시에 저장된 이전 비밀번호 값을 계속 사용하게 됩니다.

해결 방법:

MainViewModel의 CheckMasterPassword와 CheckNormalPassword 메서드에서 데이터베이스로부터 비밀번호 설정을 읽어올 때, 캐시를 사용하지 않고 항상 데이터베이스에서 최신 값을 가져오도록 .AsNoTracking() 옵션을 사용하여 조회합니다. 또한, 데이터베이스 조회는 비동기로 처리하는 것이 좋습니다.

수정해야 할 파일 목록:

ViewModels/MainViewModel.cs
아래는 이 수정 사항을 반영한 MainViewModel.cs 파일 전체 코드(주석 제외)입니다.
ViewModels/MainViewModel.cs (DB 키 조회 수정 최종)
4월 10, 12:55 PM

열기

