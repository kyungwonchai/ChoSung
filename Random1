포커스를 가져가는 프로그램을 만들면 Windows 11 알림과 비슷한 효과를 낼 수 있습니다.

테스트용 WPF 포커스 강제 변경 프로그램
아래 코드는 특정 간격(예: 3초)마다 특정 창의 포커스를 강제로 가져가는 프로그램입니다.

1. WPF 프로젝트에서 테스트 프로그램 작성
이 프로그램은 버튼을 누르면 일정 주기로 포커스를 다른 창으로 이동했다가 다시 가져오는 역할을 합니다.

MainWindow.xaml
xml
코드 복사
<Window x:Class="FocusTest.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="포커스 테스트" Height="250" Width="400">
    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
        <TextBox Name="TestTextBox" Width="300" Height="30" Text="여기에 입력하세요"/>
        <Button Name="StartButton" Click="StartButton_Click" Width="200" Height="40" Margin="10">
            포커스 빼앗기 시작
        </Button>
        <Button Name="StopButton" Click="StopButton_Click" Width="200" Height="40" Margin="10">
            포커스 빼앗기 중지
        </Button>
    </StackPanel>
</Window>
2. MainWindow.xaml.cs
csharp
코드 복사
using System;
using System.Runtime.InteropServices;
using System.Threading;
using System.Windows;
using System.Windows.Threading;

namespace FocusTest
{
    public partial class MainWindow : Window
    {
        private DispatcherTimer _focusTimer;
        private IntPtr _externalWindowHandle;

        [DllImport("user32.dll")]
        private static extern IntPtr GetForegroundWindow();

        [DllImport("user32.dll")]
        private static extern bool SetForegroundWindow(IntPtr hWnd);

        public MainWindow()
        {
            InitializeComponent();
            _focusTimer = new DispatcherTimer();
            _focusTimer.Interval = TimeSpan.FromSeconds(3);
            _focusTimer.Tick += FocusTimer_Tick;
        }

        private void StartButton_Click(object sender, RoutedEventArgs e)
        {
            // 현재 실행 중인 창(포커스 받을 대상)
            _externalWindowHandle = new System.Windows.Interop.WindowInteropHelper(this).Handle;
            _focusTimer.Start();
        }

        private void StopButton_Click(object sender, RoutedEventArgs e)
        {
            _focusTimer.Stop();
        }

        private void FocusTimer_Tick(object sender, EventArgs e)
        {
            // 현재 포커스를 얻은 창의 핸들 가져오기
            IntPtr currentWindow = GetForegroundWindow();
            
            // 다른 창이 포커스를 갖고 있다면 다시 이 창으로 포커스를 가져오기
            if (currentWindow != _externalWindowHandle)
            {
                SetForegroundWindow(_externalWindowHandle);
                TestTextBox.Focus();
                TestTextBox.SelectionLength = 0; // 전체 선택 방지
                TestTextBox.SelectionStart = TestTextBox.Text.Length; // 커서 이동
            }
        }
    }
}
설명
3초마다 현재 실행 중인 창의 포커스를 잃었다면 다시 가져옴.
외부 창(예: 다른 프로그램, Windows 알림)이 포커스를 가져가도록 방해하는 동작을 재현.
포커스 복귀 시 TextBox의 전체 선택 현상을 확인할 수 있음.
포커스가 빼앗긴 후 다시 돌아올 때, TextBox가 전체 선택되는지 테스트 가능.
실행 방법