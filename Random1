네, 500KB 파일인데도 "Request Entity Too Large" 오류가 발생하고, Flask 설정(MAX_CONTENT_LENGTH = 50 * 1024 * 1024)에 오타가 없다면, 말씀하신 대로 다른 곳에서 파일 크기 제한이 적용되고 있을 가능성이 매우 높습니다.

가장 흔한 경우는 Flask 애플리케이션 앞에 Nginx나 Apache 같은 웹 서버를 리버스 프록시(Reverse Proxy)로 사용하고 있을 때입니다. 이러한 웹 서버들은 자체적으로 클라이언트가 전송할 수 있는 요청 본문(파일 포함)의 최대 크기를 제한하는 설정을 가지고 있으며, 이 기본값이 Flask에서 설정한 50MB보다 작을 수 있습니다 (예: Nginx의 경우 기본 1MB).

다음 사항들을 확인해 주시겠어요?

웹 서버 사용 여부 확인:

현재 Flask 애플리케이션을 어떻게 실행하고 계신가요?
옵션 A: 터미널에서 직접 python app.py 또는 flask run 명령으로 실행하고, 브라우저에서 http://localhost:5000 또는 http://127.0.0.1:5000 등으로 접속하시나요? (이 경우는 Flask 자체 개발 서버 사용)
옵션 B: Nginx나 Apache 같은 웹 서버를 설정하여 특정 도메인 또는 IP 주소로 접속하고, 이 웹 서버가 내부적으로 Flask 애플리케이션으로 요청을 전달하는 방식인가요?
만약 옵션 B에 해당한다면, 사용 중인 웹 서버(Nginx 또는 Apache)의 설정을 확인해야 합니다.

(옵션 B의 경우) 웹 서버 설정 확인:

Nginx 사용 시: Nginx 설정 파일 (보통 /etc/nginx/nginx.conf 또는 /etc/nginx/sites-available/your_site_config)에서 http, server, 또는 location 블록 안에 client_max_body_size 지시어가 있는지 확인합니다.

Nginx

# 예시: Nginx 설정
http {
    # ...
    client_max_body_size 10M; # 여기에 설정된 값이 Flask의 50M보다 작을 수 있습니다.
    # ...
}
이 값을 Flask에서 설정한 값(50M)과 같거나 더 크게 설정해야 합니다. 수정 후에는 Nginx를 재시작해야 합니다 (sudo systemctl restart nginx 또는 sudo service nginx restart).

Apache 사용 시: Apache 설정 파일 (httpd.conf 또는 .htaccess 등)에서 LimitRequestBody 지시어를 확인합니다.

Apache

# 예시: Apache 설정
LimitRequestBody 10485760 # 10MB (바이트 단위)
이 값 또한 Flask 설정과 맞추거나 더 크게 설정해야 합니다. 수정 후 Apache 재시작이 필요합니다.

Flask MAX_CONTENT_LENGTH 설정 코드 정확히 보여주실 수 있나요?
만약을 위해 config.py 또는 app.py에서 app.config['MAX_CONTENT_LENGTH'] = ... 라인과, 만약 config.py를 사용하신다면 app.py에서 app.config.from_object(...) 하는 부분의 코드를 다시 한번 보여주시면 좋겠습니다. 정말로 오타가 없는지, 올바른 위치에 설정되었는지 함께 확인해 볼 수 있습니다.