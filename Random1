MSSQL 2014에서 데이터베이스를 완벽하게 복제하면서 이름을 변경하는 방법은 다음과 같습니다. 여기서는 기존 데이터베이스 이름을 OldDB라고 하고, 새로 복제할 데이터베이스 이름을 NewDB라고 가정합니다.

1. 데이터베이스 백업 후 복원 방식으로 복제하기 (권장)
이 방법은 전체 데이터베이스를 백업한 후, 다른 이름으로 복원하는 방식입니다.

백업 단계
sql
코드 복사
-- 기존 데이터베이스를 백업합니다.
BACKUP DATABASE OldDB
TO DISK = 'D:\Backup\OldDB.bak' -- 백업 파일 경로 지정
WITH FORMAT, INIT; -- 백업 파일을 덮어씌우기 위해 사용
복원 단계
sql
코드 복사
-- 데이터베이스를 다른 이름으로 복원합니다.
RESTORE DATABASE NewDB
FROM DISK = 'D:\Backup\OldDB.bak'
WITH MOVE 'OldDB' TO 'D:\MSSQL\Data\NewDB.mdf',  -- MDF 파일 경로
     MOVE 'OldDB_log' TO 'D:\MSSQL\Log\NewDB_log.ldf';  -- LDF 파일 경로
2. 데이터베이스 스크립트로 복제하기 (대규모 DB에는 비효율적)
만약 백업/복원이 아닌 스크립트를 이용하여 테이블과 데이터를 복제하고 싶다면, 다음과 같은 절차를 따릅니다.

데이터베이스 생성
sql
코드 복사
CREATE DATABASE NewDB;
데이터베이스 복제 스크립트 생성
Management Studio를 이용해서 스크립트를 생성할 수도 있지만, 전체 복제가 목적이라면 아래처럼 사용합니다.

sql
코드 복사
USE OldDB;

DECLARE @TableName NVARCHAR(MAX);
DECLARE TableCursor CURSOR FOR
SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE';

OPEN TableCursor;
FETCH NEXT FROM TableCursor INTO @TableName;

WHILE @@FETCH_STATUS = 0
BEGIN
    DECLARE @CreateTableScript NVARCHAR(MAX) = (SELECT OBJECT_DEFINITION(OBJECT_ID(@TableName)));
    DECLARE @InsertDataScript NVARCHAR(MAX) = 'INSERT INTO NewDB.dbo.' + @TableName + ' SELECT * FROM OldDB.dbo.' + @TableName;

    -- 테이블 구조 복제
    EXEC sp_executesql @CreateTableScript;

    -- 데이터 복사
    EXEC sp_executesql @InsertDataScript;

    FETCH NEXT FROM TableCursor INTO @TableName;
END

CLOSE TableCursor;
DEALLOCATE TableCursor;
3. 완벽 복제 후 이름 변경 (DB 복제본이 아닌 경우)
sql
코드 복사
ALTER DATABASE OldDB SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
ALTER DATABASE OldDB MODIFY NAME = NewDB;
ALTER DATABASE NewDB SET MULTI_USER;
참고 사항
방법 1이 가장 안전하고, 완벽히 복제하는 방법입니다.

D:\Backup\OldDB.bak 경로는 실제 백업 경로로 수정해야 합니다.

데이터베이스 크기가 클 경우, 충분한 디스크 공간을 확보하세요.

만약 SQL Server Agent를 사용하지 않는 경우, 백업 경로는 접근 가능한 경로여야 합니다.