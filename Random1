ync 함수에서 생성된 지 3일이 안된 파일은 삭제하지 않도록 수정
csharp
코드 복사
public async Task DeleteFilesAsync(List<FileInfo> files, string folderPath, bool forceDelete = false, CancellationToken cancellationToken = default)
{
    long currentFolderSize = files.Sum(f => f.Length);
    long freeSpace = GetDriveFreeSpace(folderPath.Split('\\')[0] + "\\");

    var startTime = DateTime.Now;
    var allowedExtensions = new HashSet<string>(StringComparer.OrdinalIgnoreCase) { ".jpg", ".png", ".bmp" };
    var minimumCreationTime = DateTime.Now.AddDays(-3); // 3일 이전 파일만 삭제

    foreach (var file in files)
    {
        if (cancellationToken.IsCancellationRequested)
        {
            logger.LogRecentActivity("파일 삭제 중지됨.");
            break;
        }

        if (!allowedExtensions.Contains(file.Extension))
        {
            logger.LogRecentActivity($"허용되지 않은 확장자: {file.Extension}. 파일 삭제 안 함: {file.FullName}");
            continue;
        }

        if (file.CreationTime > minimumCreationTime)
        {
            logger.LogRecentActivity($"파일 생성 시간이 3일 이내입니다. 파일 삭제 안 함: {file.FullName}");
            continue;
        }

        if (currentFolderSize <= MaxFolderSize && !forceDelete)
        {
            logger.LogRecentActivity("현재 폴더 크기가 8GB 이하입니다.");
            break;
        }

        if (freeSpace > MinimumFreeSpace && !forceDelete)
        {
            logger.LogRecentActivity($"용량이 {freeSpace / (1024 * 1024 * 1024)} GB 남아서 삭제를 하지 않습니다.");
            break;
        }

        try
        {
            file.Delete();
            currentFolderSize -= file.Length;
            logger.LogDeletionActivity($"파일 삭제됨: {file.FullName}");

            var elapsed = DateTime.Now - startTime;
            if (elapsed.TotalMinutes < 3)
            {
                await Task.Delay(5000, cancellationToken); // 처음 3분 동안 5초 간격으로 파일 삭제
            }
            else
            {
                await Task.Delay(100, cancellationToken); // 3분 이후에는 100ms 간격으로 파일 삭제
            }
        }
        catch (OperationCanceledException)
        {
            logger.LogRecentActivity("파일 삭제 작업이 취소되었습니다.");
            break;
        }
        catch (Exception ex)
        {
            logger.LogError("Failed to delete file: " + ex.Message);
        }
    }

    updateFolderStatistics(currentFolderSize, folderPath);
}
이제 .jpg, .png, .bmp 파일만 삭제되며, 생성된 지 3일이 안된 파일은 삭제되지 않도록 하드코딩되었습니다. 필요한 기능이 모두 포함되었