ed 이벤트를 추가합니다.

xaml

<dx:CheckedComboBoxEdit Name="menuc_SelectedDate" Width="300" Height="50" Background="White" ItemsSource="{Binding Menuc_Dates}" EditValueChanged="Menuc_SelectedDate_EditValueChanged"/>
<dx:CheckedComboBoxEdit Name="menuc_SelectedBoardType" Width="300" Height="50" Background="White" ItemsSource="{Binding Menuc_BoardTypes}" EditValueChanged="Menuc_SelectedBoardType_EditValueChanged"/>
<dx:CheckedComboBoxEdit Name="menuc_SelectedLine" Width="300" Height="50" Background="White" ItemsSource="{Binding Menuc_Lines}" EditValueChanged="Menuc_SelectedLine_EditValueChanged"/>
<dx:CheckedComboBoxEdit Name="menuc_SelectedStatus" Width="300" Height="50" Background="White" ItemsSource="{Binding Menuc_Statuses}" EditValueChanged="Menuc_SelectedStatus_EditValueChanged"/>

    C# 변경점:

각 CheckedComboBoxEdit의 선택된 값을 저장할 변수와 프로퍼티를 추가합니다.

csharp

private List<string> inDates, inBoardTypes, inLines, inStatuses;

public List<string> InDates { get { return inDates; } set { inDates = value; OnPropertyChanged(); } }
public List<string> InBoardTypes { get { return inBoardTypes; } set { inBoardTypes = value; OnPropertyChanged(); } }
public List<string> InLines { get { return inLines; } set { inLines = value; OnPropertyChanged(); } }
public List<string> InStatuses { get { return inStatuses; } set { inStatuses = value; OnPropertyChanged(); } }

그리고 각 CheckedComboBoxEdit의 EditValueChanged 이벤트 핸들러를 구현합니다.

csharp

private void Menuc_SelectedDate_EditValueChanged(object sender, EditValueChangedEventArgs e) { InDates = (sender as CheckedComboBoxEdit)?.EditValue as List<string>; }
private void Menuc_SelectedBoardType_EditValueChanged(object sender, EditValueChangedEventArgs e) { InBoardTypes = (sender as CheckedComboBoxEdit)?.EditValue as List<string>; }
private void Menuc_SelectedLine_EditValueChanged(object sender, EditValueChangedEventArgs e) { InLines = (sender as CheckedComboBoxEdit)?.EditValue as List<string>; }
private void Menuc_SelectedStatus_EditValueChanged(object sender, EditValueChangedEventArgs e) { InStatuses = (sender as CheckedComboBoxEdit)?.EditValue as List<string>; }

이제 각 CheckedComboBoxEdit에서 선택한 값들이 각각의 InDates, InBoardTypes, InLines, InStatuses 리스트 변수에 저장됩니다. 필요한 경우 이 리스트에