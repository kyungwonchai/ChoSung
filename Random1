_NO와 MODEL_CODE 컬럼에만 토글 색상을 적용하려면, 각 컬럼의 셀에만 색상 변경을 적용하도록 코드를 수정해야 합니다. DataGridRow 전체의 색상을 바꾸는 대신, 특정 컬럼에만 색상을 변경하는 방식으로 해결하겠습니다.

해결 방안:
PO_NO와 MODEL_CODE 컬럼에만 배경색 토글을 적용.
PO_NO 값이 변경될 때마다 배경색을 토글로 변경.
Row 전체가 아닌, 개별 컬럼에 스타일을 적용.
수정된 XAML 코드:
xml
코드 복사
<Window x:Class="YourNamespace.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="MainWindow" Height="450" Width="800">
    <Grid>
        <DataGrid Name="TaskDataGrid" ItemsSource="{Binding TaskList}" AutoGenerateColumns="False" 
                  IsReadOnly="True" CanUserSortColumns="False" Margin="10" 
                  RowHeight="30" FontSize="14" ColumnHeaderHeight="35">
            
            <DataGrid.Columns>
                <!-- PO_NO 컬럼 (토글 배경색 적용) -->
                <DataGridTextColumn Header="PO NO" Binding="{Binding PO_NO}" Width="*" MinWidth="100">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsAlternateColor}" Value="True">
                                    <Setter Property="Background" Value="Red" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsAlternateColor}" Value="False">
                                    <Setter Property="Background" Value="#FFFF00" /> <!-- 노란색 -->
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <!-- MODEL_CODE 컬럼 (토글 배경색 적용) -->
                <DataGridTextColumn Header="MODEL CODE" Binding="{Binding MODEL_CODE}" Width="*" MinWidth="100">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsAlternateColor}" Value="True">
                                    <Setter Property="Background" Value="Red" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsAlternateColor}" Value="False">
                                    <Setter Property="Background" Value="#FFFF00" /> <!-- 노란색 -->
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <!-- 나머지 컬럼들 -->
                <DataGridTextColumn Header="Sequence" Width="Auto" MinWidth="100" Binding="{Binding SequenceFlag}" />
                <DataGridTemplateColumn Header="Function Status" Width="*" MinWidth="150">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ItemsControl ItemsSource="{Binding FunctionStatusList}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <Ellipse Width="30" Height="30" Fill="{Binding StatusColor}" />
                                        </StackPanel>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</Window>
ViewModel (배경색 토글 로직 추가):
csharp
코드 복사
using System;
using System.Collections.ObjectModel;
using System.Linq;

public class MainViewModel : ViewModelBase
{
    public ObservableCollection<TaskModel> TaskList { get; set; }

    public MainViewModel()
    {
        TaskList = new ObservableCollection<TaskModel>();
        TaskList.CollectionChanged += TaskList_CollectionChanged;

        // 예시 데이터 추가
        TaskList.Add(new TaskModel { PO_NO = "12345", MODEL_CODE = "BSM-S123", SequenceFlag = 1 });
        TaskList.Add(new TaskModel { PO_NO = "12346", MODEL_CODE = "BSM-S124", SequenceFlag = 2 });
        TaskList.Add(new TaskModel { PO_NO = "12347", MODEL_CODE = "BSM-S125", SequenceFlag = 3 });
        TaskList.Add(new TaskModel { PO_NO = "12345", MODEL_CODE = "BSM-S123", SequenceFlag = 1 });
    }

    // TaskList에 데이터가 추가되면 호출되는 이벤트 핸들러
    private void TaskList_CollectionChanged(object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
    {
        if (e.Action == System.Collections.Specialized.NotifyCollectionChangedAction.Add)
        {
            ApplyRowColors();
        }
    }

    // PO_NO에 따라 컬러 토글 처리
    private void ApplyRowColors()
    {
        string previousPO = null;
        bool toggle = false;

        foreach (var task in TaskList)
        {
            if (task.PO_NO != previousPO)
            {
                toggle = !toggle;
            }

            task.IsAlternateColor = toggle; // 토글 색상 적용
            previousPO = task.PO_NO;
        }
    }
}

public class TaskModel : ViewModelBase
{
    public string PO_NO { get; set; }
    public string MODEL_CODE { get; set; }
    public int SequenceFlag { get; set; }

    // 토글 색상 속성
    private bool _isAlternateColor;
    public bool IsAlternateColor
    {
        get => _isAlternateColor;
        set
        {
            _isAlternateColor = value;
            OnPropertyChanged(nameof(IsAlternateColor));
        }
    }
}
주요 사항 설명:
IsAlternateColor 속성:

각 TaskModel에 배경색을 토글로 변경하기 위한 속성을 추가했습니다.
true일 때는 빨간색, false일 때는 노란색이 적용됩니다.
XAML의 컬럼 스타일:

**DataTrigger**를 사용해 PO_NO와 MODEL_CODE 컬럼의 배경색을 토글로 설정합니다.
PO_NO나 MODEL_CODE 값에 따라 색상이 번갈아 가며 적용됩니다.
MainViewModel의 ApplyRowColors 메서드:

PO_NO 값이 변경될 때마다 배경색이 토글로 변경됩니다.
같은 PO_NO는 같은 색상을 유지하고, 다른 PO_NO로 변경되면 색상이 토글됩니다.
TaskList에 데이터 추가 시:

CollectionChanged 이벤트로 새로 추가된 항목에 대해 배경색이 적용됩니다.
정리:
이 코드로 PO_NO와 MODEL_CODE 컬럼에서만 토글 색상이 적용됩니다. 다른 컬럼에는 색상 변화가 없으며, PO_NO가 바뀔 때마다 색상이 번갈아 가며 적용됩니다.