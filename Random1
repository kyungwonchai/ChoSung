PF에서 XAML로 화면에 표시되는 UI는 장치 독립적인 단위 (DIPs)로 표현되며, 이는 화면의 해상도와 프린터 해상도가 다르기 때문에 정확한 크기를 일치시키기 위해 조정이 필요합니다. 특히, WPF가 화면과 인쇄에서 동일한 크기로 출력되도록 하기 위해서는 DPI(Dots Per Inch) 개념을 이해하고, 화면과 프린터 간의 DPI 차이를 고려해야 합니다.

이유: 화면 DPI와 프린터 DPI 차이
화면 해상도와 프린터 해상도 차이:

화면에서는 보통 96 DPI가 기본 설정으로 사용됩니다. 이는 1인치(25.4mm)에 96픽셀로 계산하는 기준입니다.
그러나 프린터는 보통 300 DPI 이상으로, 더 높은 해상도로 출력을 처리합니다. 이 때문에 화면에서 보이는 크기와 인쇄물의 실제 크기 간에 차이가 발생하게 됩니다.
장치 독립적인 단위:

WPF는 장치 독립적인 단위를 사용하여 동일한 XAML 코드를 다양한 해상도의 화면에서 일관되게 표시하지만, 인쇄에서는 물리적 크기를 기준으로 하므로 별도의 조정이 필요합니다.
따라서 인쇄 시에는 WPF 화면 크기를 기준으로 하는 대신, 물리적 크기를 직접 지정하는 것이 정확한 크기 출력에 도움이 됩니다.
물리적 크기 지정 필요성:

XAML에서 지정한 크기를 직접적으로 인쇄하려고 할 경우, 프린터 해상도와 화면 해상도의 차이 때문에 출력이 정확한 크기로 맞지 않을 수 있습니다.
이 경우, 인쇄에서 사용할 Grid 또는 다른 UI 요소의 크기를 물리적 크기에 맞게 다시 설정해야 합니다.
C# 코드로 인쇄 시 크기 조정 예시
아래 코드에서 PrintDialog와 WPF Visual을 사용하여 인쇄하기 전에 크기를 조정하는 방법을 예시로 보여드리겠습니다. 이 코드에서는 DPI를 기준으로 물리적 크기를 맞춰줍니다.

csharp
코드 복사
using System.Windows;
using System.Windows.Controls;
using System.Windows.Media;
using System.Windows.Media.Imaging;

namespace LabelPrinter
{
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
        }

        private void PrintButton_Click(object sender, RoutedEventArgs e)
        {
            PrintDialog printDialog = new PrintDialog();
            if (printDialog.ShowDialog() == true)
            {
                // 인쇄할 크기를 실제 크기에 맞추기 위해 DPI 조정
                double dpiFactor = 96.0 / 300.0; // 300 DPI 프린터 기준 변환

                // 인쇄할 내용 그리드 생성
                Grid printGrid = new Grid
                {
                    Width = 189 / dpiFactor, // 실제 크기를 반영하도록 조정
                    Height = 180 / dpiFactor,
                    Background = Brushes.White
                };

                // 레이아웃 설정 및 텍스트 추가
                TextBlock title = new TextBlock
                {
                    Text = "분할 자재 라벨",
                    FontSize = 12,
                    HorizontalAlignment = HorizontalAlignment.Center,
                    VerticalAlignment = VerticalAlignment.Center,
                    Margin = new Thickness(5)
                };
                printGrid.Children.Add(title);

                StackPanel leftColumn = CreateLeftColumn();
                StackPanel rightColumn = CreateRightColumn();

                Grid.SetRow(leftColumn, 1);
                Grid.SetColumn(leftColumn, 0);
                printGrid.Children.Add(leftColumn);

                Grid.SetRow(rightColumn, 1);
                Grid.SetColumn(rightColumn, 1);
                printGrid.Children.Add(rightColumn);

                // 프린터 설정에 맞춰 변환 후 출력
                printDialog.PrintVisual(printGrid, "Label Print");
            }
        }

        private StackPanel CreateLeftColumn()
        {
            StackPanel leftColumn = new StackPanel();
            string[] labels = { "코드:", "LOT:", "업체:", "라인/모델:", "관리자 확인:" };
            foreach (var label in labels)
            {
                leftColumn.Children.Add(new TextBlock
                {
                    Text = label,
                    FontSize = 8,
                    Margin = new Thickness(5)
                });
            }
            return leftColumn;
        }

        private StackPanel CreateRightColumn()
        {
            StackPanel rightColumn = new StackPanel();
            for (int i = 0; i < 5; i++)
            {
                rightColumn.Children.Add(new TextBox
                {
                    FontSize = 8,
                    Background = Brushes.Transparent,
                    BorderThickness = new Thickness(0),
                    Margin = new Thickness(5)
                });
            }
            return rightColumn;
        }
    }
}
설명
dpiFactor 변수는 300 DPI 기준으로 변환하는 비율입니다. 화면(96 DPI) 기준 크기를 300 DPI 프린터 크기로 맞추기 위해 사용합니다.