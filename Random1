고, 해당 값을 TBL2에도 삽입하는 프로시저를 다음과 같이 수정할 수 있습니다.

수정된 MSSQL 프로시저
sql
Copy code
USE YourDatabaseName;
GO

CREATE PROCEDURE InsertIPToTempAndCopy
    @ipAddress VARCHAR(20)
AS
BEGIN
    -- 현재 날짜와 시간
    DECLARE @currentDateTime DATETIME = GETDATE();

    -- TBL1에 임시 행 삽입 (IP 주소만 포함)
    INSERT INTO TBL1 (IPAddress)
    VALUES (@ipAddress);

    -- TBL2에 IP와 날짜 삽입 (TBL1에서 방금 삽입된 행 사용)
    INSERT INTO TBL2 (IPAddress, Date)
    SELECT IPAddress, @currentDateTime
    FROM TBL1
    WHERE IPAddress = @ipAddress;

    -- TBL1에서 임시로 삽입된 행 제거 (선택적)
    DELETE FROM TBL1
    WHERE IPAddress = @ipAddress;
END;
GO
이 프로시저는 다음과 같은 순서로 작동합니다:

TBL1에 지정된 IP 주소를 가진 임시 행을 삽입합니다.
TBL1에서 방금 삽입된 IP 주소를 이용하여, TBL2에 IP 주소와 현재 날짜를 삽입합니다.
필요한 경우, TBL1에서 임시로 삽입된 행을 제거합니다.
C# 코드
C#에서 이 프로시저를 호출하는 방법은 이전 예시와 같습니다. 다만, 프로시저 이름이 InsertIPToTempAndCopy로 변경되었음을 유의해야 합니다.

csharp
Copy code
// ... 이전 C# 코드와 동일 ...

public class DatabaseHandler
{
    private string connectionString = "YourConnectionStringHere";

    public void InsertIP(string ipAddress)
    {
        using (SqlConnection connection = new SqlConnection(connectionString))
        {
            using (SqlCommand command = new SqlCommand("InsertIPToTempAndCopy", connection))
            {
                command.CommandType = CommandType.StoredProcedure;
                command.Parameters.AddWithValue("@ipAddress", ipAddress);

                connection.Open();
                command.ExecuteNonQuery();
            }
        }
    }
}

// 사용 예시
public class Program
{
    public static void Main()
    {
        DatabaseHandler dbHandler = new DatabaseHandler();
        dbHandler.InsertIP("192.168.1.1"); // 예시 IP 주소
    }
}
이 구조는 TBL1이 공유되는 테이블이라는 점을 고려하여, 임시 데이터를 삽입하고 제