using iText.Kernel.Pdf;
using iText.Kernel.Utils;
using System;
using System.Drawing;
using System.IO;
using System.Windows.Forms;

// ...

string pdfFilePath = "example.pdf";
string outputFolder = "output";

using (PdfDocument pdfDocument = new PdfDocument(new PdfReader(pdfFilePath)))
{
    Directory.CreateDirectory(outputFolder);

    for (int pageNum = 1; pageNum <= pdfDocument.GetNumberOfPages(); pageNum++)
    {
        string imagePath = Path.Combine(outputFolder, $"page{pageNum}.png");
        using (FileStream fs = new FileStream(imagePath, FileMode.Create))
        {
            PdfPage pdfPage = pdfDocument.GetPage(pageNum);
            Rectangle pageSize = new Rectangle(0, 0, (int)pdfPage.GetPageSize().GetWidth(), (int)pdfPage.GetPageSize().GetHeight());

            PdfCanvasProcessor processor = new PdfCanvasProcessor(new ImageRenderListener(fs));
            processor.ProcessPageContent(pdfPage);

            // Copy the image to clipboard
            using (Image image = Image.FromFile(imagePath))
            {
                Clipboard.SetImage(image);
            }
        }
    }
}

// Custom ImageRenderListener class
public class ImageRenderListener : IEventListener
{
    private FileStream fileStream;

    public ImageRenderListener(FileStream fileStream)
    {
        this.fileStream = fileStream;
    }

    public void EventOccurred(IEventData data, EventType type)
    {
        if (type == EventType.RENDER_IMAGE)
        {
            ImageRenderInfo imageRenderInfo = (ImageRenderInfo)data;
            PdfImageXObject imageXObject = imageRenderInfo.GetImage();
            imageXObject.GetImageBytes();
            Image image = imageXObject.GetDrawingImage();

            if (image != null)
            {
                image.Save(fileStream, System.Drawing.Imaging.ImageFormat.Png);
            }
        }
    }

    public ICollection<EventType> GetSupportedEvents()
    {
        return new EventType[] { EventType.RENDER_IMAGE };
    }
}
