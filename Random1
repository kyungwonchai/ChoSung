 .exe 실행하기

C#에서 외부 프로그램을 실행하기 위해 System.Diagnostics.Process 클래스를 사용할 수 있습니다.

csharp

using System.Diagnostics;

// ...

void RunPythonExe()
{
    Process process = new Process();
    process.StartInfo.FileName = @"path\to\your_script.exe";
    process.StartInfo.Arguments = "argument1 argument2";  // 파라미터가 필요한 경우
    process.StartInfo.RedirectStandardOutput = true;
    process.StartInfo.UseShellExecute = false;
    process.StartInfo.CreateNoWindow = true;

    process.Start();

    string output = process.StandardOutput.ReadToEnd();  // 파이썬 스크립트의 출력을 받음

    process.WaitForExit();
}

위 코드를 WPF 앱의 버튼 클릭 이벤트 핸들러 등에 추가하면 버튼을 클릭할 때마다 파이썬 스크립트가 실행됩니다.

에러 메시지는 RedirectStandardError와 process.StandardError.ReadToEnd()를 사용하여 WPF 앱에 표시할 수 있습니다.
User
[이떄도 스크립트안에 암호화해야되나
ChatGPT

스크립트 내부에 데이터베이스 비밀번호나 중요한 정보가 포함되어 있다면, 보안을 위해 암호화하는 것이 좋습니다. 암호화된 정보를 별도의 설정 파일에 저장하고, 실행 파일이 이를 읽어들이는 방법을 사용할 수 있습니다.
파이썬에서 암호화하기

    파이썬에서는 cryptography 라이브러리를 사용하여 정보를 암호화할 수 있습니다.

    bash

pip install cryptography

간단한 암호화 예제

python

    from cryptography.fernet import Fernet
    key = Fernet.generate_key()
    cipher_suite = Fernet(key)

    text = "my_secret_password"
    cipher_text = cipher_suite.encrypt(text.encode())

    암호화된 문자열을 별도의 파일에 저장하고, 실행 파일이 이를 읽을 수 있도록 합니다.

C#에서 파이썬 실행 파일과 통신하기

암호화된 정보가 필요할 때, C# 코드에서 Process 클래스의 Arguments 속성을 사용하여 이를 파이썬 실행 파일에 전달할 수 있습니다.

csharp

process.StartInfo.Arguments = "--key " + encrypted_key;

이렇게 하면 중요한 정보를 스크립트나 실행 파일 내에 직접 삽입하지 않고도 안전하게 데이터를 전달할 수 있습니다.