주피터 노트북, AI와 함께 똑똑하게 활용하기 (JetBrains 사용자 맞춤 가이드)
JetBrains 올 패키지를 구독하고 계신다면 데이터 사이언스 학습 시 주피터 노트북(Jupyter Notebook)에 강력한 AI 기능을 연동하여 학습 효율을 극대화할 수 있습니다. 크게 JetBrains AI Assistant를 활용하는 방법과 GitHub Copilot과 같은 외부 AI 도구를 연동하는 방법이 있습니다.

1. JetBrains AI Assistant: 가장 강력하고 완벽하게 연동되는 AI 비서
JetBrains 구독자에게 가장 추천하는 방법은 내장된 AI Assistant를 활용하는 것입니다. 특히 데이터 사이언스 전용 IDE인 DataSpell이나 PyCharm Professional에서 주피터 노트북을 사용할 때 완벽한 통합 환경을 제공합니다.

✨ 주요 기능
지능형 코드 자동 완성 및 생성: 단순한 코드 완성을 넘어, 현재 셀의 컨텍스트(데이터프레임, 변수 등)를 이해하고 다음에 필요한 코드를 통째로 제안하거나 생성해 줍니다.

예: df.head()를 입력한 후, AI가 데이터 정제, 시각화 등 다음 단계에 적합한 코드 블록을 추천합니다.

자연어 프롬프트를 통한 코드 생성: "이 데이터프레임에서 'age' 열의 분포를 히스토그램으로 그려줘" 와 같이 한글이나 영어로 원하는 작업을 지시하면, AI가 즉시 해당 코드를 생성하여 셀에 삽입해 줍니다.

데이터 시각화 추천 및 생성: 현재 작업 중인 데이터프레임을 분석하여 가장 적합한 형태의 시각화(막대그래프, 산점도 등)를 추천하고, 클릭 한 번으로 관련 코드를 생성합니다.

코드 설명 및 문서화: 복잡하거나 이해하기 어려운 코드 블록을 선택하고 'Explain Code' 기능을 사용하면, AI가 코드의 각 부분이 어떤 역할을 하는지 자연어로 쉽게 설명해 줍니다. 마크다운 형식으로 셀 설명을 생성하는 것도 가능합니다.

오류 분석 및 수정 제안: 코드 실행 중 오류가 발생하면, AI가 오류의 원인을 분석하고 해결 방법을 제안하여 디버깅 시간을 획기적으로 단축시켜 줍니다.

채팅 인터페이스 활용: IDE 내의 AI 채팅창을 통해 데이터 분석 방법론에 대해 질문하거나, 특정 라이브러리 사용법을 물어보는 등 학습 보조 도구로 유용하게 사용할 수 있습니다.

🚀 시작하는 방법
DataSpell 또는 PyCharm Professional을 실행합니다. (DataSpell이 데이터 사이언스에 더 특화되어 있습니다.)

IDE 우측 툴바에서 AI Assistant 아이콘을 클릭하여 활성화하고 JetBrains 계정으로 로그인합니다.

.ipynb 파일을 열거나 생성하면, 코드 셀 사이나 컨텍스트 메뉴(우클릭) 등 다양한 위치에서 AI 기능을 바로 사용할 수 있습니다.

2. GitHub Copilot: 또 다른 강력한 AI 페어 프로그래머
GitHub Copilot은 가장 널리 알려진 AI 코딩 비서 중 하나이며, JetBrains IDE는 물론 VS Code 등 다양한 환경에서 주피터 노트북과 연동하여 사용할 수 있습니다.

✨ 주요 기능
실시간 코드 제안: 코드를 입력하는 동안 실시간으로 회색 글씨의 제안을 보여주며, Tab 키를 눌러 바로 채택할 수 있습니다. 여러 줄의 코드 블록 전체를 제안하기도 합니다.

주석을 코드로 변환: # 서울시 인구 데이터를 막대 그래프로 시각화와 같이 주석으로 원하는 작업을 명시하면, Copilot이 해당 작업을 수행하는 Python 코드를 자동으로 생성해 줍니다.

Copilot Chat: 별도의 채팅창을 통해 코드에 대한 질문, 리팩토링 제안, 테스트 케이스 생성 등 다양한 상호작용이 가능합니다. JetBrains의 AI Assistant 채팅과 유사한 기능을 제공합니다.

🚀 연동 방법
JetBrains IDE(DataSpell, PyCharm 등)의 Settings/Preferences > Plugins 메뉴로 이동합니다.

Marketplace에서 GitHub Copilot을 검색하여 설치합니다.

IDE를 재시작한 후, GitHub 계정으로 로그인하여 인증을 완료하면 바로 사용 가능합니다.

3. Jupyter AI: 다양한 AI 모델을 선택하는 즐거움
Jupyter AI는 Jupyter 프로젝트에서 직접 개발한 공식 확장 기능입니다. 특정 회사의 AI에 종속되지 않고, OpenAI(ChatGPT), Google(Gemini), Anthropic(Claude) 등 다양한 AI 모델 제공자의 모델을 선택하여 사용할 수 있다는 장점이 있습니다.

✨ 주요 기능
매직 명령어 (%%ai): 코드 셀 상단에 %%ai [모델명]과 함께 프롬프트를 입력하면, 해당 AI 모델이 프롬프트에 맞는 코드를 생성해 줍니다.

JupyterLab 내 채팅 UI: JupyterLab 사이드바에 추가되는 채팅창을 통해 대화형으로 AI와 소통하며 데이터 분석 작업을 수행할 수 있습니다.

로컬 모델 지원: GPT4All, Ollama 등을 통해 인터넷 연결 없이 개인 PC에 설치된 소형 언어 모델(SLM)을 활용할 수 있어 보안에 민감한 데이터를 다룰 때 유용합니다.

🚀 설치 방법
터미널이나 Anaconda Prompt에서 다음 명령어를 사용하여 설치합니다.

Bash

pip install jupyter-ai[all]
설치 후 JupyterLab을 실행하면 AI 관련 기능이 활성화된 것을 확인할 수 있습니다. 각 AI 모델을 사용하려면 해당 서비스의 API 키를 발급받아 설정해야 합니다.

결론: 어떤 것을 선택해야 할까?
구분	JetBrains AI Assistant	GitHub Copilot	Jupyter AI
추천 대상	JetBrains 올 패키지 구독자, 가장 쉽고 강력한 통합 환경을 원하는 사용자	다양한 IDE에서 일관된 경험을 원하는 사용자	여러 AI 모델을 직접 비교하고 실험해보고 싶은 사용자
장점	IDE와 완벽하게 통합, 컨텍스트 이해 능력 탁월, 별도 설치 불필요	폭넓은 사용자층, 검증된 코드 생성 능력	다양한 AI 모델 선택 가능, 오픈소스, 로컬 모델 지원