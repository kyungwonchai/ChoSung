 코드를 제공해 드리겠습니다. 이 작업을 수행하기 위해, 우선 SQL Server에 연결하고, 해당 IP 주소가 테이블에 존재하는지 확인한 후, 존재하지 않으면 새로운 레코드를 삽입하는 방식으로 진행됩니다.

아래는 이를 수행하는 예시 코드입니다. 이 코드는 ADO.NET을 사용하여 데이터베이스에 접근합니다. 주의할 점은, 코드를 실제 환경에 맞게 조정해야 하며, SQL 인젝션을 방지하기 위해 파라미터화된 쿼리를 사용하는 것이 중요합니다.

csharp
Copy code
using System;
using System.Data;
using System.Data.SqlClient;

namespace YourNamespace
{
    public class DatabaseHandler
    {
        private readonly string connectionString = "YourConnectionStringHere"; // 데이터베이스 연결 문자열

        public void InsertSortIfNotExists(string ipadd1, string sortName)
        {
            using (SqlConnection conn = new SqlConnection(connectionString))
            {
                conn.Open();

                // IP 주소가 존재하는지 확인하는 쿼리
                string checkQuery = "SELECT COUNT(*) FROM Table_정렬저장 WHERE IPID = @ipadd1";
                SqlCommand checkCmd = new SqlCommand(checkQuery, conn);
                checkCmd.Parameters.AddWithValue("@ipadd1", ipadd1);

                int count = Convert.ToInt32(checkCmd.ExecuteScalar());

                if (count == 0)
                {
                    // IP 주소가 존재하지 않으면 새로운 레코드 삽입
                    string insertQuery = "INSERT INTO Table_정렬저장 (IPID, SortName) VALUES (@ipadd1, @sortName)";
                    SqlCommand insertCmd = new SqlCommand(insertQuery, conn);
                    insertCmd.Parameters.AddWithValue("@ipadd1", ipadd1);
                    insertCmd.Parameters.AddWithValue("@sortName", sortName);

                    insertCmd.ExecuteNonQuery();
                }

                conn.Close();
            }
        }
    }
}
위 코드에서 connectionString 변수는 데이터베이스에 연결하기 위한 문자열로, 실제 환경에 맞게 설정해야 합니다. InsertSortIfNotExists 메