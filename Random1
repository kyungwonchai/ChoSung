WPF에서는 화면상의 UI 요소가 장치 독립적인 단위를 사용하므로 실물 크기를 맞추기 위해서는 DPI에 따른 픽셀 변환이 필요합니다. 일반적으로 96 DPI에서는 1인치(25.4mm)가 약 96 픽셀에 해당하므로 17mm와 33mm를 해당 픽셀로 변환하여 설정할 수 있습니다.

이를 고려하여 좌측 컬럼 너비를 17mm, 우측 컬럼 너비를 33mm로 변환하고, 실물 크기에 맞게 조정하는 전체 코드를 업데이트하겠습니다.

계산 방법
1mm ≈ 3.78 픽셀 (96 DPI 기준)
17mm ≈ 64 픽셀
33mm ≈ 125 픽셀
이를 적용하여 XAML을 작성합니다.

XAML (MainWindow.xaml)
xml
코드 복사
<Window x:Class="LabelPrinter.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Label Printer" Height="300" Width="220">
    <Grid>
        <!-- 첫 번째 행: 타이틀 -->
        <TextBlock Text="분할 자재 라벨" FontSize="12" HorizontalAlignment="Center" Margin="0,10,0,5" />

        <!-- 두 번째 행: 좌측 및 우측 컬럼 -->
        <Grid Margin="10,40,10,10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="64"/> <!-- 좌측 컬럼 너비 (약 17mm) -->
                <ColumnDefinition Width="125"/> <!-- 우측 컬럼 너비 (약 33mm) -->
            </Grid.ColumnDefinitions>
            
            <!-- 좌측 컬럼: 라벨명들 -->
            <StackPanel Grid.Column="0" VerticalAlignment="Top">
                <TextBlock Text="코드:" FontSize="8" Margin="0,5,0,0"/>
                <TextBlock Text="LOT:" FontSize="8" Margin="0,5,0,0"/>
                <TextBlock Text="업체:" FontSize="8" Margin="0,5,0,0"/>
                <TextBlock Text="라인/모델:" FontSize="8" Margin="0,5,0,0"/>
                <TextBlock Text="관리자 확인:" FontSize="8" Margin="0,5,0,0"/>
            </StackPanel>

            <!-- 우측 컬럼: 텍스트 입력 (빈 기본값 및 배경 투명) -->
            <StackPanel Grid.Column="1" VerticalAlignment="Top">
                <TextBox FontSize="8" Margin="0,5,0,0" Background="Transparent"/>
                <TextBox FontSize="8" Margin="0,5,0,0" Background="Transparent"/>
                <TextBox FontSize="8" Margin="0,5,0,0" Background="Transparent"/>
                <TextBox FontSize="8" Margin="0,5,0,0" Background="Transparent"/>
                <TextBox FontSize="8" Margin="0,5,0,0" Background="Transparent"/>
            </StackPanel>
        </Grid>

        <!-- 출력 버튼 -->
        <Button Content="출력" Width="100" Height="30" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,20" Click="PrintButton_Click"/>
    </Grid>
</Window>
C# 코드 (MainWindow.xaml.cs)
프린트 기능에서 동일한 크기를 유지하도록 아래와 같이 작성합니다.

csharp
코드 복사
using System.Windows;
using System.Windows.Controls;
using System.Windows.Media;

namespace LabelPrinter
{
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
        }

        private void PrintButton_Click(object sender, RoutedEventArgs e)
        {
            PrintDialog printDialog = new PrintDialog();
            if (printDialog.ShowDialog() == true)
            {
                Grid printGrid = new Grid
                {
                    Width = 189, // 좌측 64 + 우측 125
                    Height = 100
                };

                TextBlock title = new TextBlock
                {
                    Text = "분할 자재 라벨",
                    FontSize = 12,
                    HorizontalAlignment = HorizontalAlignment.Center,
                    Margin = new Thickness(0, 0, 0, 5)
                };
                printGrid.Children.Add(title);

                StackPanel leftColumn = CreateLeftColumn();
                StackPanel rightColumn = CreateRightColumn();

                Grid.SetRow(leftColumn, 1);
                Grid.SetColumn(leftColumn, 0);
                printGrid.Children.Add(leftColumn);

                Grid.SetRow(rightColumn, 1);
                Grid.SetColumn(rightColumn, 1);
                printGrid.Children.Add(rightColumn);

                printDialog.PrintVisual(printGrid, "Label Print");
            }
        }

        private StackPanel CreateLeftColumn()
        {
            StackPanel leftColumn = new StackPanel();
            string[] labels = { "코드:", "LOT:", "업체:", "라인/모델:", "관리자 확인:" };
            foreach (var label in labels)
            {
                leftColumn.Children.Add(new TextBlock
                {
                    Text = label,
                    FontSize = 8,
                    Margin = new Thickness(0, 5, 0, 0)
                });
            }
            return leftColumn;
        }

        private StackPanel CreateRightColumn()
        {
            StackPanel rightColumn = new StackPanel();
            for (int i = 0; i < 5; i++)
            {
                rightColumn.Children.Add(new TextBox
                {
                    FontSize = 8,
                    Background = Brushes.Transparent,
                    Margin = new Thickness(0, 5, 0, 0)
                });
            }
            return rightColumn;
        }
    }
}
설명
실물 크기 설정: 17mm와 33mm에 해당하는 픽셀 값을 적용했습니다.