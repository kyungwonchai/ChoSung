#include <stdio.h>

// 최대 정점 개수 및 무한대 값 정의
#define N 100   // 정점의 최대 개수
#define INF 100000  // 충분히 큰 값으로 설정하여 무한대처럼 사용

// 그래프의 인접 행렬 (최대 N x N 크기)
int map[N + 1][N + 1];
// 방문 여부를 저장하는 배열
int visit[N + 1];
// 시작점으로부터의 최소 거리 저장
int dist[N + 1];
// 정점 개수와 간선 개수
int vertex;
int edge;
// 시작점과 도착점
int start;
int end;

// 다익스트라 알고리즘 함수
target dijkstra(void)
{
    int i, j;
    int min;
    int v;

    // 시작점의 거리를 0으로 설정 (자기 자신까지 거리 0)
    dist[start] = 0;

    // 모든 정점에 대해 최소 거리 계산
    for (i = 1; i <= vertex; i++)
    {
        min = INF; // 최소값을 무한대로 초기화

        // 방문하지 않은 정점 중 최소 거리 정점 찾기
        for (j = 1; j <= vertex; j++)
        {
            if (visit[j] == 0 && min > dist[j])
            {
                min = dist[j];
                v = j;
            }
        }

        // 해당 정점을 방문 처리
        visit[v] = 1;

        // 해당 정점을 거쳐 다른 정점으로 가는 최소 거리 갱신
        for (j = 1; j <= vertex; j++)
        {
            if (dist[j] > dist[v] + map[v][j])
            {
                dist[j] = dist[v] + map[v][j];
            }
        }
    }
}

// 메인 함수
int main(void)
{
    int test_case;
    int i, j;
    int from, to;
    int value;

    // 테스트 케이스 개수 입력
    scanf("%d", &test_case);

    // 테스트 케이스만큼 반복
    for (int t = 1; t <= test_case; t++)
    {
        // 정점 개수, 시작 정점, 도착 정점 입력
        scanf("%d %d %d", &vertex, &start, &end);
        // 간선 개수 입력
        scanf("%d", &edge);

        // 그래프 초기화 (모든 값을 INF로 설정)
        for (i = 1; i <= vertex; i++)
        {
            for (j = 1; j <= vertex; j++)
            {
                if (i != j)
                {
                    map[i][j] = INF;
                }
            }
        }

        // 간선 정보 입력 (from -> to 의 비용 value)
        for (i = 1; i <= edge; i++)
        {
            scanf("%d %d %d", &from, &to, &value);
            map[from][to] = value; // 방향이 있는 그래프
        }

        // 거리 및 방문 배열 초기화
        for (i = 1; i <= vertex; i++)
        {
            dist[i] = INF;
            visit[i] = 0;
        }

        printf("#%d ", t);
        dijkstra(); // 다익스트라 알고리즘 실행
        printf("%d \n", dist[end]); // 최단 거리 출력
    }
    return 0;