def can_transform(E, S):
    # 동적 계획법을 위한 딕셔너리 초기화
    dp = {S: True}
    
    def dfs(current):
        if current in dp:
            return dp[current]
        
        # 끝이 'X'인 경우 'X'를 제거하고 재귀 호출
        if current.endswith('X'):
            if dfs(current[:-1]):
                dp[current] = True
                return True
        
        # 끝이 'Y'인 경우 'Y'를 제거하고 재귀 호출
        if current.endswith('Y'):
            if dfs(current[:-1]):
                dp[current] = True
                return True
        
        # 문자열을 뒤집고 재귀 호출
        reversed_current = current[::-1]
        if reversed_current in dp and dp[reversed_current]:
            dp[current] = True
            return True
        
        dp[current] = False
        return False
    
    return dfs(S)

# 예제 사용
E = "E"
S = "EYX"
print(can_transform(E, S))  # 변환 가능 여부 출력
