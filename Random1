네, 우분투(Ubuntu)에서 폴더(디렉토리)를 복사할 때 내부 파일들의 권한까지 그대로 유지하면서 통째로 복사하는 방법을 알려드리겠습니다.

리눅스 터미널에서 이 작업을 수행하는 가장 일반적이고 효과적인 명령어는 cp 명령어에 특정 옵션을 사용하는 것입니다.

권장 명령어:

Bash

cp -a 원본폴더경로 대상폴더경로
또는 좀 더 명시적으로 옵션을 풀어서 쓰고 싶다면 (기능상 -a와 유사하거나 -a가 더 포괄적입니다):

Bash

cp -rp 원본폴더경로 대상폴더경로
각 옵션 설명:

cp: 파일을 복사하는 명령어입니다.
-a (archive): 아카이브 모드로 복사합니다. 이 옵션은 다음과 같은 여러 옵션들을 한 번에 적용하는 것과 같습니다:
-r 또는 -R: 디렉토리의 경우, 내부의 모든 하위 디렉토리와 파일들을 재귀적으로 복사합니다. (이것이 "통째로 복사"의 핵심입니다.)
-d: 심볼릭 링크 자체를 복사합니다 (링크가 가리키는 원본 파일을 복사하는 대신).
--preserve=all: 가능한 모든 파일 속성을 그대로 보존합니다. 여기에는 다음이 포함됩니다:
권한 (mode): 파일 및 디렉토리의 읽기/쓰기/실행 권한 (rwx)
소유권 (ownership): 사용자 및 그룹 소유권 (이 옵션은 root 권한으로 실행 시 완벽하게 보존되며, 일반 사용자는 자신이 소유한 파일에 대해서만 소유권을 유지할 수 있고, 다른 사용자 소유 파일의 소유권은 변경될 수 있습니다.)
타임스탬프 (timestamps): 수정 시간, 접근 시간 등
보안 컨텍스트 (예: SELinux)
확장 속성 (xattrs)
-p (preserve): --preserve=mode,ownership,timestamps와 동일합니다. -a 옵션에 포함되어 있지만, -rp 형태로도 많이 사용됩니다.
사용 방법 및 예시:

명령어의 기본 구조는 cp [옵션] 원본 대상 입니다.

원본 폴더를 특정 이름의 새 폴더로 복사 (대상 폴더가 존재하지 않을 경우):
원본폴더의 내용 전체와 원본폴더 자체의 속성을 보존하여 대상폴더이름이라는 새 폴더를 만들고 그 안에 복사합니다.

예를 들어, /home/user/my_app 폴더를 /backup/my_app_backup 폴더로 권한까지 모두 복사하려면:

Bash

sudo cp -a /home/user/my_app /backup/my_app_backup
이 명령을 실행하면 /backup/my_app_backup 디렉토리가 생성되고, 그 안에 my_app의 모든 내용과 권한이 복사됩니다.
sudo를 사용하는 이유는 /backup 디렉토리에 쓰기 권한이 필요하거나, my_app 내부에 현재 사용자가 소유하지 않은 파일의 소유권까지 완벽하게 보존하고 싶을 때 필요합니다. 현재 사용자가 모든 파일을 소유하고 대상 위치에 쓰기 권한이 있다면 sudo 없이도 가능하지만, 권한 보존을 위해서는 sudo 사용이 권장될 때가 많습니다.
원본 폴더를 이미 존재하는 다른 폴더 내부에 복사:
원본폴더를 존재하는_대상_부모폴더 안으로 복사합니다. 결과적으로 존재하는_대상_부모폴더/원본폴더 형태가 됩니다.

예를 들어, /home/user/my_app 폴더를 이미 존재하는 /opt/backups/ 폴더 안으로 권한까지 모두 복사하려면:

Bash

sudo cp -a /home/user/my_app /opt/backups/
이 명령을 실행하면 /opt/backups/my_app 디렉토리가 생성되고, 그 안에 my_app의 모든 내용과 권한이 복사됩니다.
대상 경로의 마지막에 /를 붙여주면 해당 위치가 디렉토리임을 명확히 하는 데 도움이 됩니다.
주의사항:

대상 폴더 경로: 대상 폴더 경로가 이미 존재하고 그것이 디렉토리라면, 원본 폴더는 그 디렉토리 안으로 복사됩니다. 대상 폴더가 존재하지 않으면, 그 이름으로 새 디렉토리가 만들어지면서 내용물이 복사됩니다.
sudo 사용: 파일 소유권까지 완벽하게 보존하려면, 특히 시스템 파일이나 다른 사용자의 파일을 복사할 때는 sudo를 사용하여 명령을 실행하는 것이 좋습니다. 일반 사용자 권한으로는 자신이 소유하지 않은 파일의 소유권을 변경할 수 없기 때문입니다.