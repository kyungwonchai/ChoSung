서 타이틀바 더블 클릭을 제대로 동작하도록 구현하려면, 타이틀바를 더블 클릭했는지 감지해야 합니다. SkinableForm은 기본적으로 Windows의 타이틀바 메시지를 처리하지 않기 때문에, 사용자 정의 타이틀바를 구현하면서 WM_NCLBUTTONDBLCLK 메시지를 직접 처리해야 합니다.

아래는 타이틀바 더블 클릭으로 최대화/복원 기능을 포함한 완성된 코드입니다.

코드 구현: 타이틀바 더블 클릭 감지 및 동작 추가
csharp
코드 복사
using DevExpress.XtraEditors;
using System;
using System.Drawing;
using System.Runtime.InteropServices;
using System.Windows.Forms;

public partial class MySkinableForm : XtraForm
{
    private SimpleButton minimizeButton;
    private SimpleButton maximizeButton;
    private SimpleButton closeButton;

    // Windows 메시지 상수
    private const int WM_NCLBUTTONDBLCLK = 0xA3; // 타이틀바 더블 클릭 메시지
    private const int WM_NCLBUTTONDOWN = 0xA1; // 타이틀바 클릭 메시지
    private const int HT_CAPTION = 0x2; // 타이틀바 영역

    public MySkinableForm()
    {
        InitializeComponent();

        // 기본 설정
        this.FormBorderStyle = FormBorderStyle.None; // 기본 타이틀바 제거
        this.Padding = new Padding(0, 30, 0, 0); // 사용자 정의 타이틀바 높이
        this.DoubleBuffered = true; // 깜빡임 방지

        // 최소화 버튼
        minimizeButton = CreateTitleBarButton("-", new Point(this.Width - 120, 5), MinimizeButton_Click);

        // 최대화/복원 버튼
        maximizeButton = CreateTitleBarButton("🗖", new Point(this.Width - 80, 5), MaximizeButton_Click);

        // 닫기 버튼
        closeButton = CreateTitleBarButton("X", new Point(this.Width - 40, 5), CloseButton_Click);

        // 버튼 추가
        this.Controls.Add(minimizeButton);
        this.Controls.Add(maximizeButton);
        this.Controls.Add(closeButton);

        // 폼 크기 변경 시 버튼 위치 조정
        this.SizeChanged += MySkinableForm_SizeChanged;
    }

    private void MySkinableForm_SizeChanged(object sender, EventArgs e)
    {
        // 버튼 위치 업데이트
        minimizeButton.Location = new Point(this.Width - 120, 5);
        maximizeButton.Location = new Point(this.Width - 80, 5);
        closeButton.Location = new Point(this.Width - 40, 5);
    }

    protected override void OnPaint(PaintEventArgs e)
    {
        base.OnPaint(e);

        // 타이틀바 배경
        var titleBarRect = new Rectangle(0, 0, this.Width, 30);
        using (var titleBarBrush = new SolidBrush(Color.SkyBlue)) // 타이틀바 색상
        {
            e.Graphics.FillRectangle(titleBarBrush, titleBarRect);
        }

        // 타이틀 텍스트
        string titleText = this.Text;
        using (var font = new Font("Arial", 10, FontStyle.Bold))
        using (var textBrush = new SolidBrush(Color.White))
        {
            e.Graphics.DrawString(titleText, font, textBrush, new PointF(10, 7));
        }
    }

    protected override void WndProc(ref Message m)
    {
        base.WndProc(ref m);

        // 타이틀바 더블 클릭 감지
        if (m.Msg == WM_NCLBUTTONDBLCLK)
        {
            ToggleWindowState(); // 최대화/복원 처리
        }
        else if (m.Msg == WM_NCLBUTTONDOWN && m.WParam.ToInt32() == HT_CAPTION)
        {
            // 타이틀바 드래그로 창 이동
            this.Capture = false;
            var message = Message.Create(this.Handle, WM_NCLBUTTONDOWN, new IntPtr(HT_CAPTION), IntPtr.Zero);
            base.WndProc(ref message);
        }
    }

    private SimpleButton CreateTitleBarButton(string text, Point location, EventHandler clickHandler)
    {
        var button = new SimpleButton
        {
            Text = text,
            Appearance = { BackColor = Color.LightGray, ForeColor = Color.Black },
            Size = new Size(30, 20),
            Location = location,
            ButtonStyle = DevExpress.XtraEditors.Controls.BorderStyles.NoBorder,
            FlatStyle = FlatStyle.Flat,
        };
        button.Click += clickHandler;
        return button;
    }

    private void MinimizeButton_Click(object sender, EventArgs e)
    {
        this.WindowState = FormWindowState.Minimized; // 최소화
    }

    private void MaximizeButton_Click(object sender, EventArgs e)
    {
        ToggleWindowState(); // 최대화/복원
    }

    private void CloseButton_Click(object sender, EventArgs e)
    {
        this.Close(); // 닫기
    }

    private void ToggleWindowState()
    {
        if (this.WindowState == FormWindowState.Maximized)
        {
            this.WindowState = FormWindowState.Normal;
            maximizeButton.Text = "🗖"; // 최대화 아이콘
        }
        else
        {
            this.WindowState = FormWindowState.Maximized;
            maximizeButton.Text = "🗗"; // 복원 아이콘
        }
    }
}
핵심 구현 사항
타이틀바 더블 클릭 처리:

WndProc 메서드에서 WM_NCLBUTTONDBLCLK 메시지를 감지하여 최대화/복원 동작을 실행합니다.
타이틀바 드래그로 창 이동:

WM_NCLBUTTONDOWN 메시지를 처리하여 창을 이동할 수 있도록 구현.
타이틀바 버튼:

SimpleButton을 사용하여 최소화, 최대화/복원, 닫기 버튼을 생성.
버튼의 위치는 폼 크기에 따라 동적으로 업데이트(SizeChanged).
최대화/복원 동작:

ToggleWindowState 메서드를 통해 상태를 전환.
상태에 따라 버튼의 텍스트도 동적으로 업데이트(🗖 또는 🗗).
디자인 및 스타일: