using System.Windows.Controls; // For ProgressBar
using System.Windows.Data; // For Binding
using DevExpress.Xpf.Grid; // For GridControl and GridColumn
using System.Windows; // For DataTemplate and other UI elements

// Assuming this is part of a window or a UserControl where gridControl is a part of the XAML
public void SetupProgressBarInGrid()
{
    // Access your grid control, assuming it's named 'gridControl'
    foreach (GridColumn column in gridControl.Columns)
    {
        if (column.FieldName.StartsWith("20"))
        {
            // Create a new ProgressBar and set up a binding
            ProgressBar progressBar = new ProgressBar();
            Binding binding = new Binding("YourDataFieldName") // Replace 'YourDataFieldName' with the actual field name
            {
                Converter = new PercentageValueConverter(), // Ensure this converter is correctly implemented
                Mode = BindingMode.OneWay
            };
            progressBar.SetBinding(ProgressBar.ValueProperty, binding);

            // Define a DataTemplate to host the ProgressBar in the column
            DataTemplate template = new DataTemplate
            {
                VisualTree = new FrameworkElementFactory(typeof(ProgressBar))
            };
            template.VisualTree.SetBinding(ProgressBar.ValueProperty, binding);

            column.CellTemplate = template;
        }
    }
}
