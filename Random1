으로, Observable Collection에 있는 버튼 목록을 데이터베이스 쿼리 결과로 대체하려면 다음과 같은 방법을 사용할 수 있습니다.

    먼저, 데이터베이스에서 필요한 데이터를 가져오는 메서드를 작성해야 합니다. 이 예에서는 ADO.NET을 사용합니다. System.Data.SqlClient 네임스페이스를 참조해야 합니다.

csharp

using System.Data.SqlClient;
// ...

public ObservableCollection<ButtonModel> GetButtonsFromDatabase()
{
    ObservableCollection<ButtonModel> buttons = new ObservableCollection<ButtonModel>();

    string connectionString = "your_connection_string_here";
    string query = @"
        SELECT TOP 5 N_date, COUNT(*) AS RecordCount
        FROM YourTableName
        GROUP BY N_date
        ORDER BY COUNT(*) DESC;
    ";

    using (SqlConnection connection = new SqlConnection(connectionString))
    {
        SqlCommand command = new SqlCommand(query, connection);
        connection.Open();

        SqlDataReader reader = command.ExecuteReader();
        while (reader.Read())
        {
            string buttonText = reader["N_date"].ToString();  // Adjust this line to match the desired button text.
            buttons.Add(new ButtonModel { Content = buttonText, Command = new RelayCommand(OnButtonClicked) });
        }
    }

    return buttons;
}

    이제 ViewModel 생성자에서 이 메서드를 호출하여 Buttons 컬렉션을 초기화할 수 있습니다.

csharp

public ViewModel()
{
    Buttons = GetButtonsFromDatabase();
}

private void OnButtonClicked(object obj)
{
    var buttonContent = obj as string;
    if (buttonContent != null)
    {
        // 여기에 버튼 클릭에 대한 로직을 추가합니다.
        Console.WriteLine($"{buttonContent} 클릭됨");
    }
}

이제 ViewModel의 Buttons 컬렉션은 데이터베이스 쿼리의 결과를 기반으로 초기화됩니다. ListBox는 이 컬렉션을 사용하여 버튼 목록을 표시하며, 각 버튼을 클릭하면 OnButtonClicked 메서드가 호출됩니다.

데이터베이스 연결 문자열, 쿼리 및 버튼 텍스트를 설정하여 이 코드를 프로젝트에 맞