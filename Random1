에서 SendKeys를 사용하여 Tab 키를 누르는 방법은 다음과 같습니다.

1. SendKeys.Send() 사용 (Windows Forms)
WinForms 환경에서는 SendKeys.Send()를 사용할 수 있습니다.

csharp
코드 복사
SendKeys.Send("{TAB}");
이 방법은 현재 포커스된 컨트롤에서 Tab 키를 누른 것과 동일한 효과를 가집니다.

2. SendKeys.SendWait() 사용
SendKeys.SendWait()를 사용하면 키 입력이 즉시 처리될 때까지 기다립니다.

csharp
코드 복사
SendKeys.SendWait("{TAB}");
SendKeys.Send()와 SendKeys.SendWait()는 WPF에서 작동하지 않음 (WinForms 전용)

3. InputSimulator 라이브러리 사용 (WPF & WinForms 모두 지원)
WPF에서는 SendKeys가 작동하지 않으므로 InputSimulator를 사용하는 것이 좋습니다.

설치
NuGet에서 InputSimulator 패키지를 설치합니다.

sh
코드 복사
Install-Package InputSimulator
사용 코드
csharp
코드 복사
using WindowsInput;
using WindowsInput.Native;

var sim = new InputSimulator();
sim.Keyboard.KeyPress(VirtualKeyCode.TAB);
위 코드는 Tab 키를 한 번 누르는 효과를 냅니다.

4. keybd_event (Win32 API 사용)
WinForms, WPF 어디서든 가능하지만, 최신 방식은 아님.

csharp
코드 복사
[DllImport("user32.dll")]
static extern void keybd_event(byte bVk, byte bScan, int dwFlags, int dwExtraInfo);

const byte VK_TAB = 0x09;
const int KEYEVENTF_KEYDOWN = 0x0000;
const int KEYEVENTF_KEYUP = 0x0002;

static void PressTab()
{
    keybd_event(VK_TAB, 0, KEYEVENTF_KEYDOWN, 0);
    keybd_event(VK_TAB, 0, KEYEVENTF_KEYUP, 0);
}
PressTab() 호출 시 Tab 키가 입력됨

5. SendInput (Win32 API, 보다 정밀한 제어)
csharp
코드 복사
[DllImport("user32.dll", SetLastError = true)]
static extern uint SendInput(uint nInputs, Input[] pInputs, int cbSize);

[StructLayout(LayoutKind.Sequential)]
struct Input
{
    public int type;
    public InputUnion u;
}

[StructLayout(LayoutKind.Explicit)]
struct InputUnion
{
    [FieldOffset(0)] public KeyboardInput ki;
}

[StructLayout(LayoutKind.Sequential)]
struct KeyboardInput
{
    public ushort wVk;
    public ushort wScan;
    public uint dwFlags;
    public uint time;
    public IntPtr dwExtraInfo;
}

const int INPUT_KEYBOARD = 1;
const ushort VK_TAB = 0x09;
const uint KEYEVENTF_KEYDOWN = 0x0000;
const uint KEYEVENTF_KEYUP = 0x0002;

static void SendTab()
{
    Input[] inputs = new Input[]
    {
        new Input { type = INPUT_KEYBOARD, u = new InputUnion { ki = new KeyboardInput { wVk = VK_TAB, dwFlags = KEYEVENTF_KEYDOWN } } },
        new Input { type = INPUT_KEYBOARD, u = new InputUnion { ki = new KeyboardInput { wVk = VK_TAB, dwFlags = KEYEVENTF_KEYUP } } }
    };
    SendInput((uint)inputs.Length, inputs, Marshal.SizeOf(typeof(Input)));
}
SendTab()를 호출하면 Tab 키가 눌림.

정리
방법	WPF 지원	WinForms 지원	특징
SendKeys.Send("{TAB}")	❌ (안됨)	✅	WinForms 기본 제공
SendKeys.SendWait("{TAB}")	❌ (안됨)	✅	입력 대기 기능
InputSimulator	✅	✅	NuGet 패키지 필요
keybd_event	✅	✅	비교적 오래된 방법