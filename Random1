아마도 검색창(TextField 또는 SearchView)에 포커스가 갔을 때 드롭다운 메뉴나 자동 완성 추천 목록이 나타나도록 설정되어 있기 때문일 겁니다. 이건 사용자가 이전에 검색했던 기록을 보여주거나, 검색 가능한 전체 목록을 미리 보여줘서 편의성을 높이려는 기능인데, 원치 않으면 당연히 비활성화할 수 있습니다.

이 현상의 정확한 원인과 해결 방법은 어떤 기술을 사용하시는지(예: Jetpack Compose, 안드로이드 XML)에 따라 조금씩 다릅니다.

Jetpack Compose를 사용하는 경우
Jetpack Compose에서는 TextField와 ExposedDropdownMenuBox를 함께 사용하여 자동 완성 검색창을 만들 때 이런 현상이 자주 발생합니다. 포커스만 해도 목록이 나타나는 이유는 expanded 상태가 onFocusChanged에 의해 true로 변경되기 때문일 가능성이 높습니다.

해결 방법:

expanded 상태를 포커스가 아닌, 실제로 검색창에 글자가 입력되었을 때만 true가 되도록 로직을 수정하면 됩니다.

Kotlin

// ... State 선언 부분 ...
var expanded by remember { mutableStateOf(false) }
val textState = remember { mutableStateOf("") }

// ... UI 부분 ...
ExposedDropdownMenuBox(
    expanded = expanded,
    onExpandedChange = { expanded = it }
) {
    TextField(
        value = textState.value,
        onValueChange = {
            textState.value = it
            // 글자가 있을 때만 목록을 보여줌
            expanded = it.isNotEmpty() 
        },
        label = { Text("검색") },
        modifier = Modifier.menuAnchor() // 메뉴의 기준점이 됨
    )

    ExposedDropdownMenu(
        expanded = expanded,
        onDismissRequest = { expanded = false }
    ) {
        // 검색된 결과를 보여주는 부분
        filteredItems.forEach { item ->
            DropdownMenuItem(
                text = { Text(item.name) },
                onClick = {
                    textState.value = item.name
                    expanded = false
                }
            )
        }
    }
}
핵심은 onValueChange 콜백 안에서 입력된 텍스트(it)가 비어있지 않을 때(it.isNotEmpty())만 expanded를 true로 바꾸는 것입니다. 이렇게 하면 커서만 깜빡일 때는 목록이 나타나지 않고, 키보드로 글자를 입력하기 시작해야만 목록이 보입니다.

안드로이드 XML과 SearchView를 사용하는 경우
SearchView 위젯은 기본적으로 검색 기록(Suggestion)을 보여주는 기능이 활성화되어 있을 수 있습니다.

해결 방법:

SearchView에 포커스가 갔을 때 드롭다운 목록이 나타나지 않게 하려면, 관련 리스너에서 동작을 제어하거나 XML 속성을 조정할 수 있습니다.

가장 간단한 방법은 OnFocusChangeListener를 설정해서 포커스를 받아도 드롭다운이 펼쳐지지 않게 하는 것입니다.

Kotlin

val searchView = findViewById<SearchView>(R.id.my_search_view)

// 포커스가 변경될 때의 리스너 설정
searchView.setOnQueryTextFocusChangeListener { view, hasFocus ->
    if (hasFocus) {
        // 포커스를 받았을 때 특별한 동작을 하지 않도록 비워두거나
        // 필요하다면 다른 로직을 추가
    } else {
        // 포-커스를 잃었을 때의 동작
    }
}
만약 커스텀 CursorAdapter를 사용해 검색 제안을 보여주고 있다면, 검색어가 비어있을 때는 어댑터에 빈 데이터를 제공하는 방식으로 목록이 나타나지 않게 할 수도 있습니다.

요약: