네, 정확히 보셨습니다. 각 앱 페이지가 깨지는 이유는 앱들이 "자신이 하위 경로(/app, /dashboard 등)에서 실행되고 있다"는 사실을 모르기 때문입니다.

그래서 CSS, JS, 이미지 파일 등을 요청할 때 /static/style.css 처럼 최상위 경로로 잘못 요청해서 404 에러가 나고, 페이지가 깨지는 겁니다.

이걸 해결하려면 각 앱에게 **"너의 새로운 집 주소는 이제 여기야"**라고 알려줘야 합니다. 방법은 앱마다 조금씩 다릅니다.

## ⚛️ React: package.json으로 새 주소 알려주기
React 앱(Create React App 기준)이 가장 간단합니다. package.json 파일에 한 줄만 추가하고 다시 빌드하면 됩니다.

package.json 파일 열기
React 프로젝트 폴더 안에 있는 package.json 파일을 엽니다.

homepage 값 추가
Nginx 설정에 사용한 경로를 그대로 적어줍니다.

JSON

{
  "name": "my-react-app",
  "version": "0.1.0",
  "private": true,
  "homepage": "/app",  // <--- 이 줄을 추가하세요!
  "dependencies": {
    // ...
  }
}
🔥 가장 중요: 다시 빌드하기
설정을 바꾼 뒤, 반드시 프로젝트를 다시 빌드해야 적용됩니다.

Bash

# React 프로젝트 폴더로 이동해서
npm run build
이렇게 빌드하면 생성되는 모든 HTML 파일 안에 CSS, JS 경로가 /app/static/... 처럼 자동으로 바뀝니다.

## 🎈 Streamlit: 실행 옵션으로 새 주소 알려주기
Streamlit은 실행할 때 옵션으로 자신의 기본 경로를 알려줄 수 있습니다.

systemd 서비스 파일 수정
Streamlit을 서비스로 등록했다면, 해당 서비스 파일을 수정해야 합니다.

Bash

sudo nano /etc/systemd/system/streamlit-dashboard.service
ExecStart에 baseUrlPath 옵션 추가
ExecStart 맨 뒤에 --server.baseUrlPath 옵션을 추가합니다.

Ini, TOML

[Unit]
Description=Streamlit instance for Dashboard

[Service]
User=myuser
WorkingDirectory=/path/to/your/streamlit-app
# 아래 줄 맨 뒤에 baseUrlPath 옵션을 추가합니다.
ExecStart=/path/to/your/venv/bin/streamlit run app.py --server.port 8101 --server.headless true --server.baseUrlPath /dashboard

[Install]
WantedBy=multi-user.target
서비스 재시작

Bash

sudo systemctl daemon-reload
sudo systemctl restart streamlit-dashboard.service
이제 Streamlit은 모든 내부 경로 앞에 /dashboard를 붙여서 생성하므로 페이지가 깨지지 않습니다.

## 🐍 Flask: url_for로 똑똑하게 경로 생성하기
Flask로 만든 페이지(HTML 템플릿)가 깨진다면, CSS나 JS 경로를 HTML에 직접 하드코딩했을 가능성이 높습니다.

❌ 잘못된 방법 (하드코딩):

HTML

<link rel="stylesheet" href="/static/style.css">
이렇게 하면 브라우저는 http://서버주소/static/style.css를 요청하게 되어 404 에러가 납니다. (/service/static/style.css로 요청해야 하는데 말이죠.)

⭕️ 올바른 방법 (url_for 사용):
Flask의 템플릿 엔진(Jinja2)에 내장된 url_for 함수를 사용해야 합니다. url_for는 현재 앱의 설정을 인지해서 동적으로 올바른 전체 경로를 만들어줍니다.

HTML

<link rel="stylesheet" href="{{ url_for('static', filename='style.css') }}">
이렇게 작성하면 Flask가 알아서 /service/static/style.css 라는 올바른 경로를 생성해 줍니다. 이미지, 스크립트 등 모든 정적 파일에 url_for를 사용하도록 수정하면 됩니다.