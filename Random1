은 유저폼(MyForm1)에서 전달받은 행의 정보를 활용하는 예시 코드를 제공해 드리겠습니다. 이 예시에서는 MyForm1 폼에 전달받은 행의 정보를 화면에 출력하는 기능을 추가합니다.

csharp

// MyForm1.cs

using System;
using System.Windows.Forms;

namespace YourNamespace
{
    public partial class MyForm1 : Form
    {
        private object rowData;

        public MyForm1(object rowData)
        {
            InitializeComponent();
            this.rowData = rowData;
        }

        private void MyForm1_Load(object sender, EventArgs e)
        {
            if (rowData != null)
            {
                // 행의 정보를 화면에 출력
                textBox1.Text = rowData.ToString();
            }
        }
    }
}

위의 코드는 MyForm1 폼을 나타내는 클래스인 MyForm1를 보여줍니다. 생성자에서 행의 정보를 전달받아서 rowData 변수에 저장하고, 폼이 로드될 때 해당 정보를 화면에 출력하는 코드를 추가했습니다.

MyForm1 폼을 사용하는 코드에서는 GridView의 더블클릭 이벤트 핸들러에서 MyForm1을 생성하고 행의 정보를 전달하면 됩니다. 아래는 전체적인 사용 예시입니다.

csharp

using DevExpress.XtraGrid.Views.Grid;
using DevExpress.XtraGrid.Views.Grid.ViewInfo;

private void gridView1_DoubleClick(object sender, EventArgs e)
{
    GridView view = (GridView)sender;
    GridHitInfo hitInfo = view.CalcHitInfo(view.GridControl.PointToClient(Control.MousePosition));
    
    if (hitInfo.RowHandle >= 0)
    {
        // 선택한 행의 정보 가져오기
        object rowData = view.GetRow(hitInfo.RowHandle);
        // TODO: 필요한 작업 수행
        
        // 새로운 폼 열기
        MyForm1 form = new MyForm1(rowData); // MyForm1은 사용자가 만든 폼입니다. 생성자를 통해 행의 정보를 전달할 수 있습니다.
        form.ShowDialog();
    }
}

이제 GridView의 특정 행을 더블클릭하면 MyForm1 폼이 열리고, 해당 행의 정보가 MyForm1 폼의 텍스트 상자에 출력됩니다. 이 코드를 기반으로 필요에 따라 MyForm1 폼을 확장하고, 행의 정보를 활용하는 원하는 작업을 추가할 수 있습니