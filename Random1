검색 기능이 작동하지 않는 경우, 주로 서버에서 데이터를 필터링하거나 검색 쿼리를 처리하는 부분에서 문제가 발생했을 가능성이 있습니다. 검색 기능이 제대로 작동하도록 서버 코드에서 수정해야 할 부분을 아래에 정리했습니다.

수정해야 할 Flask 서버 코드 (app.py)
python
코드 복사
@app.route('/PLCErr', methods=['GET'])
def plcerr():
    conn = get_db_connection()
    query = """
        SELECT 
            linename AS '라인명',
            errN AS '에러번호',
            errValue AS '에러값',
            CONVERT(VARCHAR, Time1, 121) AS '시간'
        FROM View_PLCErrjoin
    """
    df = pd.read_sql(query, conn)
    conn.close()

    # 검색 처리
    search_query = request.args.get("search", "").strip()
    if search_query:
        # 검색어를 기반으로 필터링
        df = df[
            df["라인명"].str.contains(search_query, case=False, na=False) |
            df["에러번호"].astype(str).str.contains(search_query, case=False, na=False) |
            df["에러값"].astype(str).str.contains(search_query, case=False, na=False)
        ]

    # 라인별 발생 수 데이터 준비 (번호 순 정렬)
    line_counts = (
        df['라인명']
        .value_counts()
        .reset_index()
        .sort_values(by='index', key=lambda x: x.str.extract(r'(\d+)')[0].astype(int))
    )
    line_counts.columns = ['라인명', '발생수']

    # 에러값별 발생 수 데이터 준비 (내림차순)
    errvalue_counts = df['에러값'].value_counts().reset_index()
    errvalue_counts.columns = ['에러값', '발생수']

    # 페이지네이션 처리
    page = int(request.args.get("page", 1))
    per_page = 20
    total_pages = -(-len(df) // per_page)  # 총 페이지 수
    df_page = df.iloc[(page - 1) * per_page : page * per_page]

    return render_template(
        'plcerr.html',
        data=df_page.to_dict(orient='records'),
        line_counts=line_counts.to_dict(orient='records'),
        errvalue_counts=errvalue_counts.to_dict(orient='records'),
        current_page=page,
        total_pages=total_pages,
        search_query=search_query
    )
수정 내용 설명
search_query 초기화:

request.args.get("search", "").strip()을 사용하여 검색어를 가져옵니다.
strip()을 추가해 검색어의 앞뒤 공백을 제거합니다.
검색 필터링:

str.contains() 메서드를 사용하여 검색어가 라인명, 에러번호, 또는 에러값에 포함되는지를 필터링합니다.
case=False로 대소문자를 구분하지 않으며, na=False로 NaN 값을 무시합니다.
검색 후 데이터 준비:

검색 결과를 기반으로 라인별, 에러값별 데이터를 다시 계산합니다.
페이지네이션(page) 및 검색 결과(df_page)를 반환합니다.
검색어 유지:

템플릿에 search_query를 전달하여 검색 입력 필드에 사용자가 입력한 검색어를 유지합니다.
HTML 검색 필드 (참고용)
html
코드 복사
<div class="search-bar">
    <form method="GET" action="/PLCErr">
        <input 
            type="text" 
            name="search" 
            placeholder="라인명, 에러번호, 에러값으로 검색" 
            value="{{ search_query }}"
        >
    </form>
</div>
테스트
검색어 입력 후 Enter:

입력한 검색어를 기반으로 데이터가 필터링됩니다.
검색어가 포함된 데이터만 테이블 및 차트에 표시됩니다.
검색 필드 비우기:

검색 필드를 비우고 Enter를 누르면 전체 데이터가 표시됩니다.
대소문자 무시 확인:

대소문자 관계없이 검색어가 적용되는지 확인하세요.
위 코드를 수정하면 검색 기능이 정상적으로 작동할 것입니다. 추가적인 문제가 있다면 알려주세요!





