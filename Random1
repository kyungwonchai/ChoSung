풀업(Pull-Up)과 풀다운(Pull-Down) 저항에 대한 원리를 이해하기 위해서는 먼저 디지털 회로의 기본 개념을 이해하는 것이 중요합니다. 디지털 회로에서 신호는 보통 두 가지 상태, 즉 '높음'(HIGH)과 '낮음'(LOW)으로 표현됩니다. 이러한 신호 상태는 전압 레벨로 나타납니다.

GPIO 핀의 상태
라즈베리 파이와 같은 마이크로컨트롤러에서 GPIO(General-Purpose Input/Output) 핀은 이러한 디지털 신호를 읽거나 쓰는 데 사용됩니다. GPIO 핀은 입력 모드 또는 출력 모드로 설정될 수 있습니다.

입력 모드: 핀은 외부로부터 신호(예: 버튼의 눌림)를 받아들입니다.
출력 모드: 핀은 외부로 신호를 보냅니다(예: LED를 켬).
풀업과 풀다운 저항의 필요성
입력 모드에서 GPIO 핀은 외부 신호의 상태를 감지합니다. 그러나 때때로 핀은 어떤 신호에도 연결되지 않은 '떠 있는'(Floating) 상태에 있을 수 있습니다. 이 상태에서 핀은 불확실한 신호(랜덤한 HIGH 또는 LOW)를 읽을 수 있으며, 이는 부정확한 입력 값을 초래할 수 있습니다.

풀업과 풀다운 저항은 이러한 불확실성을 해결하기 위해 사용됩니다.

풀업 저항
원리: 풀업 저항은 GPIO 핀을 고전압(예: 3.3V 또는 5V)에 연결합니다. 이렇게 되면 핀은 기본적으로 HIGH 상태를 유지하게 됩니다.
사용 사례: 예를 들어, 버튼이 연결된 경우 버튼이 눌리지 않았을 때 핀은 HIGH 상태를 유지합니다. 버튼이 눌리면 회로가 닫히고 핀은 LOW 상태가 됩니다.
풀다운 저항
원리: 풀다운 저항은 GPIO 핀을 저전압(예: GND, 접지)에 연결합니다. 이렇게 되면 핀은 기본적으로 LOW 상태를 유지하게 됩니다.
사용 사례: 버튼이 연결된 경우 버튼이 눌리지 않았을 때 핀은 LOW 상태를 유지합니다. 버튼이 눌리면 회로가 닫히고 핀은 HIGH 상태가 됩니다.
소프트웨어적 구현
라즈베리 파이에서 이러한 저항 설정은 소프트웨어적으로 가능합니다. 내부적으로, 마이크로컨트롤러는 특정 GPIO 핀에 대해 내부적으로 풀업 또는 풀다운 저항을 활성화할 수 있는 스위치를 가지고 있습니다. 프로그래밍을 통해 이 스위치를 켜고 끌 수 있으며, 이를 통해 핀의 기본 상태를 제어할 수 있습니다.

예를 들어, Python의 RPi.GPIO 라이브러리를 사용하여 GPIO 핀을 풀업으로 설정할 수 있습니다: