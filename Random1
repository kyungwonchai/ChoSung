에서 IValueConverter를 사용하면서 MainWindow의 인스턴스 변수에 접근하려면, 컨버터가 액세스해야 하는 변수를 별도의 싱글톤 클래스에 저장하는 방법이 있습니다. 이 클래스의 인스턴스를 MainWindow와 IValueConverter 모두에서 사용할 수 있습니다.

예를 들어, 싱글톤 클래스를 다음과 같이 작성할 수 있습니다:

csharp

public class SharedResource
{
    public ObservableCollection<string> VariableC { get; set; }

    private static SharedResource _instance;
    public static SharedResource Instance => _instance ?? (_instance = new SharedResource());

    private SharedResource()
    {
        VariableC = new ObservableCollection<string>();
    }
}

그런 다음, MainWindow와 컨버터에서 이 SharedResource 클래스의 인스턴스를 사용하면 됩니다.

MainWindow 예시:

csharp

public MainWindow()
{
    InitializeComponent();
    SharedResource.Instance.VariableC.Add("some_value");
}

IValueConverter 예시:

csharp

public class MyConverter : IValueConverter
{
    public object Convert(object value, Type targetType, object parameter, CultureInfo culture)
    {
        var variableC = SharedResource.Instance.VariableC;

        if (variableC.Contains(value.ToString()))
        {
            return Brushes.Yellow;
        }
        return Brushes.Transparent;
    }

    public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)
    {
        throw new NotImplementedException();
    }
}

XAML에서는 이 컨버터를 다음과 같이 사용할 수 있습니다:

xaml

<Grid>
    <!-- 이곳에 GridControl 설정 -->
    <Grid.Resources>
        <local:MyConverter x:Key="MyConverter"/>
    </Grid.Resources>
    <!-- 셀 스타일 설정 -->
</Grid>

이렇게 하면, MainWindow와 컨버터가 동일한 SharedResource 인스턴스를 사용할 것이므로, MainWindow에서 변경한 변수를 컨버터에서도 액세스할 수 있습니다.
