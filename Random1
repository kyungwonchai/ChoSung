래는 요구사항에 맞춰 수정된 매크로입니다. 이번 코드는 다음과 같은 주요 사항을 처리합니다.

주요 요구사항 반영
병합된 모든 셀 처리:

병합된 셀의 모든 행에 대해 작업합니다.
CurrentRegion을 기준으로 병합된 셀의 영역을 탐색합니다.
붙이는 위치를 병합된 셀 이름과 일치:

대상 시트(B 파일)에서 병합된 셀을 찾아 이름이 동일한 경우 데이터를 복사합니다.
병합된 셀의 우측 빈 영역(F~K 열)을 복사:

병합된 셀의 모든 행에 대해 F~K 열 데이터를 복사하고 대상 시트의 우측 빈 영역에 붙여넣습니다.
시각적으로 확인 가능하도록 색칠:

**복사 영역(노랑)**과 **붙이는 영역(파랑)**으로 구분하여 색칠합니다.
수정된 VBA 매크로
vba
코드 복사
Sub ProcessMergedCells()
    Dim wbA As Workbook, wbB As Workbook
    Dim wsS1 As Worksheet, wsTarget As Worksheet
    Dim cell As Range, mergeRange As Range
    Dim sourceRange As Range, targetRange As Range
    Dim CH1 As String, SH1 As String
    Dim targetRow As Long
    Dim sourceRow As Long

    ' A 파일: SOP로 시작하는 열린 파일 찾기
    For Each wbA In Application.Workbooks
        If InStr(1, wbA.Name, "SOP") > 0 Then
            Set wbA = wbA
            Exit For
        End If
    Next wbA

    ' B 파일: SMD로 시작하는 열린 파일 찾기
    For Each wbB In Application.Workbooks
        If InStr(1, wbB.Name, "SMD") > 0 Then
            Set wbB = wbB
            Exit For
        End If
    Next wbB

    ' 열려 있는 SOP 또는 SMD 파일이 없는 경우
    If wbA Is Nothing Or wbB Is Nothing Then
        MsgBox "SOP 또는 SMD로 시작하는 파일이 열려 있지 않습니다.", vbCritical
        Exit Sub
    End If

    ' A 파일에서 "사내"와 "외주"가 포함된 시트(S1) 찾기
    For Each wsS1 In wbA.Worksheets
        If InStr(wsS1.Name, "사내") > 0 And InStr(wsS1.Name, "외주") > 0 Then
            Set wsS1 = wsS1
            wsS1.Activate ' 찾은 시트를 활성화
            Exit For
        End If
    Next wsS1

    ' S1 시트를 찾을 수 없는 경우
    If wsS1 Is Nothing Then
        MsgBox "A 파일에서 '사내'와 '외주'가 포함된 시트를 찾을 수 없습니다.", vbCritical
        Exit Sub
    End If

    ' B 파일에서 대상 시트 찾기
    For Each wsTarget In wbB.Worksheets
        If InStr(wsTarget.Name, "주차") > 0 Then
            Set wsTarget = wsTarget
            wsTarget.Activate ' 찾은 시트를 활성화
            Exit For
        End If
    Next wsTarget

    ' 대상 시트를 찾지 못한 경우
    If wsTarget Is Nothing Then
        MsgBox "B 파일에서 '주차' 이름이 포함된 시트를 찾을 수 없습니다.", vbCritical
        Exit Sub
    End If

    ' 병합된 셀 영역 처리
    For Each cell In wsS1.Range("C150:C" & wsS1.Cells(wsS1.Rows.Count, "C").End(xlUp).Row)
        If Not cell.MergeArea Is Nothing Then
            Set mergeRange = cell.MergeArea ' 병합된 셀 영역
            Dim mergeValue As String
            mergeValue = cell.Value ' 병합된 셀 값
            
            ' 병합된 셀 오른쪽 데이터(F~K 열)
            Set sourceRange = wsS1.Range(wsS1.Cells(mergeRange.Row, "F"), wsS1.Cells(mergeRange.Rows(mergeRange.Rows.Count).Row, "K"))

            ' 대상 시트에서 동일한 이름의 병합된 셀 찾기
            For Each targetCell In wsTarget.Range("C:C")
                If Not targetCell.MergeArea Is Nothing And targetCell.Value = mergeValue Then
                    Set targetRange = wsTarget.Range(wsTarget.Cells(targetCell.MergeArea.Row, "F"), _
                                                     wsTarget.Cells(targetCell.MergeArea.Rows(targetCell.MergeArea.Rows.Count).Row, "K"))

                    ' 복사 영역 색칠 (노랑)
                    sourceRange.Interior.Color = RGB(255, 255, 0) ' 노란색

                    ' 붙이는 대상 영역 색칠 (파랑)
                    targetRange.Interior.Color = RGB(0, 176, 240) ' 파란색

                    ' 데이터 복사
                    targetRange.Value = sourceRange.Value
                    Exit For
                End If
            Next targetCell
        End If
    Next cell

    ' 완료 메시지
    MsgBox "모든 병합된 셀이 처리되었습니다. 복사 영역은 노랑, 붙이는 영역은 파랑으로 표시됩니다.", vbInformation
End Sub
주요 변경 사항
모든 병합된 셀 처리:

For Each cell 루프를 통해 병합된 모든 셀을 처리합니다.
복사와 붙이기:

병합된 셀의 F~K 열 데이터를 복사합니다.
대상 시트의 C열에서 동일한 이름의 병합된 셀을 찾아, 그 우측 F~K 열에 데이터를 붙입니다.
색상 구분:

복사 영역(소스): 노란색 (RGB(255, 255, 0))
붙이는 영역(대상): 파란색 (RGB(0, 176, 240))
사용 방법
매크로 실행:
Alt + F8 → ProcessMergedCells 선택 → 실행
결과 확인:
소스 데이터 영역은 노란색, 대상 데이터 영역은 파란색으로 표시됩니다.
기대 결과
복사와 붙이는 영역을 시각적으로 확인할 수 있습니다.
병합된 셀의 모든 영역이 처리됩니다.