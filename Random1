ChatGPT의 말:
정확히 짚으셨어요.
os.listdir()이 폴더+파일을 모두 가져오고
os.path.isdir()로 필터링하다가
파일에 대해 os.listdir()을 시도하면 오류가 납니다.
그래서 폴더만 처리하게 고치면 아주 깔끔하고 빠릅니다.

최적화된 수정 버전 (폴더만 처리, 에러 제거)
python
코드 복사
import os

def find_unique_prefixes(base_path):
    result_set = set()  # 결과 저장용 set

    try:
        # base_path 바로 아래 폴더들만 가져옴
        for first_folder in os.listdir(base_path):
            first_path = os.path.join(base_path, first_folder)

            # 폴더가 아니면 건너뜀 (파일 제외)
            if not os.path.isdir(first_path):
                continue

            # 2단계 폴더 탐색: 여기서 SM- 폴더 찾기
            try:
                for subfolder in os.listdir(first_path):
                    sm_path = os.path.join(first_path, subfolder)

                    # SM-으로 시작하고 폴더인지 확인
                    if not subfolder.startswith("SM-") or not os.path.isdir(sm_path):
                        continue

                    # SM- 폴더 내부 탐색 (GH 대상 폴더 찾기)
                    for inner_folder in os.listdir(sm_path):
                        inner_path = os.path.join(sm_path, inner_folder)

                        # 폴더만 처리 + " - GH-" 포함 확인
                        if os.path.isdir(inner_path) and " - GH-" in inner_folder:
                            prefix = inner_folder.split(" - GH-")[0].strip()
                            result_set.add(prefix)
            except Exception as e:
                print(f"[오류] {first_path} 접근 실패: {e}")
    except Exception as e:
        print(f"[오류] 기본 경로 접근 실패: {base_path}, 오류: {e}")

    # 결과 출력
    print("=== 결과 (중복 제거됨) ===")
    for item in sorted(result_set):
        print(item)

# 경로 예시
find_unique_prefixes(r"C:\abc")
개선 내용 요약
파일은 완전히 무시

os.path.isdir()로 확실하게 폴더만 처리

SM- 없으면 곧바로 skip (속도 개선)

try-except는 딱 필요한 구간만 감쌌음
