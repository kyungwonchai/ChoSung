겠습니다. 주석을 모두 제거하고, 비밀번호로 SSH에 접속하여 /etc/watchdog.conf 파일을 덮어쓰는 파이썬 코드입니다.

Python

import paramiko
import io

def get_watchdog_config_content():
    watchdog_device = "/dev/watchdog"
    watchdog_timeout = 60
    interval = 10
    max_load_1 = 24

    config_content = f"""
watchdog-device = {watchdog_device}
watchdog-timeout = {watchdog_timeout}
interval = {interval}
max-load-1 = {max_load_1}
"""
    return config_content.strip()


def update_remote_file_with_password(hostname, port, username, password, remote_path, content):
    ssh_client = None
    try:
        ssh_client = paramiko.SSHClient()
        ssh_client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
        
        ssh_client.connect(hostname, port=port, username=username, password=password, timeout=10)

        sftp = ssh_client.open_sftp()
        
        content_file = io.StringIO(content)
        
        temp_path = f"/tmp/watchdog.conf.temp"
        sftp.putfo(content_file, temp_path)

        move_command = f"sudo mv {temp_path} {remote_path}"
        stdin, stdout, stderr = ssh_client.exec_command(move_command, get_pty=True)
        stdin.write(password + '\n')
        stdin.flush()
        
        error = stderr.read().decode('utf-8').strip()
        if error and "sudo" in error.lower():
             raise Exception(f"Sudo command failed, check password or sudoers config: {error}")

        chown_command = f"sudo chown root:root {remote_path}"
        chmod_command = f"sudo chmod 644 {remote_path}"
        
        for cmd in [chown_command, chmod_command]:
            stdin, stdout, stderr = ssh_client.exec_command(cmd, get_pty=True)
            stdin.write(password + '\n')
            stdin.flush()

        sftp.close()
        return (True, f"File '{remote_path}' updated successfully.")

    except Exception as e:
        return (False, f"An error occurred: {e}")
    
    finally:
        if ssh_client:
            ssh_client.close()


if __name__ == "__main__":
    REMOTE_HOST = '192.168.0.10'
    REMOTE_PORT = 22
    REMOTE_USER = 'pi'
    REMOTE_PASSWORD = 'your_pi_password'

    REMOTE_FILE_PATH = '/etc/watchdog.conf'
    
    new_config = get_watchdog_config_content()
    
    success, message = update_remote_file_with_password(
        hostname=REMOTE_HOST,
        port=REMOTE_PORT,
        username=REMOTE_USER,
        password=REMOTE_PASSWORD,
        remote_path=REMOTE_FILE_PATH,
        content=new_config
    )
    
    if success:
        print(f"Success: {message}")