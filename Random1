으로 이상 현상을 감지하고, pymssql을 사용하여 MSSQL에 연결하며 포트를 지정하는 코드를 제공하겠습니다.

python
Copy code
import pymssql
import pandas as pd
from datetime import datetime
from sklearn.ensemble import IsolationForest  # 이상 감지에 사용할 머신러닝 모델

# MSSQL 연결 정보 설정 (포트 지정 포함)
server = 'your_server'
port = 'your_port'
database = 'your_database'
username = 'your_username'
password = 'your_password'

# MSSQL 서버에 연결
conn = pymssql.connect(server=server, port=port, user=username, password=password, database=database)

# 이상 감지 모델 초기화
model = IsolationForest(contamination=0.05)  # contamination은 이상치 비율을 나타냅니다.

# 데이터 모니터링 루프
while True:
    # IP1, Model1, CT1 값을 조회하는 SQL 쿼리 작성
    sql_query = "SELECT IP1, Model1, CT1 FROM YourTable WHERE YourConditions"
    
    # 데이터베이스에서 데이터를 가져옵니다.
    df = pd.read_sql_query(sql_query, conn)
    
    # 데이터 프레임에서 CT1 컬럼 선택
    ct1_values = df['CT1'].values.reshape(-1, 1)
    
    # 이상 감지 모델로 이상치 감지
    anomalies = model.fit_predict(ct1_values)
    
    # 이상치가 감지된 경우 로그에 기록하고 MSSQL에 업데이트
    for index, row in df.iterrows():
        ip = row['IP1']
        model = row['Model1']
        ct = row['CT1']
        if anomalies[index] == -1:
            print(f"이상 현상 감지 - IP: {ip}, Model: {model}, CT1: {ct}, 시간: {datetime.now()}")
            # 여기에서 MSSQL에 로그를 작성하는 코드 추가
            
    # 일정 시간 간격으로 실행하려면 sleep 함수를 사용합니다.
    # 예: 5분마다 실행
    time.sleep(300)
이 코드는 pymssql을 사용하여 MSSQL에 연결하고, Isolation Forest 머신러닝 모델을 사용하여 이상 현상을 감지하는 예제입니다. 코드의 YourTable 및 YourConditions를 실제 데이터베이스 테이블 및 조건으로 대체해야 합니다. 또한 이상치가 감지되면 원하는 방식으로 로그를 작성하고 MSSQL에 업데이트해야 합니다.





