private void gridView1_CustomRowCellEdit(object sender, CustomRowCellEditEventArgs e)
{
    GridView view = sender as GridView;
    int rowHandle = e.RowHandle;
    string columnName = e.Column.FieldName;

    if (columnName == "신청 처리" || columnName == "입고" || columnName == "출고")
    {
        RepositoryItemButtonEdit buttonEdit = new RepositoryItemButtonEdit();
        buttonEdit.TextEditStyle = TextEditStyles.HideTextEditor;
        buttonEdit.Buttons.Clear();
        buttonEdit.ButtonsStyle = BorderStyles.Default;
        buttonEdit.Buttons.Add(new EditorButton(ButtonPredefines.Glyph));
        buttonEdit.ButtonClick += ButtonEdit_ButtonClick;
        e.RepositoryItem = buttonEdit;
    }
}

private void ButtonEdit_ButtonClick(object sender, ButtonPressedEventArgs e)
{
    GridView view = gridView1;
    int rowHandle = view.FocusedRowHandle;
    string columnName = view.FocusedColumn.FieldName;

    if (columnName == "신청 처리")
    {
        string 품목코드 = view.GetRowCellValue(rowHandle, "품목코드").ToString();

        // 신청 처리를 위한 코드 추가
        MessageBox.Show("신청 처리하시겠습니까? 품목코드: " + 품목코드);
    }
    else if (columnName == "입고")
    {
        string 품목코드 = view.GetRowCellValue(rowHandle, "품목코드").ToString();

        // 입고 처리를 위한 코드 추가
        MessageBox.Show("입고 처리하시겠습니까? 품목코드: " + 품목코드);
    }
    else if (columnName == "출고")
    {
        string 품목코드 = view.GetRowCellValue(rowHandle, "품목코드").ToString();

        // 출고 처리를 위한 코드 추가
        MessageBox.Show("출고 처리하시겠습니까? 품목코드: " + 품목코드);
    }
}
