날짜별로 DecreaseAmount가 가장 작은 순위 매기기:
각 날짜에 대해 DecreaseAmount의 순위를 매기고, 이 순위가 10 이하인 데이터만 필터링합니다.
sql
Copy code
;WITH RankedDecreases AS (
    SELECT
        ipadd1,
        partition1,
        DateRecorded,
        DecreaseAmount,
        RANK() OVER (PARTITION BY DateRecorded ORDER BY DecreaseAmount) AS Rank
    FROM HDDLogs
)
SELECT *
FROM RankedDecreases
WHERE Rank <= 10;
순위가 10 이하인 값이 가장 많은 HDD 찾기:
위의 쿼리 결과를 이용하여 각 ipadd1 + partition1 조합별로 순위가 10 이하인 날의 수를 계산하고, 가장 많은 값을 가진 HDD 조합을 찾습니다.
sql
Copy code
;WITH RankedDecreases AS (
    SELECT
        ipadd1,
        partition1,
        DateRecorded,
        DecreaseAmount,
        RANK() OVER (PARTITION BY DateRecorded ORDER BY DecreaseAmount) AS Rank
    FROM HDDLogs
),
TopRankedHDD AS (
    SELECT
        ipadd1,
        partition1,
        COUNT(*) AS DaysWithTop10Rank
    FROM RankedDecreases
    WHERE Rank <= 10
    GROUP BY ipadd1, partition1
)
SELECT TOP 1
    ipadd1,
    partition1,
    DaysWithTop10Rank
FROM TopRankedHDD
ORDER BY DaysWithTop10Rank DESC;
이 쿼리를 사용하면 각 날짜별로 DecreaseAmount가 가장 낮은 순위를 기록하고, 그 순위를 활용하여 숫자가 10 이하인 것이 가장 많은 HDD 조합을 찾을 수 있습니다. 데이터베이스에 따라 SQL 구문에 약간의 수정이 필요할 수 있습니다.