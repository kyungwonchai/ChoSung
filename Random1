일이 "사용 중"이라는 메시지가 나타나는 경우, 이는 WPF가 이미지를 로드한 후에도 파일에 대한 잠금을 유지하고 있음을 의미합니다. 이 문제를 해결하는 데 있어서 몇 가지 추가적인 접근 방법이 있습니다:

    BitmapImage의 복사본 사용하기:
    이미지를 BitmapImage로 로드한 후, 이를 WriteableBitmap으로 변환하여 Image 컨트롤에 할당할 수 있습니다. 이렇게 하면 원본 파일과의 연결이 끊어집니다.

    csharp

BitmapImage bitmap = new BitmapImage(new Uri(filePath, UriKind.Absolute));
WriteableBitmap writeableBitmap = new WriteableBitmap(bitmap);
yourImageControl.Source = writeableBitmap;

이후에 원본 파일을 삭제할 수 있습니다.

FileStream 사용 후 닫기:
이미 설명드린 대로, FileStream을 사용하여 이미지를 로드하면 파일 잠금 문제를 해결할 수 있습니다. 중요한 것은 FileStream을 사용한 후 적절히 닫아야 한다는 점입니다.

csharp

BitmapImage bitmap = new BitmapImage();
bitmap.BeginInit();
using (FileStream stream = File.OpenRead(filePath))
{
    bitmap.StreamSource = stream;
    bitmap.CacheOption = BitmapCacheOption.OnLoad;
    bitmap.EndInit();
}
bitmap.Freeze();
yourImageControl.Source = bitmap;

using 문을 사용하면 FileStream이 자동으로 닫히며, 이렇게 하면 파일 잠금이 해제됩니다.

GC.Collect 호출:
이는 권장되지 않는 방법이지만, 가끔씩 Garbage Collector를 강제로 호출하여 파일에 대한 잠금을 해제할 수 있습니다. 이 방법은 다소 공격적이며 예기치 않은 부작용을 초래할 수 있으므로 주의해서 사용해야 합니다.

csharp

    GC.Collect();
    GC.WaitForPendingFinalizers();
    File.Delete(filePath);

이러한 방법들 중 하나를 사용해보시고, 여전히 문제가 해결되지 않는다면, 코드의 다른 부분에서 파일이 사용되고 있지 않은지 확인해 보시기 바랍니다. 파일을 열고 있는 다른 스트림이나 프로세스가 없는지 검토해야 합니