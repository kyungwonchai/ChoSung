using System;
using System.Runtime.InteropServices;
using System.Text;

public class Program
{
    [DllImport("user32.dll")]
    public static extern bool EnumWindows(EnumWindowsProc enumProc, IntPtr lParam);

    [DllImport("user32.dll")]
    public static extern int GetClassName(IntPtr hWnd, StringBuilder lpClassName, int nMaxCount);

    [DllImport("user32.dll")]
    public static extern int GetWindowText(IntPtr hWnd, StringBuilder lpString, int nMaxCount);

    public delegate bool EnumWindowsProc(IntPtr hWnd, IntPtr lParam);

    public static bool MyEnumWindowsProc(IntPtr hWnd, IntPtr lParam)
    {
        StringBuilder className = new StringBuilder(256);
        StringBuilder windowText = new StringBuilder(256);

        GetClassName(hWnd, className, className.Capacity);
        GetWindowText(hWnd, windowText, windowText.Capacity);

        string targetClassName = "YourClassNameHere";
        string targetWindowText = "YourWindowTextHere";

        if (className.ToString() == targetClassName && windowText.ToString() == targetWindowText)
        {
            Console.WriteLine("Found window with handle: " + hWnd);
            return false; // Stop enumeration
        }

        return true; // Continue enumeration
    }

    public static void Main()
    {
        EnumWindows(new EnumWindowsProc(MyEnumWindowsProc), IntPtr.Zero);
    }
}
