래는 MSSQL2014 데이터베이스의 rankeddata 테이블에서 데이터를 조회하고, Streamlit으로 결과를 보여주는 코드입니다. 코드는 다음 요구 사항을 충족합니다:

Get_min_bestdifferent 프로시저 호출 후 데이터 표시

act2_1 ~ act2_8 중 가장 큰 숫자를 노란색으로 표시

line1을 클릭하면 Get_min_bestdifferentLine 프로시저 호출 및 팝업 표시

팝업에서 데이터 테이블 표시 및 최대값을 노란색으로 표시

Streamlit Code
python
코드 복사
import streamlit as st
import pandas as pd
import pymssql

# MSSQL 서버 연결 설정
def get_connection():
    return pymssql.connect(
        server="YOUR_SERVER",
        user="YOUR_USER",
        password="YOUR_PASSWORD",
        database="YOUR_DATABASE"
    )

# Get_min_bestdifferent 프로시저 호출 함수
def fetch_main_data():
    conn = get_connection()
    query = "EXEC Get_min_bestdifferent"
    df = pd.read_sql(query, conn)
    conn.close()
    return df

# Get_min_bestdifferentLine 프로시저 호출 함수
def fetch_line_data(line1_value):
    conn = get_connection()
    query = f"EXEC Get_min_bestdifferentLine @line1='{line1_value}'"
    df = pd.read_sql(query, conn)
    conn.close()
    return df

# 테이블에서 최대값을 노란색으로 표시
def highlight_max(row):
    max_value = row.max()
    return ['background-color: yellow' if v == max_value else '' for v in row]

# 메인 화면 표시
def main():
    st.title("Ranked Data Table")
    
    # 메인 데이터 조회
    main_data = fetch_main_data()
    
    # act2_1 ~ act2_8 컬럼을 필터링
    act2_columns = [f'act2_{i}' for i in range(1, 9)]
    display_data = main_data[['group1', 'line1', 'model1', 'type1', 'ecn1', 'edition1'] + act2_columns]

    st.subheader("Main Data Table")
    # act2 부분을 색상 강조
    styled_data = display_data.style.apply(highlight_max, subset=act2_columns, axis=1)
    st.write(styled_data.to_html(), unsafe_allow_html=True)

    # line1 버튼 클릭 처리
    selected_line1 = st.selectbox("Select a line1 to view details", main_data['line1'].unique())
    if st.button("Show Details"):
        # 선택된 line1에 대해 상세 데이터를 가져오기
        line_data = fetch_line_data(selected_line1)
        
        st.subheader(f"Details for Line: {selected_line1}")
        
        # act1, act2, act2best 컬럼 구성
        act_columns = [f'act1_{i}' for i in range(1, 9)] + [f'act2_{i}' for i in range(1, 9)] + [f'act2best_{i}' for i in range(1, 9)]
        display_line_data = line_data[['line1', 'model1', 'type1', 'ecn1', 'edition1'] + act_columns]

        # act 부분을 색상 강조
        styled_line_data = display_line_data.style.apply(highlight_max, subset=act_columns, axis=1)
        st.write(styled_line_data.to_html(), unsafe_allow_html=True)

if __name__ == "__main__":
    main()
코드 설명
get_connection() 함수

MSSQL2014 서버와 연결을 생성합니다. 서버 정보(YOUR_SERVER, YOUR_USER, YOUR_PASSWORD, YOUR_DATABASE)는 사용자가 사용하는 값으로 변경하세요.

fetch_main_data() 함수

Get_min_bestdifferent 프로시저를 실행하여 데이터를 가져옵니다.

pandas의 read_sql 함수를 사용해 DataFrame으로 변환합니다.

fetch_line_data() 함수

Get_min_bestdifferentLine 프로시저를 특정 line1 값을 파라미터로 사용하여 실행합니다.

highlight_max() 함수

주어진 행에서 가장 큰 값을 찾고, 해당 셀에 노란색 배경을 지정합니다.

main() 함수

Streamlit 인터페이스를 구성합니다.

테이블을 표시하고, 특정 행의 최대값을 노란색으로 강조합니다.

line1 값 선택 후 버튼을 클릭하면 팝업으로 데이터를 표시합니다.

주의사항
pymssql 라이브러리가 설치되어 있어야 합니다:

bash
코드 복사
pip install pymssql streamlit pandas
Streamlit 실행 방법:

bash
코드 복사
streamlit run your_script_name.py
데이터베이스 정보 (YOUR_SERVER, YOUR_USER, YOUR_PASSWORD, YOUR_DATABASE)를 정확히 입력하세요.

추가 사항
현재 최대값 강조 기능은 act2_1 ~ act2_8 과 act1_1 ~ act1_8, act2best_1 ~ act2best_8 에 적용됩니다.

표 스타일링은 Streamlit의 기본 HTML 표시 기능을 사용합니다.

line1을 클릭하면 해당 행의 데이터가 팝업으로 표시됩니다.