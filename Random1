ew에서 항목마다 가로줄을 표시하려면 **아이템 데코레이션(ItemDecoration)**을 사용하여 간격에 선을 그릴 수 있습니다. Android에서는 DividerItemDecoration을 기본적으로 제공하여 쉽게 구현할 수 있습니다. 아래는 DataActivity에 가로줄을 추가하는 방법을 설명한 코드입니다.

DataActivity.kt 수정
RecyclerView에 가로줄을 추가하기 위해 DividerItemDecoration을 사용합니다.

kotlin
코드 복사
// app/src/main/java/com/dxmxsmd/routeracralarm/DataActivity.kt
package com.dxmxsmd.routeracralarm

import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.lifecycle.lifecycleScope
import androidx.recyclerview.widget.DividerItemDecoration
import androidx.recyclerview.widget.LinearLayoutManager
import androidx.recyclerview.widget.RecyclerView
import kotlinx.coroutines.Dispatchers
import kotlinx.coroutines.launch
import kotlinx.coroutines.withContext
import java.sql.Connection
import java.sql.DriverManager

/**
 * 데이터 활동 클래스
 * MSSQL 데이터베이스에서 최근 20개의 데이터를 가져와 RecyclerView에 표시
 */
class DataActivity : ComponentActivity() {

    private lateinit var recyclerView: RecyclerView
    private lateinit var adapter: DataAdapter

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_data)

        // RecyclerView 초기화
        recyclerView = findViewById(R.id.recyclerView)
        recyclerView.layoutManager = LinearLayoutManager(this)

        // DividerItemDecoration 추가 (가로줄)
        val dividerItemDecoration = DividerItemDecoration(
            recyclerView.context,
            (recyclerView.layoutManager as LinearLayoutManager).orientation
        )
        recyclerView.addItemDecoration(dividerItemDecoration)

        // 데이터 가져오기
        lifecycleScope.launch {
            val data = fetchDataFromDatabase()
            adapter = DataAdapter(data)
            recyclerView.adapter = adapter
        }
    }

    /**
     * 데이터베이스에서 데이터를 가져오는 함수
     *
     * @return TableData 리스트
     */
    private suspend fun fetchDataFromDatabase(): List<TableData> {
        return withContext(Dispatchers.IO) {
            val dataList = mutableListOf<TableData>()
            try {
                // JDBC URL 구성 (jTDS 드라이버 사용)
                val url = "jdbc:jtds:sqlserver://your-database-server:1433/your-database;useSSL=false"
                val username = "your-username"
                val password = "your-password"

                // 데이터베이스 연결
                Class.forName("net.sourceforge.jtds.jdbc.Driver")
                val connection: Connection = DriverManager.getConnection(url, username, password)
                val statement = connection.createStatement()

                // 쿼리 실행
                val resultSet = statement.executeQuery("SELECT TOP 20 * FROM table2")

                // 결과 처리
                while (resultSet.next()) {
                    val column1 = resultSet.getString("column1")
                    val column2 = resultSet.getString("column2")
                    dataList.add(TableData(column1, column2))
                }

                resultSet.close()
                statement.close()
                connection.close()
            } catch (e: Exception) {
                e.printStackTrace()
            }
            dataList
        }
    }
}
설명
DividerItemDecoration 추가:

DividerItemDecoration을 사용하여 RecyclerView 항목 사이에 가로줄을 추가합니다.