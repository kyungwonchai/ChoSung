AML 코드를 아래와 같이 수정하여 DockLayoutManager의 LayoutGroup에 방향을 Horizontal로 설정하면 탭이 아래에 표시되고 새로운 페이지가 추가될 때마다 새로운 탭이 추가됩니다.

xaml
Copy code
<dx:ThemedWindow x:Class="RibbonControlWithDocking.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
        xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon"
        xmlns:dxdo="http://schemas.devexpress.com/winfx/2008/xaml/docking"
        Title="MainWindow" Height="450" Width="800">
    <Grid>
        <dxdo:DockLayoutManager x:Name="dockLayoutManager">
            <dxdo:DockLayoutManager.LayoutRoot>
                <dxdo:LayoutGroup x:Name="layoutGroup" Orientation="Horizontal">
                    <dxdo:LayoutPanel x:Name="emptyLayoutPanel" />
                </dxdo:LayoutGroup>
            </dxdo:DockLayoutManager.LayoutRoot>
        </dxdo:DockLayoutManager>

        <dxr:RibbonControl>
            <!-- Your RibbonControl configuration goes here -->
        </dxr:RibbonControl>
    </Grid>
</dx:ThemedWindow>
C# 코드를 아래와 같이 수정하여 클릭할 때마다 새로운 페이지를 탭으로 추가합니다.

csharp
Copy code
private void Button1_Click(object sender, RoutedEventArgs e)
{
    AddDockingItem("Pagegg1", new Pagegg1());
}

private void AddDockingItem(string title, UserControl userControl)
{
    var layoutPanel = new LayoutPanel { Caption = title };
    layoutPanel.Content = userControl;
    layoutGroup.Items.Add(layoutPanel);

    // Close the empty layout panel if it's there.
    if (layoutGroup.Items.Contains(emptyLayoutPanel))
    {
        layoutGroup.Items.Remove(emptyLayoutPanel);
    }
}
이 코드는 Button1_Click 메서드가 호출될 때마다 새로운 UserControl을 만들어 DockLayoutM