저, CheckProjectDetailData 메서드는 view_projectdetail 테이블에서 pname과 loginid를 조건으로 하는 데이터의 존재 여부를 확인하는 로직입니다.

csharp
Copy code
private bool CheckProjectDetailData(string pname, string loginid)
{
    // 데이터베이스 연결 및 쿼리 실행
    using (SqlConnection connection = new SqlConnection(connectionString))
    {
        connection.Open();
        using (SqlCommand command = new SqlCommand("SELECT COUNT(*) FROM view_projectdetail WHERE pname = @Pname AND loginid = @Loginid", connection))
        {
            command.Parameters.AddWithValue("@Pname", pname);
            command.Parameters.AddWithValue("@Loginid", loginid);
            int count = (int)command.ExecuteScalar();
            return count > 0;
        }
    }
}
위의 코드에서 connectionString은 데이터베이스 연결 문자열로 적절하게 설정해주시고, SqlCommand을 사용하여 COUNT(*) 쿼리를 실행하여 데이터의 존재 여부를 확인합니다.

다음은 GetDiagramFromDatabase 메서드로, 데이터베이스에서 pname과 loginid를 사용하여 Diagram을 가져오는 로직입니다.

csharp
Copy code
private string GetDiagramFromDatabase(string pname, string loginid)
{
    // 데이터베이스 연결 및 쿼리 실행
    using (SqlConnection connection = new SqlConnection(connectionString))
    {
        connection.Open();
        using (SqlCommand command = new SqlCommand("SELECT diagram FROM view_projectdetail WHERE pname = @Pname AND loginid = @Loginid ORDER BY Date1 DESC", connection))
        {
            command.Parameters.AddWithValue("@Pname", pname);
            command.Parameters.AddWithValue("@Loginid", loginid);
            string diagram = command.ExecuteScalar()?.ToString();
            return diagram ?? string.Empty;
        }
    }
}
위의 코드에서도 connectionString은 적절한 데이터