using System.Drawing;
using System.Drawing.Imaging;
using PdfSharp.Pdf;
using PdfSharp.Pdf.IO;

namespace PDFToImageConverter
{
    class Program
    {
        static void Main(string[] args)
        {
            string pdfFilePath = "your_pdf_file_path.pdf";
            string outputFolder = "output_folder_path";

            using (PdfDocument document = PdfReader.Open(pdfFilePath, PdfDocumentOpenMode.Import))
            {
                for (int pageIndex = 0; pageIndex < document.PageCount; pageIndex++)
                {
                    PdfPage page = document.Pages[pageIndex];

                    Bitmap image = RenderPdfPageToImage(page, 300); // 300 DPI로 이미지 렌더링

                    string jpgFilePath = Path.Combine(outputFolder, $"Page{pageIndex + 1}.jpg");
                    image.Save(jpgFilePath, ImageFormat.Jpeg);
                }
            }
        }

        static Bitmap RenderPdfPageToImage(PdfPage page, int dpi)
        {
            double scale = dpi / 72.0; // PDF의 기본 DPI는 72입니다.
            int width = (int)(page.Width * scale);
            int height = (int)(page.Height * scale);

            Bitmap image = new Bitmap(width, height);
            image.SetResolution(dpi, dpi);

            using (Graphics graphics = Graphics.FromImage(image))
            {
                graphics.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.AntiAlias;
                graphics.InterpolationMode = System.Drawing.Drawing2D.InterpolationMode.HighQualityBicubic;
                graphics.PixelOffsetMode = System.Drawing.Drawing2D.PixelOffsetMode.HighQuality;
                graphics.DrawImage(page.Render(width, height), 0, 0, width, height);
            }

            return image;
        }
    }
}
