라스크와 함께 사용될 수 있는 JavaScript 코드로, 값이 100 이상일 경우 배경을 붉게, 100 미만일 경우 검게, 그리고 값이 이전과 동일하면 검게 설정하는 코드를 작성해보겠습니다. 이 코드는 Flask로 데이터를 서버에서 받아와서 처리한다고 가정합니다.

Flask 서버 코드 (Python)
Flask는 특정 값을 제공하는 엔드포인트를 제공합니다.

python
코드 복사
from flask import Flask, jsonify

app = Flask(__name__)

@app.route('/get_value', methods=['GET'])
def get_value():
    # 서버에서 임의의 값을 반환합니다. 실제 구현에서는 동적 데이터를 제공해야 합니다.
    value = 120  # 예: 서버에서 계산된 값
    return jsonify({"value": value})

if __name__ == '__main__':
    app.run(debug=True)
HTML 및 JavaScript 클라이언트 코드
Flask 서버에서 값을 가져오고 업데이트 함수에서 조건에 따라 배경색을 변경합니다.

html
코드 복사
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Value-Based Background</title>
    <style>
        body {
            transition: background-color 0.5s ease;
        }
    </style>
</head>
<body>
    <h1>Value-Based Background Color</h1>
    <div id="value-display">Loading...</div>

    <script>
        let previousValue = null;

        // 값을 업데이트하고 배경색을 변경하는 함수
        async function updateBackground() {
            try {
                // Flask 서버에서 데이터를 가져옵니다.
                const response = await fetch('/get_value');
                const data = await response.json();
                const currentValue = data.value;

                // HTML에 현재 값을 표시
                document.getElementById('value-display').textContent = `Current Value: ${currentValue}`;

                // 배경색 변경 로직
                if (currentValue === previousValue) {
                    document.body.style.backgroundColor = "black"; // 값이 이전과 같으면 검정색
                } else if (currentValue >= 100) {
                    document.body.style.backgroundColor = "red"; // 값이 100 이상이면 빨간색
                } else {
                    document.body.style.backgroundColor = "black"; // 값이 100 미만이면 검정색
                }

                // 이전 값 업데이트
                previousValue = currentValue;

            } catch (error) {
                console.error('Error fetching value:', error);
            }
        }

        // 일정 시간 간격으로 업데이트 실행
        setInterval(updateBackground, 2000); // 2초마다 실행
    </script>
</body>
</html>
설명
Flask 서버:

/get_value 엔드포인트에서 JSON 형태로 값을 제공합니다.
실제 환경에서는 동적으로 값을 계산하거나 데이터베이스에서 불러올 수 있습니다.
HTML 및 JavaScript:

fetch API를 사용해 서버에서 값을 가져옵니다.
이전 값(previousValue)을 저장하여 현재 값과 비교합니다.
값이 동일하면 검정색 배경으로, 값이 100 이상이면 빨간색 배경으로, 100 미만이면 검정색으로 설정합니다.
자동 업데이트:
