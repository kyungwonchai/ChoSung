가 다른 뷰나 액티비티 뒤에 가려지지 않도록 최상위에 표시하려면, 다이얼로그의 유형을 설정하거나 시스템 알림 창처럼 다이얼로그를 최상위 창으로 설정할 수 있습니다. 일반적으로 AlertDialog는 Activity의 컨텍스트를 기반으로 생성되므로, 다른 뷰나 팝업이 그 위에 있을 수 있습니다. 이를 해결하기 위해 TYPE_APPLICATION_OVERLAY나 WindowManager를 사용하는 방법을 설명하겠습니다.

방법 1: AlertDialog를 TYPE_APPLICATION_OVERLAY로 설정
Android에서는 TYPE_APPLICATION_OVERLAY 창을 사용하여 다이얼로그를 최상위로 띄울 수 있습니다. 하지만, Android 8.0 (API 26) 이상에서는 오버레이 권한이 필요합니다. 권한을 요청하고, 팝업이 최상위에 표시되도록 설정합니다.

코드 구현
오버레이 권한 요청: 오버레이 권한을 요청합니다.
AlertDialog를 최상위 창으로 표시: 오버레이 권한이 허용되었는지 확인한 후 AlertDialog를 최상위 창으로 표시합니다.
1. 오버레이 권한 요청
MainActivity에서 오버레이 권한이 필요한지 확인하고, 없으면 권한을 요청하는 코드를 추가합니다.

kotlin
코드 복사
import android.content.Intent
import android.provider.Settings

// 오버레이 권한 확인 및 요청
private fun checkOverlayPermission() {
    if (!Settings.canDrawOverlays(this)) {
        val intent = Intent(Settings.ACTION_MANAGE_OVERLAY_PERMISSION)
        startActivityForResult(intent, REQUEST_OVERLAY_PERMISSION)
    }
}

// 오버레이 권한 코드
companion object {
    private const val REQUEST_OVERLAY_PERMISSION = 1001
}
2. 최상위 AlertDialog 구현
playAlarmSound 함수에서 오버레이 권한을 확인하고, 권한이 있으면 AlertDialog를 최상위에 표시합니다.

kotlin
코드 복사
import android.view.WindowManager

private fun playAlarmSound() {
    // 사운드 재생 설정
    try {
        val alarmSound: Uri = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_ALARM)
            ?: RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION)

        mediaPlayer = MediaPlayer().apply {
            setAudioAttributes(
                AudioAttributes.Builder()
                    .setContentType(AudioAttributes.CONTENT_TYPE_SONIFICATION)
                    .setUsage(AudioAttributes.USAGE_ALARM)
                    .build()
            )
            setDataSource(this@MainActivity, alarmSound)
            isLooping = true // 사운드를 반복 재생
            prepare()
            start()
        }
    } catch (e: Exception) {
        Log.e("MainActivity", "Failed to play alarm sound", e)
    }

    // UI 스레드에서 팝업 창을 띄우기
    runOnUiThread {
        if (Settings.canDrawOverlays(this)) {
            val builder = AlertDialog.Builder(this)
            builder.setTitle("알림")
                .setMessage("문제를 확인하고 창을 터치하여 경고음을 종료하세요.")
                .setPositiveButton("확인") { dialog, _ ->
                    stopAlarmSound() // 사운드 멈춤
                    dialog.dismiss()
                }
                .setCancelable(false) // 사용자가 창을 닫기 전까지 팝업이 꺼지지 않음

            val alertDialog = builder.create()
            // 최상위 창으로 설정
            alertDialog.window?.setType(WindowManager.LayoutParams.TYPE_APPLICATION_OVERLAY)
            alertDialog.show()
        } else {
            checkOverlayPermission() // 오버레이 권한 요청
        }
    }
}

private fun stopAlarmSound() {
    mediaPlayer?.let {
        if (it.isPlaying) {
            it.stop()
            it.release()
        }
    }
}
설명
checkOverlayPermission 함수:
오버레이 권한이 없으면 사용자가 직접 설정할 수 있도록 ACTION_MANAGE_OVERLAY_PERMISSION 인텐트를 실행합니다.
playAlarmSound 함수 수정:
권한이 있는 경우 AlertDialog의 윈도우 유형을 TYPE_APPLICATION_OVERLAY로 설정하여 최상위 창으로 표시합니다.
오버레이 권한이 없으면 권한을 요청합니다.
주의 사항
오버레이 권한: Android 8.0(API 26) 이상에서는 이 권한을 사용자에게 직접 요청해야 하며, 사용자 설정에서 허용해야 합니다. 앱이 설치된 후 처음 실행 시 사용자가 오버레이 권한을 허용해야 합니다.