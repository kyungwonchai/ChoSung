게 하여 더욱 눈에 띄도록 설정하는 요청을 반영하겠습니다. WPF에서 창의 위치를 중앙으로 설정하고, 테두리 색과 굵기를 조정하는 방법은 다음과 같습니다.

InputDialog 클래스 수정:
창을 화면 중앙에 위치시키기 위해 WindowStartupLocation 속성을 CenterScreen으로 설정합니다.
창의 테두리를 빨간색으로 굵게 하기 위해 Border 요소를 추가하고 스타일을 지정합니다.
아래는 수정된 코드입니다:

csharp
Copy code
public class InputDialog : Window
{
    private TextBox InputBox;
    public string ResponseText { get; set; }
    private Button okButton;

    public InputDialog(string title, string label)
    {
        Title = title;
        WindowStartupLocation = WindowStartupLocation.CenterScreen; // 창을 화면 중앙에 위치
        Border border = new Border
        {
            BorderBrush = Brushes.Red,
            BorderThickness = new Thickness(2), // 테두리를 빨간색으로, 굵기는 2로 설정
            Padding = new Thickness(20)
        };

        StackPanel panel = new StackPanel { Background = Brushes.White };
        border.Child = panel;

        Label lbl = new Label();
        lbl.Content = label;
        panel.Children.Add(lbl);

        InputBox = new TextBox();
        InputBox.TextChanged += InputBox_TextChanged;
        panel.Children.Add(InputBox);

        okButton = new Button();
        okButton.Content = "확인";
        okButton.Click += OkButton_Click;
        okButton.IsEnabled = false;  // 초기에는 버튼을 비활성화
        panel.Children.Add(okButton);

        Content = border;
        Width = 300;
        Height = 200;
    }

    private void InputBox_TextChanged(object sender, TextChangedEventArgs e)
    {
        if (InputBox.Text == "삭제")
        {
            okButton.IsEnabled = true;
            ((Panel)this.Content).Background = Brushes.Orange;
        }
        else
        {
            okButton.IsEnabled = false;
            ((Panel)this.Content).Background = Brushes.White;
        }
    }

    private void OkButton_Click(object sender, RoutedEventArgs e)
    {
        ResponseText = InputBox.Text;
        DialogResult = true;
    }
}
이 코드에서 InputDialog 클래스는 이제 창의 위치를 화면의 중앙으로 설정하고, 창의 테두리를 빨간색으로 굵게 하여 더 잘