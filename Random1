에 검색어를 입력하고 해당 검색어를 반영하여 검색되도록 구현할 수 있습니다. 이를 위해 Flask 애플리케이션의 라우트 함수를 수정해야 합니다.

아래는 수정된 Flask 애플리케이션 예제 코드입니다:

python

from flask import Flask, render_template, request

app = Flask(__name__)

@app.route('/', methods=['GET', 'POST'])
def index():
    part_code = request.args.get('part_code', '')
    similar_parts = []

    if request.method == 'POST':
        part_code = request.form['part_code']
        # 검색 로직을 추가하여 similar_parts 리스트를 채웁니다.

    return render_template('index.html', part_code=part_code, similar_parts=similar_parts)

if __name__ == '__main__':
    app.run(host='10.22.222.222', port=20000)

위의 코드에서 / 경로의 라우트 함수(index())를 수정하여 GET 및 POST 요청을 처리합니다. part_code 변수는 GET 요청의 쿼리 문자열에서 검색어를 가져오도록 수정되었습니다. 검색어가 전달되지 않으면 기본값으로 빈 문자열을 사용합니다.

POST 요청이 수신되면 폼 데이터에서 part_code 값을 가져옵니다. 여기에서 실제로 검색 로직을 추가하여 similar_parts 리스트를 채워넣어야 합니다. 이 예제에서는 검색 로직을 구현하지 않았으므로 similar_parts는 빈 리스트로 유지됩니다.

수정된 코드를 적용하여 Flask 애플리케이션을 실행하고, 웹 주소 뒤에 /검색어를 추가하여 접속해보세요. 검색어가 반영되어 검색되는 기능을 확인할 수 있을 것입니다. 예를 들어, 10.22.222.222:20000/부품123와 같이 접속하면 "부품123"을 검색하는 동작이 수행됩니다