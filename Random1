. 서버 파일 이름 변경하기
기존 서버 파일 이름이 server.js라고 가정하고, 이를 serverppp.js로 변경한다고 하겠습니다.

✅ 변경 방법
서버 파일 이름을 변경합니다.

pgsql
코드 복사
server.js ➔ serverppp.js
React 프로젝트의 루트 디렉토리에 위치한 서버 파일 (serverppp.js)의 내용은 예를 들어 다음과 같습니다.

javascript
코드 복사
// serverppp.js
const express = require('express');
const cors = require('cors');
const app = express();
const PORT = 5000;

app.use(cors());
app.use(express.json());

app.get('/api/something', (req, res) => {
    res.json({ message: 'Success! Your serverppp.js is working.' });
});

app.listen(PORT, () => console.log(`Server running on port ${PORT}`));
2. package.json 수정하기 (npm start로 serverppp.js 실행)
React 프로젝트의 package.json 파일을 수정하여 npm start 명령어로 serverppp.js를 실행하도록 설정합니다.

✅ package.json 설정 예시
json
코드 복사
"scripts": {
  "start": "node serverppp.js",   // 기존의 server.js 를 serverppp.js 로 변경
  "react-start": "react-scripts start",
  "build": "react-scripts build",
  "test": "react-scripts test",
  "eject": "react-scripts eject"
}
"start" 명령어를 node serverppp.js 로 변경했습니다.

만약 React 개발 서버도 실행하려면 "react-start" 커맨드를 사용하세요.

3. React 서버와 백엔드 서버 동시에 실행하기 (동시 실행 설정)
React 앱과 Express 서버를 동시에 실행하려면 concurrently 패키지를 사용합니다.

bash
코드 복사
npm install concurrently
✅ package.json 설정 예시 (동시 실행)
json
코드 복사
"scripts": {
  "start": "concurrently \"npm run server\" \"npm run react-start\"",
  "server": "node serverppp.js",
  "react-start": "react-scripts start",
  "build": "react-scripts build",
  "test": "react-scripts test",
  "eject": "react-scripts eject"
}
이제 React 앱 (localhost:3000) 과 Express 서버 (localhost:5000) 를 동시에 실행할 수 있습니다.

실행 명령어:

bash
코드 복사
npm start
4. CORS 설정 확인 (백엔드 설정)
Express 서버 (serverppp.js) 에서 CORS 설정을 제대로 해줘야 React와 통신할 수 있습니다.

javascript
코드 복사
const cors = require('cors');
app.use(cors({
    origin: 'http://localhost:3000'
}));
5. React의 proxy 설정 확인 (프론트엔드 설정)
package.json 에서 proxy 설정을 추가합니다.

json
코드 복사
"proxy": "http://localhost:5000"
React 앱에서 요청할 때 URL을 상대 경로로 사용하세요:

javascript
코드 복사
fetch('/api/something')
  .then(response => response.json())
  .then(data => console.log(data))
  .catch(error => console.error('Error:', error));
6. 실행 확인
React 애플리케이션과 Express 서버가 동시에 실행되는지 확인합니다.

📌 React 앱 실행 주소:
arduino
코드 복사
http://localhost:3000
📌 Express 서버 API 확인 주소:
bash
코드 복사