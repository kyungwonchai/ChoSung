import fitz  # PyMuPDF 라이브러리
import os

def convert_color(color_int):
    """
    PyMuPDF에서 사용하는 정수형 색상 값을 RGB 튜플로 변환합니다.
    """
    if color_int is None:
        return (0, 0, 0)
    r = (color_int >> 16) & 0xFF
    g = (color_int >> 8) & 0xFF
    b = color_int & 0xFF
    return (r, g, b)

def extract_detailed_text_info(pdf_path):
    """
    PDF 파일에서 텍스트와 함께 위치, 크기, 색상 정보를 추출합니다.
    """
    if not os.path.exists(pdf_path):
        print(f"오류: '{pdf_path}' 파일을 찾을 수 없습니다. 파이썬 파일과 같은 폴더에 있는지 확인하세요.")
        return []

    try:
        doc = fitz.open(pdf_path)
    except Exception as e:
        print(f"오류: PDF 파일을 여는 중 문제가 발생했습니다: {e}")
        return []
        
    all_pages_data = []
    for page_num, page in enumerate(doc):
        page_data = {
            "page_number": page_num + 1,
            "text_spans": []
        }
        
        blocks = page.get_text("dict")["blocks"]
        
        for block in blocks:
            if "lines" in block:
                for line in block["lines"]:
                    for span in line["spans"]:
                        text = span["text"]
                        font_size = round(span["size"], 2)
                        color_rgb = convert_color(span["color"])
                        bbox = tuple(round(coord, 2) for coord in span["bbox"])

                        span_info = {
                            "text": text,
                            "font_size": font_size,
                            "color_rgb": color_rgb,
                            "position_bbox": bbox
                        }
                        page_data["text_spans"].append(span_info)
        
        all_pages_data.append(page_data)
        
    doc.close()
    return all_pages_data

# --- 메인 실행 부분 ---
if __name__ == "__main__":
    # 파이썬 스크립트와 동일한 폴더에 있는 'sample.pdf' 파일을 처리합니다.
    pdf_file_path = "sample.pdf"

    detailed_info = extract_detailed_text_info(pdf_file_path)

    if detailed_info:
        print(f"\n--- '{pdf_file_path}' 파일 분석 결과 ---")
        for page_info in detailed_info:
            print(f"\n[ Page {page_info['page_number']} ]")
            if not page_info['text_spans']:
                print("  (페이지에서 텍스트를 찾을 수 없습니다)")
                continue
            
            for i, span in enumerate(page_info['text_spans']):
                print(f"  - Span {i+1}:")
                print(f"    - 글자    : '{span['text']}'")
                print(f"    - 크기    : {span['font_size']:.2f} pt")
                print(f"    - 색상(RGB): {span['color_rgb']}")
                print(f"    - 위치(bbox): {span['position_bbox']}")
    else:
        print(f"\n'{pdf_file_path}' 파일 처리 실패. 파일이름과 위치를 다시 확인해주세요.")