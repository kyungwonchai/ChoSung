leanConverter를 구현하는 방법을 누락했네요. 아래에 샘플 코드를 작성하겠습니다.

InverseBooleanConverter.cs

csharp

using System;
using System.Globalization;
using System.Windows.Data;

public class InverseBooleanConverter : IValueConverter
{
    public object Convert(object value, Type targetType, object parameter, CultureInfo culture)
    {
        if (value is bool booleanValue)
        {
            return !booleanValue;
        }
        return value;
    }

    public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)
    {
        if (value is bool booleanValue)
        {
            return !booleanValue;
        }
        return value;
    }
}

XAML에서의 사용

xaml

<Window.Resources>
    <local:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
</Window.Resources>

<Grid>
    <!-- ... -->
    <dxg:GridColumn Header="Locked">
        <dxg:GridColumn.CellTemplate>
            <DataTemplate>
                <CheckBox IsChecked="{Binding IsLocked, Converter={StaticResource InverseBooleanConverter}}" />
            </DataTemplate>
        </dxg:GridColumn.CellTemplate>
    </dxg:GridColumn>
    <!-- ... -->
</Grid>

이 컨버터는 boolean 값을 반대로 변환해 줍니다. 예를 들어, IsLocked이 true이면 CheckBox는 체크되지 않을 것이고, fals