PF의 DataGrid에서 각 컬럼의 폭을 타이트하게 조절하고, 텍스트 정렬, 행 높이, 글씨 크기를 설정하는 방법을 설명드리겠습니다.

주요 요구 사항:
컬럼 폭을 데이터에 맞게 자동 조정 (AutoFit).
텍스트 정렬 (가로/세로).
행 높이 조정.
글씨 크기 조정.
해결 방안:
컬럼 폭 자동 조정: Width="*", Width="Auto", 또는 특정 픽셀 값을 사용하여 설정.
텍스트 정렬: TextBlock의 TextAlignment와 VerticalAlignment를 사용.
행 높이: RowHeight 속성을 사용하여 설정.
글씨 크기: FontSize 속성을 사용하여 설정.
수정된 XAML 코드:
xml
코드 복사
<Window x:Class="YourNamespace.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="MainWindow" Height="450" Width="800">
    <Grid>
        <DataGrid Name="TaskDataGrid" ItemsSource="{Binding TaskList}" AutoGenerateColumns="False" 
                  IsReadOnly="True" CanUserSortColumns="False" Margin="10" 
                  RowHeight="30" FontSize="14" ColumnHeaderHeight="35">
            
            <!-- RowStyle to center text vertically -->
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Setter Property="VerticalContentAlignment" Value="Center" /> <!-- 세로 정렬 -->
                </Style>
            </DataGrid.RowStyle>

            <DataGrid.Columns>
                <!-- PO_NO 컬럼 (텍스트 가운데 정렬, 폭은 자동 조정) -->
                <DataGridTextColumn Header="PO NO" Binding="{Binding PO_NO}" Width="*" MinWidth="100">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextAlignment" Value="Center" /> <!-- 가로 정렬 -->
                            <Setter Property="VerticalAlignment" Value="Center" /> <!-- 세로 정렬 -->
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <!-- SequenceFlag 컬럼 (컬럼 색상만 변경, 가운데 정렬) -->
                <DataGridTextColumn Header="Sequence" Width="Auto" MinWidth="100">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextAlignment" Value="Center" /> <!-- 가로 정렬 -->
                            <Setter Property="VerticalAlignment" Value="Center" /> <!-- 세로 정렬 -->
                            <Setter Property="Background" Value="{Binding SequenceFlag, Converter={StaticResource SequenceToColorConverter}}" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                    <DataGridTextColumn.Binding>
                        <Binding Path="SequenceFlag" />
                    </DataGridTextColumn.Binding>
                </DataGridTextColumn>

                <!-- Function Status 컬럼 (도형 상태 표시) -->
                <DataGridTemplateColumn Header="Function Status" Width="*" MinWidth="150">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ItemsControl ItemsSource="{Binding FunctionStatusList}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <Ellipse Width="30" Height="30" Fill="{Binding StatusColor}" />
                                        </StackPanel>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</Window>
주요 속성 설명:
컬럼 폭 조정:

Width="*": 전체 가로 폭을 나눠서 사용. 최소 폭은 MinWidth로 지정해 기본 폭을 확보합니다.
Width="Auto": 데이터에 맞춰 폭을 자동 조정. 필요하면 MinWidth로 최소 폭을 설정합니다.
텍스트 정렬:

TextAlignment="Center": 텍스트를 가로로 중앙 정렬.
VerticalAlignment="Center": 텍스트를 세로로 중앙 정렬.
행 높이 설정:

RowHeight="30": 행의 높이를 30으로 고정.
ColumnHeaderHeight="35": 컬럼 헤더의 높이를 35로 설정.
글씨 크기 설정:

FontSize="14": 데이터 그리드 내의 기본 글씨 크기를 14로 설정.
행의 세로 정렬:

VerticalContentAlignment="Center": 모든 행의 내용이 세로로 중앙 정렬되게 설정.
추가 개선:
Function Status 컬럼:
도형 상태를 표시하는 컬럼이며, 폭을 자동 조정하면서 최소 폭을 확보(MinWidth="150").
Sequence 컬럼 색상:
시퀀스 값에 따라 배경색을 변경하려면 SequenceToColorConverter와 같은 값 변환기(Value Converter)를 사용하여 시퀀스 값에 따라 배경색을 설정할 수 있습니다.
값 변환기(옵션):
csharp
코드 복사
public class SequenceToColorConverter : IValueConverter
{
    public object Convert(object value, Type targetType, object parameter, System.Globalization.CultureInfo culture)
    {
        int sequence = (int)value;
        switch (sequence)
        {
            case 1:
                return Brushes.Yellow;
            case 2:
                return Brushes.SkyBlue;
            case 3:
                return Brushes.LightGreen;
            default:
                return Brushes.White;
        }
    }

    public object ConvertBack(object value, Type targetType, object parameter, System.Globalization.CultureInfo culture)
    {
        throw new NotImplementedException();
    }
}
사용법:
위의 SequenceToColorConverter를 사용하려면, XAML의 리소스에 등록해줘야 합니다:
xml
코드 복사
<Window.Resources>
    <local:SequenceToColorConverter x:Key="SequenceToColorConverter" />
</Window.Resources>
정리:
이 코드로 컬럼 폭을 자동으로 조정하고, 텍스트를 가로/세로 중앙 정렬하며, 행의 높이와 글씨 크기를 지정할 수 있습