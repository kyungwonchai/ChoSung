serControl이 모든 항목에 대해 "Unknown"으로 표시되는 문제는 데이터 바인딩이 올바르게 설정되지 않았기 때문일 수 있습니다. UserControl에서 열거형을 사용한 데이터 바인딩이 제대로 이루어지도록 하기 위해서는 DataContext와 바인딩 설정이 올바르게 되어야 합니다.

1. StatusIndicatorControl 수정하기
StatusIndicatorControl에서 ServiceName과 StatusDescription 속성을 올바르게 바인딩하도록 수정해야 합니다.

수정된 StatusIndicatorControl.xaml.cs
csharp
코드 복사
using System.Windows;
using System.Windows.Controls;
using System.Windows.Media;
using RouterMiddleACR.Models;

namespace RouterMiddleACR.Controls
{
    public partial class StatusIndicatorControl : UserControl
    {
        public StatusIndicatorControl()
        {
            InitializeComponent();
        }

        // Status 속성 정의 (DependencyProperty)
        public static readonly DependencyProperty StatusProperty =
            DependencyProperty.Register("Status", typeof(ServiceStatusType), typeof(StatusIndicatorControl), new PropertyMetadata(ServiceStatusType.Unknown, OnStatusChanged));

        // ServiceName 속성 정의 (DependencyProperty)
        public static readonly DependencyProperty ServiceNameProperty =
            DependencyProperty.Register("ServiceName", typeof(ServiceNameType), typeof(StatusIndicatorControl), new PropertyMetadata(ServiceNameType.Service1));

        // StatusDescription 속성 정의 (DependencyProperty)
        public static readonly DependencyProperty StatusDescriptionProperty =
            DependencyProperty.Register("StatusDescription", typeof(string), typeof(StatusIndicatorControl), new PropertyMetadata(string.Empty));

        // Status 속성 변경 시 호출되는 콜백 메서드
        private static void OnStatusChanged(DependencyObject d, DependencyPropertyChangedEventArgs e)
        {
            var control = d as StatusIndicatorControl;
            if (control != null)
            {
                // 상태에 따른 색상 변경
                control.IndicatorEllipse.Fill = control.GetBrushForStatus((ServiceStatusType)e.NewValue);
            }
        }

        // 상태에 따른 색상을 반환하는 메서드
        private Brush GetBrushForStatus(ServiceStatusType status)
        {
            switch (status)
            {
                case ServiceStatusType.Running:
                    return Brushes.Green; // 실행 중일 때 초록색
                case ServiceStatusType.Stopped:
                    return Brushes.Red; // 중지 상태일 때 빨간색
                case ServiceStatusType.Paused:
                    return Brushes.Yellow; // 일시 중지일 때 노란색
                case ServiceStatusType.Error:
                    return Brushes.DarkRed; // 오류 상태일 때 진한 빨간색
                case ServiceStatusType.Restarting:
                    return Brushes.Orange; // 재시작 중일 때 주황색
                default:
                    return Brushes.Gray; // 알 수 없는 상태일 때 회색
            }
        }

        // Status 속성
        public ServiceStatusType Status
        {
            get => (ServiceStatusType)GetValue(StatusProperty);
            set => SetValue(StatusProperty, value);
        }

        // ServiceName 속성
        public ServiceNameType ServiceName
        {
            get => (ServiceNameType)GetValue(ServiceNameProperty);
            set => SetValue(ServiceNameProperty, value);
        }

        // StatusDescription 속성
        public string StatusDescription
        {
            get => (string)GetValue(StatusDescriptionProperty);
            set => SetValue(StatusDescriptionProperty, value);
        }
    }
}
2. StatusIndicatorControl.xaml 수정하기
StatusIndicatorControl.xaml 파일에서 텍스트가 올바르게 표시되도록 바인딩을 설정합니다.

수정된 StatusIndicatorControl.xaml
xml
코드 복사
<UserControl x:Class="RouterMiddleACR.Controls.StatusIndicatorControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             mc:Ignorable="d"
             d:DesignHeight="100" d:DesignWidth="100">
    <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
        <!-- 상태를 표시할 원형 도형 -->
        <Ellipse x:Name="IndicatorEllipse" Width="30" Height="30" Fill="Gray" />
        <!-- 서비스 이름을 표시할 텍스트 블록 -->
        <TextBlock Text="{Binding ServiceName, RelativeSource={RelativeSource AncestorType=UserControl}}" 
                   FontSize="14" FontWeight="Bold" HorizontalAlignment="Center" Margin="5"/>
        <!-- 상태 설명을 표시할 텍스트 블록 -->
        <TextBlock Text="{Binding StatusDescription, RelativeSource={RelativeSource AncestorType=UserControl}}" 
                   FontSize="12" HorizontalAlignment="Center" Margin="5"/>
    </StackPanel>
</UserControl>
3. MainWindow.xaml에서 수정
MainWindow.xaml 파일에서 ItemsControl의 ItemTemplate에 있는 StatusIndicatorControl의 바인딩을 적절하게 설정합니다.

수정된 MainWindow.xaml
xml
코드 복사
<Window x:Class="RouterMiddleACR.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:RouterMiddleACR.Controls"
        Title="RouterMiddleACR" Height="450" Width="800">
    <Grid>
        <!-- ItemsControl을 사용하여 서비스 상태를 동적으로 표시 -->
        <ItemsControl ItemsSource="{Binding ServiceStatuses}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <!-- 유저 컨트롤 사용 -->
                    <local:StatusIndicatorControl 
                        Status="{Binding Status}" 
                        ServiceName="{Binding ServiceName}" 
                        StatusDescription="{Binding Description}" />
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </Grid>
</Window>
요약
DependencyProperty 설정: Status, ServiceName, StatusDescription 속성을 DependencyProperty로 설정하여 바인딩이 제대로 이루어지도록 했습니다.

RelativeSource 바인딩: TextBlock 요소에서 RelativeSource를 사용하여 UserControl의 속성에 바인딩하여 올바른 값이 표시되도록 수정했습니다.

MainWindow.xaml의 바인딩: ItemsControl에서 ServiceStatuses 컬렉션의 각 항목을 StatusIndicatorControl에 바인딩할 때, 서비스 상태와 이름, 설명이 제대로 바인딩되도록 설정했습니다.

이제 ServiceName과 StatusDescription이 올바르게 표