메인뷰모델 값을 필요할 때 읽어오는 방식으로 심플하게 처리하려면, 메인뷰모델 객체를 전달하거나 싱글톤 패턴으로 접근할 수 있습니다. 여기서는 심플한 접근 방식을 위주로 설명합니다.

1. 메인뷰모델 객체를 직접 참조해서 값 읽기
메인뷰모델의 특정 값을 다른 클래스에서 필요할 때 가져오는 방식입니다.

MainViewModel.cs
csharp
코드 복사
public class MainViewModel
{
    public bool IsTaskRunning { get; set; } = false;
}
AnotherClass.cs
csharp
코드 복사
public class AnotherClass
{
    private readonly MainViewModel _mainViewModel;

    public AnotherClass(MainViewModel mainViewModel)
    {
        _mainViewModel = mainViewModel;
    }

    public void CheckTaskStatus()
    {
        bool isTaskRunning = _mainViewModel.IsTaskRunning;
        Console.WriteLine($"현재 작업 상태: {isTaskRunning}");
    }
}
사용 방법
csharp
코드 복사
var mainViewModel = new MainViewModel();
var anotherClass = new AnotherClass(mainViewModel);

// 값 읽기
anotherClass.CheckTaskStatus();

// 값 변경 후 확인
mainViewModel.IsTaskRunning = true;
anotherClass.CheckTaskStatus();
2. 싱글톤 패턴으로 메인뷰모델 값 접근
싱글톤 패턴을 사용하면 어디서나 메인뷰모델 값에 접근할 수 있습니다.

MainViewModel.cs
csharp
코드 복사
public class MainViewModel
{
    private static MainViewModel _instance;
    public static MainViewModel Instance => _instance ??= new MainViewModel();

    public bool IsTaskRunning { get; set; } = false;

    private MainViewModel() { }
}
AnotherClass.cs
csharp
코드 복사
public class AnotherClass
{
    public void CheckTaskStatus()
    {
        bool isTaskRunning = MainViewModel.Instance.IsTaskRunning;
        Console.WriteLine($"싱글톤으로 가져온 작업 상태: {isTaskRunning}");
    }
}
사용 방법
csharp
코드 복사
var anotherClass = new AnotherClass();

// 값 읽기
anotherClass.CheckTaskStatus();

// 값 변경 후 확인
MainViewModel.Instance.IsTaskRunning = true;
anotherClass.CheckTaskStatus();
3. 메인뷰모델의 특정 값만 전달
전체 메인뷰모델이 아닌, 필요한 값만 전달하여 관리할 수도 있습니다.

MainViewModel.cs
csharp
코드 복사
public class MainViewModel
{
    public bool IsTaskRunning { get; set; } = false;
}
AnotherClass.cs
csharp
코드 복사
public class AnotherClass
{
    private Func<bool> _getIsTaskRunning;

    public void SetValueProvider(Func<bool> getValue)
    {
        _getIsTaskRunning = getValue;
    }

    public void CheckTaskStatus()
    {
        if (_getIsTaskRunning != null)
        {
            bool isTaskRunning = _getIsTaskRunning();
            Console.WriteLine($"작업 상태: {isTaskRunning}");
        }
        else
        {
            Console.WriteLine("작업 상태 값을 제공하지 않았습니다.");
        }
    }
}
사용 방법
csharp
코드 복사
var mainViewModel = new MainViewModel();
var anotherClass = new AnotherClass();

// 값 제공 함수 연결
anotherClass.SetValueProvider(() => mainViewModel.IsTaskRunning);

// 값 읽기
anotherClass.CheckTaskStatus();

// 값 변경 후 확인
mainViewModel.IsTaskRunning = true;
anotherClass.CheckTaskStatus();
권장 방법
간단히 읽어오기: 메인뷰모델 객체를 직접 전달 (1번).
글로벌 접근: 싱글톤으로 메인뷰모델 관리 (2번).