DevExpress에서 버튼, 라벨, 텍스트박스를 푸르스름하고 밝은 계열의 스타일로 전역 테마처럼 적용하려면 Application.Resources에 스타일을 정의해서 모든 컨트롤에 적용하는 방식이 좋아요.

여기 샘플 코드 줄게요:

1. App.xaml에 전역 스타일 정의하기
xml
코드 복사
<Application x:Class="YourNamespace.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        <!-- 기본 푸른색 계열 브러시 정의 -->
        <SolidColorBrush x:Key="PrimaryBlue" Color="#FFCCE7FF" />
        <SolidColorBrush x:Key="AccentBlue" Color="#FF90C9FF" />
        <SolidColorBrush x:Key="TextDark" Color="#FF003366" />
        <SolidColorBrush x:Key="BorderBlue" Color="#FF70AEDD" />

        <!-- 버튼 스타일 -->
        <Style TargetType="Button">
            <Setter Property="Background" Value="{StaticResource PrimaryBlue}" />
            <Setter Property="Foreground" Value="{StaticResource TextDark}" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="Padding" Value="10,5" />
            <Setter Property="BorderBrush" Value="{StaticResource BorderBlue}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="5">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Margin="{TemplateBinding Padding}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- 라벨 스타일 -->
        <Style TargetType="Label">
            <Setter Property="Foreground" Value="{StaticResource TextDark}" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="Margin" Value="5,2" />
        </Style>

        <!-- 텍스트박스 스타일 -->
        <Style TargetType="TextBox">
            <Setter Property="Background" Value="White" />
            <Setter Property="BorderBrush" Value="{StaticResource BorderBlue}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Padding" Value="5" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="Foreground" Value="{StaticResource TextDark}" />
        </Style>

    </Application.Resources>
</Application>
2. MainWindow.xaml 샘플
xml
코드 복사
<dx:DXWindow x:Class="YourNamespace.MainWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
             Title="샘플 화면" Width="400" Height="250">
    <StackPanel Margin="20">
        <Label Content="아이디" />
        <TextBox Width="200" />
        
        <Label Content="비밀번호" />
        <TextBox Width="200" />
        
        <Button Content="로그인" Width="200" Margin="0,10,0,0" />
    </StackPanel>
</dx:DXWindow>
이렇게 하면 전역 스타일이기 때문에 이후에 Button, Label, TextBox를 어디서 쓰든 자동으로 이 스타일이 적용돼요.
추가로 DevExpress 테마도 밝은 계열로 하고 싶으면 DXThemeManager에서 밝은 테마로 바꿔줄 수 있어요:

3. DevExpress 테마 설정 (예: Office2019Colorful)
csharp
코드 복사
DevExpress.Xpf.Core.ApplicationThemeHelper.ApplicationThemeName = Theme.Office2019ColorfulName;