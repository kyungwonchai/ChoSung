통해 View_PLCErrjoin 데이터를 조회하고, HTML로 표시하며 엑셀 다운로드 기능을 제공하는 코드입니다.

Flask 애플리케이션 코드
python
코드 복사
from flask import Flask, render_template, request, send_file
import pymssql
import pandas as pd
import os

app = Flask(__name__)

# MSSQL 데이터베이스 연결 정보
DB_CONFIG = {
    "server": "YOUR_SERVER",
    "database": "YOUR_DATABASE",
    "username": "YOUR_USERNAME",
    "password": "YOUR_PASSWORD"
}

# MSSQL 연결 함수
def get_db_connection():
    return pymssql.connect(
        server=DB_CONFIG['server'],
        user=DB_CONFIG['username'],
        password=DB_CONFIG['password'],
        database=DB_CONFIG['database']
    )

# /PLCErr 페이지
@app.route('/PLCErr', methods=['GET', 'POST'])
def plcerr():
    if request.method == 'POST':  # 엑셀로 내보내기 요청
        # 데이터 조회
        conn = get_db_connection()
        query = """
            SELECT 
                linename AS '라인명',
                errN AS '에러번호',
                errValue AS '에러값',
                CONVERT(VARCHAR, Time1, 121) AS '시간'
            FROM View_PLCErrjoin
        """
        df = pd.read_sql(query, conn)
        conn.close()

        # 엑셀 파일 생성
        file_path = os.path.join(os.getcwd(), 'plcerr_export.xlsx')
        df.to_excel(file_path, index=False, engine='openpyxl')

        # 파일 다운로드 제공
        return send_file(file_path, as_attachment=True)

    # GET 요청 - 데이터 조회 및 렌더링
    conn = get_db_connection()
    query = """
        SELECT 
            linename AS '라인명',
            errN AS '에러번호',
            errValue AS '에러값',
            CONVERT(VARCHAR, Time1, 121) AS '시간'
        FROM View_PLCErrjoin
    """
    df = pd.read_sql(query, conn)
    conn.close()

    # 데이터를 HTML에 전달
    return render_template('plcerr.html', data=df.to_dict(orient='records'))

# Flask 실행
if __name__ == '__main__':
    app.run(debug=True)
HTML 템플릿 (templates/plcerr.html)
html
코드 복사
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>PLC Error Viewer</title>
    <style>
        body {
            background-color: #121212; /* 다크 배경 */
            color: #e0e0e0; /* 텍스트 색상 */
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
        }
        h1 {
            text-align: center;
            color: #00bcd4; /* 연한 청록색 */
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin: 20px 0;
            background-color: #1e1e1e; /* 테이블 배경 */
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
        }
        thead {
            background-color: #004d66; /* 헤더 색상 */
        }
        thead th {
            color: #ffffff;
            padding: 12px;
            text-align: left;
            font-size: 16px;
        }
        tbody tr {
            border-bottom: 1px solid #333333;
        }
        tbody tr:nth-child(even) {
            background-color: #2a2a2a;
        }
        tbody td {
            padding: 10px;
            color: #cccccc;
        }
        tbody tr:hover {
            background-color: #3d3d3d;
        }
        button {
            display: block;
            margin: 20px auto;
            padding: 10px 20px;
            font-size: 16px;
            color: #ffffff;
            background-color: #00bcd4;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s;
        }
        button:hover {
            background-color: #008394;
        }
    </style>
</head>
<body>
    <h1>PLC Error Logs</h1>
    <table>
        <thead>
            <tr>
                <th>라인명</th>
                <th>에러번호</th>
                <th>에러값</th>
                <th>시간</th>
            </tr>
        </thead>
        <tbody>
            {% for row in data %}
                <tr>
                    <td>{{ row['라인명'] }}</td>
                    <td>{{ row['에러번호'] }}</td>
                    <td>{{ row['에러값'] }}</td>
                    <td>{{ row['시간'] }}</td>
                </tr>
            {% endfor %}
        </tbody>
    </table>

    <form method="POST" action="/PLCErr">
        <button type="submit">엑셀로 내보내기</button>
    </form>
</body>
</html>
주요 기능
데이터 조회:

MSSQL의 View_PLCErrjoin 뷰에서 데이터를 조회합니다.
컬럼은 라인명, 에러번호, 에러값, 시간으로 조회됩니다.
시간은 yyyy-MM-dd HH:mm:ss.fff 형식으로 변환됩니다.
HTML 렌더링:

조회된 데이터를 HTML 테이블로 렌더링합니다.
테이블은 다크 테마와 연한 푸른 헤더를 갖도록 스타일링했습니다.
엑셀 다운로드:

버튼 클릭 시 데이터가 엑셀 파일로 변환되어 다운로드됩니다.
파일명은 plcerr_export.xlsx이며, 현재 디렉토리에 저장됩니다.
실행 방법
Flask 애플리케이션을 실행합니다:

bash
코드 복사
python app.py
브라우저에서 /PLCErr 경로로 이동합니다:

arduino
코드 복사
http://127.0.0.1:5000/PLCErr
페이지에서 데이터를 확인하고, "엑셀로 내보내기" 버튼을 클릭하면 엑셀 파일이 다운로드됩니다.
