시스템에 설치된 ODBC 드라이버 목록을 출력하는 방법을 설명드리겠습니다. 이를 통해 사용 가능한 Microsoft Access 드라이버 이름을 확인할 수 있습니다. 다음 코드를 실행하여 시스템에 설치된 모든 ODBC 드라이버를 출력할 수 있습니다.

ODBC 드라이버 목록 출력
다음 코드를 사용하여 시스템에 설치된 ODBC 드라이버 목록을 확인하세요:

python
코드 복사
import pyodbc

# ODBC 드라이버 목록을 가져옴
drivers = pyodbc.drivers()

# 설치된 드라이버 목록 출력
print("Available ODBC Drivers:")
for driver in drivers:
    print(driver)
이 코드를 실행하면 시스템에 설치된 모든 ODBC 드라이버의 목록이 출력됩니다. 이 목록에서 Microsoft Access와 관련된 드라이버를 찾아 사용할 수 있습니다.

전체 코드 예제
다음은 ODBC 드라이버 목록을 출력한 후, 적절한 드라이버를 선택하여 .mdb 파일에 연결하는 전체 코드 예제입니다:

python
코드 복사
import pyodbc

# ODBC 드라이버 목록을 가져옴
drivers = pyodbc.drivers()

# 설치된 드라이버 목록 출력
print("Available ODBC Drivers:")
for driver in drivers:
    print(driver)

# 데이터베이스 파일 경로
db_file_path = 'path_to_your_database.mdb'

# 사용 가능한 드라이버 중 하나를 선택 (예: 'Microsoft Access Driver (*.mdb)')
# 드라이버 이름은 위에서 출력된 목록 중 하나를 사용
driver_name = 'Microsoft Access Driver (*.mdb, *.accdb)'  # 실제 사용 가능한 드라이버로 변경

# ODBC 연결 문자열
conn_str = (
    f'DRIVER={{{driver_name}}};'
    f'DBQ={db_file_path};'
)

try:
    # 데이터베이스에 연결
    conn = pyodbc.connect(conn_str)
    cursor = conn.cursor()

    # 예시 쿼리 실행 (테이블 목록 가져오기)
    cursor.execute("SELECT * FROM TableName")

    # 결과를 가져와서 출력
    rows = cursor.fetchall()
    for row in rows:
        print(row)

except pyodbc.Error as e:
    print("Error:", e)

finally:
    # 연결 닫기
    if 'cursor' in locals():
        cursor.close()
    if 'conn' in locals():
        conn.close()
코드 설명
pyodbc.drivers()를 사용하여 시스템에 설치된 모든 ODBC 드라이버의 목록을 가져옵니다.
이 목록을 출력하여 사용 가능한 드라이버를 확인합니다.
driver_name 변수에 사용할 드라이버 이름을 설정합니다. 이 드라이버 이름은 출력된 목록 중 하나를 선택해야 합니다.
pyodbc.connect() 함수를 사용하여 데이터베이스에 연결합니다.
이 코드를 실행하면, 시스템에 설치된 ODBC 드라이버 목록을 확인할 수 있으며, 적절한 드라이버를 선택하여 .mdb 