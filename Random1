로이드 시스템에서 다른 앱에 자동으로 입력을 하는 것은 Accessibility Service를 사용해야 합니다. Accessibility Service를 사용하여 특정 애플리케이션의 컨트롤에 접근하고 입력을 할 수 있습니다. 이를 위해서는 해당 서비스를 구성하고, 사용자의 동의를 얻어 서비스를 활성화해야 합니다.

다음은 Accessibility Service를 사용하여 다른 앱의 특정 입력 필드에 값을 자동으로 입력하는 기본 예제입니다. 이 예제는 서비스를 설정하고, 특정 UI 이벤트에 반응하여 자동으로 텍스트를 입력하는 방법을 보여줍니다.

AndroidManifest.xml 수정

xml
코드 복사
<manifest xmlns:android="http://schemas.android.com/apk/res/android">
    <application
        ...>
        <service
            android:name=".MyAccessibilityService"
            android:permission="android.permission.BIND_ACCESSIBILITY_SERVICE">
            <intent-filter>
                <action android:name="android.accessibilityservice.AccessibilityService" />
            </intent-filter>

            <meta-data
                android:name="android.accessibilityservice"
                android:resource="@xml/accessibility_service_config" />
        </service>
    </application>
</manifest>
accessibility_service_config.xml (res/xml 폴더 내부)

xml
코드 복사
<accessibility-service xmlns:android="http://schemas.android.com/apk/res/android"
                       android:description="@string/accessibility_service_description"
                       android:packageNames="com.example.otherapp"  <!-- 대상 앱의 패키지 이름 -->
                       android:accessibilityEventTypes="typeAllMask"
                       android:accessibilityFeedbackType="feedbackSpoken"
                       android:notificationTimeout="100"
                       android:accessibilityFlags="flagDefault"
                       android:canRetrieveWindowContent="true"
                       android:canRequestFilterKeyEvents="true" />
MyAccessibilityService.kt

kotlin
코드 복사
import android.accessibilityservice.AccessibilityService
import android.view.accessibility.AccessibilityEvent
import android.view.accessibility.AccessibilityNodeInfo

class MyAccessibilityService : AccessibilityService() {

    override fun onAccessibilityEvent(event: AccessibilityEvent?) {
        if (event?.eventType == AccessibilityEvent.TYPE_WINDOW_CONTENT_CHANGED) {
            val source: AccessibilityNodeInfo? = event.source ?: return

            // 특정 요소를 찾아 텍스트를 입력합니다. (예: EditText)
            if (source.className == "android.widget.EditText") {
                val arguments = Bundle()
                arguments.putCharSequence(
                    AccessibilityNodeInfo.ACTION_ARGUMENT_SET_TEXT_CHARSEQUENCE,
                    "Hello, this is an automated input!"
                )
                source.performAction(AccessibilityNodeInfo.ACTION_SET_TEXT, arguments)
            }
        }
    }

    override fun onInterrupt() {
        // 이 메서드는 서비스가 중단될 때 호출됩니다.
    }

    override fun onServiceConnected() {
        super.onServiceConnected()
        // 서비스가 연결되었을 때 초기 설정을 수행할 수 있습니다.
    }
}
이 코드는 Accessibility Service를 사용하여 특정 앱의 EditText 컨트롤에 자동으로 "Hello, this is an automated input!"라는 텍스트를 입력합니다. 이 예제를 사용하기 전에 Accessibility Service가 활성화되어 있어야 하며, 사용자가 이 서비스를 활성화하도록 안내해야 합니다. 또한, 대상 앱의 패키지 이름과 UI 구조에 맞게 코드를 조정할 필요가 있습