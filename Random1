DevExpress WinForms GridControl에서 날짜1 컬럼을 내림차순으로 정렬하고, 컬럼3의 값에 따라 행 색을 변경하는 방법을 설명드리겠습니다.

GridControl 설정: 날짜1 컬럼 내림차순 정렬
컬럼3의 값에 따른 행 색 변경
1. GridControl 설정: 날짜1 컬럼 내림차순 정렬
먼저, 날짜1 컬럼을 내림차순으로 정렬하는 코드를 작성합니다.

csharp
코드 복사
using DevExpress.XtraGrid;
using DevExpress.XtraGrid.Views.Grid;

// GridControl과 GridView를 초기화합니다.
GridControl gridControl = new GridControl();
GridView gridView = new GridView(gridControl);
gridControl.MainView = gridView;
gridControl.Dock = DockStyle.Fill;
this.Controls.Add(gridControl);

// 데이터 소스를 설정합니다.
// 예제 데이터 소스
DataTable dataTable = new DataTable();
dataTable.Columns.Add("날짜1", typeof(DateTime));
dataTable.Columns.Add("컬럼2", typeof(string));
dataTable.Columns.Add("컬럼3", typeof(int));

dataTable.Rows.Add(DateTime.Now, "Test1", 1);
dataTable.Rows.Add(DateTime.Now.AddDays(-1), "Test2", 2);
dataTable.Rows.Add(DateTime.Now.AddDays(-2), "Test3", 3);

gridControl.DataSource = dataTable;

// 날짜1 컬럼을 내림차순으로 정렬합니다.
gridView.Columns["날짜1"].SortOrder = DevExpress.Data.ColumnSortOrder.Descending;
2. 컬럼3의 값에 따른 행 색 변경
컬럼3의 값에 따라 행 색을 변경하려면 RowStyle 이벤트를 사용합니다.

csharp
코드 복사
// GridView의 RowStyle 이벤트 핸들러를 추가합니다.
gridView.RowStyle += GridView_RowStyle;

// RowStyle 이벤트 핸들러를 정의합니다.
private void GridView_RowStyle(object sender, RowStyleEventArgs e)
{
    GridView view = sender as GridView;
    if (view == null) return;

    // 현재 행의 컬럼3 값 가져오기
    int column3Value = Convert.ToInt32(view.GetRowCellValue(e.RowHandle, view.Columns["컬럼3"]));

    // 컬럼3의 값에 따라 행 색상 변경
    if (column3Value == 1)
    {
        e.Appearance.BackColor = Color.Yellow; // 컬럼3의 값이 1이면 노랑색
    }
    else if (column3Value >= 2)
    {
        e.Appearance.BackColor = Color.Orange; // 컬럼3의 값이 2 이상이면 주황색
    }
}
전체 코드 예제
위의 두 코드를 하나로 합쳐서 전체 코드를 구성하면 다음과 같습니다.

csharp
코드 복사
using DevExpress.XtraGrid;
using DevExpress.XtraGrid.Views.Grid;
using System;
using System.Data;
using System.Drawing;
using System.Windows.Forms;

public partial class Form1 : Form
{
    public Form1()
    {
        InitializeComponent();

        // GridControl과 GridView를 초기화합니다.
        GridControl gridControl = new GridControl();
        GridView gridView = new GridView(gridControl);
        gridControl.MainView = gridView;
        gridControl.Dock = DockStyle.Fill;
        this.Controls.Add(gridControl);

        // 데이터 소스를 설정합니다.
        DataTable dataTable = new DataTable();
        dataTable.Columns.Add("날짜1", typeof(DateTime));
        dataTable.Columns.Add("컬럼2", typeof(string));
        dataTable.Columns.Add("컬럼3", typeof(int));

        dataTable.Rows.Add(DateTime.Now, "Test1", 1);
        dataTable.Rows.Add(DateTime.Now.AddDays(-1), "Test2", 2);
        dataTable.Rows.Add(DateTime.Now.AddDays(-2), "Test3", 3);

        gridControl.DataSource = dataTable;

        // 날짜1 컬럼을 내림차순으로 정렬합니다.
        gridView.Columns["날짜1"].SortOrder = DevExpress.Data.ColumnSortOrder.Descending;

        // GridView의 RowStyle 이벤트 핸들러를 추가합니다.
        gridView.RowStyle += GridView_RowStyle;
    }

    // RowStyle 이벤트 핸들러를 정의합니다.
    private void GridView_RowStyle(object sender, RowStyleEventArgs e)
    {
        GridView view = sender as GridView;
        if (view == null) return;

        // 현재 행의 컬럼3 값 가져오기
        int column3Value = Convert.ToInt32(view.GetRowCellValue(e.RowHandle, view.Columns["컬럼3"]));

        // 컬럼3의 값에 따라 행 색상 변경
        if (column3Value == 1)
        {
            e.Appearance.BackColor = Color.Yellow; // 컬럼3의 값이 1이면 노랑색
        }
        else if (column3Value >= 2)
        {
            e.Appearance.BackColor = Color.Orange; // 컬럼3의 값이 2 이상이면 주황색
        }
    }
}
이 코드는 DevExpress GridControl을 사용하여 날짜1 컬럼을 내림차순으로 정렬하고, 컬럼3의 값에 따라 행 색상을 변경하는 전체 예제입니다. 위 코드를 Form1.cs에 추가하면 원하는 기능을 구현할 수 있습니다