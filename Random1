import bpy
from math import radians

# 기존 씬의 모든 오브젝트 삭제
bpy.ops.object.select_all(action='SELECT')
bpy.ops.object.delete(use_global=False)

# 텍스트 오브젝트 추가
bpy.ops.object.text_add(location=(0, 0, 0))
text_obj = bpy.context.object
text_obj.data.body = "Router ACR Middleware"  # 텍스트 내용 설정
text_obj.data.size = 2.0  # 텍스트 크기 설정

# 3D 효과를 위한 두께 추가
text_obj.data.extrude = 0.2
text_obj.data.bevel_depth = 0.02  # 모서리 둥글게

# 재질 추가 및 설정
mat = bpy.data.materials.new(name="TextMaterial")
mat.use_nodes = True
bsdf = mat.node_tree.nodes["Principled BSDF"]
bsdf.inputs['Base Color'].default_value = (1, 0.84, 0, 1)  # 황금색
bsdf.inputs['Roughness'].default_value = 0.3
text_obj.data.materials.append(mat)

# 카메라 추가 및 위치 설정 (텍스트 전체가 화면에 나오게 설정)
bpy.ops.object.camera_add(location=(0, -12, 2))
camera = bpy.context.object
camera.rotation_euler = (radians(85), 0, radians(10))  # 살짝 좌측에서 정면을 향하게 설정
bpy.context.scene.camera = camera

# 황금 시간대의 따뜻한 조명 설정
# 첫 번째 메인 광원 (햇빛처럼 따뜻한 느낌)
bpy.ops.object.light_add(type='SUN', location=(5, -5, 10))
sun_light = bpy.context.object
sun_light.data.energy = 5  # 광원 세기
sun_light.data.color = (1, 0.75, 0.5)  # 따뜻한 색상
sun_light.rotation_euler = (radians(45), radians(-20), 0)

# 보조 광원 (그림자 강조)
bpy.ops.object.light_add(type='POINT', location=(-5, -5, 3))
point_light = bpy.context.object
point_light.data.energy = 300  # 강한 보조광
point_light.data.color = (1, 0.75, 0.5)

# 배경 환경 조명 설정 (어두운 배경)
bpy.context.scene.world.use_nodes = True
bg = bpy.context.scene.world.node_tree.nodes['Background']
bg.inputs['Color'].default_value = (0.05, 0.05, 0.1, 1)
bg.inputs['Strength'].default_value = 0.5

# 렌더링 설정
bpy.context.scene.render.engine = 'CYCLES'
bpy.context.scene.cycles.samples = 500
bpy.context.scene.render.resolution_x = 1920
bpy.context.scene.render.resolution_y = 1080

# 파일 저장 경로 설정
bpy.context.scene.render.filepath = "C:/Your/Path/router_acr_middleware_render.png"

# 렌더링 실행
bpy.ops.render.render(write_still=True)
