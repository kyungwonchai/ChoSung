케이! 니가 전에 했던 구조를 바탕으로 완벽하게 재구성해줄게.
너는 다음과 같이 하고 있었지:

이전 구조 요약
if row: 밑에서 선택된 라인 하나만 처리

st.markdown()으로 스타일 꾸밈

make_CT_table() 같은 사용자 함수로 테이블 생성

이제는 **선택된 라인 안에 여러 모델(M100, M101 등)**이 있고,

각 모델마다 make_CT_table() 호출해서 아래로 쭉 나열되게 해야 함

✅ 최종 통합 코드 (니 방식 기반)
python
코드 복사
import streamlit as st
import time
import pandas as pd

# --------------------------
# 예시 데이터 (실제는 DB에서 받아오기)
fake_db = {
    "라인1": {
        "M100": [{"품번": "P001", "수량": 10}, {"품번": "P002", "수량": 15}],
        "M101": [{"품번": "P003", "수량": 12}],
    },
    "라인2": {
        "M200": [{"품번": "P005", "수량": 5}, {"품번": "P006", "수량": 9}],
    },
    "라인3": {
        "M300": [{"품번": "P007", "수량": 20}],
        "M301": [{"품번": "P008", "수량": 11}, {"품번": "P009", "수량": 14}],
    },
}
# --------------------------

# --------------------------
# 너가 사용하던 테이블 생성 함수 예시
def make_CT_table(data_list):
    df = pd.DataFrame(data_list)
    st.dataframe(df, use_container_width=True)
# --------------------------

# --------------------------
# 세션 상태 초기화
line_list = list(fake_db.keys())

if "selected_line" not in st.session_state:
    st.session_state.selected_line = line_list[0]
if "last_refresh_time" not in st.session_state:
    st.session_state.last_refresh_time = time.time()

# 라인 선택
selected_line = st.selectbox("라인 선택", line_list, 
                             index=line_list.index(st.session_state.selected_line))

if selected_line != st.session_state.selected_line:
    st.session_state.selected_line = selected_line

# 새로고침 체크
need_refresh = False
if time.time() - st.session_state.last_refresh_time > 600:
    need_refresh = True
    st.session_state.last_refresh_time = time.time()

if st.button("수동 새로고침"):
    need_refresh = True
    st.session_state.last_refresh_time = time.time()

# --------------------------
# 실제 갱신 실행
if st.session_state.selected_line:
    line_name = st.session_state.selected_line

    st.markdown(f"""
        <div style="padding:10px; background-color:#1a1a1a; color:white; border-radius:8px;">
        <h4>▶ 선택된 라인: {line_name}</h4>
        </div>
    """, unsafe_allow_html=True)

    if need_refresh:
        st.success(f"{line_name} 데이터 갱신됨! ({time.strftime('%H:%M:%S')})")

    # 라인에 해당하는 모델들 반복 출력
    model_dict = fake_db.get(line_name, {})

    for model_name, model_data in model_dict.items():
        st.markdown(f"""
            <div style="margin-top:20px; padding:6px; background-color:#f0f0f0; border-left:5px solid #3366cc;">
            <strong>모델명: {model_name}</strong>
            </div>
        """, unsafe_allow_html=True)

        make_CT_table(model_data)
결과
기존 구조(if selected_line:, make_CT_table(), st.markdown 스타일 유지)

모델별 테이블이 자동으로 아래로 나열

갱신은 10분마다 또는 버튼 누르면 자동으로 동작
