# scontrol_flask_web/config.py
import os
from dotenv import load_dotenv

basedir = os.path.abspath(os.path.dirname(__file__))
load_dotenv(os.path.join(basedir, '.env'))

class Config:
    SECRET_KEY = os.environ.get('SECRET_KEY') or '임의의-매우-안전한-비밀키로-변경하세요'
    
    DB_USER = os.environ.get('DB_USER') or 'aaaaa'
    DB_PASSWORD = os.environ.get('DB_PASSWORD') or 'bbbbb'
    DB_SERVER_ADDRESS = os.environ.get('DB_SERVER_ADDRESS') or 'YOUR_MSSQL_SERVER_INSTANCE'
    DB_PORT = os.environ.get('DB_PORT') or '5555' # MSSQL 포트
    DB_NAME = os.environ.get('DB_NAME') or 'SControlFlaskDB'
    
    # ODBC_DRIVER 변수는 pymssql 사용 시 필요 없습니다.
    # ODBC_DRIVER = os.environ.get('ODBC_DRIVER') or 'ODBC Driver 17 for SQL Server' 

    # pymssql 연결 문자열 형식: mssql+pymssql://<user>:<password>@<host>:<port>/<dbname>
    # DB_SERVER_ADDRESS에 이미 포트가 포함되어 있다면 DB_PORT 부분은 생략될 수 있습니다.
    # 여기서는 명시적으로 host:port 형태로 조합합니다.
    SQLALCHEMY_DATABASE_URI = os.environ.get('DATABASE_URL') or \
        f'mssql+pymssql://{DB_USER}:{DB_PASSWORD}@{DB_SERVER_ADDRESS}:{DB_PORT}/{DB_NAME}'

    SQLALCHEMY_TRACK_MODIFICATIONS = False

    ADMIN_IPS = [
        '192.168.0.10', 
        '10.0.0.5',     
        '127.0.0.1',    
        '::1'           
    ]

    @staticmethod
    def init_app(app):
        pass

class DevelopmentConfig(Config):
    DEBUG = True

class ProductionConfig(Config):
    DEBUG = False

config = {
    'development': DevelopmentConfig,
    'production': ProductionConfig,
    'default': DevelopmentConfig
}