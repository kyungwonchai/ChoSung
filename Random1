.BarButtonItem으로 선언된 버튼을 모두 찾아서 관련 속성을 추적하고, 이를 정리하여 CSV 파일로 출력하는 Python 코드를 작성했습니다.

Python 코드
python
코드 복사
import csv

def extract_bar_button_details(input_file, output_file):
    """
    XtraBars.BarButtonItem 선언된 버튼의 정보를 추출하여 CSV로 저장하는 함수.
    """
    # 결과 데이터를 저장할 리스트
    button_data = []

    try:
        # 입력 파일 읽기
        with open(input_file, 'r', encoding='utf-8') as file:
            lines = file.readlines()

        # XtraBars.BarButtonItem을 찾기 위한 플래그
        is_button_declared = False
        current_button_name = None
        current_button_details = {}

        for i, line in enumerate(lines):
            stripped_line = line.strip()  # 각 줄의 공백 제거

            # 버튼 선언 확인
            if "XtraBars.BarButtonItem" in stripped_line and "=" in stripped_line:
                # 이전 버튼 정보 저장
                if current_button_details:
                    button_data.append(current_button_details)

                # 새 버튼 초기화
                current_button_name = stripped_line.split('=')[0].strip()  # 변수명 추출
                current_button_details = {
                    "button_name": current_button_name,
                    "caption": None,
                    "id": None,
                    "image": None,
                    "large_image": None,
                    "font": None,
                    "use_font": None,
                    "name": None,
                    "item_click": None
                }

                is_button_declared = True  # 버튼 선언 확인

            # 버튼 세부 정보 추적
            if is_button_declared and current_button_name:
                if ".Caption" in stripped_line and "=" in stripped_line:
                    current_button_details["caption"] = stripped_line.split('=')[1].strip().strip('"')
                elif ".Id" in stripped_line and "=" in stripped_line:
                    current_button_details["id"] = stripped_line.split('=')[1].strip().strip('"')
                elif ".ImageOptions.Image" in stripped_line and "=" in stripped_line:
                    current_button_details["image"] = stripped_line.split('=')[1].strip().strip('"')
                elif ".ImageOptions.LargeImage" in stripped_line and "=" in stripped_line:
                    current_button_details["large_image"] = stripped_line.split('=')[1].strip().strip('"')
                elif ".ItemAppearance.Normal.Font" in stripped_line and "=" in stripped_line:
                    current_button_details["font"] = stripped_line.split('=')[1].strip().strip('"')
                elif ".ItemAppearance.Normal.Options.UseFont" in stripped_line and "=" in stripped_line:
                    current_button_details["use_font"] = stripped_line.split('=')[1].strip().strip('"')
                elif ".Name" in stripped_line and "=" in stripped_line:
                    current_button_details["name"] = stripped_line.split('=')[1].strip().strip('"')
                elif ".ItemClick" in stripped_line and "=" in stripped_line:
                    current_button_details["item_click"] = stripped_line.split('=')[1].strip().strip('"')

        # 마지막 버튼 정보 저장
        if current_button_details:
            button_data.append(current_button_details)

        # CSV 파일로 저장
        with open(output_file, 'w', newline='', encoding='utf-8') as csvfile:
            csvwriter = csv.writer(csvfile)
            # CSV 헤더 작성
            csvwriter.writerow([
                'Button Variable Name', 'Caption', 'Id', 'Image',
                'Large Image', 'Font', 'Use Font', 'Name', 'Item Click'
            ])
            # 데이터 작성
            for button in button_data:
                csvwriter.writerow([
                    button.get("button_name", ""),
                    button.get("caption", ""),
                    button.get("id", ""),
                    button.get("image", ""),
                    button.get("large_image", ""),
                    button.get("font", ""),
                    button.get("use_font", ""),
                    button.get("name", ""),
                    button.get("item_click", "")
                ])

        print(f"버튼 데이터를 {output_file} 파일에 성공적으로 저장했습니다.")

    except Exception as e:
        # 오류 발생 시 출력
        print(f"오류 발생: {e}")

# 실행
input_path = r"C:\agent\txt1.txt"  # 디자이너 파일 경로
output_path = r"C:\agent\bar_button_data.csv"  # 출력 CSV 경로
extract_bar_button_details(input_path, output_path)
코드 설명
버튼 선언 추적:

XtraBars.BarButtonItem 선언이 포함된 라인을 찾아 변수명 추출.
= 기준으로 나눠 앞 부분에서 변수명을 가져옴.
버튼 속성 추적:

Caption, Id, ImageOptions.Image, ImageOptions.LargeImage, ItemAppearance.Normal.Font, ItemAppearance.Normal.Options.UseFont, Name, ItemClick를 확인.
각각의 속성 값을 = 뒤에서 추출.
리스트에 데이터 추가:

각 버튼의 데이터를 딕셔너리에 저장 후, 리스트(button_data)에 추가.
CSV 파일 저장:

추출된 데이터를 컬럼으로 정리하여 CSV 파일로 저장.
출력 예시 (bar_button_data.csv)
csv
코드 복사
Button Variable Name,Caption,Id,Image,Large Image,Font,Use Font,Name,Item Click
btnOpenFile,Open File,101,C:\icons\open.png,C:\icons\large_open.png,Arial,True,btnOpenFile,btnOpenFile_Click
btnSaveFile,Save File,102,C:\icons\save.png,C:\icons\large_save.png,Arial,True,btnSaveFile,btnSaveFile_Click
사용 방법
디자이너 파일 준비:

디자이너 내용을 C:\agent\txt1.txt로 저장.
코드 실행:

Python 스크립트를 실행하면 bar_button_data.csv에 리본 버튼 데이터가 저장됩니다.
결과 확인:

각 버튼의 변수명과 속성(Caption, Id, Image 등)이 정리된 표 형태로 출력됩니다.
기대 결과