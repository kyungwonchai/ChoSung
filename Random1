프로그램을 삭제하기 전에 해당 프로세스를 강제로 종료한 뒤 삭제하는 코드입니다. 먼저 프로세스를 찾아 강제 종료하고, 이후 삭제를 진행합니다.

csharp
코드 복사
using System;
using System.Diagnostics;
using System.Management;
using System.Windows.Forms;

namespace UninstallApp
{
    public class Program
    {
        [STAThread]
        static void Main(string[] args)
        {
            Application.EnableVisualStyles();
            Application.SetCompatibleTextRenderingDefault(false);
            Application.Run(new UninstallForm());
        }
    }

    public class UninstallForm : Form
    {
        private TextBox programNameTextBox;
        private TextBox processNameTextBox;
        private Button uninstallButton;

        public UninstallForm()
        {
            Text = "프로그램 삭제";
            Width = 350;
            Height = 200;

            Label programLabel = new Label
            {
                Text = "삭제할 프로그램 이름:",
                Top = 20,
                Left = 10,
                Width = 200
            };
            programNameTextBox = new TextBox
            {
                Top = 50,
                Left = 10,
                Width = 300
            };

            Label processLabel = new Label
            {
                Text = "종료할 프로세스 이름:",
                Top = 80,
                Left = 10,
                Width = 200
            };
            processNameTextBox = new TextBox
            {
                Top = 110,
                Left = 10,
                Width = 300
            };

            uninstallButton = new Button
            {
                Text = "삭제",
                Top = 140,
                Left = 10,
                Width = 100
            };
            uninstallButton.Click += UninstallButton_Click;

            Controls.Add(programLabel);
            Controls.Add(programNameTextBox);
            Controls.Add(processLabel);
            Controls.Add(processNameTextBox);
            Controls.Add(uninstallButton);
        }

        private void UninstallButton_Click(object sender, EventArgs e)
        {
            string programName = programNameTextBox.Text.Trim();
            string processName = processNameTextBox.Text.Trim();

            if (string.IsNullOrEmpty(programName) || string.IsNullOrEmpty(processName))
            {
                MessageBox.Show("프로그램 이름과 프로세스 이름을 모두 입력하세요.", "오류", MessageBoxButtons.OK, MessageBoxIcon.Error);
                return;
            }

            var result = MessageBox.Show($"{programName} 프로그램의 프로세스를 종료하고 삭제하시겠습니까?", "삭제 확인", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
            if (result == DialogResult.Yes)
            {
                // 프로세스 종료
                bool processKilled = KillProcess(processName);
                if (processKilled)
                {
                    MessageBox.Show("프로세스가 성공적으로 종료되었습니다.", "완료", MessageBoxButtons.OK, MessageBoxIcon.Information);

                    // 프로그램 삭제
                    bool uninstallSuccess = UninstallProgram(programName);
                    if (uninstallSuccess)
                    {
                        MessageBox.Show("프로그램이 성공적으로 삭제되었습니다.", "완료", MessageBoxButtons.OK, MessageBoxIcon.Information);
                    }
                    else
                    {
                        MessageBox.Show("프로그램을 찾을 수 없거나 삭제할 수 없습니다.", "오류", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    }
                }
                else
                {
                    MessageBox.Show("프로세스를 종료할 수 없습니다.", "오류", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }
        }

        private bool KillProcess(string processName)
        {
            try
            {
                Process[] processes = Process.GetProcessesByName(processName);
                foreach (Process process in processes)
                {
                    process.Kill();
                    process.WaitForExit(); // 프로세스가 종료될 때까지 대기
                }
                return true; // 프로세스 종료 성공 시 true 반환
            }
            catch (Exception ex)
            {
                MessageBox.Show($"프로세스를 종료하는 중 오류 발생: {ex.Message}", "오류", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            return false; // 프로세스 종료 실패 시 false 반환
        }

        private bool UninstallProgram(string programName)
        {
            try
            {
                string query = $"SELECT * FROM Win32_Product WHERE Name = '{programName}'";
                using (ManagementObjectSearcher searcher = new ManagementObjectSearcher(query))
                using (ManagementObjectCollection results = searcher.Get())
                {
                    foreach (ManagementObject obj in results)
                    {
                        obj.InvokeMethod("Uninstall", null);
                        return true; // 삭제 성공 시 true 반환
                    }
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show($"오류 발생: {ex.Message}", "오류", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            return false; // 삭제 실패 시 false 반환
        }
    }
}
코드 설명
KillProcess: Process.GetProcessesByName를 통해 입력한 프로세스 이름을 가진 모든 프로세스를 찾고, 각각 Kill 메서드를 사용해 강제 종료합니다. WaitForExit를 통해 프로세스가 종료될 때까지 대기합니다.
UninstallButton_Click: 먼저 KillProcess 메서드로 프로세스를 종료하고, 성공 시 UninstallProgram 메서드를 호출하여 프로그램을 삭제합니다.