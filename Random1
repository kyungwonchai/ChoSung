겠습니다. 실제 상황에 맞는 코드를 제공하겠습니다. 만약 model1이라는 컬럼에서 문자열 데이터를 가져와서 WPF DevExpress의 GridControl 내 ComboBoxEdit에 바인딩하려고 한다면, 다음과 같이 할 수 있습니다.

1. 데이터베이스에서 데이터 가져오기
먼저, SQL Server로부터 model1 컬럼의 데이터를 읽어오는 C# 메서드를 작성합니다.

csharp
Copy code
using System.Collections.Generic;
using System.Data.SqlClient;

public class DatabaseHelper
{
    private string connectionString = "Your Connection String Here"; // 여기에 실제 연결 문자열 입력

    public List<string> GetModel1Data()
    {
        List<string> data = new List<string>();

        using (SqlConnection con = new SqlConnection(connectionString))
        {
            con.Open();
            using (SqlCommand cmd = new SqlCommand("SELECT model1 FROM YourTable", con))
            {
                using (SqlDataReader reader = cmd.ExecuteReader())
                {
                    while (reader.Read())
                    {
                        data.Add(reader["model1"].ToString());
                    }
                }
            }
        }

        return data;
    }
}
2. ViewModel 준비
이제 WPF에 데이터를 바인딩하기 위한 ViewModel 클래스를 생성합니다.

csharp
Copy code
public class MainViewModel
{
    public List<string> Model1Data { get; set; }

    public MainViewModel()
    {
        DatabaseHelper db = new DatabaseHelper();
        Model1Data = db.GetModel1Data();
    }
}

3. WPF XAML 바인딩
마지막으로, XAML에서 ComboBoxEdit에 Model1Data를 바인딩합니다.

xml
Copy code
<Window ...
        xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
        xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors">
    <Window.DataContext>
        <local:MainViewModel />
    </Window.DataContext>
    <Grid>
        <dxg:GridControl Name="grid">
            <dxg:GridControl.Columns>
                <dxg:GridColumn FieldName="YourDataFieldName">
                    <dxg:GridColumn.EditSettings>
                        <dxe:ComboBoxEditSettings 
                            ItemsSource="{Binding Model1Data}" />
                    </dxg:GridColumn.EditSettings>
                </dxg:GridColumn>
            </dxg:GridControl.Columns>
            <dxg:GridControl.View>
                <dxg:TableView AutoWidth="True" />
            </dxg:GridControl.View>
        </dxg:GridControl>
    </Grid>
</Window>
이 코드에서 YourDataFieldName은 GridControl의 데이터 소스 내에서 ComboBox와 바인딩할 필드의 이름입니다. Model1Data는 데이터베이스로부터 가져온 model1 컬럼의 데이터 리스트입니다.

위 코드를 사용하시면, model1 컬럼의 데이터를 ComboBoxEdit에 바인딩할 수 있습니다. 연결 문자열과 테이블 이름을 실제 환경에 맞게 조정하시길 바랍니다.


2 / 2





