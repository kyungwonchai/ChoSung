플리케이션에서 네 개의 Image 컨트롤이 있고, 각 Image 컨트롤의 Source가 null이 아닐 경우 해당 이미지를 byte 배열로 변환하여 MSSQL 2014 데이터베이스에 업데이트하는 작업을 수행하는 코드를 제공해드리겠습니다. 이 예시에서는 각 Image 컨트롤의 이름이 image1, image2, image3, image4라고 가정합니다.

1. 필요한 네임스페이스 추가
csharp
Copy code
using System;
using System.Data.SqlClient;
using System.IO;
using System.Windows.Media.Imaging;
2. 이미지를 byte 배열로 변환하는 메서드
csharp
Copy code
public byte[] ImageToByte(BitmapImage imageSource)
{
    if (imageSource == null) return null;

    JpegBitmapEncoder encoder = new JpegBitmapEncoder();
    encoder.Frames.Add(BitmapFrame.Create(imageSource));
    using (MemoryStream ms = new MemoryStream())
    {
        encoder.Save(ms);
        return ms.ToArray();
    }
}
3. 데이터베이스에 이미지 업데이트 메서드
csharp
Copy code
public void UpdateImageInDatabase(string paramName, byte[] imageBytes)
{
    string connectionString = "Your Connection String Here"; // 데이터베이스 연결 문자열
    using (SqlConnection conn = new SqlConnection(connectionString))
    {
        string sql = $"UPDATE YourTableName SET YourImageColumn = @Image WHERE Id = @Id";
        using (SqlCommand cmd = new SqlCommand(sql, conn))
        {
            cmd.Parameters.AddWithValue("@Image", imageBytes);
            cmd.Parameters.AddWithValue("@Id", paramName);
            conn.Open();
            cmd.ExecuteNonQuery();
        }
    }
}
4. 각 Image 컨트롤의 이미지를 데이터베이스에 업데이트
csharp
Copy code
private void UpdateImages()
{
    UpdateImageIfNotNull("image1", image1);
    UpdateImageIfNotNull("image2", image2);
    UpdateImageIfNotNull("image3", image3);
    UpdateImageIfNotNull("image4", image4);
}

private void UpdateImageIfNotNull(string paramName, Image imageControl)
{
    BitmapImage bitmapImage = imageControl.Source as BitmapImage;
    if (bitmapImage != null)
    {
        byte[] imageData = ImageToByte(bitmapImage);
        UpdateImageInDatabase(paramName, imageData);
    }
}
이 코드에서 "Your Connection String Here", "YourTableName", "YourImageColumn"는 실제 환경에 맞게 변경해야 합니다. 또한, Id는 데이터베이스에서 이미지를 식별하는 데 사용되는 열입니다. 이 열을 기반으로 특정 레코드를 업데이트합니다. 예외 처리와 보안을 위한 추가적인 코드 작성도 고려