말 죄송합니다. 제가 혼란을 드린 점에 대해 깊이 사과드립니다. 상황을 명확히 정리하고, 모든 수정 사항을 반영하여 정확한 코드를 제공해 드리겠습니다. 이제, PortConfigControl 내에서의 타겟 포트 처리와 콤보박스의 색상 변경 사항을 포함하여 코드를 수정하겠습니다.

1. PortConfigControl.xaml.cs (전체 코드)
csharp
코드 복사
using System;
using System.IO.Ports;
using System.Windows;
using System.Windows.Controls;

namespace ScanValueTrans
{
    public partial class PortConfigControl : UserControl
    {
        public int PortIndex { get; set; }

        private SerialPortManager serialPortManager;
        private SettingsManager settingsManager;

        public PortConfigControl()
        {
            InitializeComponent();
            serialPortManager = SerialPortManager.Instance;
            settingsManager = SettingsManager.Instance;
        }

        public void LoadPortSettings(int index)
        {
            PortIndex = index;
            string lastUsedPort = settingsManager.GetSetting($"TargetPort{PortIndex}");

            if (!string.IsNullOrEmpty(lastUsedPort))
            {
                TargetPortComboBox.SelectedItem = lastUsedPort;
                AddTargetPort(lastUsedPort);
            }
        }

        public void RefreshPortList(string[] portNames)
        {
            TargetPortComboBox.ItemsSource = portNames;
            if (TargetPortComboBox.SelectedItem != null)
            {
                string selectedPort = TargetPortComboBox.SelectedItem.ToString();
                if (!Array.Exists(portNames, port => port == selectedPort))
                {
                    TargetPortComboBox.SelectedItem = null;
                    TargetPortComboBox.Foreground = System.Windows.Media.Brushes.Red;
                }
            }
        }

        private void AddTargetPort(string portName)
        {
            try
            {
                string baudRate = "9600"; // 기본값으로 9600을 사용
                string parity = "None";
                string dataBits = "8";
                string stopBits = "One";

                serialPortManager.AddTargetPort(portName, int.Parse(baudRate),
                                                (Parity)Enum.Parse(typeof(Parity), parity),
                                                int.Parse(dataBits),
                                                (StopBits)Enum.Parse(typeof(StopBits), stopBits));

                if (serialPortManager.IsPortOpen(portName))
                {
                    TargetPortComboBox.Foreground = System.Windows.Media.Brushes.Blue;
                    LogMessage($"타겟 포트 {portName}가 정상적으로 열렸습니다.");
                }
                else
                {
                    TargetPortComboBox.Foreground = System.Windows.Media.Brushes.Red;
                    LogMessage($"타겟 포트 {portName}를 열 수 없습니다.");
                }

                settingsManager.SaveSetting($"TargetPort{PortIndex}", portName);
            }
            catch (Exception ex)
            {
                LogMessage($"타겟 포트 설정 중 오류 발생: {ex.Message}");
            }
        }

        private void TargetPortComboBox_SelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            if (TargetPortComboBox.SelectedItem != null)
            {
                string selectedPort = TargetPortComboBox.SelectedItem.ToString();
                AddTargetPort(selectedPort);
            }
        }

        private void LogMessage(string message)
        {
            Dispatcher.Invoke(() =>
            {
                string timestamp = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");
                ((MainWindow)Application.Current.MainWindow).LogListBox.Items.Add($"{timestamp} - {message}");

                if (((MainWindow)Application.Current.MainWindow).LogListBox.Items.Count > 100)
                {
                    ((MainWindow)Application.Current.MainWindow).LogListBox.Items.RemoveAt(0);
                }
            });
        }
    }
}
2. MainWindow.xaml.cs (수정된 부분)
이제 MainWindow.xaml.cs에서는 PortConfigControl이 각 타겟 포트에 대한 설정을 처리하며, 전체적인 관리 역할만 수행합니다.

csharp
코드 복사
using System;
using System.IO.Ports;
using System.Net;
using System.Windows;
using System.Windows.Controls;
using ZXing;

namespace ScanValueTrans
{
    public partial class MainWindow : Window
    {
        private SocketServer socketServer;
        private SettingsManager settingsManager;
        private SerialPortManager serialPortManager;

        public MainWindow()
        {
            InitializeComponent();
            Initialize();
        }

        private void Initialize()
        {
            try
            {
                settingsManager = SettingsManager.Instance;

                socketServer = SocketServer.Instance;
                if (socketServer == null)
                {
                    throw new InvalidOperationException("소켓 서버 인스턴스를 초기화할 수 없습니다.");
                }
                socketServer.DataReceived += OnSocketDataReceived;

                serialPortManager = SerialPortManager.Instance;

                string ipAddress = GetLocalIPAddress();
                IpAddressTextBlock.Text = $"IP Address: {ipAddress}";

                for (int i = 20000; i <= 65000; i++)
                {
                    PortComboBox.Items.Add(i.ToString());
                }

                PortComboBox.SelectedItem = settingsManager.GetSetting("Port");
                PortComboBox.SelectionChanged += PortComboBox_SelectionChanged;

                InitializePortSettings();
                LoadLastUsedPorts();

                GenerateQRCode(ipAddress, PortComboBox.SelectedItem?.ToString() ?? string.Empty);

                RefreshPorts();
            }
            catch (Exception ex)
            {
                LogMessage($"프로그램 초기화 실패: {ex.Message}");
            }
        }

        // 기타 이전 메서드들 생략...

        private void RefreshPorts()
        {
            try
            {
                string[] portNames = SerialPort.GetPortNames();

                ScannerPortComboBox.ItemsSource = portNames;

                for (int i = 0; i < 5; i++)
                {
                    var portControl = FindName($"TargetPortConfig{i + 1}") as PortConfigControl;
                    if (portControl != null)
                    {
                        portControl.RefreshPortList(portNames);
                    }
                }

                LogMessage("COM 포트 목록이 갱신되었습니다.");
            }
            catch (Exception ex)
            {
                LogMessage($"포트 목록 갱신 중 오류 발생: {ex.Message}");
            }
        }
    }
}
3. PortConfigControl.xaml
xaml
코드 복사
<UserControl x:Class="ScanValueTrans.PortConfigControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d"
             d:DesignHeight="100" d:DesignWidth="300">
    <Grid>
        <ComboBox x:Name="TargetPortComboBox" SelectionChanged="TargetPortComboBox_SelectionChanged" Width="200" Margin="5"/>
    </Grid>
</UserControl>
기능 요약
타겟 포트 추가 및 상태 확인: PortConfigControl에서 AddTargetPort를 통해 타겟 포트를 추가하며, 포트의 상태에 따라 콤보박스의 글씨 색상이 파랑(정상) 또는 빨강(사용 불가)으로 변경됩니다.

포트 목록 갱신: 메인 윈도우에서 포트 목록이 갱신될 때 PortConfigControl의 포트 목록이 갱신됩니다.

로그 기록: 모든 중요한 작업과 오류는 로그로 기록됩니다.

이제 모든 파일이 적절히 수정되어 있으며, 이전에 요청하신 기능이 제대로 구현되었기를 바랍니다. 추가적인 도움이 필요하시거나 문제가 발생하면 언제든지 말씀해 주세