sing System;
using System.Data;
using System.Data.SqlClient;
using System.IO;
using System.Windows.Forms;
using Microsoft.Office.Interop.Excel;

namespace PartAppUploader
{
    public partial class MainForm : Form
    {
        private const string connectionString = "YourConnectionString"; // 데이터베이스 연결 문자열

        public MainForm()
        {
            InitializeComponent();
        }

        private void UploadButton_Click(object sender, EventArgs e)
        {
            string downloadsFolder = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\Downloads";
            string[] files = Directory.GetFiles(downloadsFolder, "PartAppSearch*.xlsx");

            foreach (string file in files)
            {
                // 엑셀 파일 처리 및 데이터베이스 업로드
                ProcessExcelFile(file);
            }

            MessageBox.Show("업로드가 완료되었습니다.");
        }

        private void ProcessExcelFile(string filePath)
        {
            Microsoft.Office.Interop.Excel.Application excelApp = new Microsoft.Office.Interop.Excel.Application();
            Workbook workbook = excelApp.Workbooks.Open(filePath);
            Worksheet worksheet = workbook.Sheets[1];

            bool hasData = true;
            int row = 4; // B4부터 시작

            while (hasData)
            {
                string partCode = ((Range)worksheet.Cells[row, 2]).Value2.ToString();
                string vendor = ((Range)worksheet.Cells[row, 3]).Value2.ToString();
                string partNumber = ((Range)worksheet.Cells[row, 4]).Value2.ToString();
                string approvalStatus = ((Range)worksheet.Cells[row, 5]).Value2.ToString();
                string approvalDateStr = ((Range)worksheet.Cells[row, 6]).Value2.ToString();
                string productName = ((Range)worksheet.Cells[row, 12]).Value2.ToString();
                string specification = ((Range)worksheet.Cells[row, 13]).Value2.ToString();

                if (string.IsNullOrEmpty(partCode))
                {
                    hasData = false;
                    break;
                }

                DateTime approvalDate;
                if (!DateTime.TryParse(approvalDateStr, out approvalDate))
                {
                    approvalDate = DateTime.MinValue;
                }

                string key = partCode + vendor;

                InsertOrUpdateData(key, partCode, vendor, partNumber, approvalStatus, approvalDate, productName, specification);

                row++;
            }

            workbook.Close();
            excelApp.Quit();
        }

        private void InsertOrUpdateData(string key, string partCode, string vendor, string partNumber, string approvalStatus, DateTime approvalDate, string productName, string specification)
        {
            using (SqlConnection connection = new SqlConnection(connectionString))
            {
                connection.Open();

                string commandText = "IF EXISTS (SELECT * FROM PLM부품 WHERE [키] = @Key) " +
                                     "UPDATE PLM부품 SET [부쿰코드] = @PartCode, [업체명] = @Vendor, [업체PN] = @PartNumber, " +
                                     "[승인상태] = @ApprovalStatus, [승인일자] = @ApprovalDate, [품명] = @ProductName, [규격] = @Specification, "

User
이어서
ChatGPT

csharp

"[업데이트시간] = GETDATE() WHERE [키] = @Key " +
                                 "ELSE " +
                                 "INSERT INTO PLM부품 ([키], [부쿰코드], [업체명], [업체PN], [승인상태], [승인일자], [품명], [규격], [업데이트시간]) " +
                                 "VALUES (@Key, @PartCode, @Vendor, @PartNumber, @ApprovalStatus, @ApprovalDate, @ProductName, @Specification, GETDATE())";

            using (SqlCommand command = new SqlCommand(commandText, connection))
            {
                command.Parameters.AddWithValue("@Key", key);
                command.Parameters.AddWithValue("@PartCode", partCode);
                command.Parameters.AddWithValue("@Vendor", vendor);
                command.Parameters.AddWithValue("@PartNumber", partNumber);
                command.Parameters.AddWithValue("@ApprovalStatus", approvalStatus);
                command.Parameters.AddWithValue("@ApprovalDate", approvalDate);
                command.Parameters.AddWithValue("@ProductName", productName);
                command.Parameters.AddWithValue("@Specification", specification);

                command.ExecuteNonQuery();
            }
        }
    }
}