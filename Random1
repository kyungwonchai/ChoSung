AutoGrid 옵션을 false로 설정한 후 마우스 휠을 사용하여 차트를 확대/축소할 때 성능 저하를 겪고 계시는군요. 이는 AutoGrid를 비활성화하면 차트가 그리드와 레이블을 수동으로 계산해야 하므로, 특히 데이터 포인트가 많을 경우 성능에 부정적인 영향을 미칠 수 있습니다.

해결 방안:

AutoGrid 옵션 유지:

가능하다면 AutoGrid를 true로 유지하여 차트가 그리드와 레이블을 자동으로 관리하도록 하는 것이 좋습니다. 이렇게 하면 성능이 향상될 수 있습니다.
데이터 포인트 수 줄이기:

한 번에 표시되는 데이터 포인트의 수를 줄여 차트의 부하를 감소시킬 수 있습니다. 이를 위해 데이터 샘플링이나 집계를 고려해 보세요.
EnableAxisXNavigation 및 EnableAxisYNavigation 설정:

차트의 X축 및 Y축에 대한 네비게이션을 활성화하여 사용자가 차트를 더 부드럽게 확대/축소하고 스크롤할 수 있도록 설정할 수 있습니다.

xml
코드 복사
<dxc:XYDiagram2D EnableAxisXNavigation="True" EnableAxisYNavigation="True">
    <!-- ... -->
</dxc:XYDiagram2D>
이렇게 하면 사용자가 차트를 확대/축소하거나 스크롤할 때 성능이 향상될 수 있습니다. 
DEVEXPRESS

성능 최적화 고려사항:

차트의 성능을 최적화하기 위해 다음 사항들을 고려해 보세요:

자동 계산 최소화: 자동 범위, 스케일 타입, 레이아웃 계산은 추가적인 리소스를 필요로 합니다. 가능하다면 이러한 계산을 수동으로 설정하여 성능을 향상시킬 수 있습니다.

시각적 요소 간소화: 차트 요소의 시각적 효과(예: 그림자)를 줄이고, 단색을 사용하며, 불필요한 레이블이나 마커를 제거하면 렌더링 성능이 향상될 수 있습니다.

데이터 바인딩 최적화: 데이터 바인딩을 최적화하고, 필요한 데이터만 로드하여 메모리 사용량을 줄일 수 있습니다.

적절한 시리즈 타입 선택: 대량의 데이터를 표시할 때는 LineSeries2D와 같은 적절한 시리즈 타입을 선택하고, 포인트 마커를 비활성화하여 성능을 향상시킬 수 있습니다.

자세한 내용은 DevExpress의 대용량 데이터 표시 모범 사례를 참고하세요. 
DEVEXPRESS

참고 자료:

2D XY-차트에서 확대 및 스크롤

대용량 데이터 표시 모범 사례