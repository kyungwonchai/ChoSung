 사용하여 버튼 클릭 시 JPG 이미지 파일을 선택하고, 선택한 이미지를 MSSQL 2014 데이터베이스에 저장한 후, UI에서 이미지를 확대 및 축소할 수 있도록 하는 기능을 구현하기 위해서는 여러 단계가 필요합니다. 아래에 각 단계별로 필요한 코드를 제공하겠습니다.

1. WPF XAML UI 설정
MainWindow.xaml 파일에 버튼과 이미지를 표시할 컨트롤을 추가합니다.

xml
Copy code
<Window x:Class="YourNamespace.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="MainWindow" Height="350" Width="525">
    <Grid>
        <Button x:Name="btnUpload" Content="Upload Image" HorizontalAlignment="Left" VerticalAlignment="Top" Click="btnUpload_Click"/>
        <Image x:Name="imgDisplay" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
    </Grid>
</Window>
2. C# 코드 구현
MainWindow.xaml.cs 파일에 필요한 로직을 구현합니다.

csharp
Copy code
using System;
using System.Data;
using System.Data.SqlClient;
using System.IO;
using System.Windows;
using System.Windows.Media.Imaging;
using Microsoft.Win32;

namespace YourNamespace
{
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
        }

        private void btnUpload_Click(object sender, RoutedEventArgs e)
        {
            OpenFileDialog openFileDialog = new OpenFileDialog();
            openFileDialog.Filter = "Image files (*.jpg)|*.jpg";
            if (openFileDialog.ShowDialog() == true)
            {
                string filePath = openFileDialog.FileName;
                SaveImageToDatabase(filePath);
                DisplayImage(filePath);
            }
        }

        private void SaveImageToDatabase(string filePath)
        {
            byte[] imageData;
            using (FileStream fs = new FileStream(filePath, FileMode.Open, FileAccess.Read))
            {
                imageData = new byte[fs.Length];
                fs.Read(imageData, 0, System.Convert.ToInt32(fs.Length));
            }

            string connectionString = "YourConnectionStringHere"; // MSSQL 연결 문자열
            using (SqlConnection conn = new SqlConnection(connectionString))
            {
                conn.Open();
                using (SqlCommand cmd = new SqlCommand("INSERT INTO YourTableName (ImageData) VALUES (@ImageData)", conn))
                {
                    cmd.Parameters.Add("@ImageData", SqlDbType.Image).Value = imageData;
                    cmd.ExecuteNonQuery();
                }
            }
        }

        private void DisplayImage(string filePath)
        {
            BitmapImage bitmap = new BitmapImage();
            bitmap.BeginInit();
            bitmap.UriSource = new Uri(filePath);
            bitmap.EndInit();
            imgDisplay.Source = bitmap;
        }
    }
}
3. 데이터베이스 설정
MSSQL 2014 데이터베이스에 이미지를 저장하기 위한 테이블을 생성합니다.
예를 들어, YourTableName 테이블에 ImageData라는 이미지 데이터를 저장하는 필드가 필요합니다.
4. 추가 설정
이미지 확대/축소 기능은 추가적인 UI 컨트롤과 이벤트 핸들링이 필요합니다.
MSSQL 연결 문자열을 설정해야 합니다.
이 코드는 기본적인 구조를 제공합니다. 실제 프로젝트에 맞게 조정하고, 추가 기능을 위한 로직을 추가해야 합니다. 데이터베이스 연결 문자열, 테이