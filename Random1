아래는 버튼 변수 이름을 먼저 모두 수집한 후, 각 변수에 대해 완전 탐색을 수행하여 해당 변수의 모든 속성을 추적하고 정리하는 코드입니다. 한 번의 반복으로 버튼 변수 이름을 수집한 후, 두 번째 반복에서 각 변수를 완전 탐색하며 데이터를 추출합니다.

Python 코드
python
코드 복사
import csv

def extract_bar_button_details(input_file, output_file):
    """
    XtraBars.BarButtonItem 버튼의 변수 이름을 추출한 뒤,
    각 버튼 변수의 속성을 완전 탐색하여 데이터를 CSV로 저장하는 함수.
    """
    # 버튼 변수 이름 저장 리스트
    button_names = []
    # 결과 데이터를 저장할 리스트
    button_data = []

    try:
        # 입력 파일 읽기
        with open(input_file, 'r', encoding='utf-8') as file:
            lines = file.readlines()

        # 1. 버튼 변수 이름 추출
        for line in lines:
            stripped_line = line.strip()
            # XtraBars.BarButtonItem 선언 확인
            if "XtraBars.BarButtonItem" in stripped_line and "=" in stripped_line:
                # 변수 이름 추출
                button_name = stripped_line.split('=')[0].strip()
                button_names.append(button_name)

        # 2. 각 버튼 변수에 대해 완전 탐색 수행
        for button_name in button_names:
            # 버튼 속성 초기화
            button_details = {
                "button_name": button_name,
                "caption": None,
                "id": None,
                "image": None,
                "large_image": None,
                "font": None,
                "use_font": None,
                "name": None,
                "item_click": None
            }

            for line in lines:
                stripped_line = line.strip()
                # 현재 버튼의 속성을 탐지
                if f"{button_name}.Caption" in stripped_line and "=" in stripped_line:
                    button_details["caption"] = stripped_line.split('=')[1].strip().strip('"')
                elif f"{button_name}.Id" in stripped_line and "=" in stripped_line:
                    button_details["id"] = stripped_line.split('=')[1].strip().strip('"')
                elif f"{button_name}.ImageOptions.Image" in stripped_line and "=" in stripped_line:
                    button_details["image"] = stripped_line.split('=')[1].strip().strip('"')
                elif f"{button_name}.ImageOptions.LargeImage" in stripped_line and "=" in stripped_line:
                    button_details["large_image"] = stripped_line.split('=')[1].strip().strip('"')
                elif f"{button_name}.ItemAppearance.Normal.Font" in stripped_line and "=" in stripped_line:
                    button_details["font"] = stripped_line.split('=')[1].strip().strip('"')
                elif f"{button_name}.ItemAppearance.Normal.Options.UseFont" in stripped_line and "=" in stripped_line:
                    button_details["use_font"] = stripped_line.split('=')[1].strip().strip('"')
                elif f"{button_name}.Name" in stripped_line and "=" in stripped_line:
                    button_details["name"] = stripped_line.split('=')[1].strip().strip('"')
                elif f"{button_name}.ItemClick" in stripped_line and "=" in stripped_line:
                    button_details["item_click"] = stripped_line.split('=')[1].strip().strip('"')

            # 버튼 데이터를 리스트에 추가
            button_data.append(button_details)

        # 3. CSV 파일로 저장
        with open(output_file, 'w', newline='', encoding='utf-8') as csvfile:
            csvwriter = csv.writer(csvfile)
            # CSV 헤더 작성
            csvwriter.writerow([
                'Button Variable Name', 'Caption', 'Id', 'Image',
                'Large Image', 'Font', 'Use Font', 'Name', 'Item Click'
            ])
            # 데이터 작성
            for button in button_data:
                csvwriter.writerow([
                    button.get("button_name", ""),
                    button.get("caption", ""),
                    button.get("id", ""),
                    button.get("image", ""),
                    button.get("large_image", ""),
                    button.get("font", ""),
                    button.get("use_font", ""),
                    button.get("name", ""),
                    button.get("item_click", "")
                ])

        print(f"버튼 데이터를 {output_file} 파일에 성공적으로 저장했습니다.")

    except Exception as e:
        # 오류 발생 시 출력
        print(f"오류 발생: {e}")

# 실행
input_path = r"C:\agent\txt1.txt"  # 디자이너 파일 경로
output_path = r"C:\agent\bar_button_data.csv"  # 출력 CSV 경로
extract_bar_button_details(input_path, output_path)
코드 설명
1단계: 버튼 변수 이름 수집
XtraBars.BarButtonItem로 선언된 모든 변수 이름을 한 번의 반복으로 수집합니다.
변수 이름은 =의 왼쪽에서 추출합니다.
2단계: 변수별 속성 완전 탐색
수집된 변수 이름을 기반으로 파일 전체를 반복하여 해당 변수의 속성을 추적합니다.
추적하는 속성:
Caption
Id
ImageOptions.Image
ImageOptions.LargeImage
ItemAppearance.Normal.Font
ItemAppearance.Normal.Options.UseFont
Name
ItemClick
3단계: CSV 파일 생성
각 버튼의 데이터를 리스트로 정리하고, 이를 CSV 파일로 저장합니다.
출력 예시 (bar_button_data.csv)
csv
코드 복사
Button Variable Name,Caption,Id,Image,Large Image,Font,Use Font,Name,Item Click
btnOpenFile,Open File,101,C:\icons\open.png,C:\icons\large_open.png,Arial,True,btnOpenFile,btnOpenFile_Click
btnSaveFile,Save File,102,C:\icons\save.png,C:\icons\large_save.png,Arial,True,btnSaveFile,btnSaveFile_Click
btnCopy,Copy Text,103,,C:\icons\large_copy.png,Segoe UI,True,btnCopy,btnCopy_Click
기대 결과
버튼 변수 이름을 모두 수집한 후, 각 버튼에 대해 완전 탐색하여 데이터를 정확히 수집합니다.