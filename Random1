using System;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace LockerManagementApp.Models
{
    [Table("LockerAssignments")] // Maps to the table name
    public class LockerAssignment
    {
        [Key] // Primary Key
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)] // Auto-increment
        public int Id { get; set; }

        [Required(ErrorMessage = "사물함 종류는 필수입니다.")]
        [StringLength(50)]
        public string LockerType { get; set; } = string.Empty; // Initialize to avoid nulls

        [Required(ErrorMessage = "층 정보는 필수입니다.")]
        [StringLength(10)]
        public string Floor { get; set; } = string.Empty;

        [Required(ErrorMessage = "구역 정보는 필수입니다.")]
        [StringLength(50)]
        public string Zone { get; set; } = string.Empty;

        [Required(ErrorMessage = "세부 위치는 필수입니다.")]
        [StringLength(100)]
        public string SpecificLocation { get; set; } = string.Empty; // This should uniquely identify the physical locker

        [StringLength(100)]
        public string? UserName { get; set; } // Nullable

        [StringLength(100)]
        public string? KnoxId { get; set; } // Nullable

        [StringLength(50)]
        public string? SubPart { get; set; } // Nullable

        [StringLength(100)]
        public string? Administrator { get; set; } // Nullable

        public DateTime LastUpdated { get; set; } = DateTime.Now;

        // Optional: Not mapped to DB, useful for display logic if needed
        [NotMapped]
        public bool IsAssigned => !string.IsNullOrWhiteSpace(UserName);

        // Override ToString for better debugging or simple display
        public override string ToString()
        {
            return $"{Floor}-{Zone}-{SpecificLocation}: {(IsAssigned ? UserName : "(비어 있음)")}";
        }
    }