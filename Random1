DECLARE @columns NVARCHAR(MAX) = '', @sql NVARCHAR(MAX);

-- module1의 고유 값을 기반으로 컬럼 목록 생성
SELECT @columns += QUOTENAME(module1) + ','
FROM (SELECT DISTINCT module1 FROM YourSecondTable) AS Modules;
SET @columns = LEFT(@columns, LEN(@columns) - 1); -- 마지막 콤마 제거

-- 동적 SQL 구성
SET @sql = N'SELECT f.sensor, f.valavg1, f.unit, f.lcl, f.ucl, pv.*, AvgVal
             FROM (
                 SELECT sensor, valavg1, unit, lcl, ucl
                 FROM YourFirstTable
             ) AS f
             INNER JOIN (
                 SELECT sensor, ' + @columns + ', AVG(val1) OVER(PARTITION BY sensor) AS AvgVal
                 FROM (
                      SELECT module1, val1, sensor
                      FROM YourSecondTable
                 ) AS src
                 PIVOT (
                      SUM(val1)
                      FOR module1 IN (' + @columns + ')
                 ) AS pvt
             ) AS pv ON f.sensor = pv.sensor';

EXEC sp_executesql @sql;
