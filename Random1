import React, { useState, useEffect } from 'react';
import { Line } from 'react-chartjs-2';
import axios from 'axios';

const RealtimeChart = () => {
  const [data, setData] = useState([]);

  const fetchLatestData = async () => {
    try {
      const response = await axios.get('http://10.244.111.111:5000/api/getLatestData');
      const latestData = response.data.slice(-200);
      setData(latestData);
    } catch (error) {
      console.error('Error fetching data:', error);
    }
  };

  useEffect(() => {
    const interval = setInterval(() => {
      fetchLatestData();
    }, 1000);

    return () => clearInterval(interval);
  }, []);

  const tempData = {
    labels: data.map((item) => item.stdtime),
    datasets: [
      {
        label: 'Temperature',
        fill: false,
        lineTension: 0.1,
        backgroundColor: 'rgba(75,192,192,0.4)',
        borderColor: 'rgba(75,192,192,1)',
        borderCapStyle: 'butt',
        borderDash: [],
        borderDashOffset: 0.0,
        borderJoinStyle: 'miter',
        pointBorderColor: 'rgba(75,192,192,1)',
        pointBackgroundColor: '#fff',
        pointBorderWidth: 1,
        pointHoverRadius: 5,
        pointHoverBackgroundColor: 'rgba(75,192,192,1)',
        pointHoverBorderColor: 'rgba(220,220,220,1)',
        pointHoverBorderWidth: 2,
        pointRadius: 1,
        pointHitRadius: 10,
        data: data.map((item) => item.temp1),
      },
    ],
  };

  const humidData = {
    labels: data.map((item) => item.stdtime),
    datasets: [
      {
        label: 'Humidity',
        fill: false,
        lineTension: 0.1,
        backgroundColor: 'rgba(75,192,192,0.4)',
        borderColor: 'rgba(75,192,192,1)',
        borderCapStyle: 'butt',
        borderDash: [],
        borderDashOffset: 0.0,
        borderJoinStyle: 'miter',
        pointBorderColor: 'rgba(75,192,192,1)',
        pointBackgroundColor: '#fff',
        pointBorderWidth: 1,
        pointHoverRadius: 5,
        pointHoverBackgroundColor: 'rgba(75,192,192,1)',
        pointHoverBorderColor: 'rgba(220,220,220,1)',
        pointHoverBorderWidth: 2,
        pointRadius: 1,
        pointHitRadius: 10,
        data: data.map((item) => item.humid1),
      },
    ],
  };

  return (
    <div>
      <h1>Realtime Temperature and Humidity Chart</h1>
      <Line data={tempData} />
      <Line data={humidData} />
    </div>
  );
};

export default RealtimeChart;
