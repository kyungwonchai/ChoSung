
namespace YourNamespace
{
    public partial class Window2 : Window
    {
        public Window2()
        {
            InitializeComponent();
        }

        public async void RunTasksAndClose()
        {
            // 예시 작업들 (여기서는 Task.Delay를 사용합니다)
            Task task1 = Task.Delay(1000); // 1초 대기
            Task task2 = Task.Delay(2000); // 2초 대기

            // 모든 작업이 완료될 때까지 대기
            await Task.WhenAll(task1, task2);

            // UI 업데이트 (UI 스레드에서 실행해야 함)
            Dispatcher.Invoke(() =>
            {
                // 여기에 UI 업데이트 관련 코드를 넣습니다.
                // 예: MyImage.Source = new BitmapImage(...);

                // 모든 작업 완료 후 창 닫기
                this.Close();
            });
        }
    }
}

메인 윈도우에서 Window2 호출

csharp

private void OpenWindow2()
{
    Window2 window2 = new Window2();
    window2.Show();

    window2.RunTasksAndClose();
}

설명

    RunTasksAndClose 메서드는 Task.WhenAll을 사용하여 모든 비동기 작업(task1, task2)이 완료될 때까지 기다립니다.
    작업이 완료되면, Dispatcher.Invoke를 사용하여 UI 스레드에서 UI 업데이트 및 창 닫기 작업을 수행합니다.
    Task.Delay는 예시 작업으로 사용되며, 실제 사용 사례에 따라 적절한 비동기 작업으로 대체해야 합니다.

이 방식을 사용하면 여러 비동기 작업을 실행하고 모두 완료된 후에 창을 닫을 수 있습