#에서 주어진 요구사항을 처리하는 코드는 다음과 같이 작성할 수 있습니다. 이 코드는 5시간에 한 번씩 특정 폴더 내에서 로그 파일을 확인하고, 1달이 지난 폴더를 삭제하며, 로그를 기록하는 역할을 합니다.

csharp
코드 복사
using System;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System.Timers;

class Program
{
    private static readonly string logDirectoryPath = @"C:\prod_file_logs";
    private static readonly Timer logTimer = new Timer(5 * 60 * 60 * 1000); // 5시간 간격으로 실행
    private static readonly TimeSpan retentionPeriod = TimeSpan.FromDays(30); // 1달

    static async Task Main(string[] args)
    {
        // 최초 폴더와 파일 존재 여부 확인
        CheckAndCreateDirectory();

        // 5시간에 한 번씩 실행되는 타이머 설정
        logTimer.Elapsed += async (sender, e) => await CheckOldFoldersAndDelete();
        logTimer.Start();

        // 예시로 로그 작성
        string commandText = "SampleCommand";
        string sentCommand = "SENT123";
        string receivedCommand = "RECV123";
        string status = "Success";
        string result = "Result123";
        int retryCount = 0;
        TimeSpan responseTime = TimeSpan.FromSeconds(1.5);
        string output = "Output123";

        // 로그 작성
        await LogToFile(commandText, sentCommand, receivedCommand, status, result, retryCount, responseTime, output);

        Console.WriteLine("Logging started. Press any key to stop...");
        Console.ReadKey();
    }

    private static void CheckAndCreateDirectory()
    {
        if (!Directory.Exists(logDirectoryPath))
        {
            Directory.CreateDirectory(logDirectoryPath);
        }
    }

    private static async Task CheckOldFoldersAndDelete()
    {
        if (!Directory.Exists(logDirectoryPath))
        {
            return;
        }

        var directories = Directory.GetDirectories(logDirectoryPath);
        foreach (var dir in directories)
        {
            if (DateTime.TryParseExact(Path.GetFileName(dir), "yyyyMMdd", null, System.Globalization.DateTimeStyles.None, out DateTime folderDate))
            {
                if (DateTime.Now - folderDate > retentionPeriod)
                {
                    Directory.Delete(dir, true);
                    Console.WriteLine($"Deleted folder: {dir}");
                }
            }
        }
    }

    private static async Task LogToFile(string commandText, string sentCommand, string receivedCommand, string status, string result, int retryCount, TimeSpan responseTime, string output)
    {
        string currentDate = DateTime.Now.ToString("yyyyMMdd");
        string currentFolderPath = Path.Combine(logDirectoryPath, currentDate);

        if (!Directory.Exists(currentFolderPath))
        {
            Directory.CreateDirectory(currentFolderPath);
        }

        string logFilePath = Path.Combine(currentFolderPath, $"{currentDate}_log.txt");

        string logEntry = $"[{DateTime.Now:yyyy-MM-dd HH:mm:ss}] | {commandText} | {sentCommand} | {receivedCommand} | {status} | {result} | {retryCount} | {responseTime.TotalSeconds}s | {output}";

        await File.AppendAllTextAsync(logFilePath, logEntry + Environment.NewLine);
    }
}
설명:
폴더 생성 및 확인 (CheckAndCreateDirectory):

C:\prod_file_logs 경로에 폴더가 없으면 생성합니다.
로그 삭제 처리 (CheckOldFoldersAndDelete):

5시간에 한 번씩 해당 폴더 내의 하위 폴더들에 대해 생성일을 확인합니다.
폴더의 이름을 yyyyMMdd 형식으로 해석하며, 1달이 지난 폴더는 삭제합니다.
로그 작성 (LogToFile):

로그는 현재 날짜를 기반으로 yyyyMMdd 형식의 폴더를 만들고, 해당 폴더 내에 yyyyMMdd_log.txt 파일에 로그를 기록합니다.
각 로그는 요청된 정보를 | 문자로 구분하여 기록합니다.
타이머 설정:

5시간에 한 번씩 폴더 확인 및 삭제 작업을 수행합니다.
이 코드를 실행하면 5시간마다 오래된 폴더가 삭제되고, 로그는 지정된 형식으로 기록