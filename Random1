. 이번에는 [PART 6] Select Case 문법 완전정복에 대해 여러 개의 서브 프로시저와 상세한 주석을 포함하여 설명드리겠습니다.

✅ [PART 6] Select Case 문법 완전정복
Select Case 문은 하나의 표현식을 다양한 값과 비교하여 해당하는 코드 블록을 실행하는 제어 구조입니다. 여러 개의 If...ElseIf 문을 사용하는 것보다 코드의 가독성과 유지보수성을 높이는 데 유용합니다.​
비주얼베이직실습
+2
Microsoft Learn
+2
엑셀 초보의 VBA 독학기
+2

1. 기본적인 Select Case 사용법
다음은 학생의 점수에 따라 학점을 부여하는 예제입니다.​

vba
코드 복사
Sub AssignGrade()
    Dim score As Integer
    Dim grade As String

    ' 점수 입력
    score = InputBox("점수를 입력하세요 (0-100):", "점수 입력")

    ' 점수에 따른 학점 부여
    Select Case score
        Case Is >= 90
            grade = "A"
        Case Is >= 80
            grade = "B"
        Case Is >= 70
            grade = "C"
        Case Is >= 60
            grade = "D"
        Case Else
            grade = "F"
    End Select

    ' 결과 출력
    MsgBox "점수: " & score & vbCrLf & "학점: " & grade, vbInformation, "학점 결과"
End Sub
설명:

score 변수에 사용자가 입력한 점수를 저장합니다.​
소소

Select Case 문을 사용하여 점수 범위에 따라 학점을 결정합니다.​
Microsoft Learn
+2
엑셀 초보의 VBA 독학기
+2
도움되는 블로그
+2

결과를 메시지 박스로 출력합니다.​
엑셀 초보의 VBA 독학기

2. 문자열 비교를 위한 Select Case 사용법
다음은 요일에 따라 다른 메시지를 출력하는 예제입니다.​

vba
코드 복사
Sub GreetBasedOnDay()
    Dim dayOfWeek As String
    Dim message As String

    ' 요일 입력
    dayOfWeek = InputBox("요일을 입력하세요 (월요일~일요일):", "요일 입력")

    ' 입력된 요일에 따른 메시지 설정
    Select Case dayOfWeek
        Case "월요일"
            message = "한 주의 시작입니다. 힘내세요!"
        Case "금요일"
            message = "주말이 다가옵니다. 조금만 더 힘내세요!"
        Case "토요일", "일요일"
            message = "즐거운 주말 보내세요!"
        Case Else
            message = "평범한 하루입니다. 최선을 다하세요!"
    End Select

    ' 결과 출력
    MsgBox message, vbInformation, "인사말"
End Sub
설명:

dayOfWeek 변수에 사용자가 입력한 요일을 저장합니다.​

Select Case 문을 사용하여 입력된 요일에 따라 다른 메시지를 설정합니다.​
엑셀 초보의 VBA 독학기

결과를 메시지 박스로 출력합니다.​
엑셀 초보의 VBA 독학기

3. 숫자 범위와 비교 연산자를 활용한 Select Case
다음은 나이에 따라 카테고리를 분류하는 예제입니다.​

vba
코드 복사
Sub CategorizeByAge()
    Dim age As Integer
    Dim category As String

    ' 나이 입력
    age = InputBox("나이를 입력하세요:", "나이 입력")

    ' 나이에 따른 카테고리 분류
    Select Case age
        Case Is < 13
            category = "어린이"
        Case 13 To 19
            category = "청소년"
        Case 20 To 64
            category = "성인"
        Case Is >= 65
            category = "노인"
        Case Else
            category = "유효하지 않은 나이"
    End Select

    ' 결과 출력
    MsgBox "나이: " & age & vbCrLf & "분류: " & category, vbInformation, "나이 분류"
End Sub
설명:

age 변수에 사용자가 입력한 나이를 저장합니다.​
소소

Select Case 문을 사용하여 나이 범위에 따라 카테고리를 결정합니다.​
엑셀 초보의 VBA 독학기
+1
Microsoft Learn
+1

결과를 메시지 박스로 출력합니다.​

4. 다중 조건을 처리하는 Select Case
다음은 제품 코드에 따라 제품 정보를 출력하는 예제입니다.​

vba
코드 복사
Sub ProductInfo()
    Dim productCode As String
    Dim productName As String
    Dim price As Currency

    ' 제품 코드 입력
    productCode = InputBox("제품 코드를 입력하세요 (P001, P002, P003):", "제품 코드 입력")

    ' 제품 코드에 따른 제품 정보 설정
    Select Case productCode
        Case "P001"
            productName = "노트북"
            price = 1200000
        Case "P002"
            productName = "스마트폰"
            price = 800000
        Case "P003"
            productName = "태블릿"
            price = 600000
        Case Else
            productName = "알 수 없는 제품"
            price = 0
    End Select

    ' 결과 출력
    If price > 0 Then
        MsgBox "제품명: " & productName & vbCrLf & "가격: " & Format(price, "Currency"), vbInformation, "제품 정보"
    Else
        MsgBox "유효하지 않은 제품 코드입니다.", vbExclamation, "오류"
    End If
End Sub
설명:

productCode 변수에 사용자가 입력한 제품 코드를 저장합니다.​

Select Case 문을 사용하여 제품 코드에 따라 제품명과 가격을 설정합니다.​

유효한 제품 코드인 경우 제품 정보를, 그렇지 않은 경우 오류 메시지를 출력합니다.​
엑셀 초보의 VBA 독학기

5. 중첩된 Select Case 문 사용
다음은 부서와 직급에 따라 연봉을 결정하는 예제입니다.​

vba
코드 복사
Sub DetermineSalary()
    Dim department As String
    Dim position As String
    Dim salary As Currency

    ' 부서 입력
    department = InputBox("부서를 입력하세요 (영업
::contentReference[oaicite:37]{index=37}
 





나의 말:
끊어진부분부터다시 씨바


ChatGPT의 말:
죄송합니다. 이전에 충분한 정보를 제공하지 못한 점 사과드립니다. 이제 [PART 6] Select Case 문법 완전정복에 대해 여러 개의 서브 프로시저와 적절한 수준의 주석을 포함하여 상세히 설명드리겠습니다.​

✅ [PART 6] Select Case 문법 완전정복
Select Case 문은 하나의 표현식을 다양한 값과 비교하여 해당하는 코드 블록을 실행하는 제어 구조입니다. 여러 개의 If...ElseIf 문을 사용하는 것보다 코드의 가독성과 유지보수성을 높이는 데 유용합니다.​

1. 기본적인 Select Case 사용법
다음은 학생의 점수에 따라 학점을 부여하는 예제입니다.​

vba
코드 복사
Sub AssignGrade()
    Dim score As Integer
    Dim grade As String

    ' 점수 입력
    score = InputBox("점수를 입력하세요 (0-100):", "점수 입력")

    ' 점수에 따른 학점 부여
    Select Case score
        Case Is >= 90
            grade = "A"
        Case Is >= 80
            grade = "B"
        Case Is >= 70
            grade = "C"
        Case Is >= 60
            grade = "D"
        Case Else
            grade = "F"
    End Select

    ' 결과 출력
    MsgBox "점수: " & score & vbCrLf & "학점: " & grade, vbInformation, "학점 결과"
End Sub
설명:

score 변수에 사용자가 입력한 점수를 저장합니다.​

Select Case 문을 사용하여 점수 범위에 따라 학점을 결정합니다.​

결과를 메시지 박스로 출력합니다.​

2. 문자열 비교를 위한 Select Case 사용법
다음은 요일에 따라 다른 메시지를 출력하는 예제입니다.​

vba
코드 복사
Sub GreetBasedOnDay()
    Dim dayOfWeek As String
    Dim message As String

    ' 요일 입력
    dayOfWeek = InputBox("요일을 입력하세요 (월요일~일요일):", "요일 입력")

    ' 입력된 요일에 따른 메시지 설정
    Select Case dayOfWeek
        Case "월요일"
            message = "한 주의 시작입니다. 힘내세요!"
        Case "금요일"
            message = "주말이 다가옵니다. 조금만 더 힘내세요!"
        Case "토요일", "일요일"
            message = "즐거운 주말 보내세요!"
        Case Else
            message = "평범한 하루입니다. 최선을 다하세요!"
    End Select

    ' 결과 출력
    MsgBox message, vbInformation, "인사말"
End Sub
설명:

dayOfWeek 변수에 사용자가 입력한 요일을 저장합니다.​

Select Case 문을 사용하여 입력된 요일에 따라 다른 메시지를 설정합니다.​

결과를 메시지 박스로 출력합니다.​

3. 숫자 범위와 비교 연산자를 활용한 Select Case
다음은 나이에 따라 카테고리를 분류하는 예제입니다.​

vba
코드 복사
Sub CategorizeByAge()
    Dim age As Integer
    Dim category As String

    ' 나이 입력
    age = InputBox("나이를 입력하세요:", "나이 입력")

    ' 나이에 따른 카테고리 분류
    Select Case age
        Case Is < 13
            category = "어린이"
        Case 13 To 19
            category = "청소년"
        Case 20 To 64
            category = "성인"
        Case Is >= 65
            category = "노인"
        Case Else
            category = "유효하지 않은 나이"
    End Select

    ' 결과 출력
    MsgBox "나이: " & age & vbCrLf & "분류: " & category, vbInformation, "나이 분류"
End Sub
설명:

age 변수에 사용자가 입력한 나이를 저장합니다.​

Select Case 문을 사용하여 나이 범위에 따라 카테고리를 결정합니다.​

결과를 메시지 박스로 출력합니다.​

4. 다중 조건을 처리하는 Select Case
다음은 제품 코드에 따라 제품 정보를 출력하는 예제입니다.​

vba
코드 복사
Sub ProductInfo()
    Dim productCode As String
    Dim productName As String
    Dim price As Currency

    ' 제품 코드 입력
    productCode = InputBox("제품 코드를 입력하세요 (P001, P002, P003):", "제품 코드 입력")

    ' 제품 코드에 따른 제품 정보 설정
    Select Case productCode
        Case "P001"
            productName = "노트북"
            price = 1200000
        Case "P002"
            productName = "스마트폰"
            price = 800000
        Case "P003"
            productName = "태블릿"
            price = 600000
        Case Else
            productName = "알 수 없는 제품"
            price = 0
    End Select

    ' 결과 출력
    If price > 0 Then
        MsgBox "제품명: " & productName & vbCrLf & "가격: " & Format(price, "Currency"), vbInformation, "제품 정보"
    Else
        MsgBox "유효하지 않은 제품 코드입니다.", vbExclamation, "오류"
    End If
End Sub
설명:

productCode 변수에 사용자가 입력한 제품 코드를 저장합니다.​

Select Case 문을 사용하여 제품 코드에 따라 제품명과 가격을 설정합니다.​

유효한 제품 코드인 경우 제품 정보를, 그렇지 않은 경우 오류 메시지를 출력합니다.​

5. 중첩된 Select Case 문 사용
다음은 부서와 직급에 따라 연봉을 결정하는 예제입니다.​

vba
코드 복사
Sub DetermineSalary()
    Dim department As String
    Dim position As String
    Dim salary As Currency

    ' 부서 입력
   
::contentReference[oaicite:39]{index=39}
 





나의 말:
아니씨발아  중첩된 Select Case 문 사용
다음은 부서와 직급에 따라 연봉을 결정하는 예제입니다.​

vba
코드 복사
Sub DetermineSalary()
    Dim department As String
    Dim position As String
    Dim salary As Currency

    ' 부서 입력
   
::contentReference[oaicite:39]{index=39}
 이거부터다시라고


ChatGPT의 말:
죄송합니다. 이전에 제공한 코드가 중단되어 혼란을 드린 점 사과드립니다. 이제 부서와 직급에 따라 연봉을 결정하는 중첩된 Select Case 문의 예제를 완전한 형태로 제공해드리겠습니다.​

중첩된 Select Case 문을 활용한 연봉 결정 예제
아래의 VBA 코드는 사용자가 입력한 부서와 직급에 따라 연봉을 결정하는 예제입니다. Select Case 문을 중첩하여 부서별로 다시 직급을 구분하고, 해당하는 연봉을 할당합니다.​

vba
코드 복사
Sub DetermineSalary()
    Dim department As String
    Dim position As String
    Dim salary As Currency

    ' 부서 입력
    department = InputBox("부서를 입력하세요 (영업, 개발, 인사):", "부서 입력")

    ' 부서에 따른 직급 및 연봉 결정
    Select Case department
        Case "영업"
            ' 직급 입력
            position = InputBox("직급을 입력하세요 (사원, 대리, 과장):", "직급 입력")
            Select Case position
                Case "사원"
                    salary = 30000000
                Case "대리"
                    salary = 40000000
                Case "과장"
                    salary = 50000000
                Case Else
                    MsgBox "유효하지 않은 직급입니다.", vbExclamation, "오류"
                    Exit Sub
            End Select

        Case "개발"
            ' 직급 입력
            position = InputBox("직급을 입력하세요 (주니어, 시니어, 리드):", "직급 입력")
            Select Case position
                Case "주니어"
                    salary = 35000000
                Case "시니어"
                    salary = 50000000
                Case "리드"
                    salary = 65000000
                Case Else
                    MsgBox "유효하지 않은 직급입니다.", vbExclamation, "오류"
                    Exit Sub
            End Select

        Case "인사"
            ' 직급 입력
            position = InputBox("직급을 입력하세요 (사원, 대리, 과장):", "직급 입력")
            Select Case position
                Case "사원"
                    salary = 28000000
                Case "대리"
                    salary = 38000000
                Case "과장"
                    salary = 48000000
                Case Else
                    MsgBox "유효하지 않은 직급입니다.", vbExclamation, "오류"
                    Exit Sub
            End Select

        Case Else
            MsgBox "유효하지 않은 부서입니다.", vbExclamation, "오류"
            Exit Sub
    End Select

    ' 결과 출력
    MsgBox "부서: " & department & vbCrLf & _
           "직급: " & position & vbCrLf & _
           "연봉: " & Format(salary, "Currency"), vbInformation, "연봉 정보"
End Sub
설명:

부서 입력: InputBox를 사용하여 사용자가 부서를 입력하도록 요청합니다.​

첫 번째 Select Case 문: 입력된 부서에 따라 해당하는 코드 블록을 실행합니다.​

부서가 "영업"인 경우: 내부에서 다시 InputBox를 사용하여 직급을 입력받고, 두 번째 Select Case 문을 통해 직급에 따른 연봉을 결정합니다.​

부서가 "개발"인 경우: 유사한 방식으로 직급을 입력받고 연봉을 결정합니다.​

부서가 "인사"인 경우: 동일한 구조로 직급과 연봉을 결정합니다.​

오류 처리: 유효하지 않은 부서나 직급이 입력된 경우, MsgBox를 통해 오류 메시지를 표시하고 Exit Sub를 사용하여 프로시저를 종료합니다.​

결과 출력: 유효한 부서와 직급이 입력된 경우, 해당 연봉 정보를 메시지 박스로 출력합니다.​

사용 방법:

VBA 편집기에서 새로운 모듈을 추가합니다.​

위의 코드를 복사하여 모듈에 붙여넣습니다.​

DetermineSalary 서브루틴을 실행합니다.​

프롬프트에 따라 부서와 직급을 입력하면, 해당 연봉 정보가 표시됩니다.​