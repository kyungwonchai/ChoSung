pp.config를 이용한 설정 저장 및 로드 방식은 애플리케이션 설정을 XML 형식으로 관리하는 방법입니다. .NET Framework에서는 App.config 파일을 통해 애플리케이션의 설정 정보를 관리할 수 있으며, 설정 값을 쉽게 저장하고 불러오는 기능을 제공합니다.

App.config 방식의 장점:
애플리케이션 설정을 중앙에서 관리: 설정 파일을 수정하면 애플리케이션을 재배포할 필요 없이 설정만 업데이트할 수 있습니다.
내장된 설정 관리 기능 제공: .NET에서 제공하는 ConfigurationManager 클래스를 이용해 쉽게 설정을 저장하고 불러올 수 있습니다.
App.config를 이용한 COM 포트 설정 저장 및 로드 방법
1. App.config 파일에 설정 추가
먼저, 프로젝트의 App.config 파일에 COM 포트 설정을 저장할 항목을 추가합니다.

App.config
xml
코드 복사
<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <appSettings>
    <!-- COM 포트 설정 -->
    <add key="ComPortName" value="COM3"/>
    <add key="BaudRate" value="9600"/>
  </appSettings>
</configuration>
여기서 ComPortName과 BaudRate는 각각 COM 포트 이름과 BaudRate를 저장할 설정 항목입니다.

2. ConfigurationManager 클래스를 이용한 설정 로드 및 저장
App.config에 저장된 설정 값을 읽고 변경할 때는 ConfigurationManager 클래스를 사용합니다. COM 포트 설정을 불러와서 사용할 수 있도록 코드를 수정하겠습니다.

SettingsManager.cs (App.config 이용)
csharp
코드 복사
using System;
using System.Configuration;

public static class SettingsManager
{
    // COM 포트 설정을 불러오는 함수
    public static Settings LoadSettings()
    {
        try
        {
            // App.config에서 포트 이름과 BaudRate 불러오기
            string portName = ConfigurationManager.AppSettings["ComPortName"];
            string baudRateString = ConfigurationManager.AppSettings["BaudRate"];
            int baudRate = int.Parse(baudRateString);

            return new Settings
            {
                PortName = portName,
                BaudRate = baudRate
            };
        }
        catch (Exception ex)
        {
            msgvs.Instance.LogT5($"설정 불러오기 실패: {ex.Message}");
            return null;
        }
    }

    // COM 포트 설정을 저장하는 함수
    public static void SaveSettings(Settings settings)
    {
        try
        {
            // 현재 설정 파일을 불러옴
            var config = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None);

            // App.config에서 설정값을 수정
            config.AppSettings.Settings["ComPortName"].Value = settings.PortName;
            config.AppSettings.Settings["BaudRate"].Value = settings.BaudRate.ToString();

            // 수정된 설정을 저장
            config.Save(ConfigurationSaveMode.Modified);
            ConfigurationManager.RefreshSection("appSettings");

            msgvs.Instance.LogT5($"설정 저장 완료: {settings.PortName}, {settings.BaudRate}");
        }
        catch (Exception ex)
        {
            msgvs.Instance.LogT5($"설정 저장 실패: {ex.Message}");
        }
    }
}
3. MainViewModel.cs (App.config에서 설정 불러오기 및 저장)
csharp
코드 복사
public class MainViewModel : ViewModelBase
{
    private ComPortMergeOI _comPort;
    private bool _isComPortConfigured = false;

    public ObservableCollection<CommandModel> UnprocessedCommands { get; set; }
    public ICommand OpenConfigCommand { get; set; }

    public MainViewModel()
    {
        UnprocessedCommands = new ObservableCollection<CommandModel>();
        OpenConfigCommand = new RelayCommand(OpenConfigWindow);

        // 프로그램 시작 시 설정을 불러옴
        LoadComPortSettings();
    }

    // COM 포트 설정을 불러오는 함수
    private void LoadComPortSettings()
    {
        var settings = SettingsManager.LoadSettings();

        if (settings != null)
        {
            try
            {
                _comPort = new ComPortMergeOI(settings.PortName, settings.BaudRate);
                _comPort.OpenPort();
                _isComPortConfigured = true;
                msgvs.Instance.LogT5($"COM 포트 {settings.PortName} 열림");
            }
            catch (Exception ex)
            {
                msgvs.Instance.LogT5($"포트 열기 오류: {ex.Message}");
                OpenConfigWindow(); // 설정된 포트가 잘못되었을 경우 설정창을 띄움
            }
        }
        else
        {
            msgvs.Instance.LogT5("COM 포트 설정이 없습니다.");
            OpenConfigWindow(); // 설정이 없을 경우 설정창을 띄움
        }
    }

    // 설정창을 열고 설정을 저장하는 함수
    private void OpenConfigWindow()
    {
        var configWindow = new ComPortConfigWindow(); // 설정창 인스턴스
        if (configWindow.ShowDialog() == true)
        {
            string portName = configWindow.SelectedPortName;
            int baudRate = configWindow.SelectedBaudRate;

            _comPort = new ComPortMergeOI(portName, baudRate);
            _comPort.OpenPort();
            _isComPortConfigured = true;

            // 설정 저장 (App.config에)
            var settings = new Settings { PortName = portName, BaudRate = baudRate };
            SettingsManager.SaveSettings(settings);

            msgvs.Instance.LogT5($"COM 포트 {portName} 설정 및 저장 완료");
        }
    }
}
설명:
App.config에 설정 저장: SaveSettings 함수는 App.config 파일의 appSettings 섹션에 COM 포트 이름과 BaudRate 값을 저장합니다. ConfigurationManager를 사용해 해당 값을 수정한 뒤 Save() 메서드로 저장합니다.
설정 불러오기: LoadSettings 함수는 App.config에서 저장된 COM 포트와 BaudRate 값을 불러옵니다. 이 값을 사용해 COM 포트를 설정하고, 포트가 잘못 설정된 경우 설정 창을 띄웁니다.
설정이 없거나 잘못된 경우 처리: 처음 프로그램을 실행할 때 설정이 아예 없거나 잘못되어 포트가 열리지 않으면 설정 창이 자동으로 열리게 되어 있습니다.
이 방식을 사용하면 설정이 영구적으로 App.config에 저장되며, 애플