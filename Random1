SM" 또는 "SM"으로 시작하는 파일 이름을 확인하는 정규식을 작성하려면 다음과 같이 할 수 있습니다.

C#에서는 System.Text.RegularExpressions 네임스페이스의 Regex 클래스를 사용하여 정규식을 처리할 수 있습니다. 아래에 "BSM" 또는 "SM"으로 시작하는 파일 이름을 검사하는 정규식과 함께 폴더 검사 로직을 업데이트한 예제를 제공합니다.

정규식 패턴:

regex
코드 복사
^(BSM|SM).*\.jpg$
이 패턴은 "BSM" 또는 "SM"으로 시작하고, 그 뒤에 임의의 문자가 올 수 있으며, ".jpg"로 끝나는 파일 이름을 의미합니다.

업데이트된 코드:

csharp
코드 복사
using System;
using System.IO;
using System.Linq;
using System.Text.RegularExpressions;
using System.Timers;
using System.Windows;

namespace FolderCheckApp
{
    public partial class MainWindow : Window
    {
        private Timer timer;
        private readonly string[] folderPaths = {
            @"C:\Folder1",
            @"C:\Folder2",
            @"D:\Folder3",
            @"E:\Folder4",
            @"F:\Folder5"
        };
        private readonly Regex jpgFilePattern = new Regex(@"^(BSM|SM).*\.jpg$", RegexOptions.IgnoreCase);

        public MainWindow()
        {
            InitializeComponent();
            InitializeTimer();
        }

        private void InitializeTimer()
        {
            timer = new Timer(3600000); // 1 hour interval in milliseconds
            timer.Elapsed += OnTimerElapsed;
            timer.AutoReset = true;
            timer.Start();
        }

        private void OnTimerElapsed(object sender, ElapsedEventArgs e)
        {
            foreach (var folderPath in folderPaths)
            {
                if (Directory.Exists(folderPath))
                {
                    var jpgFiles = Directory.GetFiles(folderPath, "*.jpg", SearchOption.AllDirectories)
                                            .Where(file => jpgFilePattern.IsMatch(Path.GetFileName(file)));
                    if (jpgFiles.Count() >= 20)
                    {
                        var recentFiles = jpgFiles.Where(file => File.GetCreationTime(file) > DateTime.Now.AddHours(-1));
                        if (recentFiles.Any())
                        {
                            // Folder is selected
                            Dispatcher.Invoke(() => PerformNextAction(folderPath));
                            return;
                        }
                    }
                }
            }
        }

        private void PerformNextAction(string selectedFolderPath)
        {
            // Implement the next action to be performed on the selected folder
            MessageBox.Show($"Selected Folder: {selectedFolderPath}");
        }
    }
}
이 코드는 폴더 내에서 "BSM" 또는 "SM"으로 시작하는 파일 이름을 가진 JPG 파일을 필터링합니다. jpgFilePattern 정규식을 사용하여 파일 이름이 조건에 맞는지 확인하고, 조건에 맞는 파일이 20개 이상인 경우와 최근 1시간 이내에 생성된 파일이 있는 경우 해당 폴더를 선택합니다.

이렇게 하면 주어진 조건을 만족하는 폴더를 찾는 WPF 애플리케이션을 구현할 수 있습니다.





B*SM-.+_.+_.+_.+ 과 SM-.+_.+_.+_.+ 을 동시만족하는정규식
ChatGPT
"BSM-.+.+.+.+" 및 "SM-.+.+.+.+" 두 패턴을 동시에 만족하는 정규식을 작성하려면 두 패턴을 조합하는 방식으로 작성할 수 있습니다. 이를 C#에서 사용할 수 있도록 Regex 클래스를 이용한 코드와 함께 설명하겠습니다.

정규식 패턴:

regex
코드 복사
^(B?SM-.+_.+_.+_.+)$
이 패턴은 "B"가 선택적으로 존재할 수 있으며, "SM-"으로 시작하고, 뒤에 임의의 문자가 오며, 밑줄로 구분된 부분이 네 번 반복되는 구조를 갖습니다.

업데이트된 코드:

csharp
코드 복사
using System;
using System.IO;
using System.Linq;
using System.Text.RegularExpressions;
using System.Timers;
using System.Windows;

namespace FolderCheckApp
{
    public partial class MainWindow : Window
    {
        private Timer timer;
        private readonly string[] folderPaths = {
            @"C:\Folder1",
            @"C:\Folder2",
            @"D:\Folder3",
            @"E:\Folder4",
            @"F:\Folder5"
        };
        private readonly Regex jpgFilePattern = new Regex(@"^(B?SM-.+_.+_.+_.+)\.jpg$", RegexOptions.IgnoreCase);

        public MainWindow()
        {
            InitializeComponent();
            InitializeTimer();
        }

        private void InitializeTimer()
        {
            timer = new Timer(3600000); // 1 hour interval in milliseconds
            timer.Elapsed += OnTimerElapsed;
            timer.AutoReset = true;
            timer.Start();
        }

        private void OnTimerElapsed(object sender, ElapsedEventArgs e)
        {
            foreach (var folderPath in folderPaths)
            {
                if (Directory.Exists(folderPath))
                {
                    var jpgFiles = Directory.GetFiles(folderPath, "*.jpg", SearchOption.AllDirectories)
                                            .Where(file => jpgFilePattern.IsMatch(Path.GetFileName(file)));
                    if (jpgFiles.Count() >= 20)
                    {
                        var recentFiles = jpgFiles.Where(file => File.GetCreationTime(file) > DateTime.Now.AddHours(-1));
                        if (recentFiles.Any())
                        {
                            // Folder is selected
                            Dispatcher.Invoke(() => PerformNextAction(folderPath));
                            return;
                        }
                    }
                }
            }
        }

        private void PerformNextAction(string selectedFolderPath)
        {
            // Implement the next action to be performed on the selected folder
            MessageBox.Show($"Selected Folder: {selectedFolderPath}");
        }
    }
}
이 코드에서는 폴더 내에서 "BSM-" 또는 "SM-"로 시작하고, 그 뒤에 밑줄로 구분된 네 개의 부분이 있는 파일 이름을 가진 JPG 파일을 필터링합니다. jpgFilePattern 정규식을 사용하여 파일 이름이 조건에 맞는지 확인하고, 조건에 맞는 파일이 20개 이상인 경우와 최근 1시간 이내에 생성된 파일이 있는 경우 해당 폴더를 선택합니다.

이렇게 하면 주어진 조건을 만족하