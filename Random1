수만 사용하는 사용 예시를 제시합니다.

csharp

using System;
using System.IO;

namespace LogManagement
{
    public class LogManager
    {
        private string logFolderPath;
        private string logFilePath;

        public LogManager(string folderPath)
        {
            logFolderPath = folderPath;
            logFilePath = CreateLogFilePath();
        }

        private string CreateLogFilePath()
        {
            string fileName = DateTime.Now.ToString("yyyyMMdd") + ".log";
            string filePath = Path.Combine(logFolderPath, fileName);

            if (!File.Exists(filePath))
            {
                File.Create(filePath).Dispose();
            }

            return filePath;
        }

        public void AddLogEntry(string logEntry)
        {
            string logLine = $"[{DateTime.Now.ToString("yyyyMMddHHmmss")}]: {logEntry}";
            using (StreamWriter sw = File.AppendText(logFilePath))
            {
                sw.WriteLine(logLine);
            }
        }
    }
}

위의 클래스에서는 LogManager 클래스가 폴더 및 로그 파일 관리를 담당합니다. AddLogEntry() 메서드는 로그 파일에 로그 엔트리를 추가하는 기능을 수행합니다.

다음은 해당 함수만 사용하는 사용 예시입니다:

csharp

using System;
using LogManagement;

namespace LogExample
{
    class Program
    {
        static void Main()
        {
            string logFolderPath = @"C:\Agent\KnoxAPILog";

            LogManager logManager = new LogManager(logFolderPath);
            logManager.AddLogEntry("This is a log entry.");
        }
    }
}

위의 예시에서는 LogManager 클래스의 인스턴스를 생성한 후, AddLogEntry() 메서드를 호출하여 로그를 추가합니다. 이를 통해 로그 파일이 폴더와 함께 자동으로 생성되고 로그가 기록됩니다.

이제 AddLogEntry() 함수