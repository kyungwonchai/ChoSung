차트가 제대로 렌더링되지 않고 회색 사각형만 보이는 문제는 Chart.js 초기화 또는 데이터 바인딩 관련 문제일 가능성이 높습니다. 이 문제를 해결하기 위해 아래 내용을 확인하고 수정하겠습니다.

수정된 HTML 템플릿
html
코드 복사
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>PLC Error Viewer</title>
    <!-- 로컬에 저장된 Chart.js 및 jQuery -->
    <script src="{{ url_for('static', filename='js/Chart.min.js') }}"></script>
    <script src="{{ url_for('static', filename='js/jquery.min.js') }}"></script>
    <style>
        body {
            background-color: #121212; /* 다크 배경 */
            color: #e0e0e0; /* 텍스트 색상 */
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
        }
        h1 {
            text-align: center;
            color: #00bcd4;
        }
        .charts {
            display: flex;
            justify-content: space-between;
            gap: 20px;
            margin-bottom: 20px;
        }
        .chart-container {
            flex: 1;
            height: 300px; /* 차트 컨테이너 높이 */
            background-color: #1e1e1e;
            border-radius: 10px;
            padding: 10px;
        }
        canvas {
            width: 100% !important;
            height: 100% !important;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            background-color: #1e1e1e;
        }
        thead {
            background-color: #004d66;
        }
        thead th, tbody td {
            padding: 8px;
            text-align: left;
        }
        tbody tr:nth-child(even) {
            background-color: #2a2a2a;
        }
        tbody tr:hover {
            background-color: #3d3d3d;
        }
        .pagination {
            text-align: center;
            margin: 20px 0;
        }
        .pagination button {
            padding: 8px 16px;
            margin: 0 5px;
            border: none;
            border-radius: 5px;
            background-color: #00bcd4;
            color: #fff;
            cursor: pointer;
        }
        .pagination button.disabled {
            background-color: #555;
            cursor: not-allowed;
        }
    </style>
</head>
<body>
    <h1>PLC Error Logs</h1>
    <div class="charts">
        <div class="chart-container">
            <canvas id="lineChart"></canvas>
        </div>
        <div class="chart-container">
            <canvas id="errorChart"></canvas>
        </div>
    </div>
    <input type="text" id="search" placeholder="라인명, 에러번호, 에러값으로 검색">
    <table>
        <thead>
            <tr>
                <th>라인명</th>
                <th>에러번호</th>
                <th>에러값</th>
                <th>시간</th>
            </tr>
        </thead>
        <tbody id="tableBody">
            {% for row in data %}
                <tr>
                    <td>{{ row['라인명'] }}</td>
                    <td>{{ row['에러번호'] }}</td>
                    <td>{{ row['에러값'] }}</td>
                    <td>{{ row['시간'] }}</td>
                </tr>
            {% endfor %}
        </tbody>
    </table>
    <div class="pagination">
        <button {% if current_page == 1 %}class="disabled"{% endif %} onclick="changePage({{ current_page - 1 }})">이전</button>
        <button {% if current_page == total_pages %}class="disabled"{% endif %} onclick="changePage({{ current_page + 1 }})">다음</button>
    </div>

    <script>
        $(document).ready(function () {
            const lineData = {{ line_counts | tojson }};
            const errorData = {{ error_counts | tojson }};
            const ctxLine = document.getElementById('lineChart').getContext('2d');
            const ctxError = document.getElementById('errorChart').getContext('2d');

            // 라인명별 발생수 차트
            new Chart(ctxLine, {
                type: 'bar',
                data: {
                    labels: lineData.map(d => d['라인명']),
                    datasets: [{
                        label: '라인별 발생수',
                        data: lineData.map(d => d['발생수']),
                        backgroundColor: '#007acc',
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: { display: false }
                    }
                }
            });

            // 에러번호별 발생수 차트
            new Chart(ctxError, {
                type: 'bar',
                data: {
                    labels: errorData.map(d => d['에러번호']),
                    datasets: [{
                        label: '에러번호별 발생수',
                        data: errorData.map(d => d['발생수']),
                        backgroundColor: '#ff5722',
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: { display: false }
                    }
                }
            });
        });

        function changePage(page) {
            window.location.href = `/PLCErr?page=${page}`;
        }
    </script>
</body>
</html>
수정 내용
canvas 컨테이너 추가:

차트 컨테이너(.chart-container)를 추가하여 차트 높이와 크기를 명시적으로 지정했습니다.
canvas의 width와 height를 강제 설정해 차트가 제대로 표시되도록 수정했습니다.
차트 초기화 확인:

$(document).ready()를 사용해 DOM이 완전히 로드된 뒤 차트를 초기화합니다.
차트 데이터 바인딩:

Flask에서 전달받은 line_counts와 error_counts 데이터를 JavaScript에 제대로 바인딩하도록 확인했습니다.
차트 스타일 개선:

차트 간 간격을 조정하고, 시각적으로 구분되도록 배경 및 패딩을 설정했습니다.
주요 확인 포인트
데이터 확인:

Flask에서 전달된 line_counts와 error_counts가 비어 있지 않은지 확인하세요. 데이터가 없으면 차트가 렌더링되지 않습니다.
브라우저 콘솔 확인:

브라우저 개발자 도구에서 콘솔 에러를 확인하세요. Chart.js 초기화 실패 시 오류 메시지가 표시됩니다.
로컬 파일 확인:

Chart.min.js와 jquery.min.js 파일이 Flask 프로젝트의 static/js/ 디렉토리에 제대로 위치해 있는지 확인하세요.