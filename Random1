using System;
using System.Data;
using System.Data.SqlClient;
using System.Windows.Forms;

namespace YourNamespace
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        private void button1_Click(object sender, EventArgs e)
        {
            string connectionStringA = "Data Source=SERVER_A;Initial Catalog=db1;Integrated Security=True";
            string connectionStringB = "Data Source=SERVER_B;Initial Catalog=db2;Integrated Security=True";
            
            // 데이터를 저장할 DataTable 생성
            DataTable resultTable = new DataTable();
            resultTable.Columns.Add("Column1", typeof(string));
            resultTable.Columns.Add("Column2", typeof(string));
            // 필요한 컬럼을 추가로 생성
            
            using (SqlConnection connectionA = new SqlConnection(connectionStringA))
            using (SqlConnection connectionB = new SqlConnection(connectionStringB))
            {
                // 서버 A의 데이터 가져오기
                string queryA = "SELECT aa.Column1, aa.Column2, aa.ddd " +
                                "FROM aa LEFT OUTER JOIN bb ON aa.ddd = bb.ddd";
                SqlCommand commandA = new SqlCommand(queryA, connectionA);
                connectionA.Open();
                SqlDataReader readerA = commandA.ExecuteReader();
                while (readerA.Read())
                {
                    string column1Value = readerA.GetString(0);
                    string column2Value = readerA.GetString(1);
                    // ddd 컬럼 값 가져오기
                    
                    // DataRow 생성 및 값 할당
                    DataRow row = resultTable.NewRow();
                    row["Column1"] = column1Value;
                    row["Column2"] = column2Value;
                    // 필요한 컬럼 값 할당
                    
                    resultTable.Rows.Add(row);
                }
                readerA.Close();
                connectionA.Close();
            }
            
            // resultTable을 반복 처리하는 코드 작성
            foreach (DataRow row in resultTable.Rows)
            {
                // 각 행의 데이터 처리
                string column1Value = row["Column1"].ToString();
                string column2Value = row["Column2"].ToString();
                // 필요한 컬럼 값 가져와서 처리
                
                // TODO: 데이터 처리 로직 구현
            }
        }
    }
}
