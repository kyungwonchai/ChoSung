네, 가능합니다. C# 콘솔 애플리케이션으로 단일 실행 파일(.exe)을 만들어, 실행 시 기본 브라우저 창 두 개를 화면 좌우에 완벽하게 정렬하여 띄울 수 있습니다.

이 작업은 외부 프로세스(브라우저)를 실행하고, Windows API를 호출하여 해당 프로세스의 창 위치와 크기를 직접 제어하는 방식으로 이루어집니다.

아래에 바로 사용할 수 있는 전체 코드를 제공해 드립니다.

C# 전체 코드 (Program.cs)
C#

using System;
using System.Diagnostics;
using System.Drawing; // Screen 클래스 사용을 위해 System.Drawing.Common NuGet 패키지 또는 프레임워크 참조가 필요합니다.
using System.Runtime.InteropServices;
using System.Threading;

public class BrowserLauncher
{
    // Windows API 함수를 C#에서 사용하기 위한 선언 (P/Invoke)
    // 지정된 핸들(hWnd)을 가진 창의 위치와 크기를 변경합니다.
    [DllImport("user32.dll", SetLastError = true)]
    private static extern bool MoveWindow(IntPtr hWnd, int X, int Y, int nWidth, int nHeight, bool bRepaint);

    public static void Main(string[] args)
    {
        // 💡 1. 여기에 두 개의 웹 주소를 입력하세요.
        string urlLeft = "https://www.google.com";
        string urlRight = "https://www.bing.com";

        Console.WriteLine("화면 해상도를 가져오는 중...");

        // 2. 주 모니터의 전체 해상도를 가져옵니다.
        Rectangle screen = Screen.PrimaryScreen.Bounds;
        int screenWidth = screen.Width;
        int screenHeight = screen.Height;

        Console.WriteLine($"해상도: {screenWidth} x {screenHeight}");
        Console.WriteLine("왼쪽 브라우저 창을 실행하고 위치를 조정합니다...");

        // 3. 왼쪽 브라우저 창 실행 및 위치 조정
        LaunchAndPositionBrowser(urlLeft, 0, 0, screenWidth / 2, screenHeight);

        Console.WriteLine("오른쪽 브라우저 창을 실행하고 위치를 조정합니다...");

        // 4. 오른쪽 브라우저 창 실행 및 위치 조정
        LaunchAndPositionBrowser(urlRight, screenWidth / 2, 0, screenWidth / 2, screenHeight);

        Console.WriteLine("\n프로그램이 5초 후에 자동으로 종료됩니다.");
        Thread.Sleep(5000);
    }

    /// <summary>
    /// 브라우저를 실행하고 지정된 위치/크기로 창을 조정하는 함수
    /// </summary>
    private static void LaunchAndPositionBrowser(string url, int x, int y, int width, int height)
    {
        // 기본 브라우저로 URL을 열기 위한 프로세스 정보 생성
        var psi = new ProcessStartInfo(url)
        {
            UseShellExecute = true // UseShellExecute를 true로 설정해야 기본 브라우저가 실행됩니다.
        };

        try
        {
            Process process = Process.Start(psi);

            // 💡 중요: 프로세스가 시작되고 메인 창 핸들이 생성될 때까지 기다립니다.
            // 브라우저가 창을 만드는 데 시간이 걸릴 수 있으므로, 핸들이 잡힐 때까지 잠시 대기합니다.
            int timeoutMilliseconds = 5000; // 최대 5초 대기
            Stopwatch stopwatch = Stopwatch.StartNew();

            while (process.MainWindowHandle == IntPtr.Zero && stopwatch.ElapsedMilliseconds < timeoutMilliseconds)
            {
                // 최신 상태를 반영하기 위해 프로세스 정보를 갱신합니다.
                process.Refresh();
                Thread.Sleep(100);
            }
            
            stopwatch.Stop();

            if (process.MainWindowHandle != IntPtr.Zero)
            {
                // 창 핸들을 찾았으면 MoveWindow API를 호출하여 위치와 크기를 설정합니다.
                MoveWindow(process.MainWindowHandle, x, y, width, height, true);
                Console.WriteLine($"성공: {url} 창을 ({x}, {y}) 위치에 {width}x{height} 크기로 설정했습니다.");
            }
            else
            {
                Console.WriteLine($"오류: {url}의 창 핸들을 시간 내에 찾지 못했습니다.");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"오류 발생: {ex.Message}");
        }
    }
}
⚙️ 사용 방법
프로젝트 생성: Visual Studio를 열고 '새 프로젝트 만들기'를 선택합니다.

프로젝트 템플릿으로 **C# '콘솔 앱(Console App)'**을 선택하고 다음을 누릅니다.
프로젝트 이름을 정하고, 프레임워크는 .NET 6.0 이상을 선택하는 것을 권장합니다.
프레임워크 참조 추가: Screen 클래스를 사용하려면 System.Windows.Forms 라이브러리 참조가 필요합니다.

솔루션 탐색기에서 프로젝트 파일(.csproj 파일)을 더블 클릭합니다.
열리는 csproj 파일 안에 아래와 같이 <FrameworkReference> 항목을 추가하고 저장합니다.
XML

<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net8.0</TargetFramework> <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
  </PropertyGroup>

  <ItemGroup>
    <FrameworkReference Include="Microsoft.WindowsDesktop.App.WindowsForms" />
  </ItemGroup>

</Project>
코드 붙여넣기: 위에서 제공한 C# 전체 코드를 Program.cs 파일에 모두 붙여넣습니다. 코드 상단의 urlLeft, urlRight 변수에 원하는 주소를 입력합니다.

빌드(Build): 상단 메뉴에서 빌드 > 솔루션 빌드를 선택하거나 Ctrl + Shift + B를 누릅니다.

실행 파일 확인: 빌드가 성공하면 프로젝트 폴더 안의 bin\Debug\net8.0 (프레임워크 버전에 따라 다름) 폴더에 .exe 실행 파일이 생성됩니다. 이 파일을 실행하면 코드가 동작합니다.

⚠️ 주의사항
기본 브라우저: 이 코드는 윈도우에 설정된 '기본 브라우저'를 실행합니다.
팝업 차단: 브라우저의 팝업 차단 설정이 너무 강력하면 새 창이 열리지 않을 수 있습니다.