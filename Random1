면이 꺼졌을 때 자동으로 켜지도록 하기 위해서는 Wake Lock과 Wake Up 기능을 적절히 사용해야 합니다. PowerManager의 WakeLock을 제대로 설정하여 화면을 켜고, 화면이 꺼졌을 때 강제로 깨우는 기능을 추가해야 합니다.

PowerManager를 사용하여 WakeLock을 설정할 때, 올바른 플래그와 설정을 사용해야 합니다. ACQUIRE_CAUSES_WAKEUP 및 FULL_WAKE_LOCK 플래그를 사용해야 화면이 꺼졌을 때도 켜질 수 있습니다.

수정된 wakeUpScreen 코드
아래는 wakeUpScreen 함수가 화면이 꺼졌을 때 정확히 동작하도록 수정한 코드입니다.

kotlin
코드 복사
import android.os.PowerManager

private fun wakeUpScreen() {
    val powerManager = getSystemService(Context.POWER_SERVICE) as PowerManager
    val isScreenOn = if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT_WATCH) {
        powerManager.isInteractive
    } else {
        @Suppress("DEPRECATION")
        powerManager.isScreenOn
    }

    if (!isScreenOn) {
        val wakeLock = powerManager.newWakeLock(
            PowerManager.FULL_WAKE_LOCK or PowerManager.ACQUIRE_CAUSES_WAKEUP or PowerManager.ON_AFTER_RELEASE,
            "RouterACRAlarm::WakeLockTag"
        )
        wakeLock.acquire(3000) // 3초 동안 화면을 켜짐 상태로 유지
        wakeLock.release() // Wake Lock 해제
    }
}
설명
PowerManager.FULL_WAKE_LOCK:

이 플래그는 화면이 꺼졌을 때도 완전히 화면을 켤 수 있도록 합니다.
ACQUIRE_CAUSES_WAKEUP 플래그와 함께 사용하면, 화면이 꺼져 있는 상태에서도 강제로 화면을 켜도록 합니다.
ACQUIRE_CAUSES_WAKEUP:

화면이 꺼져 있을 때, WakeLock이 획득되면 화면을 켜도록 강제합니다.
ON_AFTER_RELEASE:

WakeLock이 해제된 후에도 화면을 일정 시간 동안 유지하도록 합니다.
Wake Lock 획득 시간:

wakeLock.acquire(3000)은 3초 동안 WakeLock을 유지하여 화면이 켜지도록 합니다. 이후 wakeLock.release()를 통해 해제합니다.
추가 주의 사항
배터리 절약: WakeLock을 길게 유지하면 배터리를 소모할 수 있으므로, 가능한 짧은 시간 동안 유지한 후 해제해야 합니다.
권한: WakeLock을 사용하려면 AndroidManifest.xml에 다음과 같이 권한을 추가해야 합니다.
xml
코드 복사