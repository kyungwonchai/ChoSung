using System;
using System.IO.Ports;
using System.Threading.Tasks;

public class CommandQueueViewModel
{
    private SerialPort _serialPort;
    private int _retryCount = 0;
    private const int MaxRetryCount = 10;  // 최대 10회까지 재시도 (10분)
    private const int RetryInterval = 60000; // 1분 간격으로 재시도 (60000 밀리초 = 1분)

    public CommandQueueViewModel(string comPort)
    {
        InitializeComPort(comPort);
    }

    // COM 포트 초기화
    private void InitializeComPort(string comPort)
    {
        _serialPort = new SerialPort(comPort);
        _serialPort.BaudRate = 9600;  // 필요한 설정들
        _serialPort.Parity = Parity.None;
        _serialPort.StopBits = StopBits.One;
        _serialPort.DataBits = 8;
        _serialPort.Handshake = Handshake.None;
    }

    // 명령을 순차적으로 실행하는 함수
    public async Task<CommandResult> ExecuteCommandsAsync(Func<Task<CommandResult>> command)
    {
        CommandResult result = null;
        try
        {
            if (!_serialPort.IsOpen)
            {
                _serialPort.Open();  // 포트가 닫혀 있으면 연다
            }

            // 명령 실행
            result = await command();

            if (!result.Success)
            {
                // 실패 시 처리
                throw new Exception(result.ErrorMessage);
            }
        }
        catch (IOException ex) when (ex.Message.Contains("시스템에 부착된 장치가 작동하지 않습니다"))
        {
            // 장치 연결 문제 시
            await RetryReconnectAsync();
        }
        catch (Exception ex)
        {
            // 그 외 일반 예외 처리
            return new CommandResult
            {
                Success = false,
                ErrorMessage = ex.Message
            };
        }

        return result;
    }

    // 장치 재연결을 시도하는 함수
    private async Task RetryReconnectAsync()
    {
        while (_retryCount < MaxRetryCount)
        {
            try
            {
                // 연결 상태 체크
                if (_serialPort.IsOpen)
                {
                    _serialPort.Close();  // 연결이 안 되어 있다면 우선 닫고
                }

                // 다시 연결 시도
                _serialPort.Open();

                if (_serialPort.IsOpen)  // 성공적으로 열렸다면
                {
                    _retryCount = 0; // 재시도 카운트 리셋
                    Console.WriteLine("COM 포트 재연결 성공!");
                    return;  // 연결 성공 시 정상 종료
                }
            }
            catch (Exception)
            {
                _retryCount++;
                Console.WriteLine($"재연결 시도 {_retryCount}회 실패. 1분 후 다시 시도합니다.");

                // 1분 대기 후 재시도
                await Task.Delay(RetryInterval);
            }
        }

        // 10분간 시도 후에도 실패 시 에러 리턴
        throw new IOException("장치 연결 실패: 시스템에 부착된 장치가 작동하지 않습니다.");
    }
}

// 명령 실행 결과를 리턴하는 클래스
public class CommandResult
{
    public bool Success { get; set; }
    public string ErrorMessage { get; set; }
}
