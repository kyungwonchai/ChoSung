using System;
using System.Data;
using System.Data.SqlClient;
using System.Windows.Forms;

namespace YourNamespace
{
    public partial class MainForm : Form
    {
        private SqlConnection connection;
        private string connectionString = "your_connection_string";

        public MainForm()
        {
            InitializeComponent();
        }

        private void MainForm_Load(object sender, EventArgs e)
        {
            ConnectToDatabase();
            ProcessData();
        }

        private void ConnectToDatabase()
        {
            try
            {
                connection = new SqlConnection(connectionString);
                connection.Open();
                MessageBox.Show("Connected to the database.");
            }
            catch (Exception ex)
            {
                MessageBox.Show("Failed to connect to the database.");
            }
        }

        private void ProcessData()
        {
            // 서버 시간을 가져오는 쿼리 실행
            string serverTimeQuery = "SELECT GETDATE() AS ServerTime";
            SqlCommand serverTimeCommand = new SqlCommand(serverTimeQuery, connection);
            DateTime serverTime = (DateTime)serverTimeCommand.ExecuteScalar();

            // 현재 시간에서 10분을 뺀 시간 계산
            DateTime tenMinutesAgo = serverTime.AddMinutes(-10);

            // 첫 번째 조건에 맞는 데이터 처리
            ProcessCondition1(tenMinutesAgo);

            // 두 번째 조건에 맞는 데이터 처리
            ProcessCondition2(tenMinutesAgo);
        }

        private void ProcessCondition1(DateTime tenMinutesAgo)
        {
            // 첫 번째 조건에 대한 쿼리문 작성
            string query = "SELECT * FROM YourTable " +
                           "WHERE datetime1 > @TenMinutesAgo AND lastgetcount <= 500 " +
                           "AND logdatetime1 > @TenMinutesAgo AND lastprocess = 'OFF'";

            // SqlCommand 객체 생성
            SqlCommand command = new SqlCommand(query, connection);
            command.Parameters.AddWithValue("@TenMinutesAgo", tenMinutesAgo);

            // 쿼리 실행 및 결과 가져오기
            SqlDataReader reader = command.ExecuteReader();

            // 결과 처리
            while (reader.Read())
            {
                // 한 행씩 데이터 처리 함수 호출
                ProcessFunction1(reader);
            }

            // 리더 닫기
            reader.Close();
        }

        private void ProcessCondition2(DateTime tenMinutesAgo)
        {
            // 두 번째 조건에 대한 쿼리문 작성
            string query = "SELECT * FROM YourTable " +
                           "WHERE datetime1 < @TenMinutesAgo AND lastgetcount <= 500 " +
                           "AND logdatetime1 < @TenMinutesAgo AND lastprocess = 'ON'";

            // SqlCommand 객체 생성
            SqlCommand command = new SqlCommand(query, connection);
            command.Parameters.AddWithValue("@TenMinutesAgo", tenMinutesAgo);

            // 쿼리 실행 및 결과 가져오기
            SqlDataReader reader = command.ExecuteReader();

            // 결과 처리
            while (reader.Read())
            {
                // 한 행씩 데이터 처리 함수 호출
                ProcessFunction2(reader);
            }

            // 리더 닫기
            reader.Close();
        }

        private void ProcessFunction1(SqlDataReader reader)
        {
            //
