F 애플리케이션의 이중 실행을 방지하고, 이미 실행 중인 인스턴스가 있을 경우 새로운 인스턴스를 종료한 후 기존 인스턴스를 활성화하려면 Mutex와 Windows API를 조합해서 구현할 수 있습니다.

1. Mutex를 사용하여 이중 실행 방지
Mutex 객체를 활용하여 애플리케이션의 이중 실행을 방지할 수 있습니다. Mutex는 단일 인스턴스 애플리케이션을 만들 때 자주 사용되는 방법으로, 이미 실행 중인 애플리케이션이 있는 경우 새로운 인스턴스를 종료할 수 있습니다.

2. Windows API로 기존 인스턴스 활성화
ShowWindow와 SetForegroundWindow Windows API를 사용하여 이미 실행 중인 인스턴스를 화면에 활성화할 수 있습니다.

예제 코드
다음은 WPF 앱의 App.xaml.cs 파일에서 OnStartup 메서드를 오버라이드하여 이중 실행을 방지하고, 기존 인스턴스를 활성화하는 코드 예제입니다.

csharp
코드 복사
using System;
using System.Runtime.InteropServices;
using System.Threading;
using System.Windows;

namespace YourNamespace
{
    public partial class App : Application
    {
        private static Mutex mutex;

        // Windows API를 사용하여 창 활성화
        [DllImport("user32.dll")]
        private static extern bool SetForegroundWindow(IntPtr hWnd);

        [DllImport("user32.dll")]
        private static extern bool ShowWindow(IntPtr hWnd, int nCmdShow);
        private const int SW_RESTORE = 9;

        protected override void OnStartup(StartupEventArgs e)
        {
            const string appMutexName = "UniqueWpfAppMutexName";
            bool isNewInstance;

            // Mutex 생성 및 고유 이름 설정
            mutex = new Mutex(true, appMutexName, out isNewInstance);

            if (!isNewInstance)
            {
                // 기존 인스턴스 찾기
                var currentProcess = System.Diagnostics.Process.GetCurrentProcess();
                foreach (var process in System.Diagnostics.Process.GetProcessesByName(currentProcess.ProcessName))
                {
                    if (process.Id != currentProcess.Id)
                    {
                        // 창 활성화
                        ShowWindow(process.MainWindowHandle, SW_RESTORE);
                        SetForegroundWindow(process.MainWindowHandle);
                        break;
                    }
                }

                // 이중 실행 중이므로 종료
                Shutdown();
                return;
            }

            // 기본 시작
            base.OnStartup(e);
        }

        protected override void OnExit(ExitEventArgs e)
        {
            // Mutex 해제
            mutex?.ReleaseMutex();
            base.OnExit(e);
        }
    }
}
설명
Mutex 설정: appMutexName에 고유한 이름을 설정하여 Mutex 객체를 만듭니다. 이 이름이 애플리케이션의 고유 ID 역할을 합니다.

중복 인스턴스 체크: isNewInstance가 false일 경우, 이미 애플리케이션이 실행 중인 것이므로 새로운 인스턴스는 바로 종료됩니다.

기존 인스턴스 활성화:

이미 실행 중인 인스턴스의 MainWindowHandle을 가져와 ShowWindow와 SetForegroundWindow를 사용하여 기존 창을 활성화합니다.
ShowWindow의 SW_RESTORE 옵션으로 최소화된 창을 복원할 수 있습니다.
애플리케이션 종료: 새로운 인스턴스는 Shutdown()을 호출하여 종료됩니다.