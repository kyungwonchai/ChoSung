xpress GridControl의 GridView 기준으로 필터링하고 출력하는 방법을 제공합니다. 클래스 정의 없이 GridView의 데이터를 필터링하는 방법을 소개하겠습니다.

먼저, XAML 파일에서 GridControl과 Button을 정의합니다:

XAML 파일 (MainWindow.xaml):
xml
코드 복사
<Window x:Class="YourNamespace.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Grid>
        <dxg:GridControl x:Name="gridControl" AutoGenerateColumns="AddNew">
            <dxg:GridControl.Columns>
                <dxg:GridColumn FieldName="확정일" />
                <dxg:GridColumn FieldName="모델값" />
                <dxg:GridColumn FieldName="Key1" />
                <dxg:GridColumn FieldName="Key2" />
                <dxg:GridColumn FieldName="여유1" />
            </dxg:GridControl.Columns>
        </dxg:GridControl>
        <Button Content="Print Rows" VerticalAlignment="Bottom" Click="OnPrintRowsClick" />
    </Grid>
</Window>
C# 파일 (MainWindow.xaml.cs):
csharp
코드 복사
using System.Diagnostics;
using System.Windows;
using DevExpress.Xpf.Grid;

namespace YourNamespace
{
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
            LoadData();
        }

        private void LoadData()
        {
            var data = new[]
            {
                new { 확정일 = "2024-07-11", 모델값 = "ModelA", Key1 = "Value1", Key2 = "Value2", 여유1 = "Extra1" },
                new { 확정일 = "2024-07-12", 모델값 = "ModelB", Key1 = "Value3", Key2 = "Value4", 여유1 = "Extra2" },
                // 필요한 만큼 데이터 추가
            };

            gridControl.ItemsSource = data;
        }

        private void OnPrintRowsClick(object sender, RoutedEventArgs e)
        {
            string desiredDate = "2024-07-11";
            string desiredModel = "ModelA";

            var view = gridControl.View as TableView;
            if (view != null)
            {
                foreach (var row in view.DataControl.ItemsSource)
                {
                    var rowView = row as dynamic;
                    if (rowView.확정일 == desiredDate && rowView.모델값 == desiredModel)
                    {
                        Debug.WriteLine($"Key1: {rowView.Key1}, Key2: {rowView.Key2}, 여유1: {rowView.여유1}");
                    }
                }
            }
        }
    }
}
이 코드는 다음과 같이 작동합니다:

MainWindow.xaml에서 GridControl과 Button을 정의합니다.
MainWindow.xaml.cs에서 LoadData 메서드를 사용하여 GridControl에 익명 타입의 데이터를 로드합니다.
버튼 클릭 시 OnPrintRowsClick 이벤트 핸들러가 호출되어 확정일과 모델값이 특정 값과 일치하는 모든 행을 필터링하고, 해당 행의 Key1, Key2, 여유1 값을 디버그 콘솔에 출력합니다.
이 코드로 원하는 기능을 구현할 수 있기를 바랍니다. 필요한 부분을 자유롭게