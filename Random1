HTML과 CSS로 그라데이션 배경색을 적용하려면 CSS의 linear-gradient 속성을 사용해야 합니다. 아래는 조건에 따라 셀 배경색을 연핑크 그라데이션과 진한 핑크 그라데이션으로 적용하는 방식입니다.

HTML 코드 수정 (Flask 연동 포함)
html
코드 복사
<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>그라데이션 배경색</title>
    <style>
        table {
            width: 50%;
            border-collapse: collapse;
            margin: 20px auto;
        }
        th, td {
            border: 1px solid #ddd;
            text-align: center;
            padding: 8px;
        }
        th {
            background-color: #f4f4f4;
        }

        /* 연핑크 그라데이션 */
        .light-pink {
            background: linear-gradient(to right, #ffe6e6, #ffb3b3);
            color: black; /* 텍스트 가독성 유지 */
        }

        /* 진한 핑크 그라데이션 */
        .dark-pink {
            background: linear-gradient(to right, #ff6666, #ff3333);
            color: white; /* 텍스트 가독성 유지 */
        }
    </style>
</head>
<body>
    <table>
        <thead>
            <tr>
                <th>ID</th>
                <th>이름</th>
                <th>CPAPER</th>
            </tr>
        </thead>
        <tbody>
            {% for row in data %}
            <tr>
                <td>{{ row.id }}</td>
                <td>{{ row.name }}</td>
                <td 
                    {% if row.CPAPER > 20 %}
                        class="dark-pink"
                    {% elif row.CPAPER <= 0 %}
                        class="light-pink"
                    {% endif %}
                >
                    {{ row.CPAPER }}
                </td>
            </tr>
            {% endfor %}
        </tbody>
    </table>
</body>
</html>
Flask 서버 코드
python
코드 복사
from flask import Flask, render_template

app = Flask(__name__)

@app.route('/')
def index():
    # 샘플 데이터
    data = [
        {"id": 1, "name": "Item A", "CPAPER": 25},
        {"id": 2, "name": "Item B", "CPAPER": 20},
        {"id": 3, "name": "Item C", "CPAPER": -5},
        {"id": 4, "name": "Item D", "CPAPER": 0},
    ]
    return render_template('index.html', data=data)

if __name__ == '__main__':
    app.run(debug=True)
CSS 스타일 설명
연핑크 그라데이션 (light-pink)

#ffe6e6에서 #ffb3b3로 이어지는 부드러운 핑크 색상입니다.
linear-gradient(to right, #ffe6e6, #ffb3b3)를 사용해 그라데이션 배경을 설정했습니다.
텍스트 가독성을 위해 color: black을 추가했습니다.
진한 핑크 그라데이션 (dark-pink)

#ff6666에서 #ff3333로 이어지는 강렬한 핑크 색상입니다.
linear-gradient(to right, #ff6666, #ff3333)로 설정했습니다.
텍스트 가독성을 위해 color: white를 추가했습니다.
조건에 따른 스타일 적용
CPAPER > 20: 진한 핑크 그라데이션 (dark-pink)
CPAPER <= 0: 연핑크 그라데이션 (light-pink)
다른 값에는 스타일을 적용하지 않음 (기본 스타일 유지).
결과 확인 방법
Flask 서버 실행:
bash
코드 복사
python app.py
브라우저에서 http://127.0.0.1:5000/로 접속.
CPAPER 값에 따라 셀이 연핑크 또는 진한 핑크 그라데이션으로 표시됩니다.
효과적인 사용