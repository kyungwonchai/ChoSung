문제를 확인해보니, 서버에서 전달된 JSON 응답이 Android에서 올바르게 파싱되지 않는 이유는 문자열에 불필요한 줄바꿈(\n)과 공백이 포함되어 있기 때문입니다. JSON 데이터 자체는 올바른 것 같지만, Android에서 이를 처리할 때 문제가 발생하고 있습니다.

줄바꿈과 공백이 포함된 JSON 데이터를 처리하는 방법을 설명하겠습니다.

1. JSON 데이터를 정리하여 파싱
기본적으로 줄바꿈(\n)이나 공백이 있는 JSON 문자열은 JSONObject에서 처리할 수 있지만, 경우에 따라 문제가 발생할 수 있습니다. 이를 해결하기 위해 응답 데이터를 트리밍(앞뒤 공백 제거)하고, JSON 파싱 전에 형식이 올바른지 확인하는 방법을 사용하겠습니다.

kotlin
코드 복사
private suspend fun checkForUpdates(context: Context, apkName: String) {
    Log.d("TTTTT", "Starting checkForUpdates for $apkName")

    val client = OkHttpClient()
    val request = Request.Builder()
        .url("http://10.244.122.222:8116/api/$apkName/version")
        .build()

    try {
        val response = client.newCall(request).execute()

        if (!response.isSuccessful) {
            Log.e("TTTTT", "Unexpected response code: ${response.code}")
            return
        }

        var responseData = response.body?.string()?.trim()
        Log.d("TTTTT", "Received response: $responseData")

        // JSON 파싱 전에 데이터 정리 및 형식 확인
        if (responseData != null && responseData.startsWith("{") && responseData.endsWith("}")) {
            try {
                val jsonObject = JSONObject(responseData)
                val latestVersion = jsonObject.getString("version")
                val apkUrl = jsonObject.getString("apk_url")
                Log.d("TTTTT", "Parsed version: $latestVersion, apk_url: $apkUrl")

                // APK 다운로드 및 설치 로직
                downloadAndInstallApk(context, apkUrl, apkName)
            } catch (e: JSONException) {
                Log.e("TTTTT", "Failed to parse JSON: $responseData", e)
            }
        } else {
            Log.e("TTTTT", "Response is not a valid JSON: $responseData")
        }
    } catch (e: Exception) {
        Log.e("TTTTT", "Error during checkForUpdates: ${e.message}", e)
    }
}
2. 문제 해결을 위한 추가 방법
서버 측에서 줄바꿈 제거:

가능하다면, Flask 서버에서 JSON 데이터를 반환할 때 줄바꿈(\n)을 제거하는 것이 좋습니다.
Flask에서 데이터를 반환할 때 불필요한 줄바꿈을 제거하려면 jsonify 함수가 제대로 동작하도록 설정합니다.

python
코드 복사
@app.route('/api/apk1/version', methods=['GET'])
def apk1_version():
    version_info = {
        "version": "1.2",
        "apk_url": "/download/apk1"
    }
    return jsonify(version_info)
jsonify 함수는 기본적으로 JSON 데이터를 올바르게 인코딩하여 반환합니다. 만약 여전히 줄바꿈이 포함된다면, 다음과 같이 줄바꿈을 제거할 수 있습니다:

python
코드 복사
@app.route('/api/apk1/version', methods=['GET'])
def apk1_version():
    version_info = {
        "version": "1.2",
        "apk_url": "/download/apk1"
    }
    return jsonify(version_info).get_data(as_text=True).replace("\n", "")
Android 측에서 JSON 파싱 전에 공백 및 줄바꿈 제거:

JSON 데이터를 파싱하기 전에 줄바꿈을 제거하고, 추가적인 공백을 정리합니다.
kotlin
코드 복사
responseData = responseData?.replace("\n", "")?.trim()
이를 통해 JSON 데이터가 올바르게 파싱될 수 있도록 합니다.

결론
위의 코드와 방법으로 Android 앱에서 JSON 데이터를 처리할 때 발생하는 문제를 해결할 수 있습니다. JSON 응답의 불필요한 줄바꿈과 공백을 제거함으로써 JSONException을 방지하고, JSON 데이터를 올바르게 파싱할 수 있게 됩니다.

이제 이 코드를 적용한 후 다시 테스트해보세요. 여전히 문제가 발생하면 더 자세한 로그를 통해 문제를 파악하고, 추가적인 도움을 드리겠습니다. 다시 한 번 불편을 끼쳐드려 죄송합니다.