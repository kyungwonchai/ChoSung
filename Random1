스트를 수정하여 관리자 권한을 요구하도록 설정해야 합니다. 이를 위해 다음 단계를 따르세요:

Visual Studio에서 프로젝트를 엽니다.
프로젝트 파일을 우클릭하고 "추가" > "새 항목"을 선택합니다.
"애플리케이션 매니페스트 파일"을 선택하고 "추가"를 클릭합니다.
추가된 app.manifest 파일을 열고, requestedExecutionLevel 요소를 찾아 아래와 같이 수정합니다:
xml
코드 복사
<requestedExecutionLevel level="requireAdministrator" uiAccess="false" />
전체 app.manifest 파일의 예시는 다음과 같습니다:

xml
코드 복사
<?xml version="1.0" encoding="utf-8"?>
<assembly xmlns="urn:schemas-microsoft-com:asm.v1" manifestVersion="1.0">
  <trustInfo xmlns="urn:schemas-microsoft-com:asm.v3">
    <security>
      <requestedPrivileges>
        <requestedExecutionLevel level="requireAdministrator" uiAccess="false" />
      </requestedPrivileges>
    </security>
  </trustInfo>
</assembly>
이 설정은 프로그램이 실행될 때 관리자 권한을 요구하도록 합니다. 이제 Program.cs 파일에 코드를 추가하여 시간 동기화 명령어를 실행할 수 있습니다. 전체 예제는 다음과 같습니다:

csharp
코드 복사
using System;
using System.Diagnostics;

class Program
{
    static void Main(string[] args)
    {
        // 명령어와 인수를 정의합니다.
        string command = "w32tm";
        string arguments = "/resync";

        // ProcessStartInfo를 생성합니다.
        ProcessStartInfo psi = new ProcessStartInfo
        {
            FileName = "cmd.exe",
            Arguments = $"/c {command} {arguments}",
            CreateNoWindow = true,
            UseShellExecute = false
        };

        try
        {
            // 프로세스를 시작합니다.
            Process process = Process.Start(psi);
            process.WaitForExit();
            int exitCode = process.ExitCode;

            // 결과를 출력합니다.
            Console.WriteLine($"Command executed with exit code: {exitCode}");
        }
        catch (Exception ex)
        {
            // 오류를 처리합니다.
            Console.WriteLine($"An error occurred: {ex.Message}");
        }
    }
}
이제 프로젝트를 빌드하고 실행하면 프로그램이 자동으로 관리자 권한으로 실행됩니다. 실행 파일을 우클릭하고 "관리자 권한으로 