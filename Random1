태틱(static)을 사용하지 않고, 이벤트나 델리게이트를 활용하여 클래스 C에서 메인뷰모델 변수 값을 읽어오는 방법을 설명드립니다. 아래는 최소한의 코드로 해결하는 방법입니다.

구현
1. MainViewModel.cs
MainViewModel은 bool 값을 관리하며, 다른 클래스에서 요청할 수 있도록 델리게이트를 제공합니다.

csharp
코드 복사
public class MainViewModel
{
    // bool 값을 반환하는 델리게이트 정의
    public delegate bool TaskStatusRequestHandler();
    public event TaskStatusRequestHandler? TaskStatusRequested;

    // 변수
    private bool _isTaskRunning;
    public bool IsTaskRunning
    {
        get => _isTaskRunning;
        set
        {
            _isTaskRunning = value;
            // 필요 시 값 변경 시 추가 처리 가능
        }
    }

    // 값 요청 시 호출될 메서드
    public bool RequestTaskStatus()
    {
        return TaskStatusRequested?.Invoke() ?? IsTaskRunning; // 요청이 없으면 기본 값 반환
    }
}
2. 클래스 C
클래스 C에서는 MainViewModel의 이벤트에 구독하여 값을 요청할 수 있습니다.

csharp
코드 복사
public class C
{
    private readonly MainViewModel _mainViewModel;

    public C(MainViewModel mainViewModel)
    {
        _mainViewModel = mainViewModel;

        // MainViewModel의 TaskStatusRequested 이벤트 구독
        _mainViewModel.TaskStatusRequested += OnTaskStatusRequested;
    }

    // 이벤트 처리 메서드
    private bool OnTaskStatusRequested()
    {
        Console.WriteLine("클래스 C에서 요청 중...");
        return _mainViewModel.IsTaskRunning; // 현재 값을 반환
    }

    // 값 확인 메서드
    public void CheckTaskStatus()
    {
        bool status = _mainViewModel.RequestTaskStatus();
        Console.WriteLine($"MainViewModel 작업 상태: {status}");
    }
}
3. 사용 방법
csharp
코드 복사
// MainViewModel 생성
var mainViewModel = new MainViewModel
{
    IsTaskRunning = false // 초기값 설정
};

// 클래스 C 생성 및 MainViewModel과 연결
var classC = new C(mainViewModel);

// 값 확인
classC.CheckTaskStatus(); // 출력: "MainViewModel 작업 상태: False"

// 값 변경
mainViewModel.IsTaskRunning = true;

// 값 확인
classC.CheckTaskStatus(); // 출력: "MainViewModel 작업 상태: True"
구조 설명
MainViewModel:

TaskStatusRequested라는 이벤트를 선언하여 값 요청을 처리.
RequestTaskStatus 메서드로 다른 클래스(C)가 값을 요청하도록 설계.
클래스 C:

MainViewModel의 이벤트에 구독.
필요한 시점에 RequestTaskStatus를 호출하여 값을 가져옴.
연동 방식: