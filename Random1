색을 변경하는 기능을 구현하려면 XAML에서 스타일과 트리거를 사용해야 합니다. 아래 예제는 GridControl에서 선택된 행의 배경색을 핑크색으로 변경하는 방법을 보여줍니다.

XAML 설정
리소스 설정: GridControl의 Resource 섹션에 스타일을 정의합니다. 이 스타일은 선택된 행에 적용됩니다.
트리거 사용: 선택된 행의 상태에 따라 배경색을 변경하기 위해 DataTrigger를 사용합니다. 이 트리거는 IsSelected 속성을 체크하여 행이 선택되었는지 확인합니다.
아래는 GridControl에 대한 XAML 설정 예제입니다:

xml
Copy code
<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
        x:Class="YourNamespace.MainWindow"
        Title="MainWindow" Height="350" Width="525">

    <Grid>
        <dxg:GridControl x:Name="grid">
            <dxg:GridControl.View>
                <dxg:TableView MultiSelectMode="Row" NavigationStyle="Row" AllowPerPixelScrolling="True">
                    <dxg:TableView.RowStyle>
                        <Style TargetType="dxg:RowControl">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" Value="True">
                                    <Setter Property="Background" Value="Pink"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </dxg:TableView.RowStyle>
                </dxg:TableView>
            </dxg:GridControl.View>
        </dxg:GridControl>
    </Grid>
</Window>
주요 구성 요소 설명:
TableView.RowStyle: RowControl의 스타일을 정의하는 부분입니다. 여기에서 배경색을 설정하는 Setter를 포함합니다.
DataTrigger: IsSelected 속성이 True인 경우, 즉 행이 선택되었을 때 행의 배경색을 핑크색으로 설정합니다.
이 설정을 통해 GridControl에서 하나 이상의 행을 선택할 때 자동으로 그 행의 배경색이 핑크색으로 변경됩니다. DevExpress의 컨트롤과 XAML 스타일링 옵션을 활용하면 이러한 시각적 효과를 손쉽게 구현