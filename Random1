using System;
using System.Data;
using System.Data.SqlClient;
using System.Threading;
using System.Threading.Tasks;
using System.Timers;
using System.Windows.Forms;

namespace YourNamespace
{
    public partial class MainForm : Form
    {
        private SqlConnection connection;
        private string connectionString = "your_connection_string";
        private System.Timers.Timer timer;
        private readonly object lockObj = new object();

        public MainForm()
        {
            InitializeComponent();
        }

        private void MainForm_Load(object sender, EventArgs e)
        {
            ConnectToDatabase();
            StartTimer();
        }

        private void ConnectToDatabase()
        {
            try
            {
                connection = new SqlConnection(connectionString);
                connection.Open();
                MessageBox.Show("Connected to the database.");
            }
            catch (Exception ex)
            {
                MessageBox.Show("Failed to connect to the database.");
            }
        }

        private void StartTimer()
        {
            timer = new System.Timers.Timer();
            timer.Interval = 5000; // 5초 간격
            timer.Elapsed += TimerElapsed;
            timer.AutoReset = true; // 반복 설정
            timer.Start();
        }

        private void TimerElapsed(object sender, ElapsedEventArgs e)
        {
            lock (lockObj)
            {
                // check 테이블의 stat1 상태 확인
                string statQuery = "SELECT stat1 FROM check";
                SqlCommand statCommand = new SqlCommand(statQuery, connection);
                string stat = (string)statCommand.ExecuteScalar();

                // stat1이 "ON"인 경우에만 Process1과 Process2 함수 실행
                if (stat == "ON")
                {
                    Task.Run(async () =>
                    {
                        await Process1();
                        await Process2();
                    }).Wait();
                }
            }
        }

        private async Task Process1()
        {
            // Process1 함수의 데이터 처리 로직
            await Task.Delay(1000); // 예시로 1초간 대기하는 비동기 작업을 수행

            // 로그 추가
            AddLog("Process1 completed");
        }

        private async Task Process2()
        {
            // Process2 함수의 데이터 처리 로직
            await Task.Delay(1000); // 예시로 1초간 대
