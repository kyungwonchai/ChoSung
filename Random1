로 수행할 수 있습니다.

    현재 재생 파일명 표시: 현재 재생 중인 파일의 경로나 이름을 레이블에 표시합니다.
    다음 파일 자동 재생: 재생 목록에서 현재 파일 다음에 있는 파일을 선택하여 자동으로 재생합니다.

csharp

private List<string> playbackFiles; // 재생할 파일 목록
private int currentFileIndex; // 현재 재생 중인 파일의 인덱스

// 파일 재생 함수
private void PlayFile(int index)
{
    if (index >= 0 && index < playbackFiles.Count)
    {
        string filePath = playbackFiles[index];
        _mediaPlayer.Play(filePath);
        lblCurrentFile.Text = Path.GetFileName(filePath); // 파일명 표시
    }
}

// 재생이 끝났을 때의 이벤트 처리
private void OnMediaPlayerEndReached(object sender, EventArgs e)
{
    // 다음 파일 재생
    currentFileIndex++;
    if (currentFileIndex < playbackFiles.Count)
    {
        PlayFile(currentFileIndex);
    }
    else
    {
        // 재생 목록 끝에 도달한 경우 원하는 동작 수행
    }
}

playbackFiles는 재생할 파일의 경로 목록이며, currentFileIndex는 현재 재생 중인 파일의 인덱스입니다.

재생이 끝나면 OnMediaPlayerEndReached 이벤트 핸들러에서 다음 파일을 재생하도록 설정하면 됩니다.

이러한 방식을 사용하면 사용자에게 현재 재생 중인 파일명을 표시하고 재생이 끝나면 다음 파일을 자동으로 이어서 재생할 수 있습니다.
User
선택한 listbox1아이템에 recording202308181219처럼되어있어.   이 값을 저 시간에 포함시켜보자.  yyyyMMddHH  mm까지 된 저 글자를 활용해서 뒤에 초만 분만 붙이면 되자나
ChatGPT

리스트 박스에서 선택한 아이템의 값을 yyyyMMddHHmm 형식의 날짜와 시간으로 변환하려면 다음과 같이 코드를 작성할 수 있습니다.

csharp

private void listBox1_SelectedIndexChanged(object sender, EventArgs e)
{
    string selectedItem = listBox1.SelectedItem.ToString();
    string datePart = selectedItem.Substring(10, 12); // "recording" 부분을 제외한 나머지 부분을 취합니다. 인덱스는 필요에 따라 조정해야 할 수 있습니다.

    if (DateTime.TryParseExact(datePart, "yyyyMMddHHmm", CultureInfo.InvariantCulture, DateTimeStyles.None, out DateTime parsedDate))
    {
        // 변환된 날짜와 시간을 사용하는 코드
        // 예를 들어, 초만 추가하여 다른 형식으로 표시하려면:
        string newFormat = parsedDate.ToString("yyyyMMddHHmmss");
        // newFormat 변수를 필요한 곳에 사용
    }
    else
    {
        // 날짜 형식 변환 실패 처리
    }
}

이 코드는 listBox1에서 선택한 아이템을 가져와서 문자열 중 "yyyyMMddHHmm" 형식의 부분을 날짜와 시간으로 변환합니다. 변환된 날짜와 시간은 parsedDate 변수에 저장되며, 이를 사용하여 원하는 작업을 수행할 수 있습니다.

문자열에서 날짜와 시간 부분을 추출할 때 Substring 메서드를 사용합니다. 