using System;
using System.Threading;
using System.Windows.Forms;

namespace WinFormsTimerExample
{
    public partial class MainForm : Form
    {
        private Thread checkThread;
        private bool isRunning = true;

        public MainForm()
        {
            InitializeComponent();
            StartCheckThread();
        }

        private void StartCheckThread()
        {
            checkThread = new Thread(() =>
            {
                while (isRunning)
                {
                    // 10초마다 체크
                    CheckTimeAndExecuteFunction();

                    // 1분(60초) 쉬기
                    Thread.Sleep(60 * 1000); // 60초를 밀리초 단위로 변환
                }
            });

            checkThread.Start();
        }

        private void CheckTimeAndExecuteFunction()
        {
            // 현재 시간 가져오기
            DateTime currentTime = DateTime.Now;

            // 오후 3:35 시간 생성
            DateTime targetTime = new DateTime(currentTime.Year, currentTime.Month, currentTime.Day, 15, 35, 0);

            // 현재 시간이 오후 3:35와 일치하면 함수 실행
            if (currentTime >= targetTime && currentTime < targetTime.AddSeconds(10))
            {
                // 여기서 원하는 함수를 호출하면 됩니다.
                // 예시로 콘솔에 메시지를 출력하는 함수를 호출하도록 합니다.
                ExecuteFunction();
            }
        }

        private void ExecuteFunction()
        {
            // 실행할 함수의 코드를 작성하면 됩니다.
            // 예시로 콘솔에 메시지를 출력하는 함수를 구현합니다.
            Console.WriteLine("오후 3시 35분이 되었습니다!");
        }

        private void MainForm_FormClosing(object sender, FormClosingEventArgs e)
        {
            // 폼이 닫힐 때, 스레드를 종료시키고 정리합니다.
            isRunning = false;
            if (checkThread != null && checkThread.IsAlive)
                checkThread.Join();
        }
    }
}
