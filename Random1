류 메시지인 "cleartext communication to 10.244.122.122 not permitted by network security policy"는 Android 네트워크 보안 정책이 HTTP와 같은 비보안 프로토콜을 통해 통신하는 것을 허용하지 않기 때문에 발생합니다. 기본적으로 Android 9 (API 레벨 28) 이상에서는 보안되지 않은 HTTP 트래픽이 허용되지 않습니다. 이 문제를 해결하려면 네트워크 보안 구성을 업데이트해야 합니다.

1. Network Security Configuration 설정 추가
먼저, res/xml 디렉터리에 network_security_config.xml 파일을 추가하고, 이 파일에서 HTTP 통신을 허용하도록 설정합니다.

1-1. network_security_config.xml 파일 생성
프로젝트의 res/xml/ 디렉터리에 network_security_config.xml 파일을 생성하고 다음 내용을 추가합니다:

xml
코드 복사
<network-security-config>
    <domain-config cleartextTrafficPermitted="true">
        <domain includeSubdomains="true">10.244.122.122</domain>
    </domain-config>
</network-security-config>
이 설정은 명시적으로 10.244.122.122에 대한 비보안 HTTP 트래픽을 허용합니다.

1-2. AndroidManifest.xml에 보안 설정 연결
AndroidManifest.xml 파일을 열고 application 태그에 networkSecurityConfig 속성을 추가하여 방금 만든 보안 설정을 연결합니다:

xml
코드 복사
<application
    android:networkSecurityConfig="@xml/network_security_config"
    android:allowBackup="true"
    android:icon="@mipmap/ic_launcher"
    android:label="@string/app_name"
    android:roundIcon="@mipmap/ic_launcher_round"
    android:supportsRtl="true"
    android:theme="@style/AppTheme">
    <!-- 기타 설정들 -->
</application>
2. HTTPS로 전환하는 것을 고려
가능하다면, 보안 측면에서 HTTP 대신 HTTPS를 사용하는 것이 좋습니다. HTTPS를 사용하면 통신이 암호화되므로, 네트워크 통신의 안전성을 보장할 수 있습니다. 이를 위해서는 서버에 SSL 인증서를 설치하고, URL을 https://로 변경해야 합니다.

3. Android 앱에서 HTTP URL 다시 확인
MainActivity.kt에서 서버에 대한 요청 URL이 http://10.244.122.122 형식으로 되어 있는지 확인합니다. (현재 설정으로는 이대로 괜찮습니다.)

kotlin
코드 복사
private fun checkForUpdates(context: Context, apkName: String) {
    val client = OkHttpClient()
    val request = Request.Builder()
        .url("http://10.244.122.122:8116/api/$apkName/version") // 올바른 URL 확인
        .build()

    // 나머지 코드 ...
}
4. 테스트 및 배포
위의 설정을 적용한 후, 앱을 다시 빌드하고 실행하여 문제가 해결되었는지 확인합니다. 이제 비보안 HTTP 통신을 통해 서버에 연결할 수 있을 것입니다.

이 설정은 명시적으로 지정한 도메인에 대해서만 HTTP 트래픽을 허용하는 것이므로, 필요에 따라 이 정책을 조정할 수 있습니다. 가능한 한 HTT