네, On Error GoTo 0이 For 문 **아래(밖)**에 있는 이유에 대해 정확히 이해하고 계십니다. 그것은 For 문 안에서 발생한 특정 오류(대부분 그 전에 On Error Resume Next가 사용되었을 경우)가 무시되도록 한 후, 다시 오류 처리를 기본 상태로 되돌리기 위함입니다.

자세히 설명해 드릴게요.

On Error Resume Next의 역할 (For 문 위에 있을 가능성 높음):

On Error Resume Next 구문은 이 코드가 실행된 이후 현재 프로시저 내에서 발생하는 모든 런타임 오류를 무시하고, 오류가 발생한 바로 다음 줄의 코드를 계속 실행하도록 지시합니다.
Scripting.Dictionary 예제에서 이 코드를 For 루프 전에 두었던 것은, uniqueDictionary.Add cellValue, 1 코드에서 **이미 키가 존재할 경우 발생하는 오류(런타임 오류 457 - "This key is already associated with an element of this collection")**를 무시하고 나머지 셀들을 계속 처리하기 위함이었습니다.
On Error Resume Next는 한번 실행되면 해당 프로시저가 끝날 때까지 또는 다른 On Error 구문이 나올 때까지 유효합니다.
For 문 아래에 On Error GoTo 0이 있는 이유:

On Error GoTo 0은 이전에 설정된 모든 오류 처리기(Handler)를 비활성화하고, VBA의 기본 오류 처리 방식으로 되돌립니다. VBA의 기본 방식은 런타임 오류가 발생하면 즉시 코드 실행을 중단하고 오류 메시지 박스를 표시하는 것입니다.
For 루프 안에서는 On Error Resume Next 덕분에 의도한 오류(중복 키 오류)가 무시되었습니다. 하지만 루프가 끝난 후, 만약 다른 종류의 예상치 못한 오류가 발생했다면 어떻게 될까요? 여전히 On Error Resume Next가 활성화되어 있다면, 그 예상치 못한 중요한 오류마저도 아무런 알림 없이 조용히 무시되고 코드는 계속 진행될 것입니다. 이는 디버깅을 매우 어렵게 만들고 프로그램 오작동의 원인이 될 수 있습니다.
따라서 For 루프 아래에 On Error GoTo 0을 둠으로써, 루프 안에서 특정 오류를 무시하도록 했던 설정을 루프가 끝나는 즉시 해제하는 것입니다. 이렇게 하면 루프 이후의 코드에서 발생하는 오류는 기본 방식대로 감지되어 개발자가 문제를 파악하고 해결할 수 있게 됩니다.
정리하면:

On Error Resume Next는 특정 코드 블록(주로 For 루프)에서 발생이 예상되는 오류를 무시하기 위해 그 코드 블록 앞에 놓습니다. 이 설정은 아래로 계속 유효합니다.
On Error GoTo 0는 오류 무시 설정을 해제하고 오류 처리를 기본 상태로 되돌리기 위해, 오류 무시가 더 이상 필요 없는 코드 블록의 바로 아래에 놓습니다.
왜 For 문 안에 있지 않고 아래에 있나?

On Error Resume Next는 For 루프 전에 한 번만 선언하면 루프 전체에 적용되므로, 루프 안에 반복해서 쓸 필요가 없습니다.