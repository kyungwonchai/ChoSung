이제 문제를 해결하기 위해 클릭한 항목의 부모 그룹을 직접 참조하고 삭제하는 방식으로 수정하겠습니다. 그룹 이름이나 항목 캡션을 따로 비교하지 않고, 클릭된 항목의 부모 그룹을 바로 찾고 삭제하도록 하겠습니다.

수정된 코드
아래 코드는 클릭된 항목의 부모 그룹을 바로 참조하여 삭제하는 방식으로 수정했습니다:

csharp
코드 복사
using System.Diagnostics;

// "MyMenu에서 삭제" 명령을 정의하고 반환하는 메서드
BarItem CreateRemoveFromMyMenuCommand(BarItemLink linkToRemove)
{
    // 새 BarButtonItem("MyMenu에서 삭제") 생성
    BarButtonItem removeButton = new BarButtonItem();
    removeButton.Caption = "MyMenu에서 삭제"; // 버튼 제목 설정

    // "MyMenu에서 삭제" 명령이 클릭되었을 때 호출되는 이벤트 핸들러 등록
    removeButton.ItemClick += (sender, e) =>
    {
        // 클릭한 항목의 부모 그룹을 바로 참조
        var parentGroup = myMenuPage.Groups.FirstOrDefault(group => group.ItemLinks.Contains(linkToRemove));

        if (parentGroup != null)
        {
            Debug.WriteLine($"[DEBUG] 그룹 '{parentGroup.Text}'에서 항목을 삭제 시도");

            // 그룹에서 해당 아이템이 있는지 확인하고 삭제
            if (parentGroup.ItemLinks.Contains(linkToRemove))
            {
                parentGroup.ItemLinks.Remove(linkToRemove);
                Debug.WriteLine($"[DEBUG] 항목이 그룹 '{parentGroup.Text}'에서 삭제되었습니다.");

                // 그룹에 다른 아이템이 없으면 그룹도 제거
                if (parentGroup.ItemLinks.Count == 0)
                {
                    Debug.WriteLine($"[DEBUG] 그룹 '{parentGroup.Text}'가 삭제될 예정입니다.");

                    // 페이지에서 그룹 제거
                    myMenuPage.Groups.Remove(parentGroup);
                    Debug.WriteLine($"[DEBUG] 그룹 '{parentGroup.Text}'가 삭제되었습니다.");
                }
                else
                {
                    Debug.WriteLine($"[DEBUG] 그룹 '{parentGroup.Text}'에 남은 항목 수: {parentGroup.ItemLinks.Count}");
                }

                // 전체 그룹 및 항목 수 출력
                Debug.WriteLine($"[DEBUG] MyMenu에 남은 그룹 수: {myMenuPage.Groups.Count}");
            }
            else
            {
                Debug.WriteLine($"[ERROR] 항목이 그룹 '{parentGroup.Text}'에 존재하지 않습니다.");
            }
        }
        else
        {
            Debug.WriteLine($"[ERROR] 클릭한 항목의 부모 그룹을 찾을 수 없습니다.");
        }

        // MyMenu 항목 저장
        SaveMyMenuItems();
    };

    // 리본 컨트롤에 명령 추가
    ribbonControl1.Items.Add(removeButton);

    return removeButton;
}

// MyMenu 단일 그룹 초기화
private void InitializeMyMenu()
{
    // MyMenu 페이지가 없으면 생성
    if (myMenuPage == null)
    {
        myMenuPage = new RibbonPage("MyMenu");
        ribbonControl1.Pages.Add(myMenuPage);
    }
}
주요 수정 사항:
부모 그룹 참조: