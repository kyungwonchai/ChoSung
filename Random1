import os
import re
import graphviz

# C# 파일에서 클래스와 메서드 추출
def extract_classes_methods(filepath):
    classes = []
    methods = []
    with open(filepath, 'r', encoding="utf-8") as file:
        content = file.read()
        class_matches = re.findall(r'class\s+(\w+)', content)
        method_matches = re.findall(r'(public|private|protected)\s+\w+\s+(\w+)\s*\(', content)
        classes.extend(class_matches)
        methods.extend([m[1] for m in method_matches])
    return classes, methods

# XAML 파일에서 이벤트와 바인딩 추출
def extract_xaml_bindings(filepath):
    events = []
    bindings = []
    with open(filepath, 'r', encoding="utf-8") as file:
        content = file.read()
        event_matches = re.findall(r'(\w+)\s*=\s*"\{Binding\s+(\w+)', content)  # Binding 매핑
        command_matches = re.findall(r'Command\s*=\s*"\{Binding\s+(\w+)', content)  # Commands
        events.extend(event_matches)
        bindings.extend(command_matches)
    return events, bindings

# 솔루션 디렉토리에서 파일 탐색
def scan_solution_directory(directory):
    csharp_files = []
    xaml_files = []
    for root, dirs, files in os.walk(directory):
        for file in files:
            if file.endswith(".cs"):
                csharp_files.append(os.path.join(root, file))
            elif file.endswith(".xaml"):
                xaml_files.append(os.path.join(root, file))
    return csharp_files, xaml_files

# 다이어그램 생성
def generate_diagram(classes_methods, xaml_events, output_file="wpf_structure"):
    dot = graphviz.Digraph(comment='WPF Code Structure')
    for class_name, methods in classes_methods.items():
        dot.node(class_name, class_name)
        for method in methods:
            dot.node(method, method)
            dot.edge(class_name, method)
    for xaml_file, bindings in xaml_events.items():
        for event, binding in bindings:
            dot.node(event, event)
            dot.node(binding, binding)
            dot.edge(event, binding)
    dot.render(output_file, view=True)

# 실행 예시
solution_directory = 'your_solution_directory'  # 솔루션 폴더 경로
csharp_files, xaml_files = scan_solution_directory(solution_directory)

classes_methods = {}
xaml_events = {}

for file in csharp_files:
    classes, methods = extract_classes_methods(file)
    classes_methods[file] = methods

for file in xaml_files:
    events, bindings = extract_xaml_bindings(file)
    xaml_events[file] = events

generate_diagram(classes_methods, xaml_events)
