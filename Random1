 값을 표시하는 예제를 설명드리겠습니다. 또한, PART_Editor는 예약어가 아닙니다. 다만, XAML에서 사용될 수 있는 특정 부분 이름일 수 있으니 주의해서 사용해야 합니다.

다음은 ComboBox를 WPF에서 사용하고, 선택한 값을 표시하는 방법입니다:

XAML 코드
xml
코드 복사
<Window x:Class="YourNamespace.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="MainWindow" Height="200" Width="400">
    <Grid>
        <ComboBox x:Name="PART_Editor" Width="150" Height="30" 
                  VerticalAlignment="Top" Margin="10"
                  SelectionChanged="PART_Editor_SelectionChanged">
            <ComboBoxItem Content="Option1"/>
            <ComboBoxItem Content="Option2"/>
            <ComboBoxItem Content="Option3"/>
        </ComboBox>
        
        <TextBlock x:Name="SelectedValueTextBlock" Width="150" Height="30" 
                   VerticalAlignment="Top" Margin="10,50,0,0" />
    </Grid>
</Window>
C# 코드
csharp
코드 복사
using System.Windows;

namespace YourNamespace
{
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
        }

        private void PART_Editor_SelectionChanged(object sender, System.Windows.Controls.SelectionChangedEventArgs e)
        {
            // ComboBox에서 선택한 항목의 값을 가져오기
            var selectedItem = (sender as System.Windows.Controls.ComboBox).SelectedItem as System.Windows.Controls.ComboBoxItem;

            // 선택한 값을 TextBlock에 표시
            if (selectedItem != null)
            {
                SelectedValueTextBlock.Text = selectedItem.Content.ToString();
            }
        }
    }
}
설명
XAML 코드:

ComboBox의 x:Name을 PART_Editor로 설정하고, SelectionChanged 이벤트를 지정합니다.
ComboBoxItem으로 여러 선택 항목을 추가합니다.
선택한 값을 표시하기 위해 TextBlock을 사용합니다.
C# 코드:

SelectionChanged 이벤트가 발생할 때마다 PART_Editor_SelectionChanged 메서드가 호출됩니다.
ComboBox에서 선택된 항목을 가져와 TextBlock에 표시합니다.
이 코드로 ComboBox에서 선택한 항목이 TextBlock에 실시간으로 표시됩니다. 다시 한번 불편을 끼쳐드려 죄송합니다. 이 코드는 WPF에서 올바르게 동작할 것입