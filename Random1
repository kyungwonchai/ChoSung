from pypdf import PdfReader, PdfWriter

def extract_single_page(input_pdf_path, output_pdf_path, page_number):
    """
    PDF 파일에서 특정 한 페이지만 추출하여 새 PDF 파일로 저장합니다.

    Args:
        input_pdf_path (str): 원본 PDF 파일의 경로
        output_pdf_path (str): 저장할 새 PDF 파일의 경로
        page_number (int): 추출할 페이지 번호 (1부터 시작)
    """
    try:
        # PDF 읽기 객체 생성
        reader = PdfReader(input_pdf_path)
        
        # PDF 쓰기 객체 생성
        writer = PdfWriter()

        # ?? 중요: 라이브러리는 페이지를 0부터 세기 때문에,
        # 우리가 입력한 페이지 번호에서 1을 빼줘야 합니다.
        # 예: 5번째 페이지를 원하면, 코드에서는 4번 인덱스에 해당합니다.
        page_to_extract_index = page_number - 1

        # 요청한 페이지 번호가 유효한지 확인
        if page_to_extract_index < 0 or page_to_extract_index >= len(reader.pages):
            print(f"오류: 페이지 번호 {page_number}가 범위를 벗어났습니다.")
            print(f"이 문서의 페이지는 1부터 {len(reader.pages)}까지 있습니다.")
            return

        # 지정된 페이지를 writer에 추가
        writer.add_page(reader.pages[page_to_extract_index])

        # 새로운 PDF 파일로 저장
        with open(output_pdf_path, "wb") as output_file:
            writer.write(output_file)

        print(f"성공: {page_number}페이지를 '{output_pdf_path}' 파일로 저장했습니다.")

    except FileNotFoundError:
        print(f"오류: '{input_pdf_path}' 파일을 찾을 수 없습니다.")
    except Exception as e:
        print(f"알 수 없는 오류가 발생했습니다: {e}")

# --- 실행 예시 ---
if __name__ == "__main__":
    # 1. 원본 파일 이름을 지정합니다.
    source_pdf = "original.pdf"
    
    # 2. 저장할 파일 이름을 지정합니다.
    destination_pdf = "page_5_only.pdf"
    
    # 3. 추출하고 싶은 페이지 번호를 지정합니다. (예: 5번째 페이지)
    page_to_extract = 5
    
    # 함수를 호출하여 실행합니다.
    extract_single_page(source_pdf, destination_pdf, page_to_extract)