정말 죄송합니다. CommandItem의 속성과 XAML을 제공하지 않은 점 사과드립니다. 이번에는 총 8개의 속성을 포함한 CommandItem 클래스와 XAML 코드를 모두 제공하겠습니다.

수정된 CommandItem 클래스 (총 8개의 속성 포함)
csharp
코드 복사
public class CommandItem
{
    public string CommandText { get; set; } // 명령 텍스트
    public string Status { get; set; } // 명령 상태 (Pending, Processing, Completed, Failed 등)
    public int Result { get; set; } // 명령 결과 (성공: 1, 실패: 0)
    public int RetryCount { get; set; } // 재시도 횟수
    public int MaxRetryLimit { get; set; } // 최대 재시도 횟수
    public int ResponseTime { get; set; } // 응답 시간
    public string CommandTime { get; set; } // 명령이 추가된 시간 (yyMMdd HH:mm:ss.fff)
    public string Output { get; set; } // 명령의 결과 또는 응답
}
XAML 코드
xml
코드 복사
<Window x:Class="CommandQueueApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Command Queue" Height="450" Width="800">
    <Grid>
        <!-- 현재 시간을 표시하는 텍스트블록 -->
        <TextBlock Text="{Binding CurrentTime}" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,10,20,0" FontSize="16"/>

        <!-- 남아 있는 명령을 표시하는 리스트박스 -->
        <ListBox ItemsSource="{Binding RemainingCommands}" HorizontalAlignment="Left" Height="300" VerticalAlignment="Top" Width="600">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <!-- 명령 텍스트 -->
                        <TextBlock Text="{Binding CommandText}" Width="200"/>
                        <!-- 작업 상태 -->
                        <TextBlock Text=" 상태: " Width="50"/>
                        <TextBlock Text="{Binding Status}" Width="100"/>
                        <!-- 재시도 횟수 표시 -->
                        <TextBlock Text=" 재시도: " Width="70"/>
                        <TextBlock Text="{Binding RetryCount}" Width="30"/>
                        <!-- 응답 시간 -->
                        <TextBlock Text=" 응답 시간: " Width="100"/>
                        <TextBlock Text="{Binding ResponseTime}" Width="70"/>
                        <!-- 제한 시간 -->
                        <TextBlock Text=" 제한 시간: " Width="100"/>
                        <TextBlock Text="{Binding MaxRetryLimit}" Width="30"/>
                        <!-- 작업 추가 시간 -->
                        <TextBlock Text=" 추가 시간: " Width="120"/>
                        <TextBlock Text="{Binding CommandTime}" Width="150"/>
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <!-- 세로형 프로그레스바 (큐에 남아 있는 명령 수 시각적으로 표시) -->
        <StackPanel Orientation="Vertical" HorizontalAlignment="Right" Width="100" VerticalAlignment="Top" Height="300" Margin="0,0,20,0">
            <ProgressBar VerticalAlignment="Top" Height="300" Width="30" Orientation="Vertical" 
                         Value="{Binding Progress}" Maximum="{Binding MaximumQueueSize}"/>
            <ItemsControl ItemsSource="{Binding RemainingCommands}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding CommandText}" HorizontalAlignment="Center"/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </StackPanel>

        <!-- 에러 메시지 리스트박스 -->
        <ListBox ItemsSource="{Binding ErrorCommands}" HorizontalAlignment="Left" Height="100" VerticalAlignment="Bottom" Width="600">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <!-- 에러 메시지 -->
                        <TextBlock Text="{Binding CommandText}" Width="300"/>
                        <!-- 에러 발생 시간 -->
                        <TextBlock Text=" 발생 시간: " Width="100"/>
                        <TextBlock Text="{Binding CommandTime}" Width="150"/>
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
    </Grid>
</Window>
설명:
CommandItem 클래스는 8개의 속성을 가지고 있습니다:

CommandText: 명령 텍스트
Status: 명령의 상태 (대기, 처리 중, 완료, 실패 등)
Result: 명령의 결과 (성공 1, 실패 0)
RetryCount: 명령의 재시도 횟수
MaxRetryLimit: 최대 재시도 횟수
ResponseTime: 응답 시간
CommandTime: 명령이 추가된 시간 (형식: yyMMdd HH:mm
.fff)
Output: 명령 실행 후의 결과나 응답 내용
XAML은 다음과 같은 UI를 구성합니다:

현재 시간 표시: 윈도우 오른쪽 상단에 현재 시간이 표시됩니다.
남아 있는 명령을 표시하는 리스트박스: 큐에 남아 있는 명령들이 리스트 형식으로 표시됩니다.
프로그레스바: 남아 있는 명령의 수에 따라 시각적으로 큐의 상태를 확인할 수 있습니다.
에러 메시지 리스트박스: 발생한 에러와 에러 발생 시간을 리스트로 표시합니다.