 파일을 선택하고, 첫 번째 시트의 데이터를 2행부터 마지막 행까지 반복하며 각 열의 값을 콘솔에 출력하는 코드를 작성하기 위해서는 Microsoft.Office.Interop.Excel을 사용할 수 있습니다. 이 라이브러리를 사용하면 Excel 파일을 쉽게 읽을 수 있습니다. 아래는 이 작업을 수행하는 예제 코드입니다.

먼저, Visual Studio에서 Microsoft.Office.Interop.Excel 라이브러리를 참조로 추가해야 합니다. 그런 다음, 다음과 같은 코드를 작성합니다.

필요한 라이브러리 추가
Microsoft.Office.Interop.Excel 참조 추가:
Visual Studio에서 프로젝트를 마우스 오른쪽 버튼으로 클릭하고 참조 추가를 선택합니다.
어셈블리 > 확장에서 Microsoft.Office.Interop.Excel을 선택하여 추가합니다.
전체 코드 예제
csharp
코드 복사
using System;
using System.Windows.Forms;
using Excel = Microsoft.Office.Interop.Excel;

public partial class Form1 : Form
{
    public Form1()
    {
        InitializeComponent();

        // 버튼을 추가하여 엑셀 파일 열기 대화 상자를 표시합니다.
        Button button = new Button();
        button.Text = "엑셀 파일 열기";
        button.Dock = DockStyle.Top;
        button.Click += Button_Click;
        this.Controls.Add(button);
    }

    // 버튼 클릭 이벤트 핸들러
    private void Button_Click(object sender, EventArgs e)
    {
        OpenFileDialog openFileDialog = new OpenFileDialog
        {
            Filter = "Excel 파일 (*.xlsx)|*.xlsx|All files (*.*)|*.*",
            Title = "엑셀 파일 선택"
        };

        if (openFileDialog.ShowDialog() == DialogResult.OK)
        {
            string filePath = openFileDialog.FileName;
            ReadExcelFile(filePath);
        }
    }

    private void ReadExcelFile(string filePath)
    {
        Excel.Application excelApp = new Excel.Application();
        Excel.Workbook workbook = excelApp.Workbooks.Open(filePath);
        Excel._Worksheet worksheet = workbook.Sheets[1];
        Excel.Range range = worksheet.UsedRange;

        int rowCount = range.Rows.Count;
        int colCount = range.Columns.Count;

        for (int i = 2; i <= rowCount; i++) // 2행부터 시작
        {
            for (int j = 1; j <= colCount; j++)
            {
                // 셀의 값 읽기
                string cellValue = Convert.ToString((range.Cells[i, j] as Excel.Range).Value2);
                Console.Write($"{cellValue}\t");
            }
            Console.WriteLine();
        }

        // 엑셀 파일 닫기
        workbook.Close(false);
        excelApp.Quit();

        // COM 객체 해제
        ReleaseObject(range);
        ReleaseObject(worksheet);
        ReleaseObject(workbook);
        ReleaseObject(excelApp);
    }

    private void ReleaseObject(object obj)
    {
        try
        {
            System.Runtime.InteropServices.Marshal.ReleaseComObject(obj);
            obj = null;
        }
        catch (Exception ex)
        {
            obj = null;
            Console.WriteLine($"Exception occurred while releasing object: {ex}");
        }
        finally
        {
            GC.Collect();
        }
    }
}
설명
버튼 추가: 엑셀 파일 열기 버튼을 추가하여 엑셀 파일 선택 대화 상자를 표시합니다.
OpenFileDialog: 엑셀 파일을 선택하기 위해 OpenFileDialog를 사용합니다.
ReadExcelFile 메서드: 선택한 엑셀 파일을 읽고, 첫 번째 시트의 데이터를 2행부터 마지막 행까지 반복하며 각 열의 값을 콘솔에 출력합니다.
COM 객체 해제: Excel COM 객체를 해제하여 메모리 누수를 방지합니다.
이 코드를 사용하면 선택한 엑셀 파일의 데이터를 콘솔에 출력할 수 있습니다. ReadExcelFile 메서드에서 각 셀의 값을 읽어 Console.Write를 사용하여 출력하고, 행 끝에서는 Console.WriteLine을 사용하여 줄 바꿈을 합니다.