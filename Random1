네, WPF에서 C# 코드를 통해 Brushes.Blue 같은 단색 브러시를 그라디언트로 변경할 수 있습니다. WPF에서 그라디언트 브러시는 LinearGradientBrush 또는 RadialGradientBrush 클래스를 사용하여 설정할 수 있습니다. 예를 들어, 푸른색과 녹색을 섞어서 그라디언트 브러시를 만들려면 다음과 같이 할 수 있습니다.

LinearGradientBrush 예제:
csharp
코드 복사
// LinearGradientBrush를 사용하여 푸른색과 녹색 사이의 그라디언트를 만듭니다.
LinearGradientBrush gradientBrush = new LinearGradientBrush();

// 그라디언트 시작점과 끝점을 설정합니다. (0, 0)은 좌상단, (1, 1)은 우하단입니다.
gradientBrush.StartPoint = new Point(0, 0);
gradientBrush.EndPoint = new Point(1, 1);

// GradientStopCollection에 그라디언트 색상 추가 (푸른색에서 녹색으로 변환)
gradientBrush.GradientStops.Add(new GradientStop(Colors.Blue, 0.0)); // 시작 색상: 파란색
gradientBrush.GradientStops.Add(new GradientStop(Colors.Green, 1.0)); // 끝 색상: 녹색

// 예를 들어, 버튼의 배경에 그라디언트를 적용합니다.
yourButton.Background = gradientBrush;
위의 코드는 파란색에서 녹색으로 변화하는 선형 그라디언트를 생성하는 방법입니다. StartPoint와 EndPoint를 조정하여 그라디언트의 방향을 바꿀 수 있습니다.

RadialGradientBrush 예제 (원형 그라디언트):
csharp
코드 복사
// RadialGradientBrush를 사용하여 중심에서 바깥쪽으로 퍼지는 그라디언트 만듭니다.
RadialGradientBrush radialGradient = new RadialGradientBrush();

// 그라디언트 중심점을 설정합니다. (0.5, 0.5)은 중앙입니다.
radialGradient.Center = new Point(0.5, 0.5);
radialGradient.GradientOrigin = new Point(0.5, 0.5);

// 그라디언트 범위를 설정합니다.
radialGradient.RadiusX = 0.5;
radialGradient.RadiusY = 0.5;

// 그라디언트 색상 설정 (파란색에서 녹색으로 변화)
radialGradient.GradientStops.Add(new GradientStop(Colors.Blue, 0.0)); // 중심: 파란색
radialGradient.GradientStops.Add(new GradientStop(Colors.Green, 1.0)); // 외곽: 녹색

// 예를 들어, 버튼의 배경에 원형 그라디언트를 적용합니다.
yourButton.Background = radialGradient;
이 코드는 원형 그라디언트를 생성하여 파란색에서 녹색으로 자연스럽게 변화하도록 합니다.