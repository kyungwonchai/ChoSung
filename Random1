말씀해주셔서 감사합니다. Serilog와 .NET Framework 4.6 호환성에 대해 다시 한번 확인해보겠습니다.

일반적으로 Serilog는 최신 버전들도 .NET Standard 2.0을 타겟으로 포함하는 경우가 많으며, .NET Framework 4.6.1 이상 버전은 .NET Standard 2.0과 호환됩니다. 따라서 Serilog의 핵심 패키지 및 주요 싱크(Sink, 로그 출력 대상)들은 .NET Framework 4.6에서도 사용 가능해야 합니다.

NuGet 갤러리에서 Serilog 패키지 정보를 보면, 최신 버전(예: 3.x 또는 4.x)도 .NETFramework,Version=v4.6.2 이상 또는 .NETStandard,Version=v2.0을 지원한다고 명시되어 있습니다. .NET Framework 4.6은 4.6.2보다 낮은 버전이긴 하지만, 많은 .NET Standard 2.0 라이브러리가 .NET Framework 4.6.1 에서도 (몇 가지 주의사항과 함께) 동작하는 경우가 있습니다. 가장 안정적인 호환성은 .NET Framework 4.6.2 또는 4.7.2 이상에서 확보됩니다.

만약 사용자님께서 .NET Framework 4.6 환경에서 Serilog 설정 또는 실행에 문제를 겪고 계신다면, 몇 가지 확인해볼 사항이 있습니다:

정확한 .NET Framework 버전: 프로젝트가 정확히 .NET Framework 4.6을 대상으로 하는지, 아니면 4.6.1 또는 4.6.2 인지 확인이 필요합니다. .NET Framework 4.6.1부터 .NET Standard 2.0과의 호환성이 더 좋아집니다.
NuGet 패키지 버전: Serilog 및 관련 싱크 패키지(Serilog.Sinks.File 등)의 버전을 확인해주세요. 때로는 특정 버전 조합에서 문제가 발생할 수 있습니다. 너무 최신 버전보다는 .NET Framework 4.6 환경에서 안정적으로 검증된 버전을 사용해야 할 수도 있습니다. (예: Serilog 2.x 버전대)
packages.config 또는 <PackageReference> 확인: 올바른 패키지들이 프로젝트에 참조되어 있는지 확인합니다.
오류 메시지: 혹시 Serilog 관련하여 특정 오류 메시지가 발생한다면, 그 내용을 알려주시면 원인 파악에 도움이 됩니다.
대안: Log4Net 사용

만약 Serilog 설정에 계속 어려움이 있거나, .NET Framework 4.6과의 호환성이 확실한 다른 로깅 라이브러리를 선호하신다면, Log4Net이 매우 좋은 대안이 될 수 있습니다. Log4Net은 오랫동안 .NET Framework 환경에서 널리 사용되어 온 강력하고 안정적인 로깅 프레임워크입니다.

Log4Net으로 변경을 원하시면, 다음과 같이 수정할 수 있습니다:

SAgentM.App 프로젝트:
NuGet 패키지 log4net을 설치합니다.
App.config 또는 별도의 log4net.config 파일을 사용하여 Log4Net 설정을 구성합니다.
App.xaml.cs의 OnStartup에서 Log4Net 설정을 로드합니다.
LoggingService.cs에서 Serilog 대신 Log4Net을 사용하여 파일 로그를 기록하도록 수정합니다. (UI용 ObservableCollection 관리는 그대로 유지)
AgentCoreService.cs 등에서 Log4Net 로거를 사용하여 로그를 기록합니다.
사용자님의 선택에 따라 진행하겠습니다:

Serilog 유지 및 문제 해결 시도: 현재 Serilog 설정을 유지하면서 발생한 문제를 해결하도록 도와드릴까요? (이 경우, 발생한 오류 메시지나 문제 상황에 대한 자세한 정보가 필요합니다.)