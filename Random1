먼저, MSSQL에서 필요한 테이블을 생성해야 합니다. 이는 아래와 같습니다:

IP신청Table 생성:
sql
Copy code
CREATE TABLE IP신청Table (
    ID INT IDENTITY(1,1) PRIMARY KEY,
    mySMD계정 NVARCHAR(100),
    이름 NVARCHAR(100),
    부서 NVARCHAR(100),
    접수시간 DATETIME,
    처리시간 DATETIME,
    처리결과 NVARCHAR(20),
    허가기간 NVARCHAR(20)
)
TableWebImg 생성:
sql
Copy code
CREATE TABLE TableWebImg (
    ID INT IDENTITY(1,1) PRIMARY KEY,
    mySMD계정 NVARCHAR(100),
    IP주소1 NVARCHAR(50),
    URL1 NVARCHAR(100),
    파일명 NVARCHAR(100),
    페이지번호 INT,
    이미지1 VARBINARY(MAX),
    입력날짜 DATETIME
)
C# Winform DevExpress

다음으로, 필요한 기능을 C# DevExpress Winform에서 구현해야 합니다. 여기서는 코드의 간략화를 위해 임의로 변수 및 컨트롤 이름을 가정합니다. 코드는 연결 문자열, 컨트롤 이름, 변수 등을 프로젝트에 맞게 조정해야 합니다.

주의: 이 예제 코드는 비동기 작업, 예외 처리, 사용자 입력 유효성 검사 등을 고려하지 않았습니다. 실제 구현에는 이러한 사항들을 고려해야 합니다.

BtnIP권한요청 클릭 이벤트:
csharp
Copy code
private void BtnIP권한요청_Click(object sender, EventArgs e)
{
    // DB 연결 및 쿼리 실행
    using(SqlConnection conn = new SqlConnection("<Your Connection String>"))
    {
        conn.Open();

        string query = "INSERT INTO IP신청Table (mySMD계정, 접수시간, 처리결과) VALUES (@mySMD계정, @접수시간, @처리결과)";

        using(SqlCommand cmd = new SqlCommand(query, conn))
        {
            cmd.Parameters.AddWithValue("@mySMD계정", textEdit1.Text);
            cmd.Parameters.AddWithValue("@접수시간", DateTime.Now);
            cmd.Parameters.AddWithValue("@처리결과", "wait");

            cmd.ExecuteNonQuery();
        }
    }
}
나머지 코드는 이 질문의 길이 제한으로 인해 다음 답변에서 이어집니다.





User
이어주십시오 형님
ChatGPT
말씀해주신 대로, 나머지 C# 코드를 이어서 제공하겠습니다.

BtnIP신청현황 조회 클릭 이벤트:
csharp
Copy code
private void BtnIP신청현황조회_Click(object sender, EventArgs e)
{
    using (SqlConnection conn = new SqlConnection("<Your Connection String>"))
    {
        conn.Open();

        string query = "SELECT * FROM IP신청Table";

        using(SqlDataAdapter da = new SqlDataAdapter(query, conn))
        {
            DataTable dt = new DataTable();
            da.Fill(dt);

            gridControl2.DataSource = dt;
        }
    }
}
XtraTabControl1 로드 이벤트:
csharp
Copy code
private void XtraTabControl1_Load(object sender, EventArgs e)
{
    using (SqlConnection conn = new SqlConnection("<Your Connection String>"))
    {
        conn.Open();

        string query = "SELECT 처리결과 FROM IP신청Table WHERE mySMD계정 = @mySMD계정 AND IP주소1 = @IP주소1";

        using(SqlCommand cmd = new SqlCommand(query, conn))
        {
            cmd.Parameters.AddWithValue("@mySMD계정", "<Your mySMD계정 value>");
            cmd.Parameters.AddWithValue("@IP주소1", "<Your IP주소1 value>");

            object result = cmd.ExecuteScalar();

            if (result != null && result.ToString() == "OK")
            {
                xtraTabControl1.Visible = true;
            }
            else
            {
                xtraTabControl1.Visible = false;
            }
        }
    }
}
BtnIP허가 클릭 이벤트:
csharp
Copy code
private void BtnIP허가_Click(object sender, EventArgs e)
{
    // 필요한 값들을 추출 (예: gridControl2에서 선택된 행)
    // 다음 코드는 예제로, 실제 구현에는 조정이 필요합니다.

    DataRow selectedRow = ((DataRowView)gridControl2.MainView.GetFocusedRow()).Row;

    string selectedMySMD계정 = selectedRow["mySMD계정"].ToString();
    string selectedIP주소1 = selectedRow["IP주소1"].ToString();

    using (SqlConnection conn = new SqlConnection("<Your Connection String>"))
    {
        conn.Open();

        string query = "UPDATE IP신청Table SET 처리결과 = 'OK' WHERE mySMD계정 = @mySMD계정 AND IP주소1 = @IP주소1";

        using(SqlCommand cmd = new SqlCommand(query, conn))
        {
            cmd.Parameters.AddWithValue("@mySMD계정", selectedMySMD계정);
            cmd.Parameters.AddWithValue("@IP주소1", selectedIP주소1);

            cmd.ExecuteNonQuery();
        }
    }
}
답변의 길이 제한으로 인해 나머지 코드는 다음 답변에서 이어지겠습니다.





User
네 더 이어주십시오 형님
ChatGPT
이어서 나머지 코드를 제공하겠습니다. 이번에는 파일 업로드 및 데이터베이스에 이미지 정보 저장, 웹 이미지 목록 조회에 대한 코드입니다.

주의: 파일을 업로드하고 이미지로 변환하는 코드는 간단한 예제로 제공되며, 실제 구현시에는 파일 유형, 크기, 예외 처리 등을 고려해야 합니다.

Btn이미지웹업로드 클릭 이벤트:
csharp
Copy code
private void Btn이미지웹업로드_Click(object sender, EventArgs e)
{
    OpenFileDialog ofd = new OpenFileDialog();
    ofd.Filter = "Files|*.pptx;*.xlsx;*.pdf;*.docx;*.doc";

    if (ofd.ShowDialog() == DialogResult.OK)
    {
        string filePath = ofd.FileName;
        string fileName = Path.GetFileName(filePath);

        // TODO: 파일을 페이지별로 이미지로 변환
        // 다음은 이미지로 변환한 가장 첫 페이지를 저장하는 예시입니다.

        using (SqlConnection conn = new SqlConnection("<Your Connection String>"))
        {
            conn.Open();

            string query = "INSERT INTO TableWebImg (mySMD계정, IP주소1, URL1, 파일명, 페이지번호, 이미지1, 입력날짜) VALUES (@mySMD계정, @IP주소1, @URL1, @파일명, @페이지번호, @이미지1, @입력날짜)";

            using (SqlCommand cmd = new SqlCommand(query, conn))
            {
                cmd.Parameters.AddWithValue("@mySMD계정", "<Your mySMD계정 value>");
                cmd.Parameters.AddWithValue("@IP주소1", "<Your IP주소1 value>");
                cmd.Parameters.AddWithValue("@URL1", "<Your URL1 value>");
                cmd.Parameters.AddWithValue("@파일명", fileName);
                cmd.Parameters.AddWithValue("@페이지번호", 1);  // 예제로 첫 페이지만 가정함
                cmd.Parameters.AddWithValue("@입력날짜", DateTime.Now);

                // 예제로 이미지 변환 코드는 생략되었습니다.
                // 변환한 이미지를 byte 배열로 변환하여 DB에 저장
                // byte[] imageData = ...
                // cmd.Parameters.AddWithValue("@이미지1", imageData);

                cmd.ExecuteNonQuery();
            }
        }
    }
}
Btn웹이미지목록조회 클릭 이벤트:
csharp
Copy code
private void Btn웹이미지목록조회_Click(object sender, EventArgs e)
{
    using (SqlConnection conn = new SqlConnection("<Your Connection String>"))
    {
        conn.Open();

        string query = "SELECT * FROM ViewWebImg WHERE mySMD계정 = @mySMD계정 AND IP주소1 = @IP주소1 ORDER BY ID";

        using (SqlDataAdapter da = new SqlDataAdapter(query, conn))
        {
            da.SelectCommand.Parameters.AddWithValue("@mySMD계정", "<Your mySMD계정 value>");
            da.SelectCommand.Parameters.AddWithValue("@IP주소1", "<Your IP주소1 value>");

            DataTable dt = new DataTable();
            da.Fill(dt);

            gridControl3.DataSource = dt;
        }
    }
}
여기서 제공된 코드는 간단한 예시로, 실제 애플리케이션에 적용하려면 보안, 에러 처리, 입출력 검증 등 여러 추가 요소를 고려해야 합니다.