오류 원인: iterable argument is empty
오류 메시지:

php
코드 복사
iterable argument is empty
이 오류는 fetch_main_data() 함수에서 SQL 프로시저가 데이터를 반환하지 않았을 때 발생합니다.
즉, cursor.fetchall() 호출 시 데이터가 없는 경우 빈 리스트 ([])가 반환됩니다.
max() 함수는 빈 리스트를 인수로 받지 못하므로 이 오류가 발생합니다.

📌 오류 원인 점검 및 해결 방법
프로시저가 데이터를 반환하지 않는 경우

데이터베이스에 있는 프로시저가 정확히 작동하는지 확인하세요.

예를 들어, 데이터가 없거나 프로시저 코드가 잘못 작성되었을 수 있습니다.

프로시저가 제대로 데이터를 반환하는지 확인하기 (SQL Server Management Studio)

sql
코드 복사
EXEC Get_min_bestdifferent;
결과가 반환되는지 확인하세요.

결과가 없다면 프로시저를 수정해야 합니다.

빈 리스트일 경우 처리 추가하기

데이터가 없을 때 오류가 발생하지 않도록 코드를 수정합니다.

✅ 수정된 코드 (예외 처리 추가)
python
코드 복사
import streamlit as st
import pymssql

# MSSQL 서버 연결 설정 함수
def get_connection():
    try:
        conn = pymssql.connect(
            server="YOUR_SERVER",
            user="YOUR_USER",
            password="YOUR_PASSWORD",
            database="YOUR_DATABASE"
        )
        return conn
    except Exception as e:
        st.error(f"Database connection failed: {e}")
        return None

# Get_min_bestdifferent 프로시저 호출 함수 (cursor.fetchall() 방식)
def fetch_main_data():
    conn = get_connection()
    if conn is None:
        return None, None  # 데이터베이스 연결 실패 시

    try:
        cursor = conn.cursor()
        cursor.execute("EXEC Get_min_bestdifferent")
        
        # 데이터 가져오기
        rows = cursor.fetchall()
        
        # 컬럼 이름 가져오기
        columns = [desc[0] for desc in cursor.description]
        
        conn.close()
        
        if not rows:  # rows가 비어 있는 경우 처리
            st.warning("No data returned from the procedure.")
            return None, None
        
        return rows, columns
    except Exception as e:
        st.error(f"Failed to fetch data: {e}")
        return None, None

# 테이블에서 최대값을 노란색으로 강조하는 HTML 스타일 함수
def generate_html_table(data, columns):
    if data is None or columns is None:
        return "<p>No data to display</p>"
    
    html = "<table border='1' style='width:100%; border-collapse: collapse;'>"
    html += "<thead><tr>"
    for col in columns:
        html += f"<th>{col}</th>"
    html += "</tr></thead><tbody>"

    act2_columns = [f'act2_{i}' for i in range(1, 9)]

    # 데이터 렌더링
    for row in data:
        html += "<tr>"
        
        # act2_1 ~ act2_8 값 중 최대값 찾기
        act2_values = {col: row[idx] for idx, col in enumerate(columns) if col in act2_columns}
        
        if act2_values:  # act2_values가 비어있지 않은 경우만 처리
            try:
                max_value = max(act2_values.values())
            except ValueError:
                max_value = None
        else:
            max_value = None

        for idx, value in enumerate(row):
            column_name = columns[idx]
            if column_name in act2_columns and value == max_value:
                html += f"<td style='background-color: yellow;'>{value}</td>"
            else:
                html += f"<td>{value}</td>"
        html += "</tr>"

    html += "</tbody></table>"
    return html

# Streamlit 앱 구성
def main():
    st.set_page_config(layout="wide")
    st.title("Ranked Data Table - act2_1 ~ act2_8 Highlighting (Cursor 방식)")

    # 데이터 가져오기
    data, columns = fetch_main_data()
    
    if data is None or columns is None:
        st.error("Failed to load data. Please check your database connection or procedure.")
    else:
        st.subheader("act2_1 ~ act2_8 데이터 테이블")
        
        # HTML 테이블 생성 및 표시
        html_table = generate_html_table(data, columns)
        st.markdown(html_table, unsafe_allow_html=True)

if __name__ == "__main__":
    main()
📌 코드 설명 (오류 방지 추가)
빈 데이터 처리

데이터베이스 조회 결과가 없을 때 fetch_main_data() 함수가 None을 반환합니다.

Streamlit에서 경고 메시지를 표시하여 사용자가 문제를 확인할 수 있도록 합니다.

act2_values가 비어있는 경우 예외 처리

max() 호출 전에 act2_values가 비어 있는지 확인합니다.