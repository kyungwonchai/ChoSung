<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Log Sensors</title>
    <style>
        body {
            margin: 0;
            font-family: Arial, sans-serif;
            background-color: #1e1e1e;
            color: #ffffff;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            height: 100vh;
        }
        table {
            border-collapse: collapse;
            width: 80%;
            margin-top: 20px;
        }
        th, td {
            border: 1px solid #444444;
            padding: 8px;
            text-align: center;
        }
        th {
            background-color: #333333;
        }
        .circle-container {
            display: flex;
            flex-wrap: wrap;
            gap: 5px;
            justify-content: center;
        }
        .circle {
            width: 20px;
            height: 20px;
            border-radius: 50%;
            display: inline-block;
            cursor: pointer;
            transition: all 0.3s ease;
        }
        .red {
            background-color: red;
        }
        .green {
            background-color: green;
        }
        #sensorName {
            margin: 20px;
            padding: 10px;
            width: 300px;
            font-size: 16px;
            text-align: center;
        }
    </style>
    <script>
        let sensorActivationTimes = {}; // 두 번째 센서의 활성화 시간을 저장

        function trackSecondSensor(ip, status) {
            if (!sensorActivationTimes[ip]) {
                sensorActivationTimes[ip] = null; // 처음에는 null로 초기화
            }

            if (status === 'red') {
                if (!sensorActivationTimes[ip]) {
                    // 센서가 활성화된 시간 기록
                    sensorActivationTimes[ip] = new Date();
                    document.getElementById('duration-' + ip).textContent = 'Active';
                }
            } else if (status === 'green' && sensorActivationTimes[ip]) {
                // 센서가 비활성화된 시간 기록
                const deactivationTime = new Date();
                const activationTime = sensorActivationTimes[ip];
                const duration = (deactivationTime - activationTime) / 1000; // 초 단위로 변환
                document.getElementById('duration-' + ip).textContent = duration + 's';
                sensorActivationTimes[ip] = null; // 초기화하여 다음 활성화를 대기
            }
        }

        function updateSensors() {
            document.querySelectorAll('.second-sensor').forEach(sensor => {
                const ip = sensor.dataset.ip;
                const status = sensor.classList.contains('red') ? 'red' : 'green';
                trackSecondSensor(ip, status);
            });
        }

        // 페이지가 깜박이지 않도록 AJAX를 사용해 3초마다 데이터 갱신
        function fetchData() {
            fetch('/logsensors')
                .then(response => response.text())
                .then(html => {
                    const parser = new DOMParser();
                    const doc = parser.parseFromString(html, 'text/html');
                    const newData = doc.querySelector('#data-container').innerHTML;
                    document.getElementById('data-container').innerHTML = newData;
                    updateSensors(); // 새 데이터를 로드한 후 센서 업데이트
                });
        }

        setInterval(fetchData, 3000);
    </script>
</head>
<body>
    <h1>Log Sensors Data</h1>
    <input type="text" id="sensorName" placeholder="Click a sensor to see its name" readonly>
    <div id="data-container">
        <table>
            <thead>
                <tr>
                    <th>IP</th>
                    <th>Sensors</th>
                    <th>Time</th>
                    <th>Duration (2nd Sensor)</th>
                </tr>
            </thead>
            <tbody>
                {% for item in data %}
                <tr>
                    <td>{{ item.ip }}</td>
                    <td>
                        <div class="circle-container">
                            {% for char in item.sensor1 %}
                            {% set sensor_name = sensor_names.get(loop.index0, 'Unknown Sensor') %}
                            <span class="circle {% if char == '1' %}red{% else %}green{% endif %} 
                                  {% if loop.index0 == 1 %}second-sensor{% endif %}"
                                  data-ip="{{ item.ip }}"
                                  onclick="showSensorName('{{ sensor_name }} (Position: {{ loop.index0 + 1 }})')">
                            </span>
                            {% endfor %}
                        </div>
                    </td>
                    <td>{{ item.time1 }}</td>
                    <td id="duration-{{ item.ip }}">Not active yet</td>
                </tr>
                {% endfor %}
            </tbody>
        </table>
    </div>
</body>
</html>
