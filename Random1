알겠습니다. Load Image 버튼을 각 이미지의 타이틀 값으로 변경하고, 타이틀 컬럼은 보여주지 않도록 하겠습니다. 이를 통해 공간 효율성을 높이겠습니다.

수정된 ImageListScreen 함수
kotlin
코드 복사
@Composable
fun ImageListScreen() {
    var imageList by remember { mutableStateOf(listOf<ImageData>()) }
    var selectedImage by remember { mutableStateOf<Bitmap?>(null) }
    var selectedImageTitle by remember { mutableStateOf("") }
    var selectedDatetime by remember { mutableStateOf("") }
    var isRefreshing by remember { mutableStateOf(false) }

    val scope = rememberCoroutineScope()

    Column {
        if (selectedImage == null) {
            Button(
                onClick = {
                    scope.launch {
                        imageList = fetchDataFromDatabase()
                    }
                },
                modifier = Modifier.padding(16.dp)
            ) {
                Text(if (imageList.isEmpty()) "Fetch Data" else "Reload Data")
            }
        }

        LazyColumn(modifier = Modifier.weight(1f)) {
            items(imageList) { imageData ->
                Row(
                    modifier = Modifier
                        .fillMaxWidth()
                        .padding(8.dp)
                ) {
                    Text(imageData.datetime, modifier = Modifier.weight(1f))
                    Button(onClick = {
                        scope.launch {
                            selectedImage = fetchImageFromDatabase(imageData.imageTitle, imageData.datetime)
                            selectedImageTitle = imageData.imageTitle
                            selectedDatetime = imageData.datetime
                        }
                    }) {
                        Text(imageData.imageTitle) // Button text changed to image title
                    }
                }
            }
        }

        selectedImage?.let { bitmap ->
            ImageDisplayScreen(
                bitmap = bitmap,
                imageTitle = selectedImageTitle,
                datetime = selectedDatetime,
                onBack = {
                    selectedImage = null
                },
                onFit = {
                    selectedImage = bitmap
                },
                isRefreshing = isRefreshing,
                onToggleRefresh = { isRefreshing = it }
            )
        }
    }
}
수정된 데이터 클래스
kotlin
코드 복사
data class ImageData(val imageTitle: String, val datetime: String)
수정된 데이터베이스 함수
kotlin
코드 복사
suspend fun fetchDataFromDatabase(): List<ImageData> {
    return withContext(Dispatchers.IO) {
        try {
            Log.d("Database", "Attempting to connect to database...")
            val connection: Connection = DriverManager.getConnection(
                "jdbc:jtds:sqlserver://10.222.222.222:1633;databaseName=ddbb123",
                "yourUsername",
                "yourPassword"
            )
            Log.d("Database", "Connection established.")
            val statement = connection.createStatement()
            val resultSet: ResultSet = statement.executeQuery("EXEC yourProcedure")

            val imageList = mutableListOf<ImageData>()
            while (resultSet.next()) {
                val imageTitle = resultSet.getString("imagetitle")
                val datetime = resultSet.getString("datetime1")
                imageList.add(ImageData(imageTitle, datetime))
                Log.d("Database", "Fetched data: $imageTitle, $datetime")
            }
            connection.close()
            imageList
        } catch (e: Exception) {
            Log.e("Database", "Error fetching data", e)
            emptyList()
        }
    }
}
이제 ImageListScreen 함수에서 이미지 타이틀이 버튼 텍스트로 표시되고, 기존 타이틀 컬럼은 표시되지 않습니다. Fetch Data 버튼은 이미지가 선택되지 않은 경우에만 