아래는 요청하신 내용을 구현한 코드입니다. ProcessMESOI 함수에서 SendtoMergeOI_MAGNO와 SendtoMergeOI_ForceSave를 실행하고, 각각의 리턴값을 확인하여 올바른 값(OK)인지, NG(MG)인지 판단하여 별칭과 함께 리턴값을 반환합니다.

csharp
코드 복사
private async Task<string> ProcessMESOI(string val)
{
    // 결과를 저장할 StringBuilder
    StringBuilder resultBuilder = new StringBuilder();

    // SendtoMergeOI_MAGNO 실행
    string magnoResult = await SendtoMergeOI_MAGNO(val);
    if (magnoResult == "OK")
    {
        resultBuilder.AppendLine($"SendtoMergeOI_MAGNO: OK");
    }
    else
    {
        resultBuilder.AppendLine($"SendtoMergeOI_MAGNO: NG ({magnoResult})");
    }

    // SendtoMergeOI_ForceSave 실행
    string forceSaveResult = await SendtoMergeOI_ForceSave(val);
    if (forceSaveResult == "OK")
    {
        resultBuilder.AppendLine($"SendtoMergeOI_ForceSave: OK");
    }
    else
    {
        resultBuilder.AppendLine($"SendtoMergeOI_ForceSave: NG ({forceSaveResult})");
    }

    // 결과 반환
    return resultBuilder.ToString().Trim();
}

// 예제 함수: SendtoMergeOI_MAGNO
private async Task<string> SendtoMergeOI_MAGNO(string val)
{
    // 실제 로직 대신 샘플 코드
    await Task.Delay(100); // 비동기 처리 시뮬레이션
    return val == "MAGNO" ? "OK" : "MG";
}

// 예제 함수: SendtoMergeOI_ForceSave
private async Task<string> SendtoMergeOI_ForceSave(string val)
{
    // 실제 로직 대신 샘플 코드
    await Task.Delay(100); // 비동기 처리 시뮬레이션
    return val == "ForceSave" ? "OK" : "MG";
}
주요 포인트:
비동기 실행:
SendtoMergeOI_MAGNO와 SendtoMergeOI_ForceSave는 await 키워드로 호출하여 비동기 작업이 완료될 때까지 기다립니다.
결과 처리:
각각의 함수 리턴값을 확인하여 올바른 값(OK)인지 판단하고, 별칭과 함께 결과를 기록합니다.
결과 반환:
StringBuilder를 사용하여 결과를 축적한 뒤, 최종 문자열을 반환합니다.
결과 예제:
csharp
코드 복사
string result = await ProcessMESOI("MAGNO");
/*
결과:
SendtoMergeOI_MAGNO: OK
SendtoMergeOI_ForceSave: NG (MG)