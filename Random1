정 인스턴스에서 최근 10분간 CPU 부하를 초래한 가장 큰 이유(쿼리)를 찾으려면, **sys.dm_exec_requests, sys.dm_exec_sessions, sys.dm_exec_query_stats, sys.dm_exec_sql_text**와 같은 동적 관리 뷰(DMV)를 활용해야 합니다. 아래는 상세한 쿼리입니다.

최근 10분간 CPU 부하 원인 찾는 쿼리
sql
코드 복사
-- 최근 10분간 CPU 부하를 초래한 쿼리 찾기
WITH RecentCPUUsage AS (
    SELECT 
        qs.sql_handle,
        qs.plan_handle,
        qs.creation_time,
        qs.last_execution_time,
        qs.total_worker_time / 1000 AS TotalCPUTime_ms, -- CPU 시간(ms 단위)
        qs.execution_count,
        qs.total_worker_time / NULLIF(qs.execution_count, 0) / 1000 AS AvgCPUTimePerExec_ms, -- 실행당 평균 CPU 시간
        qs.total_elapsed_time / 1000 AS TotalElapsedTime_ms, -- 총 실행 시간
        qs.total_elapsed_time / NULLIF(qs.execution_count, 0) / 1000 AS AvgElapsedTimePerExec_ms, -- 실행당 평균 지연 시간
        qs.total_logical_reads AS TotalLogicalReads, -- 논리적 읽기 수
        qs.total_physical_reads AS TotalPhysicalReads, -- 물리적 읽기 수
        qs.total_logical_writes AS TotalLogicalWrites -- 논리적 쓰기 수
    FROM sys.dm_exec_query_stats qs
    WHERE qs.last_execution_time > DATEADD(MINUTE, -10, GETDATE()) -- 최근 10분 동안 실행된 쿼리
)
SELECT 
    TOP 10
    DB_NAME(es.database_id) AS DatabaseName, -- 데이터베이스 이름
    es.host_name AS HostName, -- 클라이언트 호스트 이름
    es.login_name AS LoginName, -- 로그인 사용자
    es.program_name AS ProgramName, -- 실행 프로그램 이름
    rc.TotalCPUTime_ms, -- 총 CPU 사용량
    rc.AvgCPUTimePerExec_ms, -- 실행당 평균 CPU 사용량
    rc.execution_count AS ExecutionCount, -- 실행 횟수
    rc.TotalElapsedTime_ms, -- 총 실행 시간
    rc.AvgElapsedTimePerExec_ms, -- 실행당 평균 지연 시간
    rc.TotalLogicalReads, -- 논리적 읽기
    rc.TotalPhysicalReads, -- 물리적 읽기
    rc.TotalLogicalWrites, -- 논리적 쓰기
    SUBSTRING(sqltext.text, (req.statement_start_offset / 2) + 1, 
              ((CASE req.statement_end_offset 
                   WHEN -1 THEN DATALENGTH(sqltext.text) 
                   ELSE req.statement_end_offset 
               END - req.statement_start_offset) / 2) + 1) AS QueryText -- 쿼리 텍스트
FROM RecentCPUUsage rc
INNER JOIN sys.dm_exec_requests req ON rc.plan_handle = req.plan_handle
INNER JOIN sys.dm_exec_sessions es ON req.session_id = es.session_id
CROSS APPLY sys.dm_exec_sql_text(rc.sql_handle) AS sqltext
WHERE es.is_user_process = 1 -- 사용자 세션만 포함
ORDER BY rc.TotalCPUTime_ms DESC; -- 총 CPU 사용량 기준 정렬
쿼리 설명
sys.dm_exec_query_stats:

CPU 사용량(total_worker_time), 실행 횟수(execution_count), 논리적/물리적 읽기(total_logical_reads, total_physical_reads), 지연 시간(total_elapsed_time) 등의 데이터를 제공합니다.
sys.dm_exec_requests 및 sys.dm_exec_sessions:

현재 실행 중인 요청과 세션 정보를 제공합니다.
세션의 사용자 이름(login_name), 클라이언트 호스트 이름(host_name), 프로그램 이름(program_name)을 확인합니다.
sys.dm_exec_sql_text:

쿼리 텍스트를 추출하여 실행 중인 SQL을 확인합니다.
DATEADD(MINUTE, -10, GETDATE()):

최근 10분 동안 실행된 쿼리를 필터링합니다.
CPU 사용량 기준 정렬:

총 CPU 사용량(TotalCPUTime_ms)이 높은 순으로 정렬합니다.
주요 결과
DatabaseName: 부하를 발생시킨 쿼리가 실행된 데이터베이스 이름.
HostName: 쿼리를 실행한 클라이언트 호스트.
LoginName: 쿼리를 실행한 사용자.
ProgramName: 실행 프로그램(예: SSMS, 애플리케이션).
QueryText: 부하를 발생시킨 실제 SQL 쿼리.
TotalCPUTime_ms: 쿼리가 사용한 총 CPU 시간.
AvgCPUTimePerExec_ms: 쿼리 실행당 평균 CPU 시간.
추가 조치
문제가 되는 쿼리 최적화:
CPU 부하가 큰 쿼리를 분석하여 인덱스 추가, 쿼리 리팩토링 또는 실행 계획을 검토.
리소스 관리: