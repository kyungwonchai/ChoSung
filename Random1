녕하세요! WPF에서 DevExpress의 SimpleButton 컨트롤에 대한 전역 스타일을 만들고 싶으신 거군요. 요구사항은 다음과 같습니다:

기반 컨트롤: DevExpress SimpleButton
스타일: 활성화(Enabled) 상태는 은은한 화이트-블루 그라데이션 사용.
구분: 활성화(Enabled) 상태와 비활성화(Disabled) 상태가 명확하게 구분되어야 함.
적용 범위: 애플리케이션 전체에 적용되는 전역 스타일.
이 요구사항을 만족하는 XAML 스타일 코드를 아래와 같이 작성할 수 있습니다. 이 코드는 App.xaml 파일의 <Application.Resources> 섹션 안에 넣거나, 별도의 ResourceDictionary 파일에 작성한 후 App.xaml에서 병합(Merge)하면 됩니다.

코드 스니펫

<Application.Resources>
    <ResourceDictionary>
        <ResourceDictionary.MergedDictionaries>
            </ResourceDictionary.MergedDictionaries>

        <Style TargetType="{x:Type dx:SimpleButton}">
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Foreground" Value="#FF333333"/> <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type dx:SimpleButton}">
                        <Grid x:Name="Root">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                            <GradientStop Color="White" Offset="0.0"/>
                                                            <GradientStop Color="#FFE0F0FF" Offset="1.0"/> </LinearGradientBrush>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="#FFB0C4DE"/> </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="Opacity" To="1.0" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                            <GradientStop Color="White" Offset="0.0"/>
                                                            <GradientStop Color="#FFC0E0FF" Offset="1.0"/> </LinearGradientBrush>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="#FF90B4D6"/> </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                            <GradientStop Color="#FFFAFAFA" Offset="0.0"/>
                                                            <GradientStop Color="#FFA0C8F0" Offset="1.0"/> </LinearGradientBrush>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="#FF70A0C8"/> </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                 <DiscreteObjectKeyFrame KeyTime="0" Value="#FF111111"/> </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <SolidColorBrush Color="#FFE8E8E8"/>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="#FFD0D0D0"/> </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="#FFA0A0A0"/> </ObjectAnimationUsingKeyFrames>
                                             <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.7" Duration="0"/> </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <Border x:Name="PART_Border"
                                    BorderThickness="1"
                                    CornerRadius="3"> <Border.Background>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <GradientStop Color="White" Offset="0.0"/>
                                        <GradientStop Color="#FFE0F0FF" Offset="1.0"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="#FFB0C4DE"/>
                                </Border.BorderBrush>
                            </Border>

                            <ContentPresenter x:Name="ContentPresenter"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              RecognizesAccessKey="True"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </ResourceDictionary>
</Application.Resources>
코드 설명:

TargetType="{x:Type dx:SimpleButton}": 이 스타일이 DevExpress.Xpf.Core.SimpleButton 타입의 모든 컨트롤에 적용되도록 지정합니다. (dx: 네임스페이스는 XAML 파일 상단에 xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" 와 같이 선언되어 있어야 합니다.)
Setter Property="Template": 버튼의 기본 모양(템플릿)을 새로 정의합니다.
ControlTemplate: 버튼의 시각적 구조를 정의합니다. 여기서는 Grid를 루트로 사용하고 그 안에 Border (버튼 배경/테두리 역할)와 ContentPresenter (버튼 내용 표시)를 배치했습니다.
VisualStateManager: 버튼의 상태(Normal, MouseOver, Pressed, Disabled)에 따라 시각적 속성(배경색, 테두리색, 텍스트 색 등)이 어떻게 변할지를 정의합니다.
Normal: 기본 상태. 흰색에서 연한 하늘색(FFE0F0FF)으로 변하는 그라데이션 배경과 연한 파란색 테두리를 사용합니다.
MouseOver: 마우스를 올렸을 때. 그라데이션의 끝 색과 테두리 색을 약간 더 진하게 변경합니다.
Pressed: 버튼을 눌렀을 때. 그라데이션과 테두리 색을 더 진하게 변경하고, 텍스트 색도 약간 진하게 하여 눌린 느낌을 줍니다.
Disabled: 비활성화 상태. 배경을 연한 회색 단색(FFE8E8E8)으로, 테두리와 텍스트 색도 회색 계열로 변경하여 활성화 상태와 명확히 구분되도록 합니다. 전체적으로 약간 투명하게 처리하여 비활성화 느낌을 강조했습니다.
PART_Border: 버튼의 배경과 테두리를 담당하는 Border 요소입니다. VisualStateManager에서 이 요소의 Background와 BorderBrush 속성을 변경하여 상태 변화를 시각적으로 표현합니다. CornerRadius="3"으로 모서리를 약간 둥글게 만들었습니다.
ContentPresenter: 버튼에 표시될 내용(텍스트, 이미지 등)을 보여주는 역할을 합니다. Foreground 속성을 VisualStateManager에서 제어하여 비활성화 시 텍스트 색상을 변경합니다.
전역 적용: 스타일에 x:Key 속성을 지정하지 않았으므로, 해당 TargetType의 모든 인스턴스에 이 스타일이 자동으로 적용됩니다.
적용 방법:

위 XAML 코드를 복사합니다.
WPF 프로젝트의 App.xaml 파일을 엽니다.
<Application.Resources> 섹션 안에 위 코드를 붙여넣습니다. (만약 <ResourceDictionary>가 이미 있다면 그 안에 <Style> 부분을 넣으면 됩니다.)
XAML 파일 상단에 xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" 네임스페이스 선언이 있는지 확인하고, 없다면 추가합니다. (DevExpress 버전에 따라 네임스페이스가 약간 다를 수 있습니다.)
프로젝트를 빌드하고 실행하면 모든 SimpleButton에 새로운 스타일이 적용된 것을 확인할 수 있습니다.
이제 애플리케이션의 모든 DevExpress SimpleButton은 지정된 그라데이션 스타일을 가지며, 활성화/비활성화 상태가 명확하게 구분될 것입니다. 색상 코드("#FFE0F0FF", "#FFB0C4DE" 등)는 원하는 색감에 맞춰 자유롭게 조절하시면 됩니다.






Canvas