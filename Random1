namespace YourNamespace
{
    public class YourClass
    {
        private async void UpdateRichEditControlAsync(DataTable dataTable, RichEditControl richEditControl)
        {
            // 백그라운드에서 RichEditControl 업데이트
            await Task.Run(() =>
            {
                richEditControl.Invoke(new MethodInvoker(() =>
                {
                    // RichEditControl에 표 형태의 내용 설정
                    richEditControl.Document.BeginUpdate();

                    // 테이블 생성
                    richEditControl.Document.Tables.Create(richEditControl.Document.CaretPosition, dataTable.Rows.Count + 1, dataTable.Columns.Count);

                    // 테이블 스타일 설정
                    DevExpress.XtraRichEdit.API.Native.Table table = richEditControl.Document.Tables[0];
                    table.Borders.InsideHorizontalBorder.LineStyle = DevExpress.XtraRichEdit.API.Native.TableBorderLineStyle.Single;
                    table.Borders.InsideHorizontalBorder.LineColor = Color.Black;
                    table.Borders.InsideHorizontalBorder.LineThickness = 1f;
                    table.Borders.InsideVerticalBorder.LineStyle = DevExpress.XtraRichEdit.API.Native.TableBorderLineStyle.Single;
                    table.Borders.InsideVerticalBorder.LineColor = Color.Black;
                    table.Borders.InsideVerticalBorder.LineThickness = 1f;

                    // 테이블 헤더 생성
                    for (int col = 0; col < dataTable.Columns.Count; col++)
                    {
                        DevExpress.XtraRichEdit.API.Native.TableCell cell = table.Rows[0].Cells[col];
                        cell.CharacterProperties.BackColor = Color.LightSkyBlue; // 헤더 셀 배경색을 연한하늘색으로 변경
                        cell.CharacterProperties.ForeColor = Color.Black;
                        cell.CharacterProperties.TextAlignment = DevExpress.Utils.HorzAlignment.Center;
                        cell.Text = dataTable.Columns[col].ColumnName;
                    }

                    // 테이블 데이터 생성
                    for (int row = 0; row < dataTable.Rows.Count; row++)
                    {
                        bool highlightRow = false; 
                        if(int.TryParse(dataTable.Rows[row][1].ToString(), out int column2Value) && 
                           int.TryParse(dataTable.Rows[row][3].ToString(), out int column4Value))
                        {
                            highlightRow = column2Value < column4Value; 
                        }

                        for (int col = 0; col < dataTable.Columns.Count; col++)
                        {
                            DevExpress.XtraRichEdit.API.Native.TableCell cell = table.Rows[row + 1].Cells[col];
                            cell.Text = dataTable.Rows[row][col].ToString();
                            cell.CharacterProperties.TextAlignment = DevExpress.XtraRichEdit.API.Native.ParagraphAlignment.Center;

                            // 2번째 컬럼의 값이 4번째 컬럼의 값보다 작은 경우, 행을 노란색으로 칠함
                            if (highlightRow)
                            {
                                cell.CharacterProperties.BackColor = Color.Yellow;
                            }
                        }
                    }

                    richEditControl.Document.EndUpdate();
                }));
            });
        }

        // 예시로 사용하는 메서드
        private async void LoadDataInBackground()
        {
            // 예시로 DataTable 생성
            DataTable dataTable = new DataTable();
            dataTable.Columns.Add("Name", typeof(string));
            dataTable.Columns.Add("Value1", typeof(int));
            dataTable.Columns.Add("Value2", typeof(int));
            dataTable.Columns.Add("Value3", typeof(int));
            dataTable.Rows.Add("John Doe", 30, 50, 40);
            dataTable.Rows.Add("Jane Smith", 25, 35, 30);

            // RichEditControl 업데이트를 백그라운드로 실행
            await UpdateRichEditControlAsync(dataTable, rich
