를 조회하고, 그 결과를 GridControl에 표시하는 기능을 구현하려면 몇 단계를 거쳐야 합니다.

차트 클릭 이벤트 처리: 차트의 클릭 이벤트를 처리하여 선택된 막대의 데이터를 가져옵니다.

데이터베이스 조회: 선택된 막대의 '사용여부'와 '유형'에 해당하는 데이터를 데이터베이스에서 조회합니다.

GridControl에 데이터 표시: 조회한 데이터를 GridControl에 표시합니다.

아래는 이 기능을 구현하기 위한 C# 코드 예시입니다:

csharp
Copy code
using DevExpress.XtraCharts;
using System.Data;
using System.Data.SqlClient;
using System.Windows.Forms;

namespace WinFormsChartExample
{
    public partial class MainForm : Form
    {
        // ... 기존의 MainForm 구현 ...

        private void ChartControl_MouseDown(object sender, MouseEventArgs e)
        {
            // 차트의 클릭된 부분을 확인
            ChartHitInfo hitInfo = chartControl.CalcHitInfo(e.Location);
            if (hitInfo.InSeries)
            {
                SeriesPoint point = hitInfo.SeriesPoint;

                // '사용여부'와 '유형' 값을 가져옴
                string usage = point.Argument;
                string type = hitInfo.Series.Name;

                // 데이터베이스에서 해당 데이터 조회
                DataTable data = GetDataFromDatabase(usage, type);

                // GridControl에 데이터 표시
                gridControl.DataSource = data;
            }
        }

        private DataTable GetDataFromDatabase(string usage, string type)
        {
            DataTable dataTable = new DataTable();

            // 여기에 실제 데이터베이스 연결 및 쿼리를 작성하세요.
            // 예시: "SELECT * FROM YourTable WHERE 사용여부 = @usage AND 유형 = @type"
            string connectionString = ""; // 데이터베이스 연결 문자열
            string query = "SELECT * FROM YourTable WHERE 사용여부 = @usage AND 유형 = @type";

            using (SqlConnection connection = new SqlConnection(connectionString))
            {
                using (SqlCommand command = new SqlCommand(query, connection))
                {
                    command.Parameters.AddWithValue("@usage", usage);
                    command.Parameters.AddWithValue("@type", type);

                    using (SqlDataAdapter adapter = new SqlDataAdapter(command))
                    {
                        adapter.Fill(dataTable);
                    }
                }
            }

            return dataTable;
        }
    }
}
이 코드에서는 ChartControl_MouseDown 메서드를 통해 차트에서 클릭된 막대의 정보를 가져옵니다. GetDataFromDatabase 메서드는 데이터베이스에서 해당 '사용여부'와 '유형'에 해당하는 데이터를 조회합니다. 이 때, 실제 데이터베이스 연결 문자열과 쿼리는 사용자의 데이터베이스 환경에 맞게 수정해야 합니다.

마지막으로, gridControl.DataSource = data;를 통해 조회된 데이터를 GridControl에 바인딩합니다. 이 예제 코드는 기본적인 구조를 제공하며, 실제 프로젝트에 맞게 세부적인 조정이 필요할