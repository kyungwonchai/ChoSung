PF에서 ScrollBar를 커스터마이징할 때, PART_Track 또는 PART_Thumb의 색상을 변경하는 것은 단순히 UI를 변경하는 작업일 뿐, 기본 동작(스크롤 방향)에는 영향을 주지 않아야 합니다. 하지만 다음과 같은 문제들이 있을 수 있습니다.

1. Style이나 Template 변경으로 인한 문제
ScrollBar의 Template을 변경하다가 잘못된 방향 설정이나 기본 동작에 영향을 주는 요소를 수정했을 수 있습니다.

확인해야 할 사항:
Template에서 PART_Track 또는 PART_Thumb를 제외한 다른 요소를 변경하지 않았는지 확인하세요.
ScrollBar의 Orientation 속성이 올바르게 설정되어 있는지 확인하세요.
수직 스크롤: Orientation="Vertical"
수평 스크롤: Orientation="Horizontal"
2. Binding 문제
ScrollBar가 스크롤 컨트롤의 Value를 반대로 Binding하고 있을 수 있습니다.

해결 방법:
Value가 Binding될 때, Binding의 Converter 또는 Direction이 반대로 설정되어 있는지 확인하세요. 예를 들어, 다음과 같이 잘못 설정되어 있을 수 있습니다:

xml
코드 복사
<ScrollBar Orientation="Vertical" Value="{Binding SomeValue, Mode=TwoWay, Converter={StaticResource InvertedConverter}}" />
3. 커스터마이징 과정에서 이벤트 누락
ScrollBar 커스터마이징 중에, ScrollBar의 이벤트나 속성(Minimum, Maximum, LargeChange, SmallChange)을 건드렸을 가능성도 있습니다. 이런 경우, 스크롤 방향이나 동작이 비정상적으로 작동할 수 있습니다.

확인 방법:
ScrollBar의 모든 속성(Value, Minimum, Maximum)을 확인하여 적절한 값으로 설정되어 있는지 확인하세요.
커스터마이징한 Thumb에서 이벤트를 잘못 처리하지 않았는지 확인하세요.
4. PART_Thumb의 스타일 적용 문제
PART_Thumb의 색상 변경만 하려면, 아래와 같이 간단히 Style을 정의하면 됩니다:

xaml
코드 복사
<Style TargetType="Thumb" x:Key="CustomThumbStyle">
    <Setter Property="Background" Value="Red" />
    <Setter Property="Width" Value="20" />
</Style>
ScrollBar에 적용:

xaml
코드 복사
<ScrollBar Orientation="Vertical">
    <ScrollBar.Template>
        <ControlTemplate TargetType="ScrollBar">
            <Grid>
                <Track Name="PART_Track">
                    <Track.Thumb>
                        <Thumb Style="{StaticResource CustomThumbStyle}" />
                    </Track.Thumb>
                </Track>
            </Grid>
        </ControlTemplate>
    </ScrollBar.Template>
</ScrollBar>
문제 해결:
위처럼 스타일을 분리해서 색상만 변경했을 때, 방향이 반대로 작동한다면 템플릿에 변경이 잘못된 것이므로 Template 전체를 검토하세요.

5. 기본 동작 확인
만약 커스터마이징 없이도 스크롤 방향이 이상하다면, 아래 코드를 사용하여 WPF 기본 스크롤 동작을 테스트하세요:

xaml
코드 복사
<ScrollViewer Height="200">
    <StackPanel>
        <TextBlock Text="Item 1" />
        <TextBlock Text="Item 2" />
        <TextBlock Text="Item 3" />
        <TextBlock Text="Item 4" />
        <TextBlock Text="Item 5" />
    </StackPanel>
</ScrollViewer>
6. 디버깅
디버깅 중에는 다음을 체크하세요:

스크롤 방향이 잘못 작동하는지 ScrollViewer와 연동된 ScrollBar를 테스트합니다.
디버깅을 통해 Value의 변화가 예상대로 동작하는지 확인합니다.
요약
색상 변경은 Style 또는 ControlTemplate을 사용합니다.
기본 ScrollBar 동작이 이상하다면, 속성 및 Binding을 점검하세요.