unable to find valid certification path to requested target 에러는 네트워크 문제, 인증서 문제 또는 Gradle 설정 문제로 인해 발생할 수 있습니다. 이 문제를 해결하려면 다음 단계를 시도해 보세요:

Gradle 재설치 및 캐시 정리:
Gradle 캐시를 정리하고 다시 시도합니다.

File > Invalidate Caches / Restart를 클릭하여 캐시를 무효화하고 다시 시작합니다.
HTTPS 대신 HTTP 사용:
build.gradle.kts 파일에서 HTTPS 대신 HTTP를 사용하도록 설정을 변경합니다. 이는 안전하지 않으므로 일시적인 해결책으로만 사용합니다.

kotlin
코드 복사
buildscript {
    repositories {
        maven {
            url = uri("http://maven.google.com")
        }
        maven {
            url = uri("http://repo1.maven.org/maven2/")
        }
    }
    dependencies {
        classpath("com.android.tools.build:gradle:8.0.2")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:1.8.20")
    }
}

allprojects {
    repositories {
        maven {
            url = uri("http://maven.google.com")
        }
        maven {
            url = uri("http://repo1.maven.org/maven2/")
        }
    }
}

tasks.register("clean", Delete::class) {
    delete(rootProject.buildDir)
}
인증서 문제 해결:
인증서 문제가 원인인 경우, 인증서를 수동으로 설치하거나 신뢰할 수 있는 인증서 저장소를 설정해야 합니다.

gradle.properties 파일에 다음 줄을 추가하여 Gradle이 특정 인증서를 신뢰하도록 합니다:

properties
코드 복사
systemProp.javax.net.ssl.trustStore=/path/to/your/truststore.jks
systemProp.javax.net.ssl.trustStorePassword=your_password
네트워크 설정 확인:
네트워크 설정에서 프록시나 방화벽이 원인이 될 수 있습니다. 프록시 설정을 확인하고 필요하다면 우회 설정을 추가합니다.

gradle.properties 파일에 프록시 설정을 추가합니다:

properties
코드 복사
systemProp.http.proxyHost=your_proxy_host
systemProp.http.proxyPort=your_proxy_port
systemProp.https.proxyHost=your_proxy_host
systemProp.https.proxyPort=your_proxy_port
Gradle Wrapper 사용:
로컬에 설치된 Gradle 대신 프로젝트에 포함된 Gradle Wrapper를 사용해 보세요. 프로젝트 루트 디렉토리에 gradlew 파일이 있어야 합니다.

터미널에서 프로젝트 디렉토리로 이동한 후 다음 명령을 실행합니다:

sh
코드 복사
./gradlew build
위의 방법 중 하나가 문제를 해결하는 데 도움이 될 것입니다. 동일한 문제가 계속 발생하면 구체적인 네트워크 환경 및 설정에 대해 추가 정보를 제공해 주시면 추가로 도와드리겠습니다