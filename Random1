ditControl을 한 페이지로 표시하도록 설정하고, 페이지 나눔 없이 모든 내용을 한 페이지에 표시하는 방법을 설명드리겠습니다. 이 작업은 문서 레이아웃 설정을 통해 가능합니다.

XAML 코드:

xml
코드 복사
<Window x:Class="YourNamespace.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
        xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/richedit"
        Title="MainWindow" Height="450" Width="800">
    <DockPanel>
        <ToolBarTray DockPanel.Dock="Top">
            <ToolBar>
                <Button Content="Bold" Command="dxr:RichEditUICommand.Bold" CommandTarget="{Binding ElementName=richEditControl}"/>
                <Button Content="Italic" Command="dxr:RichEditUICommand.Italic" CommandTarget="{Binding ElementName=richEditControl}"/>
                <Button Content="Underline" Command="dxr:RichEditUICommand.Underline" CommandTarget="{Binding ElementName=richEditControl}"/>
                <TextBox x:Name="searchBox" Width="200" Height="30" KeyDown="SearchBox_KeyDown"/>
            </ToolBar>
        </ToolBarTray>
        <dxr:RichEditControl x:Name="richEditControl" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ShowSearchPanel="True"/>
    </DockPanel>
</Window>
C# 코드 (Code-Behind):

csharp
코드 복사
using DevExpress.XtraRichEdit.API.Native;
using DevExpress.XtraRichEdit;
using System.Windows;
using System.Windows.Input;

namespace YourNamespace
{
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
            ConfigureRichEditControl();
        }

        private void ConfigureRichEditControl()
        {
            // Set the view type to Simple view
            richEditControl.Loaded += (s, e) =>
            {
                richEditControl.ActiveViewType = RichEditViewType.Simple;
                SimpleView view = richEditControl.ActiveView as SimpleView;
                if (view != null)
                {
                    view.AllowDisplayLineNumbers = false;
                    view.BackColor = System.Drawing.Color.White;
                }
            };
        }

        private void SearchBox_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.Key == Key.Enter)
            {
                string searchText = searchBox.Text;
                HighlightText(searchText);
            }
        }

        private void HighlightText(string searchText)
        {
            Document document = richEditControl.Document;

            // Clear previous formatting
            CharacterProperties cp = document.BeginUpdateCharacters(document.Range);
            cp.BackColor = System.Drawing.Color.White;
            cp.ForeColor = System.Drawing.Color.Black;
            document.EndUpdateCharacters(cp);

            // Find all occurrences of the search text
            var ranges = document.FindAll(searchText, SearchOptions.None);

            foreach (DocumentRange range in ranges)
            {
                // Apply background and foreground color to each found range
                CharacterProperties characterProperties = document.BeginUpdateCharacters(range);
                characterProperties.BackColor = System.Drawing.Color.Blue;
                characterProperties.ForeColor = System.Drawing.Color.Yellow;
                document.EndUpdateCharacters(characterProperties);
            }
        }
    }
}
위 코드에서 중요한 부분은 ConfigureRichEditControl 메서드입니다. 이 메서드는 RichEditControl의 ActiveViewType을 Simple로 설정하여 페이지 구분 없이 전체 문서를 하나의 페이지로 표시합니다. 또한 SimpleView를 사용하여 페이지 넘버와 같은 요소를 표시하지 않도록 설정합니다.

이 설정을 통해 RichEditControl이 하나의 큰 페이지로 설정되며, 검색 기