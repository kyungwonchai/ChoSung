kedComboBoxEdit를 사용하여 멀티 선택을 구현하겠습니다. 그 후, 선택된 항목들을 꺼내 쓸 수 있는 방법도 제공하겠습니다.

    XAML:

xaml

<Window x:Class="YourNamespace.YourWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
        Title="Your Window" Height="400" Width="400">
    <Grid>
        <!-- 호가정일 -->
        <Border BorderBrush="Black" BorderThickness="2" Margin="0,0" Width="300">
            <StackPanel>
                <Label Content="호가정일(날짜)" Width="300" Height="30" Background="SkyBlue" HorizontalContentAlignment="Center" BorderBrush="Black" BorderThickness="0,0,0,1" />
                <dx:CheckedComboBoxEdit Name="menuc_SelectedDate" Width="300" Height="50" Background="White" ItemsSource="{Binding Menuc_Dates}" EditValueChanged="OnEditValueChanged"/>
            </StackPanel>
        </Border>
        <!-- ... (다른 ComboBox도 비슷하게 CheckedComboBoxEdit로 변경하면 됩니다.) -->
    </Grid>
</Window>

    C#:

csharp

using System.Collections.ObjectModel;
using System.ComponentModel;
using DevExpress.Xpf.Editors;

public partial class YourWindow : Window, INotifyPropertyChanged
{
    private ObservableCollection<string> menuc_Dates = new ObservableCollection<string>();
    // ... (다른 ObservableCollection들도 동일하게 선언)

    public ObservableCollection<string> Menuc_Dates { get => menuc_Dates; set { menuc_Dates = value; OnPropertyChanged(); } }
    // ... (다른 ObservableCollection들의 프로퍼티도 동일하게 선언)

    public YourWindow()
    {
        InitializeComponent();

        Menuc_Dates = new ObservableCollection<string>() { DateTime.Now.ToString("yyyyMMdd"), DateTime.Now.AddDays(-1).ToString("yyyyMMdd") };
        // ... (다른 ObservableCollection들도 동일하게 초기화)

        this.DataContext = this;
    }

    private void OnEditValueChanged(object sender, EditValueChangedEventArgs e)
    {
        CheckedComboBoxEdit combo = sender as CheckedComboBoxEdit;

        if (combo != null)
        {
            var selectedItems = combo.EditValue as IList;

            if (selectedItems != null)
            {
                foreach (var item in selectedItems)
                {
                    string selectedValue = item.ToString();
                    // 선택된 항목을 여기에서 처리
                }
            }
        }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    protected virtual void OnPropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string propertyName = null)
    {
        PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
    }
}

이 코드는 호가정일 CheckedComboBoxEdit만을 위한 코드이며, 다른 ComboBox들도 비슷한 방식으로 변경하시면 됩니다. OnEditValueChanged 이벤트 핸들러에서 선택된 항목들을 처리할 수 있습니다