WPF에서 센서의 감지 여부에 따라 색상이 변경되도록 하려면, 감지 여부(IsDetected)의 변경을 추적하고, 이 변경에 대응하여 UI 업데이트를 할 수 있어야 합니다. INotifyPropertyChanged 인터페이스를 센서 모델에 구현하여, 감지 여부(IsDetected) 속성이 변경될 때마다 이벤트를 발생시키고, XAML에서 이 속성에 바인딩된 요소가 반응하도록 설정할 수 있습니다.

1. 센서 모델 수정
센서 모델에 INotifyPropertyChanged 인터페이스를 구현하여 감지 여부가 변경될 때마다 UI가 업데이트될 수 있도록 합니다.

SensorModel 클래스
csharp
코드 복사
using System.ComponentModel;

public class SensorModel : INotifyPropertyChanged
{
    private bool _isDetected;

    public string SensorName { get; set; }

    public bool IsDetected
    {
        get => _isDetected;
        set
        {
            if (_isDetected != value)
            {
                _isDetected = value;
                OnPropertyChanged(nameof(IsDetected));
            }
        }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    protected void OnPropertyChanged(string propertyName)
    {
        PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
    }
}
2. XAML에서 색상 바인딩 설정
센서의 IsDetected 속성에 따라 색상이 변경되도록 XAML에서 DataTrigger 또는 Converter를 사용하여 설정합니다.

Converter 사용 예시
먼저 BoolToColorConverter를 정의합니다. 이 컨버터는 bool 값을 색상으로 변환합니다.

csharp
코드 복사
using System;
using System.Globalization;
using System.Windows.Data;
using System.Windows.Media;

public class BoolToColorConverter : IValueConverter
{
    public object Convert(object value, Type targetType, object parameter, CultureInfo culture)
    {
        return (bool)value ? Brushes.Red : Brushes.Green; // 감지되면 빨간색, 감지되지 않으면 녹색
    }

    public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)
    {
        throw new NotImplementedException();
    }
}
XAML에서 컨버터 사용
xml
코드 복사
<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:YourNamespace">
    <Window.Resources>
        <local:BoolToColorConverter x:Key="BoolToColorConverter"/>
    </Window.Resources>
    <Grid>
        <ItemsControl ItemsSource="{Binding Sensors}">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding SensorName}"/>
                        <Rectangle Width="20" Height="20"
                                   Fill="{Binding IsDetected, Converter={StaticResource BoolToColorConverter}}"/>
                    </StackPanel>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </Grid>
</Window>
요약
SensorModel에서 IsDetected 속성 변경을 PropertyChanged 이벤트를 통해 알립니다.
XAML에서 BoolToColorConverter를 사용하여 IsDetected 속성의 변경을 색상 변화로 표현합니다.
이 구성은 센서의 감지 상태가 변경될 때마다 UI에 즉시 반영되도록 합니다.
위의 코드와 설정을 통해 센서의 감지 여부가 변경될 때마다 자동으로 UI에서 해당 센서의 표시 색상이 업데이트되도록 구현할 수 있습니다. 이러한 방식으로 각 센서의 상태에