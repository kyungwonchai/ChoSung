건 DevExpress GridControl의 GridView에서 RowStyle 이벤트를 활용하면 간단하게 해결할 수 있어.

1. RowStyle 이벤트 활용
GridView.RowStyle 이벤트를 사용해서 modelchk 컬럼 값이 1이면 파란색, 0이면 검정색이 되도록 설정하면 돼.

구현 방법
1) 디자이너에서 GridView 이벤트 연결
GridControl에 연결된 GridView 선택
Properties 창에서 RowStyle 이벤트 더블 클릭해서 코드 생성
2) 코드 추가
csharp
Copy code
using DevExpress.XtraGrid.Views.Grid;
using System.Drawing;

private void gridView1_RowStyle(object sender, RowStyleEventArgs e)
{
    GridView view = sender as GridView;
    if (view == null)
        return;

    // 현재 행의 modelchk 값 가져오기
    object modelChkValue = view.GetRowCellValue(e.RowHandle, "modelchk");

    if (modelChkValue != null && modelChkValue.ToString() == "1")
    {
        // modelchk가 1이면 Basic 모델 컬럼을 파란색으로
        e.Appearance.ForeColor = Color.Blue;
    }
    else
    {
        // modelchk가 0이면 검은색으로
        e.Appearance.ForeColor = Color.Black;
    }
}
3. 핵심 설명
✅ GetRowCellValue(e.RowHandle, "modelchk") → 현재 행의 modelchk 값을 가져와서
✅ 값이 "1"이면 e.Appearance.ForeColor = Color.Blue;
✅ 값이 "0"이면 e.Appearance.ForeColor = Color.Black;
✅ RowStyle 이벤트는 바인딩된 데이터가 변경될 때마다 자동으로 반영됨

4. 실행 흐름
DataTable이 GridControl에 바인딩됨
RowStyle 이벤트가 자동 실행됨
modelchk 값을 읽어 Basic 모델 컬럼 색상을 동적으로 변경함
5. 추가 고려사항
✔ 컬럼 특정 색 변경
현재 코드는 모든 컬럼의 글자색이 바뀜. 특정 컬럼(Basic 모델)만 변경하려면 아래처럼 수정해.

csharp
Copy code
if (view.FocusedColumn.FieldName == "Basic 모델")
{
    e.Appearance.ForeColor = (modelChkValue != null && modelChkValue.ToString() == "1") ? Color.Blue : Color.Black;
}
✔ GridControl에 바인딩 후 강제 업데이트

csharp
Copy code