using System;
using System.Runtime.InteropServices;

public static class Win32
{
    public const int GWL_WNDPROC = -4; // 윈도우 프로시저의 주소
    public const int GWL_HINSTANCE = -6; // 애플리케이션 인스턴스의 핸들
    public const int GWL_HWNDPARENT = -8; // 부모 윈도우의 핸들
    public const int GWL_STYLE = -16; // 윈도우 스타일
    public const int GWL_EXSTYLE = -20; // 윈도우 확장 스타일
    public const int GWL_USERDATA = -21; // 윈도우 사용자 데이터
    public const int GWL_ID = -12; // 윈도우 컨트롤의 ID

    [DllImport("user32.dll", EntryPoint = "GetWindowLong")]
    public static extern IntPtr GetWindowLong(IntPtr hWnd, int nIndex);

    // 64비트 버전의 Windows를 위한 GetWindowLongPtr 정의
    // 32비트에서는 GetWindowLong와 동일하게 작동
    [DllImport("user32.dll", EntryPoint = "GetWindowLongPtr")]
    public static extern IntPtr GetWindowLongPtr(IntPtr hWnd, int nIndex);
}

class Program
{
    static void Main(string[] args)
    {
        // hWnd에 유효한 윈도우 핸들이 필요합니다.
        IntPtr hWnd = new IntPtr(123456); // 예시이므로, 실제 윈도우 핸들을 사용해야 합니다.

        // 예시: 윈도우 스타일 조회
        IntPtr style = Win32.GetWindowLongPtr(hWnd, Win32.GWL_STYLE);
        Console.WriteLine($"Window style: {style.ToInt64()}");

        // 다른 상수를 사용하는 경우도 동일한 방법으로 호출할 수 있습니다.
    }
}
