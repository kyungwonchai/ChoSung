터베이스의 데이터를 로드하고 자동으로 갱신하는 전체 예제를 제공하겠습니다. 이 예제에서는 Window가 로드될 때 데이터베이스에서 데이터를 로드하고, GridControl의 ComboBoxEditSettings에 바인딩합니다.

1. 필요한 참조 추가
WPF 프로젝트에 다음 참조를 추가합니다:

DevExpress.Data
DevExpress.Mvvm
DevExpress.Xpf.Core
DevExpress.Xpf.Editors
DevExpress.Xpf.Grid
2. DataModel.cs: 데이터 모델 클래스
csharp
Copy code
public class ComboItem
{
    public string Value { get; set; }
}
3. DatabaseService.cs: 데이터베이스 서비스 클래스
csharp
Copy code
using System.Data.SqlClient;
using System.Collections.Generic;

public class DatabaseService
{
    private string _connectionString = "Your Connection String Here";

    public List<ComboItem> GetComboItems(string tableName)
    {
        var items = new List<ComboItem>();

        using (SqlConnection conn = new SqlConnection(_connectionString))
        {
            conn.Open();
            using (SqlCommand cmd = new SqlCommand($"SELECT * FROM {tableName}", conn))
            {
                using (SqlDataReader reader = cmd.ExecuteReader())
                {
                    while (reader.Read())
                    {
                        items.Add(new ComboItem { Value = reader["Column"].ToString() });
                    }
                }
            }
        }

        return items;
    }
}
4. MainViewModel.cs: ViewModel 클래스
csharp
Copy code
using System.Collections.ObjectModel;
using System.ComponentModel;

public class MainViewModel : INotifyPropertyChanged
{
    private readonly DatabaseService _databaseService = new DatabaseService();

    public ObservableCollection<ComboItem> Combo1Items { get; }
    public ObservableCollection<ComboItem> Combo2Items { get; }

    public MainViewModel()
    {
        Combo1Items = new ObservableCollection<ComboItem>();
        Combo2Items = new ObservableCollection<ComboItem>();
    }

    public void RefreshData()
    {
        Combo1Items.Clear();
        foreach (var item in _databaseService.GetComboItems("TableA"))
        {
            Combo1Items.Add(item);
        }

        Combo2Items.Clear();
        foreach (var item in _databaseService.GetComboItems("TableB"))
        {
            Combo2Items.Add(item);
        }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    protected virtual void OnPropertyChanged(string propertyName)
    {
        PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
    }
}
5. MainWindow.xaml: XAML 인터페이스
xml
Copy code
<Window x:Class="YourNamespace.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
        xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
        xmlns:local="clr-namespace:YourNamespace"
        Loaded="Window_Loaded">
    <Window.DataContext>
        <local:MainViewModel/>
    </Window.DataContext>
    
    <dxg:GridControl>
        <dxg:GridControl.Columns>
            <dxg:GridColumn FieldName="Combo1" Header="Combo1">
                <dxg:GridColumn.EditSettings>
                    <dxe:ComboBoxEditSettings ItemsSource="{Binding Path=Combo1Items}" DisplayMember="Value"/>
                </dxg:GridColumn.EditSettings>
            </dxg:GridColumn>
            <dxg:GridColumn FieldName="Combo2" Header="Combo2">
                <dxg:GridColumn.EditSettings>
                    <dxe:ComboBoxEditSettings ItemsSource="{Binding Path=Combo2Items}" DisplayMember="Value"/>
                </dxg:GridColumn.EditSettings>
            </dxg:GridColumn>
            <!-- 추가 ComboBox 설정 -->
        </dxg:GridControl.Columns>
    </dxg:GridControl>
</Window>
6. MainWindow.xaml.cs: Code-Behind
csharp
Copy code
public partial class MainWindow : Window
{
    public MainWindow()
    {
        InitializeComponent();
    }

    private void Window_Loaded(object sender, RoutedEventArgs e)
    {
        var viewModel = DataContext as MainViewModel;
        viewModel?.RefreshData();
    }
}
실행 순서 및 설명:
프로그램이 시작되면 MainWindow가 로드됩니다.
Window_Loaded 이벤트 핸들러가 호출되며, MainViewModel의 RefreshData 메소드가 실행됩니다.
RefreshData는 DatabaseServi