using System;
using System.IO;
using System.Timers;

public class PeriodicFileReader
{
    private static Timer timer;
    private static string filePath = "path_to_your_file.txt";
    private static long lastPosition = 0; // Remember the last position in the file

    public static void Main()
    {
        SetupTimer();
        Console.WriteLine("Press the Enter key to exit anytime... ");
        Console.ReadLine();
        timer.Stop();
        timer.Dispose();
    }

    private static void SetupTimer()
    {
        timer = new Timer(5000); // Set up a timer that fires every 5000 milliseconds (5 seconds)
        timer.Elapsed += OnTimedEvent;
        timer.AutoReset = true;
        timer.Enabled = true;
    }

    private static void OnTimedEvent(Object source, ElapsedEventArgs e)
    {
        ReadFromFile();
    }

    private static void ReadFromFile()
    {
        using (FileStream fs = new FileStream(filePath, FileMode.Open, FileAccess.Read, FileShare.ReadWrite))
        {
            fs.Seek(lastPosition, SeekOrigin.Begin); // Start reading from the last remembered position

            using (StreamReader sr = new StreamReader(fs))
            {
                string line;
                while ((line = sr.ReadLine()) != null)
                {
                    Console.WriteLine(line); // Process the line, e.g., display it or log it
                }
                lastPosition = fs.Position; // Update lastPosition to the current position after reading
            }
        }
    }
}
