요구 사항을 WPF MVVM 패턴에서 구현하기 위해 다음과 같은 방법을 사용할 수 있습니다:

변수에 기록을 남기고 프로그램 시작 시 불러오기: TextBox에 바인딩된 문자열 값을 PropertyChanged 이벤트를 통해 변경될 때마다 파일에 저장합니다. 프로그램 시작 시 해당 파일을 읽어 TextBox의 초기 값으로 할당합니다.

Settings 설정: WPF 응용 프로그램 설정 파일 또는 별도의 텍스트 파일을 이용해 값을 저장할 수 있습니다.

다음 예제에서는 Settings 파일을 통해 설정을 저장하고, 값이 없을 경우 새로 생성하여 초기화하는 방식을 보여드립니다.

1. 설정 파일 생성 (Settings)
Visual Studio에서 솔루션 탐색기에서 프로젝트 -> Properties -> Settings.settings를 선택합니다.
Name을 TextBoxContent, Type을 string, Scope를 User로 설정합니다.
2. ViewModel 작성
csharp
코드 복사
using System.ComponentModel;
using System.Runtime.CompilerServices;
using System.Windows;

namespace YourNamespace
{
    public class MainViewModel : INotifyPropertyChanged
    {
        private string _textBoxContent;

        public string TextBoxContent
        {
            get => _textBoxContent;
            set
            {
                if (_textBoxContent != value)
                {
                    _textBoxContent = value;
                    OnPropertyChanged();
                    SaveContentToSettings(value);  // 값이 변경될 때마다 저장
                }
            }
        }

        public MainViewModel()
        {
            _textBoxContent = LoadContentFromSettings();  // 프로그램 시작 시 값 불러오기
        }

        private void SaveContentToSettings(string content)
        {
            Properties.Settings.Default.TextBoxContent = content;
            Properties.Settings.Default.Save();  // 저장
        }

        private string LoadContentFromSettings()
        {
            return Properties.Settings.Default.TextBoxContent ?? string.Empty;
        }

        public event PropertyChangedEventHandler PropertyChanged;
        protected void OnPropertyChanged([CallerMemberName] string propertyName = null)
        {
            PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}
TextBoxContent 속성에 INotifyPropertyChanged 인터페이스를 사용해 값이 변경될 때마다 SaveContentToSettings 메서드를 호출하여 변경 사항을 설정에 저장합니다.
생성자에서 LoadContentFromSettings를 호출하여 프로그램 시작 시 저장된 설정 값을 불러옵니다.
3. MainWindow.xaml 바인딩 설정
xml
코드 복사
<Window x:Class="YourNamespace.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="MainWindow" Height="350" Width="525">
    <Window.DataContext>
        <local:MainViewModel/>
    </Window.DataContext>

    <Grid>
        <TextBox Text="{Binding TextBoxContent, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                 AcceptsReturn="True" VerticalScrollBarVisibility="Auto"/>
    </Grid>
</Window>
TextBox의 Text 속성을 TextBoxContent에 바인딩합니다.
UpdateSourceTrigger=PropertyChanged 속성을 사용해 텍스트가 변경될 때마다 ViewModel의 TextBoxContent 속성에 반영되도록 설정합니다.
4. 설정 파일이 없을 때 새로 생성하는 방법
Settings 파일을 기본적으로 생성하지만, 만약 파일로 저장을 원할 경우 TextBoxContent를 저장할 텍스트 파일 경로를 지정하고, 파일에서 데이터를 읽고 쓰는 방식으로 코드를 변경할 수 있습니다.

요약
Settings 파일을 통해 저장할 경우 별도 파일 관리 없이 쉽게 설정을 저장하고 불러올 수 있습니다.