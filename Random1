이해했습니다. 당신이 원하는 패턴은 rf- 또는 RF-로 시작하고, 그 뒤에 어떤 연속된 문자열이 오며, 그 다음에 공백 4칸이 나오고, 마지막에 ;가 붙어야 한다는 것입니다. 이를 위해서는 다음과 같은 정규식을 사용할 수 있습니다:

csharp
코드 복사
string pattern = @"\b(rf|RF)-.*[\s]{4};$";
이 정규식의 의미는 다음과 같습니다:

\b: 단어 경계를 의미합니다. 즉, rf- 또는 RF-로 시작해야 한다는 것을 보장합니다.
(rf|RF)-: rf- 또는 RF-로 시작함을 의미합니다.
.*: rf- 뒤에 어떤 문자들이 올 수 있음을 의미합니다.
[\s]{4}: 공백 문자가 4번 연속으로 오는 경우를 의미합니다.
;$: 마지막에 ;로 끝나야 한다는 것을 의미합니다.
이 정규식을 통해 원하는 패턴을 정확히 찾아낼 수 있습니다.

예제 코드:

csharp
코드 복사
using System;
using System.Text.RegularExpressions;

class Program
{
    static void Main()
    {
        string input = "RF-1234    ;"; // 예시 입력
        string pattern = @"\b(rf|RF)-.*[\s]{4};$";
        
        if (Regex.IsMatch(input, pattern))
        {
            Console.WriteLine("패턴에 일치합니다.");
        }
        else
        {
            Console.WriteLine("패턴에 일치하지 않습니다.");
        }
    }
}
이 코드를 실행하면, 입력 문자열이 RF-로 시작하고 연속된 문자열 뒤에 공백 4칸이 있으며 마지막에 ;로 끝나는 경우 "패턴에 일치합니다."라는 메시지가 출력됩니다.

이 정규식이 당신이 원한 조건을 정확히 반영했을 것입니다