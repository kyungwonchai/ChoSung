 스캐너에서 수신한 데이터를 미리 설정된 모든 타겟 포트로 전송하는 기능을 수정해드리겠습니다. 이 작업은 ScannerPort_DataReceived 메서드에서 수행됩니다.

수정된 ScannerPort_DataReceived 함수 (MainWindow.xaml.cs)
아래는 스캐너에서 수신한 데이터를 모든 설정된 타겟 포트로 전송하는 방식으로 수정된 ScannerPort_DataReceived 함수입니다:

csharp
코드 복사
private void ScannerPort_DataReceived(object sender, SerialDataReceivedEventArgs e)
{
    try
    {
        if (serialPortManager.ScannerPort != null && serialPortManager.ScannerPort.IsOpen)
        {
            // 스캐너 포트에서 데이터 읽기
            string data = serialPortManager.ScannerPort.ReadExisting();

            // 설정된 모든 타겟 포트로 데이터 전송
            foreach (var targetPort in serialPortManager.TargetPorts)
            {
                if (targetPort != null && targetPort.IsOpen)
                {
                    targetPort.Write(data);
                    LogMessage($"스캐너에서 받은 데이터를 타겟 포트 {targetPort.PortName}로 전송: {data}");
                }
            }

            // 로그에 데이터 기록
            Dispatcher.Invoke(() => LogMessage($"스캐너 포트에서 받은 데이터: {data}"));
        }
    }
    catch (Exception ex)
    {
        Dispatcher.Invoke(() => LogMessage($"스캐너 포트 데이터 수신 중 오류 발생: {ex.Message}"));
    }
}
함수 설명
데이터 읽기: serialPortManager.ScannerPort.ReadExisting()을 통해 스캐너 포트에서 들어온 데이터를 읽어옵니다.

타겟 포트로 데이터 전송: serialPortManager.TargetPorts에 설정된 모든 타겟 포트에 대해, 포트가 열려 있는지 확인한 후, 데이터를 전송합니다 (targetPort.Write(data)).

로그 기록: 각 타겟 포트로 데이터가 전송될 때마다 어떤 포트로 전송되었는지 로그에 기록합니다. 또한, 스캐너 포트에서 데이터를 수신한 것도 로그에 기록합니다.

이제 스캐너에서 받은 데이터가 설정된 모든 타겟 포트로 전송됩니다. 이 기능이 제대로 동작하기를 바라며, 추가적으로 궁금한 점이나 도움이 필요한 부분이 있으면 언제든지 알려