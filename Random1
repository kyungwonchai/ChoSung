import pymssql

# ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
# ※ 사용자 설정 영역 ※
# 사용자의 데이터베이스 환경에 맞게 이 부분을 수정하세요.
# ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

DB_SERVER = "your_server_ip_or_hostname"  # 예: "192.168.1.100"
DB_USER = "your_username"                 # 데이터베이스 사용자 이름
DB_PASSWORD = "your_password"             # 데이터베이스 비밀번호
DB_DATABASE = "your_database_name"        # 접속할 데이터베이스 이름
DB_PORT = 1433                            # MSSQL 포트 (기본값은 1433)

# ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

def get_db_datetime():
    """MSSQL 서버에 접속하여 현재 날짜와 시간을 조회하고 출력합니다."""
    try:
        # 데이터베이스에 연결
        conn = pymssql.connect(
            server=DB_SERVER,
            port=DB_PORT,
            user=DB_USER,
            password=DB_PASSWORD,
            database=DB_DATABASE
        )

        cursor = conn.cursor()

        # 현재 날짜와 시간을 조회하는 SQL 쿼리 실행
        # GETDATE()는 MSSQL에서 현재 서버 시간을 반환하는 함수입니다.
        cursor.execute("SELECT GETDATE()")

        # 조회 결과의 첫 번째 행(row)을 가져옵니다.
        result_row = cursor.fetchone()

        # 연결 종료
        conn.close()

        # 결과가 있다면 출력
        if result_row:
            current_datetime = result_row[0]
            print("? MSSQL 서버 연결 및 조회 성공!")
            print(f"   서버의 현재 시간: {current_datetime}")
        else:
            print("쿼리 결과가 없습니다.")

    except pymssql.Error as e:
        print("? 데이터베이스 연결 또는 쿼리 실행 중 오류가 발생했습니다.")
        print(f"   에러: {e}")

# 메인 함수 실행
if __name__ == "__main__":
    get_db_datetime()