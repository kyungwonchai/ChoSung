 내용이 커스터마이즈 가능한 스플래시 이미지를 시작 시 표시하려면 SplashScreenManager를 사용하는 것이 효과적입니다. 이 방법은 기존 코드와 독립적으로 동작하며, 필요에 따라 쉽게 추가하거나 제거할 수 있습니다.​

다음은 SplashScreenManager를 사용하여 커스텀 스플래시 스크린을 구현하는 단계별 가이드입니다:

커스텀 스플래시 스크린 윈도우 생성

먼저, SplashScreenWindow를 상속하는 새로운 클래스를 생성하여 스플래시 스크린의 외형과 동작을 정의합니다.

xml
코드 복사
<!-- CustomSplashScreen.xaml -->
<dx:SplashScreenWindow x:Class="YourNamespace.CustomSplashScreen"
                       xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                       xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                       xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                       WindowStyle="None"
                       AllowsTransparency="True"
                       Background="Transparent"
                       Width="400"
                       Height="300">
    <Grid>
        <!-- 여기에 원하는 UI 요소를 추가하여 스플래시 스크린을 디자인합니다 -->
        <TextBlock Text="{Binding Title}" FontSize="24" HorizontalAlignment="Center" VerticalAlignment="Center"/>
        <ProgressBar IsIndeterminate="{Binding IsIndeterminate}" Height="20" Width="300" VerticalAlignment="Bottom" Margin="0,0,0,20"/>
    </Grid>
</dx:SplashScreenWindow>
위의 XAML은 간단한 텍스트와 진행 표시줄을 포함하는 스플래시 스크린을 정의합니다. Binding을 통해 동적으로 내용을 변경할 수 있습니다.

스플래시 스크린 매니저 생성 및 표시

애플리케이션의 시작 부분(예: App.xaml.cs)에서 SplashScreenManager를 생성하고 표시합니다.

csharp
코드 복사
using DevExpress.Xpf.Core;
using System;

public partial class App : Application
{
    protected override void OnStartup(StartupEventArgs e)
    {
        base.OnStartup(e);

        // 스플래시 스크린 매니저 생성
        var splashScreenManager = SplashScreenManager.Create(() => new CustomSplashScreen(), new DXSplashScreenViewModel
        {
            Title = "애플리케이션 로딩 중...",
            IsIndeterminate = true
        });

        // 스플래시 스크린 표시
        splashScreenManager.Show();

        // 메인 윈도우 초기화 및 표시
        var mainWindow = new MainWindow();
        mainWindow.Show();

        // 스플래시 스크린 닫기
        splashScreenManager.Close();
    }
}
여기서 DXSplashScreenViewModel을 사용하여 스플래시 스크린의 내용을 동적으로 설정할 수 있습니다. Title과 IsIndeterminate 속성을 통해 표시되는 텍스트와 진행 상태를 제어합니다.

스플래시 스크린의 동적 내용 업데이트

스플래시 스크린이 표시되는 동안 특정 작업의 진행 상황을 사용자에게 알리기 위해 ViewModel의 속성을 업데이트할 수 있습니다.

csharp
코드 복사
// 진행 상황 업데이트 예시
splashScreenManager.ViewModel.Status = "데이터 로딩 중...";
이렇게 하면 스플래시 스크린에 표시되는 상태 메시지를 실시간으로 변경할 수 있습니다.

참고사항:

SplashScreenManager를 사용하면 스플래시 스크린을 별도의 스레드에서 실행하므로, 메인 애플리케이션의 초기화와 독립적으로 동작하여 성능에 영향을 주지 않습니다.​

스플래시 스크린의 디자인은 CustomSplashScreen.xaml 파일에서 자유롭게 커스터마이즈할 수 있으며, 필요에 따라 이미지, 애니메이션 등을 추가할 수 있습니다.​
DevExpress

이러한 구현 방법은 기존 코드와 독립적으로 추가 및 제거가 가능하므로, 프로젝트의 구조를 복잡하게 하지 않으면서도 스플래시 스크린 기능을 손쉽게 관리할 수 있습니다.​