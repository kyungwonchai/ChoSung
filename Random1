며, 크로미움 웹 페이지를 오프스크린으로 렌더링하여 비디오로 기록합니다.

전체 코드
csharp
코드 복사
using CefSharp.OffScreen;
using OpenCvSharp;
using System;
using System.IO;
using System.Threading.Tasks;

public class ChromiumVideoCapture
{
    private ChromiumWebBrowser webView;
    private bool isRecording = false;
    private VideoWriter videoWriter;
    private readonly int width = 1920;
    private readonly int height = 1080;
    private const int frameRate = 15;
    private const int intervalMinutes = 10;

    public async Task StartCaptureAsync(string url)
    {
        // 웹 브라우저 초기화 (오프스크린 모드)
        webView = new ChromiumWebBrowser(url);
        webView.Size = new System.Drawing.Size(width, height);

        await Task.Delay(3000); // 웹 페이지가 로드될 시간을 줍니다.

        isRecording = true;

        // 비디오 녹화 루프
        while (isRecording)
        {
            string folderPath = GetFolderPath();
            string videoPath = Path.Combine(folderPath, $"{DateTime.Now:HHmmss}.avi");

            // 비디오 라이팅 초기화
            videoWriter = new VideoWriter(videoPath, FourCC.XVID, frameRate, new OpenCvSharp.Size(width, height));

            // 10분 동안 녹화
            DateTime endTime = DateTime.Now.AddMinutes(intervalMinutes);
            while (DateTime.Now < endTime && isRecording)
            {
                var bitmap = await TakeScreenshotAsync();
                var frame = OpenCvSharp.Extensions.BitmapConverter.ToMat(bitmap);
                videoWriter.Write(frame);

                // 500ms 대기하여 프레임 레이트를 맞추기 위함
                await Task.Delay(500);
            }

            videoWriter?.Dispose();

            // 녹화가 끝나면 최대 5일 이상 된 폴더를 삭제합니다.
            CleanupOldFolders();
        }
    }

    private async Task<System.Drawing.Bitmap> TakeScreenshotAsync()
    {
        // 스크린샷을 비동기적으로 캡처합니다.
        var screenshot = await webView.ScreenshotOrNullAsync();
        return screenshot;
    }

    private string GetFolderPath()
    {
        // 날짜별 폴더 경로를 생성합니다.
        string dateFolder = DateTime.Now.ToString("yyyyMMdd");
        string baseFolder = @"D:\VideoRecords";
        string fullPath = Path.Combine(baseFolder, dateFolder);

        // 폴더가 없으면 생성합니다.
        if (!Directory.Exists(fullPath))
        {
            Directory.CreateDirectory(fullPath);
        }

        return fullPath;
    }

    private void CleanupOldFolders()
    {
        string baseFolder = @"D:\VideoRecords";
        var directories = Directory.GetDirectories(baseFolder);

        foreach (var dir in directories)
        {
            DateTime dirDate;
            string folderName = new DirectoryInfo(dir).Name;

            // 폴더 이름을 날짜로 변환하여 5일 이상 경과한 폴더는 삭제
            if (DateTime.TryParseExact(folderName, "yyyyMMdd", null, System.Globalization.DateTimeStyles.None, out dirDate))
            {
                if ((DateTime.Now - dirDate).TotalDays > 5)
                {
                    Directory.Delete(dir, true);
                }
            }
        }
    }

    public void StopCapture()
    {
        isRecording = false;
        webView?.Dispose();
        videoWriter?.Dispose();
    }
}
코드 사용 방법
NuGet 패키지 설치

CefSharp.OffScreen과 OpenCvSharp4를 NuGet 패키지로 설치합니다.
CefSharp는 웹 페이지 렌더링을 위해 사용되며, OpenCvSharp은 비디오 녹화와 이미지 처리를 담당합니다.
실제 웹 주소로 테스트

StartCaptureAsync 메소드를 호출할 때, 실제 웹 페이지 URL을 입력합니다. 예를 들어:
csharp
코드 복사
var capture = new ChromiumVideoCapture();
await capture.StartCaptureAsync("http://실제_웹_주소_여기에_입력");
이 코드는 비동기 방식으로 실행되며, 10분 동안 비디오를 녹화합니다.
녹화 중지

녹화를 멈추고 싶을 때는 StopCapture 메소드를 호출하여 녹화를 종료하고 리소스를 정리합니다.
csharp
코드 복사
capture.StopCapture();
코드 설명
웹 페이지 초기화 및 비디오 녹