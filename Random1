lyph와 LargeGlyph가 null일 때 예외가 발생하지 않도록, 아이콘이 있는 경우에만 저장하고 로드하도록 조건을 추가하겠습니다.

수정된 코드
Glyph와 LargeGlyph가 null일 때는 저장하지 않도록 하고, 로드 시에도 null을 처리할 수 있도록 수정했습니다.

csharp
코드 복사
using System.Drawing;
using System.Drawing.Imaging;
using System.IO;

// Image 객체를 byte[]로 변환하는 메서드
private byte[] ImageToByteArray(Image image)
{
    if (image == null)
        return null;

    using (MemoryStream ms = new MemoryStream())
    {
        // 이미지를 메모리 스트림에 저장 (PNG 형식으로 저장)
        image.Save(ms, ImageFormat.Png);
        return ms.ToArray();
    }
}

// byte[]를 Image로 변환하는 메서드
private Image ByteArrayToImage(byte[] byteArray)
{
    if (byteArray == null || byteArray.Length == 0)
        return null;

    using (MemoryStream ms = new MemoryStream(byteArray))
    {
        return Image.FromStream(ms);
    }
}

// MyMenu 항목을 JSON 파일로 저장하는 메서드
private void SaveMyMenuItems()
{
    if (myMenuPage == null) return;

    var menuItems = new List<dynamic>();
    foreach (RibbonPageGroup group in myMenuPage.Groups)
    {
        foreach (BarItemLink itemLink in group.ItemLinks)
        {
            var item = (BarButtonItem)itemLink.Item;

            // 아이콘이 있는 경우만 저장
            var glyphBytes = item.Glyph != null ? ImageToByteArray(item.Glyph) : null;
            var largeGlyphBytes = item.LargeGlyph != null ? ImageToByteArray(item.LargeGlyph) : null;

            menuItems.Add(new
            {
                Caption = item.Caption,
                Glyph = glyphBytes,
                LargeGlyph = largeGlyphBytes,
            });
        }
    }

    // JSON 형식으로 MyMenu 항목 저장
    string json = JsonConvert.SerializeObject(menuItems);
    File.WriteAllText("MyMenuState.json", json);
}

// MyMenu 항목을 JSON 파일에서 불러오는 메서드
private void LoadMyMenuItems()
{
    // 저장된 MyMenu 상태가 있는지 확인
    if (File.Exists("MyMenuState.json"))
    {
        // JSON 파일에서 MyMenu 항목을 불러옴
        string json = File.ReadAllText("MyMenuState.json");
        var menuItems = JsonConvert.DeserializeObject<List<dynamic>>(json);

        // 각 항목을 MyMenu에 그룹으로 추가
        foreach (var itemData in menuItems)
        {
            RibbonPageGroup newGroup = new RibbonPageGroup(itemData.Caption);
            myMenuPage.Groups.Add(newGroup);

            BarButtonItem newMenuItem = new BarButtonItem(ribbonControl1.Manager, itemData.Caption);

            // Glyph와 LargeGlyph가 null이 아닌 경우만 설정
            if (itemData.Glyph != null)
            {
                newMenuItem.Glyph = ByteArrayToImage((byte[])itemData.Glyph);
            }

            if (itemData.LargeGlyph != null)
            {
                newMenuItem.LargeGlyph = ByteArrayToImage((byte[])itemData.LargeGlyph);
            }

            newMenuItem.ItemClick += (sender, e) =>
            {
                MessageBox.Show($"'{newMenuItem.Caption}' 명령이 클릭되었습니다!", "MyMenu 항목");
            };

            newGroup.ItemLinks.Add(newMenuItem);
        }
    }
}
주요 수정 사항:
아이콘 존재 여부 확인:

ImageToByteArray 메서드와 ByteArrayToImage 메서드에서 null 체크를 추가하여 null이 아닌 경우에만 변환이 이루어지도록 했습니다.
SaveMyMenuItems에서 Glyph와 LargeGlyph가 null이 아닐 때만 바이트 배열로 변환하여 저장하도록 했습니다.
로드 시 null 체크:

LoadMyMenuItems에서 JSON 파일을 불러와서 각 항목을 MyMenu에 추가할 때, Glyph와 LargeGlyph가 존재하는 경우에만 이미지를 설정하도록 했습니다.
이렇게 하면: