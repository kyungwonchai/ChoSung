GCC( GNU Compiler Collection)를 사용하여 C 프로그램을 빌드하고 실행하는 과정을 아주 상세하게 설명하겠습니다. 이 과정에서는 컴파일된 파일이 어디에 생성되며, 실행하는 방법과 그 이유를 함께 설명합니다.

1. GCC란?
GCC는 GNU Compiler Collection으로, C/C++, Objective-C 등의 언어를 컴파일하는 데 사용됩니다.

소스 파일(예: program.c)을 컴파일하여 실행 가능한 바이너리 파일(예: program)을 생성합니다.
컴파일된 파일은 기계어로 변환되어 CPU가 실행할 수 있습니다.
2. GCC 컴파일 기본 과정
소스 파일 준비

program.c라는 이름의 C 소스 파일이 있다고 가정합니다.
이 파일에는 C 프로그램 코드가 작성되어 있습니다.
예제 코드 (program.c):

c
코드 복사
#include <stdio.h>

int main() {
    printf("Hello, World!\n");
    return 0;
}
GCC 명령어로 컴파일 터미널에서 다음 명령어를 입력합니다:

bash
코드 복사
gcc -o program program.c
gcc: GCC 컴파일러를 호출합니다.
-o program: 생성될 실행 파일 이름을 지정합니다(program).
program.c: 컴파일할 소스 파일 이름입니다.
결과

program이라는 실행 파일이 현재 디렉토리에 생성됩니다.
파일 생성 위치는 GCC 명령어를 실행한 현재 작업 디렉토리입니다.
예: 터미널에서 /home/user/projects 폴더에서 명령어를 실행했다면, /home/user/projects/program 파일이 생성됩니다.
생성된 파일은 실행 가능한 바이너리 파일입니다.

3. 컴파일된 파일 실행
컴파일이 완료된 후, 터미널에서 다음 명령어로 프로그램을 실행합니다:

bash
코드 복사
./program
이유:
./:
./는 현재 디렉토리를 의미합니다.
리눅스에서 실행 파일을 실행하려면 경로를 명시해야 하며, 현재 디렉토리에서 실행하려면 ./를 붙입니다.
예: 단순히 program을 입력하면, 현재 디렉토리보다는 시스템의 $PATH 환경 변수에 지정된 디렉토리에서 실행 파일을 찾습니다. 이 경우, 찾지 못하면 "command not found" 에러가 발생합니다.
결과:
프로그램 실행 결과가 화면에 출력됩니다.
text
코드 복사
Hello, World!
4. 컴파일 파일 생성 경로 변경
컴파일된 실행 파일이 특정 위치에 생성되도록 하려면 출력 파일 경로를 명시할 수 있습니다.

예제:
bash
코드 복사
gcc -o /home/user/output/program program.c
-o /home/user/output/program: 컴파일된 실행 파일을 /home/user/output/ 디렉토리에 생성.
결과:
실행 파일은 /home/user/output/program에 생성됩니다.
실행 방법:
bash
코드 복사
/home/user/output/program
5. 기본적으로 컴파일된 파일 이름
만약 -o 옵션을 생략하면, GCC는 기본적으로 **a.out**이라는 이름으로 실행 파일을 생성합니다.

명령어:
bash
코드 복사
gcc program.c
결과:
현재 디렉토리에 a.out이라는 파일이 생성됩니다.
실행 방법:
bash
코드 복사
./a.out
6. 컴파일과 실행 과정의 상세 이유
컴파일하는 이유

C 소스 코드는 사람이 읽을 수 있는 형태(텍스트)입니다.
컴퓨터가 이해할 수 있는 형태(기계어)로 변환해야 실행할 수 있습니다.
컴파일러는 이 변환 작업을 수행하여 실행 파일(바이너리)을 생성합니다.
실행 파일 생성 위치

GCC는 기본적으로 명령어를 실행한 현재 디렉토리에 파일을 생성합니다.
이는 사용자에게 파일 관리의 명확성을 제공합니다.
실행 명령어에 ./를 붙이는 이유

리눅스/유닉스 환경에서 명령어를 실행할 때, $PATH 변수에 지정된 디렉토리에서만 실행 파일을 찾습니다.
현재 디렉토리는 보안상의 이유로 $PATH에 포함되지 않는 경우가 많습니다. 따라서, ./를 사용하여 현재 디렉토리의 실행 파일임을 명시해야 합니다.
7. 전체 과정 요약
컴파일:

bash
코드 복사
gcc -o program program.c
실행 파일 program이 생성됨.
실행:

bash
코드 복사
./program
결과 출력: Hello, World!
파일 위치 확인:

bash
코드 복사
ls
현재 디렉토리에 program 파일이 생성된 것을 확인.
추가 팁:
디버그 옵션:

bash
코드 복사
gcc -g -o program program.c
디버깅 정보를 포함한 실행 파일 생성.
최적화 옵션:

bash
코드 복사
gcc -O2 -o program program.c
최적화된 실행 파일 생성.
경로를 지정하지 않고 실행하기:

실행 파일을 /usr/local/bin 또는 $HOME/bin과 같은 $PATH에 포함된 디렉토리에 복사하면 ./ 없이 실행할 수 있습니다:
bash
코드 복사