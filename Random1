kedComboBoxEdit의 변경점을 짚어주며, 선택된 값을 저장하고 꺼내 쓸 수 있는 방법을 추가적으로 제공하겠습니다.

    XAML 변경점:
    ComboBoxEdit을 CheckedComboBoxEdit로 바꿔주고 EditValueChanged 이벤트를 추가합니다.

예:

xaml

<dx:CheckedComboBoxEdit Name="menuc_SelectedDate" Width="300" Height="50" Background="White" ItemsSource="{Binding Menuc_Dates}" EditValueChanged="Menuc_SelectedDate_EditValueChanged"/>

    C# 변경점:

선택된 값을 저장하는 변수와 해당 변수의 프로퍼티를 추가합니다.

csharp

private List<string> _selectedDates;

public List<string> SelectedDates
{
    get { return _selectedDates; }
    set
    {
        if (_selectedDates != value)
        {
            _selectedDates = value;
            OnPropertyChanged();
        }
    }
}

그리고 EditValueChanged 이벤트 핸들러에서 해당 변수를 업데이트합니다.

csharp

private void Menuc_SelectedDate_EditValueChanged(object sender, EditValueChangedEventArgs e)
{
    var combo = sender as CheckedComboBoxEdit;

    if (combo != null)
    {
        var selectedItems = combo.EditValue as IList;

        if (selectedItems != null)
        {
            SelectedDates = selectedItems.Cast<string>().ToList();
        }
    }
}

이제 SelectedDates 리스트에는 선택된 날짜들이 저장됩니다. 필요에 따라 이 리스트에서 값을 꺼내어 사용하실 수 있습니다.

이런 식으로 CheckedComboBoxEdit를 사용하면 여러 값을 선택하고, 해당 값들을 다른 변수에 저장하여 프로그램 내에서 사용하실 수 있습니다. 위의 예제는 호가정일에 대한 예제이니, 다른 ComboBox들도 동일한 방식으로