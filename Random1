을 정확히 이해하지 못한 것 같습니다. 아래의 코드 예제는 편집 가능한 창을 열고, 그 창 안에 저장 버튼이 포함된 형태로 작성되었습니다.

XAML 파일 (MainWindow.xaml):

xaml
Copy code
<Window x:Class="WpfApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="WPF DevExpress GridControl Sample" Height="450" Width="800">
    <Grid>
        <dxg:GridControl Name="gridControl" AutoGenerateColumns="AddNew"
                         HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <dxg:GridControl.View>
                <dxg:TableView Name="masterTableView" AutoWidth="True"
                               DetailHeaderContent="Detail View" MasterRowAutoExpandAll="True"/>
            </dxg:GridControl.View>
            <dxg:GridControl.Columns>
                <dxg:GridColumn FieldName="Name" Header="Name"/>
            </dxg:GridControl.Columns>
            <dxg:GridControl.DetailDescriptor>
                <dxg:DataControlDetailDescriptor RelationName="DetailObjects" AutoExpandAllDetails="True"/>
            </dxg:GridControl.DetailDescriptor>
        </dxg:GridControl>
        <Button Content="Edit Selected Row" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="10"
                Click="OnEditButtonClicked"/>
    </Grid>
</Window>
C# 파일 (MainWindow.xaml.cs):

csharp
Copy code
using System.Windows;
using DevExpress.Xpf.Grid;
using DevExpress.Xpo;
using DevExpress.Xpo.DB;

namespace WpfApp
{
    public partial class MainWindow : Window
    {
        private Session session;

        public MainWindow()
        {
            InitializeComponent();
            session = new Session(XpoDefault.DataLayer);
            XPCollection<MasterObject> masterCollection = new XPCollection<MasterObject>(session);

            gridControl.ItemsSource = masterCollection;
        }

        private void OnEditButtonClicked(object sender, RoutedEventArgs e)
        {
            var selectedMasterObject = masterTableView.Grid.GetFocusedRow() as MasterObject;
            if (selectedMasterObject != null)
            {
                EditWindow editWindow = new EditWindow(selectedMasterObject);
                editWindow.ShowDialog();
                session.Save(selectedMasterObject);
                session.CommitChanges();
            }
        }
    }

    public class EditWindow : Window
    {
        private MasterObject masterObject;

        public EditWindow(MasterObject masterObject)
        {
            this.masterObject = masterObject;

            Grid editGrid = new Grid();
            TextBox nameTextBox = new TextBox();
            nameTextBox.Text = masterObject.Name;
            editGrid.Children.Add(nameTextBox);

            Button saveButton = new Button();
            saveButton.Content = "Save";
            saveButton.Click += OnSaveButtonClicked;
            editGrid.Children.Add(saveButton);

            Content = editGrid;
        }

        private void OnSaveButtonClicked(object sender, RoutedEventArgs e)
        {
            // Update the masterObject with the edited values
            // You can access the TextBox.Text property to get the edited values
            // Save the changes to the database
            // Close the window
        }
    }

    // MasterObject, DetailObject 클래스는 이전 예제와 동일하므로 생략합니다.
}
위의 코드 예제는 선택한 행을 편집 가능한 창에서 수정하고, 해당 수정 내용을 저장하는 방법을 보여줍니다. EditWindow 클래스는 새 창을 열어서 선택한 행을 편집하고 저장하는 기능을 제공합니다. 편집된 내용을 OnSaveButtonClicked 메서드에서 저장하고 창을 닫아주어야 합니다.

코드를 필요에 맞게 수정하고, 더 많