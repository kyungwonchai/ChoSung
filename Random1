#!/usr/bin/env python3
import time
import board
import adafruit_dotstar  # 4선식 LED용 라이브러리
import sys

# --- 설정 ---
NUM_LEDS = 30  # LED 총 개수 (본인 환경에 맞게 수정)
BRIGHTNESS = 0.2  # 밝기 (0.0 ~ 1.0)
# ---

# --- 색상 정의 ---
COLOR_OFF = (0, 0, 0)
COLOR_ON = (255, 0, 0)  # '켜짐' 상태의 색상 (빨간색)
# ---

# DotStar 객체 초기화 (하드웨어 SPI 사용)
try:
    # SCLK(GPIO 11), MOSI(GPIO 10) 핀을 사용합니다.
    dots = adafruit_dotstar.DotStar(
        board.SCLK, board.MOSI, NUM_LEDS, brightness=BRIGHTNESS, auto_write=False
    )
except RuntimeError as e:
    print(f"오류: SPI 장치를 초기화할 수 없습니다.")
    print(f"1. 'sudo raspi-config'에서 SPI가 활성화되었는지 확인하세요.")
    print(f"2. 라이브러리가 'sudo apt install python3-adafruit-circuitpython-dotstar'로 설치되었는지 확인하세요.")
    print(f"({e})")
    sys.exit(1)


def set_led(index: int, state: bool):
    """
    지정된 인덱스의 LED를 켜거나 끕니다.
    """
    if not 0 <= index < NUM_LEDS:
        print(f"오류: LED 인덱스 {index}가 범위를 벗어났습니다 (0 ~ {NUM_LEDS - 1}).")
        return False

    if state:
        dots[index] = COLOR_ON
    else:
        dots[index] = COLOR_OFF

    # 변경 사항을 LED 스트립에 즉시 반영
    try:
        dots.show()
        return True
    except Exception as e:
        print(f"오류: LED에 데이터를 쓰는 데 실패했습니다. ({e})")
        return False


def all_off():
    """모든 LED를 끕니다."""
    dots.fill(COLOR_OFF)
    dots.show()


# --- 메인 실행 ---
if __name__ == "__main__":
    if len(sys.argv) != 3:
        print(f"사용법: python3 {sys.argv[0]} <LED_인덱스> <on|off>")
        print(f"예시 (0번째 켜기): python3 {sys.argv[0]} 0 on")
        print(f"예시 (1번째 끄기): python3 {sys.argv[0]} 1 off")
        sys.exit(1)

    try:
        index = int(sys.argv[1])
        state_str = sys.argv[2].lower()
        state_bool = state_str in ['on', 'true', '1', '켜기']

        print(f"실행: [DotStar] LED {index}번을 {'ON' if state_bool else 'OFF'} 상태로 설정합니다...")
        if set_led(index, state_bool):
            print("성공.")
        else:
            print("실패.")

    except ValueError:
        print(f"오류: LED 인덱스는 숫자여야 합니다: {sys.argv[1]}")
        sys.exit(1)
    except KeyboardInterrupt: