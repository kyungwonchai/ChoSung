using System;
using System.IO;
using System.Threading;
using System.Windows;
using System.Windows.Threading;

namespace FileCopyApp
{
    public partial class MainWindow : Window
    {
        private Timer _timer;
        private string _sourceFilePath = @"C:\Agent\1.jpg";
        private string _destinationFolderPath = @"F:\ABCD\";

        public MainWindow()
        {
            InitializeComponent();
        }

        private void StartButton_Click(object sender, RoutedEventArgs e)
        {
            // 타이머 초기화
            _timer = new Timer(CopyFile, null, 0, 5000);
        }

        private void CopyFile(object state)
        {
            // 날짜 형식을 기반으로 폴더 및 파일 이름 생성
            string timestampFolder = DateTime.Now.ToString("yyyyMMddHH");
            string timestampFile = DateTime.Now.ToString("yyyyMMddHHmmss");
            string destinationPath = Path.Combine(_destinationFolderPath, timestampFolder);

            // 폴더가 없으면 생성
            if (!Directory.Exists(destinationPath))
            {
                Directory.CreateDirectory(destinationPath);
                LogMessage($"Directory created: {destinationPath}");
            }

            // 파일 복사
            string destinationFilePath = Path.Combine(destinationPath, $"{timestampFile}.jpg");
            try
            {
                File.Copy(_sourceFilePath, destinationFilePath, true);
                LogMessage($"File copied to: {destinationFilePath}");
            }
            catch (Exception ex)
            {
                LogMessage($"Error: {ex.Message}");
            }
        }

        private void LogMessage(string message)
        {
            // UI 스레드에서 리스트박스에 메시지 추가
            Dispatcher.Invoke(() => {
                LogListBox.Items.Add($"{DateTime.Now}: {message}");
                LogListBox.ScrollIntoView(LogListBox.Items[LogListBox.Items.Count - 1]);
            });
        }
    }
}
