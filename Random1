합니다. 말씀하신 부분을 정확히 이해했습니다. 공백이 정확히 4칸이어야 하며, 그 뒤에 세미콜론(;)이 올 수도 있고, 오지 않을 수도 있는 패턴을 원하시는군요.

이 경우, 정규식은 다음과 같이 작성할 수 있습니다:

csharp
코드 복사
string pattern = @"\[ {4};?\]";
설명:

\[: 여는 대괄호 [ 문자 자체를 의미합니다.
{4}: 공백이 정확히 4칸 있어야 한다는 의미입니다. {4}는 앞의 공백( )이 4번 반복됨을 나타냅니다.
;?: 세미콜론(;)이 올 수도 있고, 오지 않을 수도 있다는 의미입니다. ?는 0개 또는 1개를 의미합니다.
\]: 닫는 대괄호 ]를 매칭합니다.
예시 코드:
csharp
코드 복사
using System;
using System.Text.RegularExpressions;

class Program
{
    static void Main()
    {
        string input1 = "[    ;]";   // 매칭됨
        string input2 = "[    ]";     // 매칭됨
        string input3 = "[   ;]";     // 매칭 안 됨
        string input4 = "[     ;]";   // 매칭 안 됨
        string pattern = @"\[ {4};?\]";
        
        Console.WriteLine(Regex.IsMatch(input1, pattern)); // true
        Console.WriteLine(Regex.IsMatch(input2, pattern)); // true
        Console.WriteLine(Regex.IsMatch(input3, pattern)); // false
        Console.WriteLine(Regex.IsMatch(input4, pattern)); // false
    }