ue 자리에 직접 바인딩은 안 됩니다. 하지만 지정한 조건에 따라서 행 색상을 변경하려면 컨버터를 사용해야 합니다.

먼저, 컨버터 클래스를 만듭니다:

csharp

using System;
using System.Globalization;
using System.Windows.Data;
using System.Windows.Media;

public class DateToColorConverter : IValueConverter
{
    public object Convert(object value, Type targetType, object parameter, CultureInfo culture)
    {
        DateTime dateValue;
        if (DateTime.TryParse(value.ToString(), out dateValue))
        {
            var today = DateTime.Now.ToString("yyyyMMdd");
            var yesterday = DateTime.Now.AddDays(-1).ToString("yyyyMMdd");

            if (dateValue.ToString("yyyyMMdd") == today)
                return new SolidColorBrush(Colors.Red);
            else if (dateValue.ToString("yyyyMMdd") == yesterday)
                return new SolidColorBrush(Colors.Blue);
        }
        
        return new SolidColorBrush(Colors.Transparent);
    }

    public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)
    {
        throw new NotImplementedException();
    }
}

그 다음, XAML 파일에 이 컨버터를 등록하고 사용합니다:

xml

<Window x:Class="YourNamespace.MainWindow"
        xmlns:local="clr-namespace:YourNamespace"
        <!-- 다른 xmlns 선언 생략 -->
       >
    <Window.Resources>
        <local:DateToColorConverter x:Key="DateToColorConverter"/>
    </Window.Resources>

    <dxg:GridControl>
        <dxg:GridControl.View>
            <dxg:TableView>
                <dxg:TableView.RowStyle>
                    <Style TargetType="dxg:RowControl">
                        <Setter Property="Background" Value="{Binding RowData.Row.YourDateColumn, Converter={StaticResource DateToColorConverter}}"/>
                    </Style>
                </dxg:TableView.RowStyle>
            </dxg:TableView>
        </dxg:GridControl.View>
    </dxg:GridControl>
</Window>

이렇게 하면 YourDateColumn의 값이 오늘 날짜와 같으면 빨간색으로, 어제 날짜와 같으면 파란색으로 표시될 것입니다. 코드를 꼭 