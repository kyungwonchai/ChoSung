using System;
using System.IO;
using System.Windows;
using System.Windows.Forms;
using Microsoft.Office.Core;
using Microsoft.Office.Interop.PowerPoint;
using Application = Microsoft.Office.Interop.PowerPoint.Application;
using MessageBox = System.Windows.MessageBox;

namespace PowerPointToVectorImage
{
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
        }

        private void ConvertToImage_Click(object sender, RoutedEventArgs e)
        {
            string pptxFilePath = "your_pptx_file_path.pptx";

            Application pptApp = new Application();
            Presentation presentation = null;

            try
            {
                presentation = pptApp.Presentations.Open(pptxFilePath, MsoTriState.msoFalse, MsoTriState.msoFalse, MsoTriState.msoFalse);

                int imageWidth = (int)(presentation.PageSetup.SlideWidth * 3); // 300% 크기로 설정
                int imageHeight = (int)(presentation.PageSetup.SlideHeight * 3); // 300% 크기로 설정

                pptApp.Visible = MsoTriState.msoFalse;
                pptApp.WindowState = PpWindowState.ppWindowMinimized;

                foreach (Slide slide in presentation.Slides)
                {
                    string tempImagePath = Path.GetTempFileName() + ".emf";
                    slide.Export(tempImagePath, "EMF", imageWidth, imageHeight);

                    // tempImagePath를 사용하여 EMF 파일로부터 벡터 이미지를 생성하는 코드 작성
                    // 예: Image myImage = YourImageProcessingMethod(tempImagePath);

                    File.Delete(tempImagePath);

                    // 생성된 벡터 이미지(myImage)를 처리 또는 표시하는 코드 작성
                    // 예: YourImageProcessingMethod(myImage);
                }

                MessageBox.Show("Conversion completed.");
            }
            catch (Exception ex)
            {
                MessageBox.Show("An error occurred during conversion: " + ex.Message);
            }
            finally
            {
                if (presentation != null)
                {
                    presentation.Close();
                    System.Runtime.InteropServices.Marshal.ReleaseComObject(presentation);
                }
                if (pptApp != null)
                {
                    pptApp.Quit();
                    System.Runtime.InteropServices.Marshal.ReleaseComObject(pptApp);
                }
            }
        }
    }
}
