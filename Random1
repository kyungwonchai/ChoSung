otlin.Unit 에러는 일반적으로 함수가 Unit을 반환하도록 설정되어 있는데, 그 함수가 실제로는 Unit이 아닌 다른 타입의 값을 반환하거나, 반환 값이 명시되지 않았을 때 발생할 수 있습니다. 이 문제는 isQrCodeInDatabase() 함수에서 발생한 것으로 보입니다.

현재 isQrCodeInDatabase() 함수는 Boolean을 반환하도록 작성되어 있는데, 이 반환 값이 명확하게 정의되지 않았거나 함수의 끝에서 반환되지 않을 경우 kotlin.Unit 에러가 발생할 수 있습니다.

아래는 해당 함수에서 Boolean을 반환하는 부분을 명확히 하여 kotlin.Unit 에러를 해결한 코드입니다.

수정된 isQrCodeInDatabase() 함수:
kotlin
코드 복사
private fun isQrCodeInDatabase(qrCode: String): Boolean {
    var connection: Connection? = null
    var statement: Statement? = null
    var resultSet: ResultSet? = null
    return try {
        // JDBC 드라이버 로드
        Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver")

        // 데이터베이스 연결
        connection = DriverManager.getConnection(dbUrl, dbUser, dbPassword)

        // 쿼리 실행
        statement = connection.createStatement()
        val query = "SELECT COUNT(*) FROM QRCodeData WHERE QRCode = ?"
        
        // Prepare statement to prevent SQL injection
        val preparedStatement = connection.prepareStatement(query)
        preparedStatement.setString(1, qrCode)
        
        resultSet = preparedStatement.executeQuery()

        // 결과 처리
        if (resultSet.next()) {
            resultSet.getInt(1) > 0
        } else {
            false
        }
    } catch (e: Exception) {
        e.printStackTrace()
        false
    } finally {
        try {
            resultSet?.close()
            statement?.close()
            connection?.close()
        } catch (e: Exception) {
            e.printStackTrace()
        }
    }
}
주요 수정 사항:
PreparedStatement 사용:

SQL 쿼리에서 ?를 사용하여 매개변수를 설정하고, preparedStatement.setString(1, qrCode)를 사용해 매개변수 값으로 qrCode를 전달합니다. 이를 통해 SQL 인젝션을 방지할 수 있습니다.
명확한 반환 값:

모든 코드 경로에서 Boolean 값을 명확하게 반환하도록 했습니다. resultSet.getInt(1) > 0가 true 또는 false를 반환하며, 예외가 발생한 경우 false를 반환합니다.
이 수정된 함수는 모든 경로에서 Boolean을 명확히 반환하기 때문에 kotlin.Unit 에러가 발생하지 않을 것입니다.