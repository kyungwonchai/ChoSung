private void btnUpdateRecipients_Click(object sender, EventArgs e)
{
    DataTable recipientsTable = (DataTable)gridView3.DataSource;

    // 수정된 내용을 반영하는 작업 수행
    UpdateRecipients(recipientsTable);
}

private void UpdateRecipients(DataTable recipientsTable)
{
    // 여기에 수정된 내용을 처리하는 코드를 작성합니다.
    // recipientsTable을 이용하여 데이터베이스 또는 API를 호출하여 수정 내용을 업데이트합니다.
    // 예를 들어, recipientsTable의 각 행을 순회하며 데이터를 업데이트하는 로직을 작성할 수 있습니다.
    // 이 예시에서는 각 행의 "Email" 열 값을 가져와서 업데이트하는 방법을 보여줍니다.

    foreach (DataRow row in recipientsTable.Rows)
    {
        string recipientId = row["RecipientId"].ToString();
        string email = row["Email"].ToString();

        // recipientId와 email을 이용하여 데이터를 업데이트하는 로직을 작성합니다.
        // 예를 들어, 데이터베이스 업데이트 쿼리를 실행하거나 REST API를 호출하여 업데이트할 수 있습니다.
    }

    // 업데이트 작업이 완료되면 사용자에게 알림을 표시합니다.
    MessageBox.Show("수정된 내용이 반영되었습니다.", "알림", MessageBoxButtons.OK, MessageBoxIcon.Information);
}
