mport pymssql
import pandas as pd


def fetch_data_from_procedure_with_cursor(proc_name, connection_details, params=None):
    """
    MSSQL 저장 프로시저를 호출하여 데이터를 가져오는 함수.
    커서를 사용하여 결과를 Pandas DataFrame으로 변환합니다.
    
    :param proc_name: 저장 프로시저 이름 (str).
    :param connection_details: 데이터베이스 연결 정보 (dict).
    :param params: 저장 프로시저 파라미터 (tuple), 기본값 None.
    :return: Pandas DataFrame.
    """
    print(f"Calling stored procedure: {proc_name}")
    try:
        # 데이터베이스 연결
        conn = pymssql.connect(
            server=connection_details['server'],
            user=connection_details['user'],
            password=connection_details['password'],
            database=connection_details['database']
        )
        cursor = conn.cursor()

        # 저장 프로시저 호출
        if params:
            cursor.callproc(proc_name, params)  # 파라미터가 있는 경우
        else:
            cursor.callproc(proc_name)  # 파라미터가 없는 경우

        # 결과를 DataFrame으로 변환
        columns = [desc[0] for desc in cursor.description]  # 컬럼 이름 가져오기
        data = cursor.fetchall()  # 데이터 가져오기
        df = pd.DataFrame(data, columns=columns)

        print(f"Data successfully fetched from procedure: {proc_name}")
        return df

    except Exception as e:
        print(f"Error while calling procedure {proc_name}: {e}")
        return pd.DataFrame()

    finally:
        # 연결 닫기
        conn.close()
사용 예제
python
코드 복사
# DB 연결 정보
connection_details = {
    "server": "localhost",
    "user": "your_username",
    "password": "your_password",
    "database": "your_database"
}

# 저장 프로시저 호출
df_test_a = fetch_data_from_procedure_with_cursor("PTestA", connection_details)
df_test_b = fetch_data_from_procedure_with_cursor("PTestB", connection_details)
df_real_a = fetch_data_from_procedure_with_cursor("PRealA", connection_details)
df_real_b = fetch_data_from_procedure_with_cursor("PRealB", connection_details)

# 결과 출력
print(df_test_a)