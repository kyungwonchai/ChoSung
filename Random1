, 그럼요. 파이참(PyCharm)에서 파이썬(Python) 코드로 API 서버에 데이터를 전송해보는 것은 아주 좋은 테스트 방법입니다.

아래의 간단한 파이썬 스크립트를 사용하면 됩니다. 이 코드는 지정된 조도 값을 우분투 서버로 전송하고 그 결과를 출력해 줍니다.

## 1. 파이참(PyCharm) 설정 및 코드 작성
새 파이썬 파일 생성: 파이참에서 새 프로젝트를 열거나 기존 프로젝트에서 api_test.py 같은 이름으로 새 파이썬 파일을 만드세요.

requests 라이브러리 설치: 파이썬으로 HTTP 통신을 하려면 requests 라이브러리가 필요합니다. 파이참 하단의 Terminal 탭을 열고 아래 명령어를 입력하여 설치하세요.

Bash

pip install requests
코드 붙여넣기: 방금 만든 파이썬 파일에 아래 코드를 전체 복사하여 붙여넣으세요.

Python

import requests
import json

# --- ★★★ 테스트할 우분투 API 서버의 주소를 입력하세요! ★★★ ---
# 반드시 'http://'로 시작하고, IP 주소와 포트 번호(:3000)를 정확히 적어야 합니다.
api_url = "http://여기에-사용자-우분투-서버-IP주소:3000/log"
# -----------------------------------------------------------

# 서버로 전송할 데이터 (조도 값)
# 이 값을 바꿔가며 테스트해볼 수 있습니다.
data_to_send = {
    "lux": 987.6 
}

print(f"서버 주소: {api_url}")
print(f"전송할 데이터: {data_to_send}")

try:
    # POST 방식으로 서버에 JSON 데이터 전송
    response = requests.post(api_url, json=data_to_send)

    # --- 서버로부터 받은 응답 결과 출력 ---
    print("\n--- 응답 결과 ---")
    # HTTP 상태 코드 출력 (성공하면 200)
    print(f"상태 코드: {response.status_code}") 
    # 서버가 보낸 메시지 출력 (성공하면 '데이터 저장 성공')
    print(f"응답 메시지: {response.text}")

except requests.exceptions.ConnectionError as e:
    print("\n--- 오류 발생 ---")
    print(f"서버에 연결할 수 없습니다. 주소가 맞는지, 서버가 실행 중인지 확인하세요.")
    print(f"상세 오류: {e}")

except Exception as e:
    print(f"\n--- 알 수 없는 오류 발생 ---")
    print(f"상세 오류: {e}")

## 2. 스크립트 실행 및 결과 확인
서버 주소 수정: 코드에서 api_url 변수의 "http://여기에-사용자-우분투-서버-IP주소:3000/log" 부분을 실제 우분투 서버의 IP 주소로 정확하게 수정합니다.

스크립트 실행: 파이참에서 코드를 작성한 파일을 마우스 오른쪽 버튼으로 클릭한 뒤, **Run 'api_test'**를 선택하여 실행합니다.

성공 시 예상 결과:

파이참의 실행 결과(Run) 창에 아래와 같이 출력됩니다.

서버 주소: http://192.168.0.10:3000/log
전송할 데이터: {'lux': 987.6}

--- 응답 결과 ---
상태 코드: 200
응답 메시지: 데이터 저장 성공
동시에, 우분투 서버의 터미널에는 데이터 저장 성공: 987.6 lux 라는 로그가 찍히고, MSSQL 데이터베이스에는 987.6 이라는 값이 저장됩니다.

실패 시 예상 결과 (예: 서버 주소가 틀렸을 경우):

서버 주소: http://잘못된주소:3000/log
전송할 데이터: {'lux': 987.6}

--- 오류 발생 ---