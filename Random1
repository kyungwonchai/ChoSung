이콘 파일을 프로그램 파일(.exe)에 포함시키려면 아이콘 파일을 리소스로 추가하고, 리소스에서 아이콘을 로드하도록 해야 합니다. 이렇게 하면 .ico 파일이 실행 파일에 포함되므로 별도로 파일을 배포할 필요가 없습니다.

다음은 아이콘 파일을 리소스로 포함시키고 트레이 아이콘을 설정하는 방법입니다.

1. .ico 파일을 프로젝트 리소스로 추가
프로젝트의 Properties 폴더 안에 Resources.resx 파일을 엽니다.
리소스 디자이너에서 새로운 리소스를 추가하고, 형식을 "아이콘"으로 설정한 후, .ico 파일을 추가합니다.
2. 리소스에서 아이콘 로드하기
리소스에서 아이콘을 로드하여 NotifyIcon에 설정합니다.

csharp
코드 복사
using System;
using System.Windows;
using System.Windows.Forms; // Windows Forms 사용을 위해 추가
using System.Drawing; // Icon 사용을 위해 추가

namespace SMDFileCleaner
{
    public partial class MainWindow : Window
    {
        private NotifyIcon _notifyIcon;

        public MainWindow()
        {
            InitializeComponent();
            InitializeTrayIcon();
        }

        private void InitializeTrayIcon()
        {
            _notifyIcon = new NotifyIcon();
            // 리소스에서 아이콘 로드
            var iconStream = Application.GetResourceStream(new Uri("pack://application:,,,/SMDFileCleaner;component/Resources/youricon.ico")).Stream;
            _notifyIcon.Icon = new Icon(iconStream);

            _notifyIcon.Visible = true;
            _notifyIcon.DoubleClick += NotifyIcon_DoubleClick;

            AppDomain.CurrentDomain.ProcessExit += OnProcessExit;
            Application.Current.Exit += OnApplicationExit;
        }

        private void NotifyIcon_DoubleClick(object sender, EventArgs e)
        {
            // 트레이 아이콘 더블 클릭 시 동작할 코드
            this.Show();
            this.WindowState = WindowState.Normal;
        }

        private void OnApplicationExit(object sender, ExitEventArgs e)
        {
            if (_notifyIcon != null)
            {
                _notifyIcon.Visible = false;
                _notifyIcon.Dispose();
            }
        }

        private void OnProcessExit(object sender, EventArgs e)
        {
            if (_notifyIcon != null)
            {
                _notifyIcon.Visible = false;
                _notifyIcon.Dispose();
            }
        }

        protected override void OnClosed(EventArgs e)
        {
            _notifyIcon.Dispose(); // 트레이 아이콘 파괴
            base.OnClosed(e);
        }
    }
}
리소스 파일 설정
.ico 파일을 프로젝트의 리소스 파일로 추가할 때는 Visual Studio의 솔루션 탐색기에서 프로젝트를 선택한 후, 마우스 오른쪽 버튼을 클릭하여 "Properties"를 선택합니다.
"Resources" 탭에서 "Add Resource"를 선택하여 .ico 파일을 추가합니다. 이렇게 하면 리소스 디자이너에 .ico 파일이 추가됩니다.
App.xaml.cs 수정
App.xaml.cs에서는 MainWindow를 생성하지 않고, 트레이 아이콘 처리만 MainWindow 내에서 하도록 합니다.

csharp
코드 복사
using System;
using System.Windows;

namespace SMDFileCleaner
{
    public partial class App : Application
    {
        protected override void OnStartup(StartupEventArgs e)
        {
            base.OnStartup(e);

            // MainWindow는 여기서 생성하지 않음
        }
    }
}
이렇게 하면, 아이콘 파일이 실행 파일에 포함되어 배포할 때 별도로 아이콘 파일을 제공할 필요가 없습니다. 트레이 아이콘 설정도 리소스에서 직접 아이콘을 로드하여 설정하므로 파일 경로 문제도 해결됩니