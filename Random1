MEWTOCOL 읽기 명령 분석:
명령어 형식: %01#RDD02300**\n

%01: PLC 유닛 번호
#RDD: 읽기 명령 (D 레지스터에서 데이터를 읽기 위한 명령)
02300: 읽고자 하는 데이터의 주소 (예시: D2300)
**: BCC (Block Check Code)
\n: 명령어의 끝
응답 형식: %01$RD00100\n

%01: PLC 유닛 번호
$RD: 읽기 응답
00100: 읽은 값 (값이 5자리 형식으로 응답됨)
\n: 응답의 끝
R520과 같은 번지 읽기 함수 구현
csharp
코드 복사
using System;
using System.Text;

public class ComportManager
{
    private static ComportManager _instance;
    private SerialPort _serialPort;

    private ComportManager() 
    {
        // 시리얼 포트 초기화 (예시)
        _serialPort = new SerialPort("COM1", 9600, Parity.None, 8, StopBits.One);
        _serialPort.Open();
    }

    public static ComportManager GetInstance()
    {
        if (_instance == null)
            _instance = new ComportManager();
        return _instance;
    }

    // 단일 주소에서 값을 읽는 함수
    public string ReadSingleData(string address)
    {
        // 읽기 명령어 생성: %01#RDD02300**
        string command = $"%01#RDD{address}";

        // BCC 계산 (Block Check Code)
        string bcc = CalculateBCC(command);
        command += bcc + "\n";  // BCC와 종료 기호 추가

        // 명령어를 시리얼 포트로 전송
        byte[] buffer = Encoding.ASCII.GetBytes(command);
        _serialPort.Write(buffer, 0, buffer.Length);

        // 응답 처리 및 값 반환
        return ParseResponse(GetResponse());
    }

    // 여러 주소에서 값을 읽는 함수
    public string[] ReadMultipleData(string startAddress, string endAddress)
    {
        // 읽기 명령어 생성: %01#RDD0230002304**
        string command = $"%01#RDD{startAddress}{endAddress}";

        // BCC 계산 (Block Check Code)
        string bcc = CalculateBCC(command);
        command += bcc + "\n";  // BCC와 종료 기호 추가

        // 명령어를 시리얼 포트로 전송
        byte[] buffer = Encoding.ASCII.GetBytes(command);
        _serialPort.Write(buffer, 0, buffer.Length);

        // 응답 처리 및 값 반환
        string response = GetResponse();
        return ParseMultipleResponse(response);
    }

    // BCC 계산 (Block Check Code)
    private string CalculateBCC(string command)
    {
        int bcc = 0;
        foreach (char c in command)
        {
            bcc ^= c;  // XOR 연산
        }
        return bcc.ToString("X2");  // BCC를 16진수 문자열로 반환
    }

    // 응답에서 단일 값을 파싱하는 함수
    private string ParseResponse(string response)
    {
        // 예시 응답: %01$RD00100\n
        if (response.StartsWith("%01$RD"))
        {
            // 값은 5자리이므로, 인덱스 6번부터 5자리 값 추출
            string value = response.Substring(6, 5);
            return value;
        }
        return "Invalid Response";
    }

    // 응답에서 여러 값을 파싱하는 함수
    private string[] ParseMultipleResponse(string response)
    {
        // 예시 응답: %01$RD0010000200003000040005\n
        if (response.StartsWith("%01$RD"))
        {
            string data = response.Substring(6);  // %01$RD 이후의 값들 추출
            int numValues = data.Length / 5;      // 각 값은 5자리
            string[] values = new string[numValues];

            for (int i = 0; i < numValues; i++)
            {
                values[i] = data.Substring(i * 5, 5);  // 5자리씩 잘라서 저장
            }

            return values;
        }
        return new string[] { "Invalid Response" };
    }

    // PLC 응답 수신 함수
    private string GetResponse()
    {
        byte[] readBuffer = new byte[256];
        int bytesRead = _serialPort.Read(readBuffer, 0, readBuffer.Length);
        return Encoding.ASCII.GetString(readBuffer, 0, bytesRead);
    }
}
코드 설명:
단일 주소에서 값을 읽는 함수 (ReadSingleData):

PLC의 특정 주소(R520와 같은)에서 값을 읽을 때 사용됩니다.
예시 명령어: %01#RDD02300**\n
주소 D2300에서 값을 읽습니다.
응답: %01$RD00100\n (읽은 값이 00100으로 응답됨)
여러 주소에서 값을 읽는 함수 (ReadMultipleData):

PLC의 연속된 주소 범위(R520 ~ R524 등)에서 여러 값을 읽을 때 사용됩니다.
예시 명령어: %01#RDD0230002304**\n
주소 D2300부터 D2304까지 값을 읽습니다.
응답: %01$RD0010000200003000040005\n (읽은 값이 각각 5자리 형식으로 응답됨)
응답 파싱:

ParseResponse: 단일 응답 값을 5자리로 추출하여 반환.
ParseMultipleResponse: 여러 값을 5자리씩 나누어 배열로 반환.
BCC 계산:

명령어의 **Block Check Code (BCC)**를 XOR 연산으로 계산하여 무결성을 보장합니다.
사용 예시:
csharp
코드 복사
// ComportManager 인스턴스 생성
var comportManager = ComportManager.GetInstance();

// R520에서 값을 읽는 예시 (D2300에 대응하는 주소)
string response = comportManager.ReadSingleData("02300");
Console.WriteLine("R520 Value: " + response);

// R520부터 R524까지 값을 읽는 예시
string[] multipleResponse = comportManager.ReadMultipleData("02300", "02304");
foreach (string value in multipleResponse)
{
    Console.WriteLine("Value: " + value);
}
요약:
단일 주소 읽기: R520과 같은 번지에서 값을 읽을 때는 명령어 %01#RDD02300**\n을 보내고, 응답으로 %01$RD00100\n 형식의 데이터를 받습니다.
여러 주소 읽기: 연속된 주소 범위에서 값을 읽을 때는 명령어 %01#RDD0230002304**\n을 보내고, 여러 값이 5자리로 나열된 응답을 받습니다.
응답 처리: 5자리 값을 추출하여 필요한 데이터로 반환합니다.
이제 읽기도 쓰기와 마찬가지로 요청하신 형식에 맞게 처리됩니다.