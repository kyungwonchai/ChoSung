으로 특정 작업(함수)을 실행할 때 사용됩니다. 이 함수는 사용자가 특정 도형을 클릭하거나 특정 작업을 선택했을 때 그 작업을 실행하는 기능을 수행합니다.

ExecuteSpecificTask 개념
도형을 클릭하거나 특정 작업을 선택하면, 해당 작업(함수)만 실행됩니다.
각 함수는 **FunctionStatusList**에 저장되어 있으며, 사용자가 도형이나 버튼을 통해 이를 실행할 수 있습니다.
함수가 실행되면 도형의 색상이 하늘색으로 바뀌고, 완료되면 초록색으로 변경됩니다.
1. ExecuteSpecificTask 함수 구현
csharp
코드 복사
/// <summary>
/// 특정 함수를 실행합니다. (도형을 클릭하거나 선택할 때 사용)
/// </summary>
public async Task ExecuteSpecificTask(int taskIndex)
{
    // 현재 함수 이름과 매칭되는 작업을 실행
    var functionStatus = FunctionStatusList[taskIndex];
    
    // 도형 색상 업데이트 (진행 중)
    Application.Current.Dispatcher.Invoke(() =>
    {
        functionStatus.UpdateStatus(Brushes.SkyBlue);  // 도형 색상 변경
    });

    // 선택된 작업(비동기 함수)을 실행
    await functionStatus.Task();

    // 작업 완료 후 도형 색상 업데이트 (완료)
    Application.Current.Dispatcher.Invoke(() =>
    {
        functionStatus.UpdateStatus(Brushes.Green);  // 도형 색상 변경
    });
}
2. XAML에서 ExecuteSpecificTask 바인딩
도형 클릭으로 특정 작업을 실행하도록 설정합니다. 도형에 MouseLeftButtonDown 이벤트를 바인딩해서 도형을 클릭하면 해당 함수가 실행되도록 만듭니다.

xml
코드 복사
<DataGridTemplateColumn Header="Function Status">
    <DataGridTemplateColumn.CellTemplate>
        <DataTemplate>
            <!-- 도형과 상태를 표시하는 ItemsControl -->
            <ItemsControl ItemsSource="{Binding FunctionStatusList}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <!-- 함수 상태를 표시하는 도형 -->
                            <Ellipse Width="30" Height="30" Fill="{Binding StatusColor}" 
                                     MouseLeftButtonDown="Ellipse_MouseLeftButtonDown">
                                <Ellipse.ToolTip>
                                    <TextBlock Text="{Binding FunctionName}" />
                                </Ellipse.ToolTip>
                            </Ellipse>
                        </StackPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </DataTemplate>
    </DataGridTemplateColumn.CellTemplate>
</DataGridTemplateColumn>
3. Ellipse_MouseLeftButtonDown 이벤트 핸들러
XAML에서 도형을 클릭하면 특정 함수가 실행될 수 있도록 이벤트 핸들러를 설정합니다.

csharp
코드 복사
private void Ellipse_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
{
    var ellipse = sender as Ellipse;
    if (ellipse != null && ellipse.DataContext is FunctionStatus functionStatus)
    {
        // 도형을 클릭한 작업의 인덱스를 찾음
        int taskIndex = FunctionStatusList.IndexOf(functionStatus);

        // 특정 작업을 실행
        ExecuteSpecificTask(taskIndex);
    }
}
4. 연결된 FunctionStatus 모델
csharp
코드 복사
public class FunctionStatus : ViewModelBase
{
    public string FunctionName { get; set; }  // 함수 이름
    public Func<Task> Task { get; set; }  // 비동기 함수
    public Brush StatusColor { get; set; }  // 도형 색상

    public FunctionStatus(string functionName, Func<Task> task, Brush statusColor)
    {
        FunctionName = functionName;
        Task = task;
        StatusColor = statusColor;
    }

    /// <summary>
    /// 도형의 색상을 업데이트합니다.
    /// </summary>
    public void UpdateStatus(Brush newColor)
    {
        StatusColor = newColor;
        OnPropertyChanged(nameof(StatusColor));
    }
}
요약:
**ExecuteSpecificTask**는 특정 도형이나 버튼을 클릭했을 때, 해당 작업(함수)만 개별적으로 실행하는 역할을 합니다.
도형을 클릭하면 그 도형에 해당하는 함수가 실행되며, 작업이 진행되는 동안 도형 색상이 **하늘색(SkyBlue)**으로 바뀌고, 작업이 완료되면 **초록색(Green)**으로 변경됩니다.
XAML에서는 도형 클릭 이벤트로 작업을 실행하도록 설정하여 사용자 인터랙션을 통해 작업이 실행됩니다.
이 코드를 사용하여 특정 작업만 개별적으로 실행할 수 있습니다.