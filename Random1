PF에서 DataGrid에 DataGridTextColumn이 POStatus 값에 바인딩되어 있고, 특정 값을 기반으로 행을 숨기거나 보이게 하는 기능을 구현할 수 있습니다. 여기서는 체크박스를 이용해 "이미"라는 값이 포함된 행을 숨기거나 보이도록 제어하는 샘플 코드를 제공하겠습니다.

주요 기능 설명
POStatus 값에 "이미"라는 단어가 포함되면 해당 행을 숨깁니다.
상단에 체크박스를 추가해 체크하면 숨겨진 행을 다시 보이게 하고, 체크 해제 시 다시 숨깁니다.
1. ViewModel 설계
csharp
코드 복사
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Linq;

public class MainViewModel : INotifyPropertyChanged
{
    public event PropertyChangedEventHandler PropertyChanged;

    private bool _showHiddenRows;
    public bool ShowHiddenRows
    {
        get => _showHiddenRows;
        set
        {
            _showHiddenRows = value;
            OnPropertyChanged(nameof(ShowHiddenRows));
            FilterItems(); // 체크박스 상태 변경 시 필터링
        }
    }

    public ObservableCollection<Item> Items { get; set; }
    public ObservableCollection<Item> FilteredItems { get; set; }

    public MainViewModel()
    {
        Items = new ObservableCollection<Item>
        {
            new Item { POStatus = "처리중" },
            new Item { POStatus = "이미 처리됨" },
            new Item { POStatus = "대기중" },
            new Item { POStatus = "이미 처리됨" }
        };

        FilteredItems = new ObservableCollection<Item>(Items);
    }

    private void FilterItems()
    {
        if (ShowHiddenRows)
        {
            // 체크박스가 체크되어 있으면 모든 항목 표시
            FilteredItems = new ObservableCollection<Item>(Items);
        }
        else
        {
            // "이미"라는 단어가 포함된 항목 숨기기
            FilteredItems = new ObservableCollection<Item>(
                Items.Where(i => !i.POStatus.Contains("이미"))
            );
        }
        OnPropertyChanged(nameof(FilteredItems)); // 필터된 리스트 업데이트
    }

    protected void OnPropertyChanged(string propertyName)
    {
        PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
    }
}

public class Item
{
    public string POStatus { get; set; }
}
2. XAML 파일 구성
xml
코드 복사
<Window x:Class="WpfApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="MainWindow" Height="350" Width="525">
    <Window.DataContext>
        <local:MainViewModel/>
    </Window.DataContext>
    
    <Grid>
        <StackPanel>
            <!-- 체크박스: 숨겨진 행을 보여주기 -->
            <CheckBox Content="숨겨진 행 보기" 
                      IsChecked="{Binding ShowHiddenRows, Mode=TwoWay}"
                      Margin="10"/>
            
            <!-- DataGrid: POStatus 컬럼 표시 -->
            <DataGrid ItemsSource="{Binding FilteredItems}" AutoGenerateColumns="False" Height="200" Margin="10">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="POStatus" Binding="{Binding POStatus}" />
                </DataGrid.Columns>
            </DataGrid>
        </StackPanel>
    </Grid>
</Window>
3. 동작 방식
MainViewModel에서 Items 컬렉션은 원본 데이터를 가지고 있으며, FilteredItems는 현재 표시할 데이터를 가지고 있습니다.
체크박스의 IsChecked 속성은 ShowHiddenRows 속성에 바인딩되어 있으며, 체크 여부에 따라 FilteredItems가 업데이트됩니다.
체크박스가 선택되지 않으면 POStatus에 "이미"라는 단어가 포함된 항목은 FilteredItems에서 제외되며, 체크박스를 선택하면 모든 항목이 다시 표시됩니다.
DataGrid는 FilteredItems에 바인딩되어 표시될 데이터를 동적으로 업데이트합니다.
4. 실행 결과
초기에는 POStatus에 "이미"라는 값이 포함된 항목은 표시되지 않습니다.
체크박스를 체크하면 "이미"가 포함된 항목들이 다시 표시됩니다.
체크박스를 해제하면 다시 숨겨집니다.
이 샘플 코드를 통해 원하는 기능을 구현할 수 있습니다.