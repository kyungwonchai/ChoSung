evExpress 22.2의 RibbonForm에서 BarButtonItem에 마우스를 올릴 때 사용자 정의 트리 메뉴가 아래에 표시되고, 트리 메뉴의 항목을 클릭하면 각기 다른 함수가 실행되는 코드를 작성하는 방법을 알려드리겠습니다.

이 예제에서는 BarButtonItem의 MouseHover 이벤트를 사용하여 트리 메뉴를 보여주고, TreeView 컨트롤을 활용하여 메뉴 항목을 클릭할 때 각 함수가 실행되도록 구성하겠습니다.

1. 리본 폼 설정 및 트리 메뉴 생성
먼저, RibbonForm에 필요한 컨트롤을 추가하고 트리 메뉴가 표시될 패널과 트리 뷰를 생성합니다.

csharp
코드 복사
// RibbonForm에 DevExpress 및 필요한 네임스페이스를 추가합니다.
using DevExpress.XtraBars;
using System;
using System.Windows.Forms;

public partial class MainForm : RibbonForm
{
    private Panel treePanel; // 트리 메뉴를 포함할 패널
    private TreeView treeView; // 트리 메뉴

    public MainForm()
    {
        InitializeComponent();
        InitializeTreeMenu();
    }

    private void InitializeTreeMenu()
    {
        // 트리 패널 설정
        treePanel = new Panel
        {
            Size = new System.Drawing.Size(200, 200),
            Visible = false,
            BackColor = System.Drawing.Color.White,
            BorderStyle = BorderStyle.FixedSingle
        };
        this.Controls.Add(treePanel);

        // 트리 뷰 설정
        treeView = new TreeView
        {
            Dock = DockStyle.Fill
        };
        treePanel.Controls.Add(treeView);

        // 트리 메뉴 항목 추가
        treeView.Nodes.Add("Menu 1").Tag = "Function1";
        treeView.Nodes.Add("Menu 2").Tag = "Function2";
        treeView.Nodes.Add("Menu 3").Tag = "Function3";

        // 트리 메뉴 항목 클릭 이벤트 연결
        treeView.NodeMouseClick += TreeView_NodeMouseClick;
    }
}
2. BarButtonItem의 MouseHover 이벤트 연결
이제 BarButtonItem에 마우스를 올릴 때 트리 메뉴가 표시되도록 이벤트를 설정합니다. BarButtonItem의 MouseHover 이벤트를 사용하여 트리 메뉴를 보이게 하며, 마우스를 다른 곳으로 옮기면 트리 메뉴가 숨겨지도록 구현합니다.

csharp
코드 복사
// MainForm 클래스 내에 BarButtonItem 마우스 이벤트 처리기 설정
private void MainForm_Load(object sender, EventArgs e)
{
    // BarButtonItem 생성 및 이벤트 연결
    BarButtonItem barButtonItem = new BarButtonItem();
    barButtonItem.Caption = "Show Tree Menu";
    barButtonItem.ItemAppearance.Normal.Font = new System.Drawing.Font("Tahoma", 9F);
    ribbonControl.Items.Add(barButtonItem);
    ribbonPageGroup1.ItemLinks.Add(barButtonItem);

    // 마우스 Hover 이벤트 설정
    barButtonItem.ItemClick += (s, args) => ShowTreeMenu(barButtonItem);
}

// 트리 메뉴 표시 함수
private void ShowTreeMenu(BarButtonItem barButtonItem)
{
    // 트리 메뉴 위치 설정 (리본 하단에 표시)
    treePanel.Location = new System.Drawing.Point(
        barButtonItem.ItemRect.Left, 
        ribbonControl.Height + 5); 
    treePanel.Visible = true;
}

// 트리 메뉴 숨기기
private void MainForm_MouseClick(object sender, MouseEventArgs e)
{
    if (!treePanel.Bounds.Contains(e.Location))
    {
        treePanel.Visible = false;
    }
}
3. 트리 메뉴의 항목 클릭 이벤트 처리
트리 메뉴의 항목을 클릭하면, 각 항목에 연결된 함수를 실행하도록 합니다. TreeNode의 Tag 속성에 함수명을 저장해두고, 클릭 시 해당 함수가 호출되도록 합니다.

csharp
코드 복사
// 트리 메뉴 항목 클릭 시 이벤트 처리
private void TreeView_NodeMouseClick(object sender, TreeNodeMouseClickEventArgs e)
{
    treePanel.Visible = false; // 클릭 후 트리 메뉴 숨기기

    // 각 항목에 따라 다른 함수 실행
    switch (e.Node.Tag.ToString())
    {
        case "Function1":
            ExecuteFunction1();
            break;
        case "Function2":
            ExecuteFunction2();
            break;
        case "Function3":
            ExecuteFunction3();
            break;
        default:
            MessageBox.Show("No function assigned.");
            break;
    }
}

// 각각의 함수
private void ExecuteFunction1()
{
    MessageBox.Show("Function 1 executed");
}

private void ExecuteFunction2()
{
    MessageBox.Show("Function 2 executed");
}

private void ExecuteFunction3()
{
    MessageBox.Show("Function 3 executed");
}
전체 코드 요약
위의 코드들을 모두 종합하여 하나의 MainForm 클래스에서 실행할 수 있도록 구성한 것입니다.

RibbonForm에 트리 메뉴와 패널 추가
BarButtonItem에 마우스 이벤트 설정