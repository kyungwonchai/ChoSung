import requests
import time

# --- ★★★ 설정 (사용자 환경에 맞게 수정하세요) ★★★ ---
# 1. 우분투 서버의 IP 주소를 정확하게 입력하세요.
SERVER_IP = "여기에-사용자-우분투-서버-IP주소"

# 2. server.js 파일에 설정한 비밀 API 키를 입력하세요.
API_KEY = "LightMeter-Secret-Key-1234"

# 3. 테스트에 사용할 임의의 기기 ID를 입력하세요.
DEVICE_ID = "TEST-DEVICE-01"
# ----------------------------------------------------

# API 엔드포인트 주소 정의
url_realtime = f"http://{SERVER_IP}:3000/log"
url_minute = f"http://{SERVER_IP}:3000/log1min"

# 서버로 보낼 요청 헤더 (API 키 포함)
headers = {
    "Content-Type": "application/json",
    "x-api-key": API_KEY
}

def test_realtime_update():
    """ 1. 실시간 UPDATE 테스트 (/log) """
    print(f"--- 1. 실시간 UPDATE 테스트 시작 ---")
    
    # 보낼 데이터 (조도 값)
    data = {
        "deviceId": DEVICE_ID,
        "lux": round(time.time() % 100, 1) # 매번 다른 값을 보내기 위해 현재 시간 이용
    }
    
    print(f"요청 주소: {url_realtime}")
    print(f"보내는 데이터: {data}")

    try:
        response = requests.post(url_realtime, headers=headers, json=data)
        print(f"-> 응답 코드: {response.status_code}")
        print(f"-> 응답 메시지: {response.text}\n")
    except Exception as e:
        print(f"-> 오류 발생: {e}\n")


def test_minute_insert():
    """ 2. 1분 평균 INSERT 테스트 (/log1min) """
    print(f"--- 2. 1분 평균 INSERT 테스트 시작 ---")

    # 보낼 데이터 (평균 조도 값)
    data = {
        "deviceId": DEVICE_ID,
        "avgLux": 456.7
    }

    print(f"요청 주소: {url_minute}")
    print(f"보내는 데이터: {data}")

    try:
        response = requests.post(url_minute, headers=headers, json=data)
        print(f"-> 응답 코드: {response.status_code}")
        print(f"-> 응답 메시지: {response.text}\n")
    except Exception as e:
        print(f"-> 오류 발생: {e}\n")


if __name__ == "__main__":
    # 두 가지 테스트를 모두 실행
    test_realtime_update()
    test_minute_insert()