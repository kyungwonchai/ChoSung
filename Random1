# WPF 애플리케이션에서 현재 PC의 모든 COM 포트와 사용 중인 포트, 그리고 각 포트가 어떤 프로그램에서 사용 중인지 확인하는 방법을 설명하겠습니다. 이를 위해 System.IO.Ports.SerialPort 클래스를 사용하여 COM 포트를 나열하고, ManagementObjectSearcher를 사용하여 포트 정보를 가져오겠습니다.

먼저, WPF 프로젝트를 생성하고, 필요한 XAML과 C# 코드를 추가합니다.

1. XAML 파일 (MainWindow.xaml)
xml
코드 복사
<Window x:Class="COMPortChecker.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="COM Port Checker" Height="350" Width="600">
    <Grid>
        <DataGrid Name="dataGrid" AutoGenerateColumns="True" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
        <Button Content="Refresh" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="10" Click="Refresh_Click"/>
    </Grid>
</Window>
2. C# 코드 (MainWindow.xaml.cs)
csharp
코드 복사
using System;
using System.Collections.Generic;
using System.IO.Ports;
using System.Management;
using System.Windows;

namespace COMPortChecker
{
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
            RefreshCOMPorts();
        }

        private void Refresh_Click(object sender, RoutedEventArgs e)
        {
            RefreshCOMPorts();
        }

        private void RefreshCOMPorts()
        {
            List<COMPortInfo> comPorts = GetAllCOMPorts();
            dataGrid.ItemsSource = comPorts;
        }

        public List<COMPortInfo> GetAllCOMPorts()
        {
            List<COMPortInfo> comPorts = new List<COMPortInfo>();

            using (var searcher = new ManagementObjectSearcher("SELECT * FROM Win32_SerialPort"))
            {
                foreach (var port in searcher.Get())
                {
                    COMPortInfo comPortInfo = new COMPortInfo
                    {
                        Name = port["DeviceID"].ToString(),
                        Description = port["Caption"].ToString(),
                        Status = port["Status"].ToString(),
                        IsInUse = IsPortInUse(port["DeviceID"].ToString())
                    };
                    comPorts.Add(comPortInfo);
                }
            }

            return comPorts;
        }

        private string IsPortInUse(string portName)
        {
            var searcher = new ManagementObjectSearcher("SELECT * FROM Win32_Process");
            foreach (ManagementObject process in searcher.Get())
            {
                var processId = process["ProcessId"];
                var commandLine = process["CommandLine"];
                if (commandLine != null && commandLine.ToString().Contains(portName))
                {
                    return process["Name"].ToString();
                }
            }

            return "Available";
        }
    }

    public class COMPortInfo
    {
        public string Name { get; set; }
        public string Description { get; set; }
        public string Status { get; set; }
        public string IsInUse { get; set; }
    }
}
코드 설명
MainWindow.xaml: UI는 DataGrid와 Refresh 버튼으로 구성됩니다.
MainWindow.xaml.cs: MainWindow 클래스는 COM 포트 정보를 관리하고, DataGrid에 표시합니다.
GetAllCOMPorts 메서드는 ManagementObjectSearcher를 사용하여 모든 COM 포트 정보를 가져옵니다.
IsPortInUse 메서드는 Win32_Process 클래스를 사용하여 특정 포트가 현재 사용 중인지 확인하고, 사용 중인 경우 해당 프로세스의 이름을 반환합니다.
RefreshCOMPorts 메서드는 DataGrid를 최신 COM 포트 정보로 갱신합니다.
이 코드를 사용하면 현재 PC에서 사용 가능한 모든 COM 포트와 각 포트가 사용 중인지, 사용 중이라면 어떤 프로세스에서 사용 중인지 WPF 애플리케이션을 통해 확인할 수 있습니