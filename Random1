 파일명에 pppp가 포함된 가장 최근 파일을 찾고, 해당 파일을 읽기 및 쓰기 공유 모드로 열어서 간섭 없이 처리하는 C# 코드입니다.

csharp
코드 복사
using System;
using System.IO;
using System.Linq;

public class FileProcessor
{
    public string GetLatestLogFileWithKeyword(string folderPath, string keyword)
    {
        // 폴더 내 .log 확장자를 가진 파일 목록을 가져옵니다.
        var logFiles = Directory.GetFiles(folderPath, "*.log");

        // 파일명에 keyword(예: pppp)가 포함된 파일을 필터링합니다.
        var filteredFiles = logFiles.Where(file => Path.GetFileName(file).Contains(keyword)).ToArray();

        // 필터된 파일이 없으면 null을 반환합니다.
        if (filteredFiles.Length == 0)
        {
            return null;
        }

        // 가장 최근 파일을 찾습니다. (최종 수정 날짜 기준으로 정렬)
        var latestFile = filteredFiles.OrderByDescending(file => File.GetLastWriteTime(file)).FirstOrDefault();

        // 최근 파일을 읽기 및 쓰기 공유 모드로 열어봅니다.
        try
        {
            using (FileStream fs = new FileStream(latestFile, FileMode.Open, FileAccess.Read, FileShare.ReadWrite))
            {
                // 파일을 성공적으로 열었으면 파일 이름을 반환합니다.
                return latestFile;
            }
        }
        catch (Exception ex)
        {
            // 오류가 발생하면 예외 메시지를 출력하고 null을 반환합니다.
            Console.WriteLine($"파일을 열 수 없습니다: {ex.Message}");
            return null;
        }
    }
}
코드 설명:
Directory.GetFiles: 지정된 폴더에서 .log 파일들을 모두 가져옵니다.
Where: 파일 이름에 특정 키워드(pppp)가 포함된 파일들을 필터링합니다.
OrderByDescending: 최종 수정 날짜 기준으로 파일을 내림차순으로 정렬하여 가장 최근 파일을 찾습니다.
FileStream: 파일을 ReadWrite 공유 모드로 열어서 다른 프로세스가 파일을 읽거나 쓸 수 있도록 허용합니다.
예외 처리: 파일을 여는 도중 오류가 발생하면 오류 메시지를 출력하고, 파일을 반환하지 않습니다.
이 코드를 호출할 때는 GetLatestLogFileWithKeyword 메서드에 폴더 경로와 키워드(pppp)를 전달하면 됩