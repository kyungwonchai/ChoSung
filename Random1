se the Loaded event of the GridControl to call BestFitColumns. This ensures that as soon as the grid is fully loaded, the columns will adjust to fit their content.
csharp
Copy code
public MainWindow()
{
    InitializeComponent();
    gridControl.Loaded += GridControl_Loaded;
}

private void GridControl_Loaded(object sender, RoutedEventArgs e)
{
    ((GridControl)sender).View.BestFitColumns();
}
After Data Loading:
If you're loading data asynchronously or through some other method, you might want to call BestFitColumns right after your data has been set to the GridControl

2 / 2




User
소수전 1자리까지 표시하는것도 2자리도

ChatGPT
In DevExpress for WPF, if you want to format a column to display numbers with a fixed number of decimal places—such as one or two decimal places—you can set this using both XAML and C#. Here's how you can define these formats:

Formatting to Show One or Two Decimal Places in XAML
You can specify the number format directly in your XAML by using the EditSettings property of the GridColumn with TextEditSettings. This allows you to use standard or custom numeric format strings:

xml
Copy code
<dxg:GridControl x:Name="gridControl">
    <dxg:GridControl.Columns>
        <!-- For one decimal place -->
        <dxg:GridColumn FieldName="NumericField1" Header="One Decimal">
            <dxg:GridColumn.EditSettings>
                <dxe:TextEditSettings DisplayFormat="F1"/>
            </dxg:GridColumn.EditSettings>
        </dxg:GridColumn>
        <!-- For two decimal places -->
        <dxg:GridColumn FieldName="NumericField2" Header="Two Decimals">
            <dxg:GridColumn.EditSettings>
                <dxe:TextEditSettings DisplayFormat="F2"/>
            </dxg:GridColumn.EditSettings>
        </dxg:GridColumn>
    </dxg:GridControl.Columns>
    <dxg:GridControl.View>
        <dxg:TableView/>
    </dxg:GridControl.View>
</dxg:GridControl>
Formatting in C#
Similarly, you can set this formatting in C# in the code-behind. This might be useful if you need to dynamically adjust the format based on certain conditions:

csharp
Copy code
public MainWindow()
{
    InitializeComponent();
    SetupColumnFormatting();
}

private void SetupColumnFormatting()
{
    var column1 = gridControl.Columns["NumericField1"];
    var column2 = gridControl.Columns["NumericField2"];
    if (column1 != null)
    {
        column1.EditSettings = new DevExpress.Xpf.Editors.Settings.TextEditSettings
        {
            DisplayFormat = "F1"
        };
    }
    if (column2 != null)
    {
        column2.EditSettings = new DevExpress.Xpf.Editors.Settings.TextEditSettings
        {
            DisplayFormat = "F2"
        };
    }
}
In these examples:

"F1" stands for fixed-point format with one decimal place.
"F2" stands for fixed-point format with two decimal places.
This formatting ensures that regardless of the actual numeric value, the display in the grid will always show one or two decimal places, which helps maintain a consistent presentation in your application.