MSSQL 2014에서 주어진 IP 주소가 존재하는지 확인하고, 해당 IP에 대한 amount1 값을 업데이트하거나 IP가 없으면 새로운 레코드를 삽입하는 SQL 쿼리와 C# 코드 예제를 제공합니다. 이 코드는 비동기 작업을 사용하여 서버가 응답하지 않더라도 프로그램의 흐름에 영향을 주지 않도록 설계되었습니다.

MSSQL 쿼리
먼저 테이블을 생성하는 쿼리를 작성합니다. 이 테이블은 ipadd, amount1, date1 컬럼을 포함합니다.

sql
코드 복사
CREATE TABLE maoisaoiHDDamount (
    ipadd NVARCHAR(50) PRIMARY KEY,
    amount1 INT,
    date1 DATETIME
);
이제 IP 주소에 대해 업데이트 또는 삽입 작업을 수행할 쿼리를 작성합니다.

sql
코드 복사
-- IP 주소가 존재하면 업데이트, 존재하지 않으면 삽입
MERGE INTO maoisaoiHDDamount AS target
USING (SELECT @ipadd AS ipadd, @amount1 AS amount1, GETDATE() AS date1) AS source
ON target.ipadd = source.ipadd
WHEN MATCHED THEN
    UPDATE SET amount1 = source.amount1, date1 = source.date1
WHEN NOT MATCHED THEN
    INSERT (ipadd, amount1, date1)
    VALUES (source.ipadd, source.amount1, source.date1);
위 쿼리에서 @ipadd와 @amount1은 파라미터로 전달됩니다.

C# 코드 예제
이제 C#에서 SQL 쿼리를 실행하는 비동기 메서드를 작성합니다. 이 코드는 SQL 서버와의 연결을 비동기적으로 처리하여 프로그램의 다른 부분이 영향을 받지 않도록 합니다.

csharp
코드 복사
using System;
using System.Data.SqlClient;
using System.Threading.Tasks;

class Program
{
    private static string connectionString = "YourConnectionStringHere";

    static async Task Main(string[] args)
    {
        string ipAddress = "10.56.1.30";  // 업데이트하거나 삽입할 IP 주소
        int amount = 100;  // 업데이트하거나 삽입할 amount1 값

        try
        {
            await UpdateOrInsertIPAddressAsync(ipAddress, amount);
            Console.WriteLine("작업 완료");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"오류 발생: {ex.Message}");
        }
    }

    static async Task UpdateOrInsertIPAddressAsync(string ipAddress, int amount)
    {
        string query = @"
            MERGE INTO maoisaoiHDDamount AS target
            USING (SELECT @ipadd AS ipadd, @amount1 AS amount1, GETDATE() AS date1) AS source
            ON target.ipadd = source.ipadd
            WHEN MATCHED THEN
                UPDATE SET amount1 = source.amount1, date1 = source.date1
            WHEN NOT MATCHED THEN
                INSERT (ipadd, amount1, date1)
                VALUES (source.ipadd, source.amount1, source.date1);";

        using (SqlConnection connection = new SqlConnection(connectionString))
        {
            using (SqlCommand command = new SqlCommand(query, connection))
            {
                command.Parameters.AddWithValue("@ipadd", ipAddress);
                command.Parameters.AddWithValue("@amount1", amount);

                await connection.OpenAsync();
                await command.ExecuteNonQueryAsync();
            }
        }
    }
}
코드 설명
연결 문자열: connectionString 변수에 데이터베이스 연결 문자열을 입력합니다. 적절한 값으로 교체해야 합니다.

비동기 메인 메서드: Main 메서드에서 비동기 메서드 UpdateOrInsertIPAddressAsync를 호출하여 IP 주소와 값을 업데이트하거나 삽입합니다. 예외를 처리하여 오류 메시지를 출력합니다.

비동기 메서드: UpdateOrInsertIPAddressAsync 메서드는 SQL 서버와의 비동기 연결을 처리하고, MERGE 쿼리를 사용하여 IP 주소가 존재하면 업데이트하고, 존재하지 않으면 삽입합니다.

트라이-캐치 블록: SQL 작업 중 오류가 발생하면 예외를 잡아 출력합니다.

이 코드는 SQL 서버와 비동기적으로 상호작용하여 서버 다운 시에도 프로그램의 다른 부분에 영향을 주지 않도록 설계되었습