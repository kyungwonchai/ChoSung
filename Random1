k와 WPF를 결합하여 특정 컬럼(CPAPER)의 값에 따라 테이블 셀 색상을 변경하는 코드를 구현하려면, Flask에서 데이터를 제공하고, HTML에서 JavaScript를 사용하여 동적으로 색상을 설정해야 합니다. 아래는 예제 코드와 상세 설명입니다.

Flask 서버 코드
python
코드 복사
from flask import Flask, render_template

app = Flask(__name__)

@app.route('/')
def index():
    # 예제 데이터
    data = [
        {"id": 1, "name": "Item A", "CPAPER": 25},
        {"id": 2, "name": "Item B", "CPAPER": 20},
        {"id": 3, "name": "Item C", "CPAPER": -5},
        {"id": 4, "name": "Item D", "CPAPER": 0},
    ]
    return render_template('index.html', data=data)

if __name__ == '__main__':
    app.run(debug=True)
HTML 파일 (templates/index.html)
html
코드 복사
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dynamic Table</title>
    <style>
        table {
            width: 50%;
            border-collapse: collapse;
            margin: 20px auto;
        }
        th, td {
            border: 1px solid #ddd;
            text-align: center;
            padding: 8px;
        }
        th {
            background-color: #f4f4f4;
        }
        .yellow {
            background-color: yellow;
        }
        .orange {
            background-color: orange;
        }
    </style>
</head>
<body>
    <table>
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>CPAPER</th>
            </tr>
        </thead>
        <tbody id="table-body">
            <!-- 데이터가 여기 추가됩니다 -->
        </tbody>
    </table>

    <script>
        // 서버에서 전달된 데이터
        const data = {{ data | tojson }};

        // 테이블 본문 요소 가져오기
        const tableBody = document.getElementById("table-body");

        // 데이터 기반으로 테이블 행 추가
        data.forEach(item => {
            // 새로운 행 생성
            const row = document.createElement("tr");

            // ID 셀
            const idCell = document.createElement("td");
            idCell.textContent = item.id;
            row.appendChild(idCell);

            // Name 셀
            const nameCell = document.createElement("td");
            nameCell.textContent = item.name;
            row.appendChild(nameCell);

            // CPAPER 셀
            const cpaperCell = document.createElement("td");
            cpaperCell.textContent = item.CPAPER;

            // CPAPER 값에 따라 셀 색상 설정
            if (item.CPAPER > 20) {
                cpaperCell.classList.add("orange");
            } else if (item.CPAPER <= 0) {
                cpaperCell.classList.add("yellow");
            }

            row.appendChild(cpaperCell);

            // 행을 테이블 본문에 추가
            tableBody.appendChild(row);
        });
    </script>
</body>
</html>
설명
Flask 서버

Flask에서 데이터를 JSON 형식으로 전달합니다.
data는 index.html 템플릿으로 전달되며, JavaScript에서 동적으로 렌더링됩니다.
HTML 구조

기본 테이블 구조를 정의하고, 데이터가 들어갈 <tbody>에 id="table-body"를 설정합니다.
테이블 헤더는 고정이고, 데이터는 동적으로 추가됩니다.
JavaScript 로직

Flask에서 전달된 데이터를 data 변수에 JSON 형식으로 바인딩합니다.
forEach를 사용하여 각 데이터를 순회하면서 테이블 행(<tr>)과 셀(<td>)을 생성합니다.
CPAPER 값에 따라 셀에 클래스를 추가(classList.add)하여 색상을 변경합니다:
CPAPER > 20 → 주황색(orange 클래스)
CPAPER <= 0 → 노란색(yellow 클래스)
스타일링

CSS를 사용하여 orange와 yellow 클래스를 정의합니다.
테이블 기본 스타일도 추가해 가독성을 높였습니다.
실행 방법
Flask 앱을 실행합니다:
bash
코드 복사
python app.py
브라우저에서 http://127.0.0.1:5000/에 접속합니다.