ss WPF GridControl의 DataTemplate 내 TextBox 컨트롤 값을 포함하여 Excel로 내보내는 것은 표준적인 기능이 아니기 때문에, CustomExport 이벤트를 이용한 직접적인 해결 방법은 제공되지 않습니다. 대신, 가능한 해결책 중 하나는 내보내기 전에 TextBox의 값을 별도의 데이터 소스에 저장하고, 이 데이터를 사용하여 Excel 내보내기를 수행하는 것입니다.

아래는 이 방법을 사용한 예시 코드입니다. 이 코드는 TextBox의 값이 별도의 데이터 모델에 저장되어 있고, 이 모델을 사용하여 GridControl이 구성되어 있다고 가정합니다.

XAML 파일
xml
Copy code
<Window x:Class="YourNamespace.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
        Title="MainWindow" Height="350" Width="525">
    <Grid>
        <dxg:GridControl x:Name="gridControl">
            <dxg:GridControl.Columns>
                <dxg:GridColumn FieldName="Field1" />
                <dxg:GridColumn FieldName="Field2" />
                <!-- 기타 필요한 열 추가 -->
            </dxg:GridControl.Columns>
            <dxg:GridControl.View>
                <dxg:TableView AutoWidth="True"/>
            </dxg:GridControl.View>
        </dxg:GridControl>

        <Button Content="Export to Excel" Click="ExportToExcel_Click"/>
    </Grid>
</Window>
C# 코드 뒷면
csharp
Copy code
using DevExpress.Xpf.Grid;
using System.Windows;

namespace YourNamespace {
    public partial class MainWindow : Window {
        public MainWindow() {
            InitializeComponent();
            // 데이터 소스를 설정합니다. 예: gridControl.ItemsSource = YourDataSource;
        }

        private void ExportToExcel_Click(object sender, RoutedEventArgs e) {
            gridControl.View.ExportToXlsx("exportedFile.xlsx");
        }
    }
}
이 코드는 TextBox 컨트롤의 값을 별도의 데이터 모델에 저장하고, 이 모델을 GridControl.ItemsSource에 바인딩하여 Excel 내보내기를 구현합니다. 이렇게 하면 DataTemplate 내의 TextBox 값이 아닌 데이터 모델의 값을 Excel 파일로 내보낼 수 있습니다.

데이터 모델이 어떻게 구성되어 있는지, TextBox의 값이 어떻게 데이터 모델과 동기화되는지에 따라 구현 방법이 달라질 수 있습니다. 추가적인 도움이 필요하다면, DevExpress의 지원 팀에 문의하는 것