electedItemsChanged 이벤트를 사용하여 선택된 행의 배경색을 변경하는 방법을 보여주는 예제 코드입니다:

csharp
Copy code
private void GridControl_SelectedItemsChanged(object sender, DevExpress.Xpf.Grid.SelectedItemsChangedEventArgs e)
{
    // 모든 행의 배경색을 초기화
    foreach (var rowHandle in gridControl.GetRowHandles())
    {
        var row = gridControl.GetRowElementByRowHandle(rowHandle) as GridRowContent;
        if (row != null)
            row.Background = Brushes.White;  // 기본 배경색
    }

    // 선택된 행이 두 개일 때
    if (gridControl.SelectedItems.Count == 2)
    {
        foreach (var item in gridControl.SelectedItems)
        {
            var rowHandle = gridControl.GetRowHandleByListIndex(gridControl.SelectedItems.IndexOf(item));
            var row = gridControl.GetRowElementByRowHandle(rowHandle) as GridRowContent;
            if (row != null)
                row.Background = Brushes.Red;  // 빨간색으로 변경

            // Console 출력 (컬럼 "abc" 값을 가정)
            var rowData = item as YourRowType;  // YourRowType은 실제 데이터 타입에 맞춰 변경 필요
            Console.WriteLine($"ColumnABC value: {rowData.ColumnABC}");
        }
    }
    else
    {
        foreach (var item in gridControl.SelectedItems)
        {
            var rowHandle = gridControl.GetRowHandleByListIndex(gridControl.SelectedItems.IndexOf(item));
            var row = gridControl.GetRowElementByRowHandle(rowHandle) as GridRowContent;
            if (row != null)
                row.Background = Brushes.LightPink;  // 연한 핑크색으로 변경
        }
    }
}
위 코드에서는 GridControl의 SelectedItemsChanged 이벤트를 사용하고, 선택된 아이템에 따라 배경색을 변경합니다. 또한, 선택된 행의 데이터 타입인 YourRowType