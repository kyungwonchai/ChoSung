칸의 공백 또는 숫자, 영어 문자, 하이픈('-')으로 이루어진 연속된 문자열을 매칭하려면, 정규식에서 공백과 숫자, 영어 문자, 하이픈을 포함하는 패턴을 사용해야 합니다. 이 경우, 4개의 공백 또는 하나 이상의 숫자, 영어 문자, 하이픈이 연속된 문자열을 찾는 정규식을 사용할 수 있습니다.

정규식 패턴 설명:
[a-zA-Z0-9-]+: 하나 이상의 영어 대소문자, 숫자, 하이픈을 포함하는 문자열을 매칭합니다.
\s{4}: 정확히 4개의 공백을 매칭합니다.
이 둘을 조합하여 공백이나 특정 문자들로 구성된 문자열을 찾으려면 다음과 같은 패턴을 사용합니다:

csharp
코드 복사
string pattern = @"(\s{4}|[a-zA-Z0-9-]+)";
이 정규식은 4개의 공백 또는 숫자, 영어, 하이픈이 포함된 연속된 문자열을 매칭합니다.

예제 코드:
아래는 위의 정규식을 사용하여 4개의 공백 또는 숫자, 영어 문자, 하이픈이 연속된 문자열을 찾는 C# 코드 예제입니다:

csharp
코드 복사
using System;
using System.Text.RegularExpressions;

class Program
{
    static void Main()
    {
        string input = "    abc-123 XYZ-789 test 1234----"; // 테스트 문자열
        string pattern = @"(\s{4}|[a-zA-Z0-9-]+)"; // 정규식 패턴

        MatchCollection matches = Regex.Matches(input, pattern);

        foreach (Match match in matches)
        {
            Console.WriteLine($"매칭된 문자열: '{match.Value}'");
        }
    }
}
코드 설명:
string input: 테스트 문자열을 정의합니다.
string pattern: 4개의 공백 또는 숫자, 영어 문자, 하이픈으로 이루어진 연속된 문자열을 찾는 정규식 패턴을 정의합니다.
Regex.Matches(input, pattern): 입력 문자열에서 패턴에 맞는 모든 매칭 결과를 찾습니다.
foreach 루프를 통해 모든 매칭된 문자열을 출력합니다.
이 코드를 실행하면 input 문자열에서 4개의 공백 또는 숫자, 영어 문자, 하이픈으로 구성된 문자열들이 출력됩니다