선택 기능이 추가된 HTML 코드
아래는 지난번에 드린 <iframe> 코드에 콤보박스 자동 선택 JavaScript를 추가한 완전한 버전입니다. 이 파일을 사용하시면 됩니다.

HTML

<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>웹페이지 분할 및 자동 선택 뷰어</title>
    <style>
        body, html {
            margin: 0;
            padding: 0;
            height: 100%;
            overflow: hidden;
        }
        #container {
            display: flex;
            width: 100vw;
            height: 100vh;
        }
        .frame {
            width: 50%;
            height: 100%;
            border: none;
        }
    </style>
</head>
<body>
    <div id="container">
        <iframe id="frameLeft" class="frame" src="http://내부망_주소/페이지1.jsp" title="왼쪽 페이지"></iframe>
        <iframe id="frameRight" class="frame" src="http://내부망_주소/페이지2.jsp" title="오른쪽 페이지"></iframe>
    </div>

    <script>
        // 페이지의 모든 요소가 로드된 후 스크립트를 실행합니다.
        window.onload = function() {
            const frameLeft = document.getElementById('frameLeft');
            const frameRight = document.getElementById('frameRight');

            // 왼쪽 프레임이 로드 완료되면 실행될 함수
            frameLeft.onload = function() {
                try {
                    // 왼쪽 프레임 내부의 문서에 접근합니다.
                    const leftDoc = frameLeft.contentDocument || frameLeft.contentWindow.document;
                    // 이름(name)이 'cmbtbl'인 콤보박스를 찾습니다.
                    const comboBox = leftDoc.getElementsByName('cmbtbl')[0];
                    if (comboBox) {
                        comboBox.value = 'F'; // 값을 'F'로 설정
                        console.log('왼쪽 프레임의 cmbtbl을 F로 설정했습니다.');
                    }
                } catch (e) {
                    console.error('왼쪽 프레임 접근 오류:', e);
                }
            };

            // 오른쪽 프레임이 로드 완료되면 실행될 함수
            frameRight.onload = function() {
                try {
                    // 오른쪽 프레임 내부의 문서에 접근합니다.
                    const rightDoc = frameRight.contentDocument || frameRight.contentWindow.document;
                    // 이름(name)이 'cmbtbl'인 콤보박스를 찾습니다.
                    const comboBox = rightDoc.getElementsByName('cmbtbl')[0];
                    if (comboBox) {
                        comboBox.value = 'R'; // 값을 'R'로 설정
                        console.log('오른쪽 프레임의 cmbtbl을 R로 설정했습니다.');
                    }
                } catch (e) {
                    console.error('오른쪽 프레임 접근 오류:', e);
                }
            };
        };
    </script>
</body>
</html>
사용 방법
위 코드를 viewer.html 과 같은 파일로 저장합니다.
src="http://내부망_주소/페이지1.jsp" 부분을 실제 JSP 페이지 주소로 반드시 수정해주세요. (2곳)
이 viewer.html 파일을 브라우저에서 열면, 각 페이지가 로드된 후 cmbtbl 콤보박스의 값이 자동으로 'F'와 'R'로 선택됩니다.
⚠️ 중요: 확인해야 할 사항
이 기능이 올바르게 동작하려면 몇 가지 조건이 맞아야 합니다.

1. 동일 출처 정책 (Same-Origin Policy)
보안상의 이유로, 부모 HTML 파일과 <iframe> 내부의 JSP 페이지는 동일한 "출처" (프로토콜, 도메인, 포트가 모두 같음)를 가져야 합니다.

✅ 가능한 경우: viewer.html과 JSP 페이지가 모두 http://intranet.mycompany.com 과 같은 동일한 서버에 있는 경우
❌ 불가능한 경우: viewer.html을 내 컴퓨터(file:///C:/...)에서 열고 JSP 페이지는 서버(http://...)를 호출하는 경우. 이 경우 보안 오류가 발생하며 스크립트가 작동하지 않습니다.
👉 해결책: 위 viewer.html 파일을 JSP 페이지가 있는 동일한 웹 서버에 업로드한 후, 서버 주소로 접속해서 사용하세요.

2. 콤보박스 정보 확인
이름(name) 확인: 위 코드는 콤보박스의 name 속성이 cmbtbl이라고 가정합니다.
<select name="cmbtbl"> ... </select>
만약 name이 다르거나 id만 있다면 (<select id="cmbtbl">), JavaScript 코드를 getElementById('cmbtbl')로 수정해야 합니다.
옵션 값(value) 확인: 콤보박스의 옵션 값이 'F'와 'R'이어야 합니다.
<option value="F">Front</option>