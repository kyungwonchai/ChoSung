해당 네임스페이스를 명시하여 코드를 작성하겠습니다.

1. MainWindow.xaml (View)
xml
코드 복사
<Window x:Class="ComPortViewer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="COM Port Viewer" Height="400" Width="500">
    <Grid>
        <Button Content="Load COM Port Settings" 
                Command="{Binding LoadComPortSettingsCommand}" 
                Width="150" Height="30" 
                HorizontalAlignment="Center" 
                VerticalAlignment="Top" 
                Margin="0,10,0,0"/>
        
        <ListBox ItemsSource="{Binding ComPortDetails}" 
                 Width="400" Height="300" 
                 HorizontalAlignment="Center" 
                 VerticalAlignment="Center" 
                 Margin="0,50,0,0">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding}"/>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
    </Grid>
</Window>
2. MainViewModel.cs (ViewModel)
csharp
코드 복사
namespace ComPortViewer
{
    public class MainViewModel : System.ComponentModel.INotifyPropertyChanged
    {
        // COM 포트 세부 정보 저장
        public System.Collections.ObjectModel.ObservableCollection<string> ComPortDetails { get; private set; }

        // COM 포트를 로드하는 명령
        public System.Windows.Input.ICommand LoadComPortSettingsCommand { get; private set; }

        public MainViewModel()
        {
            // 컬렉션 초기화
            ComPortDetails = new System.Collections.ObjectModel.ObservableCollection<string>();

            // 명령 초기화
            LoadComPortSettingsCommand = new ComPortViewer.RelayCommand(LoadComPortSettings);
        }

        // COM 포트 설정을 로드하는 메서드
        private void LoadComPortSettings()
        {
            // 기존 포트 설정 정보 지우기
            ComPortDetails.Clear();

            // WMI 쿼리를 통해 COM 포트 정보를 가져옴
            using (System.Management.ManagementObjectSearcher searcher = new System.Management.ManagementObjectSearcher("SELECT * FROM Win32_SerialPort"))
            {
                foreach (System.Management.ManagementObject queryObj in searcher.Get())
                {
                    ComPortDetails.Add($"Port: {queryObj["DeviceID"]}");
                    ComPortDetails.Add($"Name: {queryObj["Name"]}");
                    ComPortDetails.Add($"Baud Rate: {queryObj["MaxBaudRate"]}");
                    ComPortDetails.Add($"ProviderType: {queryObj["ProviderType"]}");
                    ComPortDetails.Add($"Status: {queryObj["Status"]}");
                    ComPortDetails.Add($"Parity: {queryObj["Parity"]}");
                    ComPortDetails.Add($"Stop Bits: {queryObj["StopBits"]}");
                    ComPortDetails.Add("-----------");
                }
            }
        }

        // INotifyPropertyChanged 구현
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        protected void OnPropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string propertyName = null)
        {
            PropertyChanged?.Invoke(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    }
}
3. RelayCommand.cs
csharp
코드 복사
namespace ComPortViewer
{
    public class RelayCommand : System.Windows.Input.ICommand
    {
        private readonly System.Action _execute;
        private readonly System.Func<bool> _canExecute;

        public RelayCommand(System.Action execute, System.Func<bool> canExecute = null)
        {
            _execute = execute;
            _canExecute = canExecute;
        }

        public bool CanExecute(object parameter)
        {
            return _canExecute == null || _canExecute();
        }

        public void Execute(object parameter)
        {
            _execute();
        }

        public event System.EventHandler CanExecuteChanged;

        public void RaiseCanExecuteChanged()
        {
            CanExecuteChanged?.Invoke(this, System.EventArgs.Empty);
        }
    }
}
4. MainWindow.xaml.cs (View Code-behind)
csharp
코드 복사
namespace ComPortViewer
{
    public partial class MainWindow : System.Windows.Window
    {
        public MainWindow()
        {
            InitializeComponent();
            DataContext = new ComPortViewer.MainViewModel();
        }
    }
}
요약