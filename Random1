래는 MainViewModel만 사용하여 ForceEjectNumbers를 관리하고, 값을 변경하는 코드입니다. MainViewModel 내부에서 직접 값을 변경하거나, 다른 클래스에 ForceEjectNumbers를 주입하여 값을 변경하는 구조를 보여줍니다.

코드 예제
MainViewModel 클래스
csharp
코드 복사
using System;
using System.Collections.ObjectModel;

public class MainViewModel
{
    // 숫자 데이터를 저장하는 ObservableCollection
    public ObservableCollection<int> ForceEjectNumbers { get; set; }

    public MainViewModel()
    {
        // 초기 값 설정
        ForceEjectNumbers = new ObservableCollection<int> { 10, 20, 30 };
    }

    // MainViewModel에서 ForceEjectNumbers 값을 변경하는 메서드
    public void UpdateValue(int index, int newValue)
    {
        if (index >= 0 && index < ForceEjectNumbers.Count)
        {
            ForceEjectNumbers[index] = newValue;
            Console.WriteLine($"[MainViewModel] Index {index} updated to {newValue}");
        }
    }
}
ForceEjectUpdater 클래스 (MainViewModel에서 주입받음)
csharp
코드 복사
public class ForceEjectUpdater
{
    private ObservableCollection<int> _forceEjectNumbers;

    // 생성자에서 ForceEjectNumbers 주입
    public ForceEjectUpdater(ObservableCollection<int> forceEjectNumbers)
    {
        _forceEjectNumbers = forceEjectNumbers;
    }

    // ForceEjectNumbers 값을 변경하는 메서드
    public void UpdateValue(int index, int newValue)
    {
        if (index >= 0 && index < _forceEjectNumbers.Count)
        {
            _forceEjectNumbers[index] = newValue;
            Console.WriteLine($"[ForceEjectUpdater] Index {index} updated to {newValue}");
        }
    }
}
MainViewModel 테스트 코드
csharp
코드 복사
public class Program
{
    public static void Main()
    {
        // MainViewModel 생성
        var mainViewModel = new MainViewModel();

        // ForceEjectUpdater 생성 및 ForceEjectNumbers 주입
        var forceEjectUpdater = new ForceEjectUpdater(mainViewModel.ForceEjectNumbers);

        // MainViewModel에서 값 변경
        mainViewModel.UpdateValue(0, 100); // Index 0의 값을 100으로 변경

        // ForceEjectUpdater에서 값 변경
        forceEjectUpdater.UpdateValue(1, 200); // Index 1의 값을 200으로 변경

        // ForceEjectNumbers 최종 상태 출력
        Console.WriteLine("Final ForceEjectNumbers:");
        foreach (var number in mainViewModel.ForceEjectNumbers)
        {
            Console.WriteLine(number); // 출력: 100, 200, 30
        }
    }
}
출력 결과
plaintext
코드 복사
[MainViewModel] Index 0 updated to 100
[ForceEjectUpdater] Index 1 updated to 200
Final ForceEjectNumbers:
100
200
30
동작 설명
MainViewModel에서 값 변경:

mainViewModel.UpdateValue 메서드를 호출하여 값 변경.
ForceEjectNumbers의 첫 번째 값(Index 0)을 100으로 업데이트.
ForceEjectUpdater에서 값 변경:

MainViewModel에서 주입받은 ForceEjectNumbers 참조를 사용.
forceEjectUpdater.UpdateValue를 통해 두 번째 값(Index 1)을 200으로 업데이트.
참조 공유:

ForceEjectNumbers는 ObservableCollection이므로 참조가 공유됩니다.
한 클래스에서 값을 변경하면, 다른 클래스에서도 변경된 결과를 볼 수 있습니다.
최종 출력:

MainViewModel과 ForceEjectUpdater에서 변경한 값이 모두 반영된 결과를 확인.
요약