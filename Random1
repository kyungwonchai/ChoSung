pip를 사용하여 라이브러리를 설치할 수 있습니다:

pip install python-docx pyodbc

워드 문서 읽기:

    python-docx 라이브러리를 사용하여 워드 문서를 읽고 내용을 추출합니다.
    워드 문서의 특정 부분을 읽거나 전체 내용을 추출할 수 있습니다.

아래는 워드 문서에서 전체 내용을 추출하는 예시 코드입니다:

python

from docx import Document

# 워드 문서 파일 경로
docx_file_path = 'path/to/word_document.docx'

# 워드 문서 열기
document = Document(docx_file_path)

# 문서 내용 추출
content = ""
for paragraph in document.paragraphs:
    content += paragraph.text + "\n"

# 추출된 내용 출력 또는 처리
print(content)

MS SQL 데이터베이스에 데이터 저장:

    pyodbc 라이브러리를 사용하여 MS SQL 데이터베이스에 연결하고 데이터를 저장합니다.
    데이터베이스 연결 정보와 테이블 구조에 맞게 데이터를 삽입합니다.

아래는 MS SQL 데이터베이스에 데이터를 저장하는 예시 코드입니다:

python

    import pyodbc

    # MS SQL 데이터베이스 연결 설정
    connection_string = 'DRIVER={SQL Server};SERVER=서버주소;DATABASE=데이터베이스명;UID=사용자명;PWD=비밀번호'
    connection = pyodbc.connect(connection_string)

    # 데이터베이스 커서 생성
    cursor = connection.cursor()

    # 데이터 삽입 SQL 쿼리 작성
    insert_query = "INSERT INTO 테이블명 (내용_열) VALUES (?)"

    # 워드 문서 내용 데이터 삽입
    cursor.execute(insert_query, content)

    # 변경 사항 커밋
    connection.commit()

    # 연결 종료
    cursor.close()
    connection.close()

위의 코드는 워드 문서의 내용을 읽어와서 content 변수에 저장한 다음, pyodbc 라이브러리를 사용하여 MS SQL 데이터베이스에 해당 내용을 저장하는 예시입니다. MS SQL 데이터베이스 연결 설정과 테이블 구조는 실제 데