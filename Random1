 시작하는 모든 파일을 삭제하는 함수를 추가해보겠습니다. 아래의 코드를 MainForm 클래스에 추가해주세요:

csharp

private void DeleteFilesStartingWith(string folderPath, string fileNamePrefix)
{
    try
    {
        string[] files = Directory.GetFiles(folderPath, $"{fileNamePrefix}*");

        foreach (string file in files)
        {
            File.Delete(file);
        }
    }
    catch (Exception ex)
    {
        // 파일 삭제 실패 시 예외 처리
        MessageBox.Show($"파일 삭제 중 오류가 발생했습니다: {ex.Message}");
    }
}

위의 함수는 Directory.GetFiles() 메서드를 사용하여 지정된 폴더에서 "PartAppr"로 시작하는 파일들을 가져온 후, File.Delete() 메서드를 사용하여 각 파일을 삭제합니다. 파일 삭제 중에 예외가 발생하는 경우에는 해당 예외를 캐치하고 에러 메시지를 보여주는 메시지 박스를 표시합니다.

UploadButton_Click() 메서드에서 파일 업로드 완료 후에 DeleteFilesStartingWith() 함수를 호출하여 "PartAppr"로 시작하는 파일들을 삭제하도록 수정해주세요:

csharp

private void UploadButton_Click(object sender, EventArgs e)
{
    string downloadsFolder = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\Downloads";
    string fileNamePrefix = "PartAppr";

    string[] files = Directory.GetFiles(downloadsFolder, $"{fileNamePrefix}*");

    foreach (string file in files)
    {
        // 엑셀 파일 처리 및 데이터베이스 업로드
        ProcessExcelFile(file);
    }

    // 파일 처리가 완료된 후에 파일 삭제
    DeleteFilesStartingWith(downloadsFolder, fileNamePrefix);

    MessageBox.Show("업로드가 완료되었습니다.");
}

이제 업로드가 완료된 후에 "PartAppr"로 시작하는 모든 파일이 삭제될 것입니다. 파일 삭제 시 예외가 발생하면 해당 오류 메시지가 표