To achieve this, you can use a Common Table Expression (CTE) along with the ROW_NUMBER() window function to rank the rows based on the time1 column and then select only the latest row for each group of model1, b, t, arr, and TTT. Here’s the query:

sql
코드 복사
WITH RankedRows AS (
    SELECT
        model1,
        b,
        t,
        arr,
        TTT,
        time1,
        ROW_NUMBER() OVER (
            PARTITION BY model1, b, t, arr, TTT
            ORDER BY time1 DESC
        ) AS rn
    FROM
        Table1633Model1EF
)
SELECT
    model1,
    b,
    t,
    arr,
    TTT,
    time1
FROM
    RankedRows
WHERE
    rn = 1;
Explanation:
Common Table Expression (CTE):

WITH RankedRows AS starts a CTE named RankedRows.
ROW_NUMBER() Window Function:

ROW_NUMBER() OVER (PARTITION BY model1, b, t, arr, TTT ORDER BY time1 DESC) assigns a unique sequential integer to rows within the partition of model1, b, t, arr, TTT, ordered by time1 in descending order. This means the most recent time1 value will get rn = 1.
Selecting the Latest Row:

The outer query selects all rows from the CTE where rn = 1, ensuring only the row with the latest time1 for each group of model1, b, t, arr, and TTT is returned.
This query ensures you get only the latest entry based on time1 for each unique combination of model1, b, t, arr, an