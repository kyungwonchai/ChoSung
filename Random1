사항 변경
짝수 행: 짙은 회색 (#2E2E2E) 배경, 글자 색은 흰색 (white).

홀수 행: 검정 (#000000) 배경, 글자 색은 흰색 (white).

MC1 ~ MC8 값 중 최대값은 노란색 (yellow)로 강조 표시 (기존 유지).

✅ 수정된 코드 (create_dataframe() 안에서 스타일 적용)
python
코드 복사
import streamlit as st
import pymssql
import pandas as pd

# MSSQL 서버 연결 설정 함수
def get_connection():
    return pymssql.connect(
        server="YOUR_SERVER",
        user="YOUR_USER",
        password="YOUR_PASSWORD",
        database="YOUR_DATABASE"
    )

# Get_min_bestdifferent 프로시저 호출 함수 (cursor.fetchall() 방식)
def fetch_main_data(proc_name):
    conn = get_connection()
    cursor = conn.cursor()
    cursor.execute(f"EXEC {proc_name}")
    rows = cursor.fetchall()
    conn.close()
    return rows

# DataFrame 생성 및 스타일 적용 함수 (스타일링 포함)
def create_dataframe(rows):
    original_columns = [
        "group1", "line1", "model1", "type1", "ecn1", "edition1",
        "ACT2_1", "ACT2_2", "ACT2_3", "ACT2_4",
        "ACT2_5", "ACT2_6", "ACT2_7", "ACT2_8"
    ]

    new_columns = [
        "group1", "line1", "model1", "type1", "ecn1", "edition1",
        "MC1", "MC2", "MC3", "MC4", "MC5", "MC6", "MC7", "MC8"
    ]

    # DataFrame 생성
    df = pd.DataFrame(rows, columns=original_columns)
    df.columns = new_columns

    # MC 컬럼들 리스트
    mc_columns = [f"MC{i}" for i in range(1, 9)]
    df[mc_columns] = df[mc_columns].astype(float).round(2)

    # 행별 배경색을 번갈아 적용하기 (짙은 회색, 검정)
    def apply_row_styles(row):
        if row.name % 2 == 0:
            return ['background-color: #2E2E2E; color: white'] * len(row)  # 짙은 회색 배경, 흰색 글자
        else:
            return ['background-color: #000000; color: white'] * len(row)  # 검정 배경, 흰색 글자

    # 최대값 강조 함수 (노란색)
    def highlight_max(row):
        max_value = row[mc_columns].max()
        return ['background-color: yellow; color: black' if value == max_value else '' for value in row[mc_columns]]

    # 스타일 적용 (배경색 + 최대값 강조)
    styled_df = df.style.apply(apply_row_styles, axis=1)
    styled_df = styled_df.apply(highlight_max, subset=mc_columns, axis=1)

    # 스타일링된 DataFrame 리턴
    return styled_df

# Streamlit 앱 구성
def main():
    st.set_page_config(page_title="MC1 ~ MC8 Data Table", layout="wide")
    st.title("MC1 ~ MC8 Data Table - 검정/회색 배경, 흰색 글자")

    rows = fetch_main_data("Get_min_bestdifferent_t1")
    
    if not rows:
        st.error("데이터를 가져오지 못했습니다. 프로시저 또는 데이터베이스 연결을 확인하세요.")
    else:
        styled_df = create_dataframe(rows)  # 스타일링된 DataFrame 리턴
        st.write(styled_df)  # 그대로 표시

if __name__ == "__main__":
    main()
✅ 코드 설명
배경색 설정 (apply_row_styles())

python
코드 복사
def apply_row_styles(row):
    if row.name % 2 == 0:
        return ['background-color: #2E2E2E; color: white'] * len(row)  # 짙은 회색 배경, 흰색 글자
    else:
        return ['background-color: #000000; color: white'] * len(row)  # 검정 배경, 흰색 글자
짝수 행: 짙은 회색 (#2E2E2E), 글자 색상: 흰색 (white).

홀수 행: 검정 (#000000), 글자 색상: 흰색 (white).

최대값 강조 스타일 설정 (highlight_max())

python
코드 복사
def highlight_max(row):
    max_value = row[mc_columns].max()
    return ['background-color: yellow; color: black' if value == max_value else '' for value in row[mc_columns]]
최대값은 노란색 (yellow) 배경, 검은색 (black) 글자로 강조.

📌 Streamlit 실행 방법
bash
코드 복사
streamlit run your_script_name.py
🔥 결과
짝수 행: 짙은 회색 (#2E2E2E) 배경, 흰색 글자.

홀수 행: 검정 (#000000) 배경, 흰색 글자.

최대값 (MC1 ~ MC8 값 중 최대값)은 노란색 배경, 검은색 글자로 강조.