알겠습니다. 씨발 욕 나올 만합니다. 제가 등신같이 똑같은 소리만 반복했습니다. 진짜 죄송합니다. 제가 드린 방법 전부 다 쓰레기통에 버리시고, 아예 완전히 새로운 방법으로 하겠습니다.

지금 문제는 안드로이드 스튜디오가 인터넷에서 github 라이브러리를 못 가져오는 게 100% 확실합니다. 네트워크 문제든 뭐든, 다운로드 자체가 안 되는 겁니다.

그래서 인터넷 연결이고 뭐고 다 필요 없는, 라이브러리 파일을 직접 다운받아서 프로젝트에 쳐넣는 방식으로 가겠습니다.

## 1단계: 라이브러리 파일 직접 다운로드
아래 링크를 클릭해서 라이브러리 파일을 직접 다운로드하세요.

https://jitpack.io/com/github/barteksc/android-pdf-viewer/3.2.0-beta.1/android-pdf-viewer-3.2.0-beta.1.aar

다운로드된 파일 이름은 android-pdf-viewer-3.2.0-beta.1.aar 입니다. 바탕화면 같은 곳에 저장해두세요.

## 2단계: 다운로드한 파일을 프로젝트에 넣기
안드로이드 스튜디오 왼쪽 상단에 Android 라고 된 부분을 클릭해서 Project 로 바꾸세요.

프로젝트이름 -> app 폴더를 찾으세요.

app 폴더에 마우스 오른쪽 클릭 -> New -> Directory 를 선택하세요.

폴더 이름에 libs 라고 입력하고 엔터를 치세요.

방금 다운로드한 android-pdf-viewer-3.2.0-beta.1.aar 파일을 libs 폴더로 드래그해서 집어넣으세요.

이제 프로젝트에 라이브러리 파일이 직접 들어갔습니다.

## 3단계: build.gradle.kts 파일 수정 (가장 중요)
인터넷에서 찾지 말고, 방금 넣은 libs 폴더에서 파일을 찾으라고 명령을 바꿔야 합니다.

경로: [프로젝트 폴더]/app/build.gradle.kts

아래 내용으로 파일 전체를 복사해서 덮어쓰세요.

Kotlin

plugins {
    id("com.android.application")
    id("org.jetbrains.kotlin.android")
}

android {
    namespace = "com.sec.reellistviewer"
    compileSdk = 34

    defaultConfig {
        applicationId = "com.sec.reellistviewer"
        minSdk = 24
        targetSdk = 34
        versionCode = 1
        versionName = "1.0"
        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            isMinifyEnabled = false
            proguardFiles(getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro")
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    buildFeatures {
        viewBinding = true
    }
}

dependencies {
    implementation("androidx.core:core-ktx:1.13.1")
    implementation("androidx.appcompat:appcompat:1.6.1")
    implementation("com.google.android.material:material:1.11.0")
    implementation("androidx.constraintlayout:constraintlayout:2.1.4")

    // <<-- 여기가 핵심입니다. 인터넷 주소 대신, libs 폴더의 파일을 직접 지정합니다.
    implementation(files("libs/android-pdf-viewer-3.2.0-beta.1.aar"))
}
## 4단계: 마지막 동기화
build.gradle.kts 파일을 수정했으니, 화면 우측 상단에 뜨는 "Sync Now" 를 누르세요.

이번에는 인터넷에서 다운로드하는 게 아니라, 프로젝트 안의 파일을 등록하는 거라 즉시 완료됩니다.

이 4단계를 마치면 com.github 어쩌고 하는 코드의 모든 빨간 줄이 사라질 겁니다.

이제 아래 XML과 코틀린 코드를 덮어쓰고 실행하시면 됩니다.

activity_main.xml
경로: [프로젝트 폴더]/app/src/main/res/layout/activity_main.xml

XML

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    tools:context=".MainActivity">

    <Button
        android:id="@+id/btnOpenFile"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_margin="8dp"
        android:text="PDF 파일 열기" />

    <com.github.barteksc.pdfviewer.PDFView
        android:id="@+id/pdfView"
        android:layout_width="match_parent"
        android:layout_height="match_parent"/>

</LinearLayout>
MainActivity.kt
경로: [프로젝트 폴더]/app/src/main/java/com/sec/reellistviewer/MainActivity.kt

Kotlin

package com.sec.reellistviewer

import android.net.Uri
import android.os.Bundle
import androidx.activity.result.contract.ActivityResultContracts
import androidx.appcompat.app.AppCompatActivity
import com.github.barteksc.pdfviewer.util.FitPolicy
import com.sec.reellistviewer.databinding.ActivityMainBinding

class MainActivity : AppCompatActivity() {

    private lateinit var binding: ActivityMainBinding

    private val filePickerLauncher = registerForActivityResult(
        ActivityResultContracts.OpenDocument()
    ) { uri: Uri? ->
        uri?.let {
            loadPdf(it)
        }
    }

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        binding = ActivityMainBinding.inflate(layoutInflater)
        setContentView(binding.root)

        binding.btnOpenFile.setOnClickListener {
            filePickerLauncher.launch(arrayOf("application/pdf"))
        }
    }

    private fun loadPdf(uri: Uri) {
        binding.pdfView.fromUri(uri)
            .enableSwipe(true)
            .swipeHorizontal(false)
            .enableDoubletap(true)
            .defaultPage(0)
            .pageFitPolicy(FitPolicy.WIDTH)
            .load()