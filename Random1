Code에서 GCC 또는 G++ 버전을 10.3.0으로 설정하려면 아래 단계를 따라 진행하세요.

1. 현재 GCC/G++ 버전 확인
우분투에서 현재 설치된 GCC/G++ 버전을 확인하려면 다음 명령을 실행하세요:

bash
코드 복사
gcc --version
g++ --version
현재 버전이 10.3.0이 아닌 경우 업데이트가 필요합니다.

2. GCC/G++ 10.3.0 설치
2.1 기존 GCC/G++ 제거 (선택 사항)
기존 버전이 필요하지 않다면 제거합니다:

bash
코드 복사
sudo apt remove gcc g++
2.2 GCC/G++ 10.3.0 설치
GCC 10.3.0 다운로드

GCC 공식 페이지에서 10.3.0 소스 코드를 다운로드합니다: GCC Releases
명령어:
bash
코드 복사
wget https://ftp.gnu.org/gnu/gcc/gcc-10.3.0/gcc-10.3.0.tar.gz
소스 파일 압축 해제

bash
코드 복사
tar -xvzf gcc-10.3.0.tar.gz
cd gcc-10.3.0
필수 라이브러리 설치 GCC를 빌드하려면 필요한 의존성을 설치합니다:

bash
코드 복사
sudo apt update
sudo apt install build-essential libgmp-dev libmpfr-dev libmpc-dev flex texinfo
빌드 디렉터리 생성

bash
코드 복사
mkdir build
cd build
GCC 빌드 및 설치 다음 명령을 실행하여 빌드합니다. 빌드에는 시간이 걸릴 수 있습니다.

bash
코드 복사
../configure --enable-languages=c,c++ --disable-multilib
make -j$(nproc)
sudo make install
설치 확인

bash
코드 복사
gcc --version
g++ --version
출력이 10.3.0으로 표시되어야 합니다.

3. VSCode에서 GCC/G++ 버전 지정
3.1 tasks.json 설정
VSCode의 tasks.json에서 GCC/G++ 경로를 명시적으로 지정합니다.

json
코드 복사
{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Build C++",
      "type": "shell",
      "command": "/usr/local/bin/g++",
      "args": [
        "-g",
        "${file}",
        "-o",
        "${fileDirname}/${fileBasenameNoExtension}"
      ],
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "problemMatcher": ["$gcc"],
      "detail": "GCC 10.3.0 빌드 설정"
    }
  ]
}
위에서 command 부분에 GCC 10.3.0이 설치된 경로를 지정합니다. 기본 경로는 /usr/local/bin/g++입니다.

3.2 환경 변수 경로 설정
터미널에서 기본 GCC/G++ 버전을 10.3.0으로 고정하려면, 환경 변수를 수정합니다:

~/.bashrc 파일을 열어 아래 내용을 추가합니다:
bash
코드 복사
export PATH=/usr/local/bin:$PATH
변경 사항 적용:
bash
코드 복사
source ~/.bashrc
4. Hello World 빌드 및 실행
위 단계를 완료한 후, 이전에 작성한 Hello World 프로그램을 다시 빌드합니다:

bash
코드 복사
g++ hello.cpp -o hello