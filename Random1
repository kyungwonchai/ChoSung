 폴더를 분석하고 나면 "완료"라는 메시지를 ListBox에 추가하는 코드를 추가할 수 있습니다. 백그라운드 스레드에서 작업을 수행하고 UI에 결과를 표시하는 동안 이를 안전하게 처리하기 위해 이미 사용한 Invoke 메커니즘을 활용합니다.

다음은 이 기능을 추가한 전체 코드 예제입니다:

Form1.cs
csharp
Copy code
using System;
using System.IO;
using System.Threading;
using System.Windows.Forms;

public partial class Form1 : Form
{
    public Form1()
    {
        InitializeComponent();
        StartFolderAnalysis(@"C:\Path\To\Start");  // 분석을 시작할 루트 디렉토리 경로
    }

    private void StartFolderAnalysis(string path)
    {
        Thread thread = new Thread(() => AnalyzeFolders(path));
        thread.IsBackground = true;  // 백그라운드 스레드로 설정
        thread.Start();
    }

    private void AnalyzeFolders(string path)
    {
        DirectoryInfo rootDir = new DirectoryInfo(path);
        foreach (DirectoryInfo dir in rootDir.GetDirectories())
        {
            long size = CalculateFolderSize(dir);
            if (size >= 1073741824) // 1GB 이상
            {
                string info = $"{dir.FullName} ({size} bytes)";
                UpdateListBox(info);  // UI 스레드에서 ListBox 업데이트
            }
            AnalyzeFolders(dir.FullName);  // 재귀적으로 하위 폴더 분석
        }
        UpdateListBox("분석 완료");  // 모든 작업 완료 메시지
    }

    private long CalculateFolderSize(DirectoryInfo directory)
    {
        long size = 0;
        FileInfo[] files = directory.GetFiles();
        foreach (FileInfo file in files)
        {
            size += file.Length;
        }
        return size;
    }

    private void UpdateListBox(string info)
    {
        if (listBox.InvokeRequired)  // 다른 스레드에서 호출되는 경우
        {
            listBox.Invoke(new Action<string>(UpdateListBox), info);
        }
        else
        {
            listBox.Items.Add(info);
        }
    }
}
중요 변경 사항:
분석 완료 메시지 추가: AnalyzeFolders 메소드가 모든 디렉토리를 순회한 후, "분석 완료"라는 메시지를 ListBox에 추가합니다. 이는 재귀적으로 호출된 각 인스턴스의 마지막에서 실행되므로, 모든 분석 작업이 완료되었음을 알리는 신호로 사용됩니다.
이렇게 구현하면, 프로그램이 디스크 공간 분석을 마치고 나면 사용자가 시각적으로 "분석 완료" 메시지를 통해 작업이 끝났음을 