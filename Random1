eNavigator를 사용하여 달력에서 날짜를 선택하고 Label에 해당 날짜를 표시하며, 사용자가 다른 달의 끝날을 클릭할 때 월 슬라이드가 자동으로 따라가도록 설정하는 예제를 다시 작성하겠습니다.

1. XAML 설정
XAML 파일에서 DateNavigator와 Label을 설정합니다.

xml
코드 복사
<Window x:Class="DateNavigatorApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
        mc:Ignorable="d"
        Title="MainWindow" Height="200" Width="400">
    <Grid>
        <dx:DateNavigator Name="dateNavigator" Margin="10" HorizontalAlignment="Left" VerticalAlignment="Top" DateTimeChanged="DateNavigator_DateTimeChanged"/>
        <Label Name="dateLabel" Content="Selected Date will appear here" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="16"/>
    </Grid>
</Window>
2. Code-Behind 설정
Code-Behind 파일에서 DateNavigator의 DateTimeChanged 이벤트를 처리합니다. 사용자가 다른 달의 끝날을 클릭하면 월 슬라이드가 자동으로 따라가도록 합니다.

csharp
코드 복사
using System;
using System.Windows;
using DevExpress.Xpf.Editors;

namespace DateNavigatorApp
{
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
        }

        private void DateNavigator_DateTimeChanged(object sender, EventArgs e)
        {
            DateNavigator dateNavigator = sender as DateNavigator;
            if (dateNavigator != null)
            {
                DateTime selectedDate = dateNavigator.DateTime;
                dateLabel.Content = selectedDate.ToString("yyyy-MM-dd");
                EnsureMonthIsVisible(dateNavigator, selectedDate);
            }
        }

        private void EnsureMonthIsVisible(DateNavigator dateNavigator, DateTime selectedDate)
        {
            // 선택된 날짜가 현재 보이는 날짜 범위에 포함되어 있는지 확인
            DateTime visibleStart = dateNavigator.VisibleDateStart;
            DateTime visibleEnd = dateNavigator.VisibleDateEnd;

            if (selectedDate < visibleStart || selectedDate > visibleEnd)
            {
                // 선택된 날짜가 현재 보이는 범위 밖에 있는 경우, 날짜를 다시 설정하여 월 슬라이드를 조정
                dateNavigator.VisibleDateStart = new DateTime(selectedDate.Year, selectedDate.Month, 1);
            }
        }
    }
}
요약
XAML에서 DateNavigator와 Label을 설정합니다.
Code-Behind에서 DateNavigator의 DateTimeChanged 이벤트를 처리하여 Label의 내용을 업데이트하고, 선택된 날짜가 보이는 범위 밖에 있는 경우 월 슬라이드를 조정합니다.
Visual Studio에서 DevExpress WPF Controls 패키지를 설치합니다.
이 코드는 사용자가 DateNavigator에서 날짜를 선택할 때마다 해당 날짜가 Label에 표시되도록 하며, 다른 달의 끝날을 클릭할 경우 월 슬라이드가 자동으로 따라가도록 합니다. DevExpress 22.2와 WPF를 사용하는 기본적인 예제입니다. 필요에 따라 맞춤형 기능을 추가할 수 있습니다.






