sing DevExpress.XtraGrid.Views.Card; // CardView 사용 시
// using DevExpress.XtraGrid.Views.Layout; // LayoutView 사용 시
using System.Drawing;
using System;

// --- CardView (또는 LayoutView) 인스턴스의 이벤트 핸들러를 등록합니다 ---
// cardView1.CustomDrawCardBackground += CardView1_CustomDrawCardBackground;

private void CardView1_CustomDrawCardBackground(object sender, CardViewCustomDrawCardBackgroundEventArgs e)
{
    // CardView (또는 LayoutView) 인스턴스 가져오기
    CardView view = sender as CardView; // LayoutView면 LayoutView로 캐스팅
    if (view == null) return;

    // 데이터 행(카드)에 대해서만 처리
    if (e.RowHandle >= 0)
    {
        try
        {
            // *** 중요: "재고"와 "부족기준"은 실제 컬럼의 FieldName 이어야 합니다. ***
            string stockFieldName = "재고";     // 실제 FieldName으로 변경
            string thresholdFieldName = "부족기준"; // 실제 FieldName으로 변경

            // 현재 카드(행)의 값을 가져옵니다.
            object stockValueObj = view.GetRowCellValue(e.RowHandle, stockFieldName);
            object thresholdValueObj = view.GetRowCellValue(e.RowHandle, thresholdFieldName);

            // 값이 유효한지 확인하고 int로 변환
            if (stockValueObj != null && stockValueObj != DBNull.Value &&
                thresholdValueObj != null && thresholdValueObj != DBNull.Value)
            {
                int stock = Convert.ToInt32(stockValueObj);
                int threshold = Convert.ToInt32(thresholdValueObj);

                // 조건 확인: 재고 <= 부족기준
                if (stock <= threshold)
                {
                    // 조건 만족 시 카드 배경색을 노란색으로 설정
                    e.Appearance.BackColor = Color.Yellow;
                }
                // 필요하다면 else 구문으로 기본 배경색을 지정할 수도 있습니다.
                // else
                // {
                //     e.Appearance.BackColor = SystemColors.Window; // 또는 다른 기본색
                // }
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error in CustomDrawCardBackground event: {ex.Message}");
        }
    }
}
방법 2: 조건부 서식 (적용 방식 확인/조정 필요)

CardView에서도 조건부 서식을 사용할 수 있지만, ApplyToRow의 동작 방식이 다르거나, 카드 전체 배경에 적용하기 위해 다른 설정이 필요할 수 있습니다.

기존 조건부 서식이 제대로 적용되지 않는다면, 해당 서식 규칙이 CardView에 올바르게 연결되었는지 확인합니다.
조건부 서식 규칙 편집기(디자인 타임 또는 런타임)에서 서식이 적용될 대상(전체 카드 배경 또는 특정 필드)을 명시적으로 지정해야 할 수 있습니다. 때로는 카드 내의 모든 표시 필드에 서식을 개별적으로 적용해야 카드 전체가 색칠된 것처럼 보일 수도 있습니다. (하지만 CustomDrawCardBackground가 더 효율적입니다.)
결론: