이블의 내용을 가져와서 출력하는 코드를 제공하겠습니다.
1. 엑셀 데이터 정리 및 출력

python

import openpyxl

def read_excel(file_path):
    wb = openpyxl.load_workbook(file_path)
    sheet = wb.active
    
    if sheet['B2'].value != 'Reel 번호':
        print('B2셀에 "Reel 번호"가 아닙니다.')
        return None

    data = []
    for row in sheet.iter_rows(min_row=3, min_col=2, max_col=9):  # B열부터 I열까지 확인
        if row[3].value:  # D열 값이 있을 때만 처리
            data.append({
                'D': row[3].value, 
                'I': row[8].value,
                'E': row[4].value,
                'P': row[7].value
            })

    for item in data:
        print(f"DDD_{item['I']}_{item['E']}_{item['D']}: {item['P']}")

# 이 함수는 파일 경로를 파라미터로 받아서 엑셀 파일의 데이터를 출력합니다.
# 예를 들어, 아래와 같이 함수를 호출할 수 있습니다.
# read_excel('경로/파일명.xlsx')

이제, 이 코드를 실행하여 엑셀 파일에서 데이터를 읽어와 출력합니다.
2. mssql 테이블 내용 가져오기 및 출력

python

import pymssql
from datetime import datetime

def fetch_mssql_data():
    # 서버에 연결합니다.
    conn = pymssql.connect(server='서버주소', user='유저명', password='비밀번호', database='데이터베이스명')
    cursor = conn.cursor()

    # 오늘 날짜를 가져옵니다.
    today = datetime.today().strftime('%Y%m%d')
    
    # 오늘 날짜에 해당하는 데이터를 조회합니다.
    query = "SELECT N_RKey FROM T_메인확정 WHERE N_datek = %s"
    cursor.execute(query, (today,))
    
    # 결과를 출력합니다.
    for row in cursor:
        print(row)

    # 연결을 종료합니다.
    conn.close()

# 이 함수를 호출하면 mssql 데이터베이스에서 오늘 날짜의 데이터를 가져와 출력합니다.
# fetch_mssql_data()

이 코드를 실행하면 오늘 날짜의 N_RKey를 데이터베이스에서 가져와서 출력합니다. 데이터베이스의 서버 주소, 유저명, 비밀번호, 데이터베이스명은 현재 환경에 맞게 수정해야 합니다.

이 두 코드를 차례로 실행하여 먼저 엑셀 데이터를 정리하고 출력한 뒤, mssql 테이블의 내용을 가져와서 출력할 수 있습니다.
