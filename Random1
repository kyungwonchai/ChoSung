SSQL 데이터베이스에 아래와 같은 저장 프로시저를 생성합니다. 이 프로시저는 idnum을 기반으로 데이터가 존재하는지 확인한 후, 존재하면 name을 업데이트하고, 존재하지 않으면 새로운 행을 삽입합니다.

sql
Copy code
USE YourDatabase;
GO

CREATE PROCEDURE UpsertMember
    @idNum INT,
    @name NVARCHAR(100)
AS
BEGIN
    SET NOCOUNT ON;

    IF NOT EXISTS (SELECT * FROM YourMSSQLTable WHERE idnum = @idNum)
    BEGIN
        INSERT INTO YourMSSQLTable (idnum, name) VALUES (@idNum, @name)
    END
    ELSE
    BEGIN
        UPDATE YourMSSQLTable SET name = @name WHERE idnum = @idNum
    END
END
GO
YourDatabase와 YourMSSQLTable을 실제 사용하는 데이터베이스 이름과 테이블 이름으로 교체해야 합니다.

C#에서 저장 프로시저 호출
이제 C# 코드에서 MySQL 데이터를 읽어와서 이 MSSQL 저장 프로시저를 호출하는 방식으로 변경합니다.

csharp
Copy code
string mySqlConnectionString = "your_mysql_connection_string";
string msSqlConnectionString = "your_mssql_connection_string";

using (var mySqlConnection = new MySqlConnection(mySqlConnectionString))
{
    mySqlConnection.Open();
    string mySqlQuery = "SELECT idnum, name FROM member.user";
    MySqlCommand mySqlCommand = new MySqlCommand(mySqlQuery, mySqlConnection);

    using (MySqlDataReader reader = mySqlCommand.ExecuteReader())
    {
        using (var msSqlConnection = new SqlConnection(msSqlConnectionString))
        {
            msSqlConnection.Open();

            while (reader.Read())
            {
                int idNum = reader.GetInt32("idnum");
                string name = reader.GetString("name");

                // MSSQL 저장 프로시저 호출
                SqlCommand msSqlCommand = new SqlCommand("UpsertMember", msSqlConnection);
                msSqlCommand.CommandType = System.Data.CommandType.StoredProcedure;
                msSqlCommand.Parameters.AddWithValue("@idNum", idNum);
                msSqlCommand.Parameters.AddWithValue("@name", name);
                msSqlCommand.ExecuteNonQuery();
            }
        }
    }
}
이 코드는 MySQL에서 데이터를 읽은 후, 각 데이터 행에 대해 MSSQL의 `Upsert


