래는 예시 코드입니다. 주석을 참고하시면서 필요한 형태(문자열/숫자키 등)에 맞추어 수정하세요.

csharp
코드 복사
using System;
using System.Collections.Generic;
using System.Text.RegularExpressions;

class Program
{
    static void Main()
    {
        // 예시 문자열(여기에 실제 abcd 값을 넣으세요)
        string abcd = @"어쩌고저쩌고 D023\123.45.67.89 뒷부분도어쩌고저쩌고";

        // 예시로 사용할 변수 c (딕셔너리에 저장할 값)
        string c = "SomeValue";

        // 문자열 abcd 안에서 "D023\" 뒤에 나오는 IP형식(x.x.x.y)을 찾기 위한 정규식
        //  - D023\\ 이후에 숫자+`.` 숫자+`.` 숫자+`.` 숫자 형태와 매칭
        Regex regex = new Regex(@"D023\\(\d+\.\d+\.\d+\.\d+)");
        Match match = regex.Match(abcd);

        // 예시로 Dictionary를 string -> string 구조로 사용(마지막 숫자를 문자열 키로 사용)
        //  만약 정수 키를 원하시면 Dictionary<int, string> 으로 선언하고 아래에서 int.Parse 해주면 됩니다.
        Dictionary<string, string> d = new Dictionary<string, string>();

        if (match.Success)
        {
            // 그룹1이 IP 형식 전체 (x.x.x.y)
            string ipAll = match.Groups[1].Value;   // 예: "123.45.67.89"
            // '.'으로 분리해서 마지막 자리만 꺼냄
            string[] parts = ipAll.Split('.');
            // parts[0] => x, parts[1] => x, parts[2] => x, parts[3] => y
            string y = parts[3];                   // 예: "89"

            // 딕셔너리에 y 값이 있는지 확인
            if (!d.ContainsKey(y))
            {
                // 없으면 (Key=y, Value=c) 추가
                d.Add(y, c);
            }
            else
            {
                // 이미 y 키가 있으면 값 비교 후 다르면 업데이트
                if (d[y] != c)
                {
                    d[y] = c;
                }
                // 같으면 그대로 둠(패스)
            }
        }
        else
        {
            // "D023\" 뒤에 IP형식(x.x.x.y)을 못 찾았을 경우에 대한 처리
            Console.WriteLine("문자열에서 패턴을 찾지 못했습니다.");
        }

        // 테스트 출력
        foreach (var kvp in d)
        {
            Console.WriteLine($"Key = {kvp.Key}, Value = {kvp.Value}");
        }
    }
}
핵심 요약
정규식(Regex) 사용

D023\\(\d+\.\d+\.\d+\.\d+)로 D023\ 뒤에 오는 x.x.x.y 형식(숫자.숫자.숫자.숫자)을 매칭.
match.Groups[1].Value로 IP 전체 문자열을 추출.
IP를 Split('.')하여 마지막 자리 y 추출

parts[3]가 원하는 최종 숫자(문자열).
Dictionary에 값 저장 로직

없으면 Add
있으면 기존 값과 비교 → 다르면 Update, 같으면 패스
int 키를 사용해야 한다면
