문제를 해결하기 위해 Flask에서 사용하고 있는 파일 경로가 정확히 어디를 가리키는지 확인해 보겠습니다. Flask 서버에서 APK 파일이나 버전 파일을 찾을 수 없다는 에러가 발생한다면, 이는 Flask가 파일을 찾고자 하는 경로와 실제 파일이 있는 경로가 일치하지 않기 때문일 수 있습니다.

Flask에서 현재 파일 경로를 확인하고, 요청받은 apk_name에 따라 정리된 전체 경로를 로그에 찍어주는 방법을 사용하겠습니다.

Flask app.py 파일 수정: 경로 디버깅 추가
app.py 파일에 파일 경로를 확인하는 디버깅 로그를 추가해 보겠습니다.

수정된 app.py 파일 (디버깅 추가)
python
코드 복사
from flask import Flask, jsonify, send_from_directory, abort, request
import os
import json

app = Flask(__name__)

# 여러 APK의 버전 정보를 제공하는 엔드포인트
@app.route('/api/version', methods=['GET'])
def get_version():
    apk_name = request.args.get('apk')  # 쿼리 파라미터에서 APK 이름을 가져옴
    if not apk_name:
        return jsonify({"error": "APK name is required"}), 400
    
    version_file = f'version_files/{apk_name}_version.json'
    # 디버깅: 파일 경로 출력
    print(f"Checking version file at: {os.path.abspath(version_file)}")

    try:
        with open(version_file, 'r') as f:
            version_info = json.load(f)
        return jsonify(version_info)
    except FileNotFoundError:
        return jsonify({"error": "Version file not found"}), 404
    except Exception as e:
        return jsonify({"error": str(e)}), 500

# 여러 APK 파일을 제공하는 엔드포인트
@app.route('/download/<apk_name>', methods=['GET'])
def download_apk(apk_name):
    apk_path = os.path.join('static/apks', f'{apk_name}.apk')
    # 디버깅: 파일 경로 출력
    print(f"Trying to serve APK from: {os.path.abspath(apk_path)}")

    try:
        return send_from_directory('static/apks', f'{apk_name}.apk')
    except FileNotFoundError:
        print(f"APK file not found: {apk_path}")  # 디버깅: 파일이 없는 경우 경로 출력
        abort(404)

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=8116)
주요 변경 사항
디버깅 출력 추가:

get_version 함수에서 version_file의 절대 경로를 출력합니다.
download_apk 함수에서도 apk_path의 절대 경로를 출력합니다.
os.path.abspath 사용:

os.path.abspath 함수를 사용하여 파일 경로의 절대 경로를 출력합니다. 이를 통해 Flask가 파일을 찾고 있는 정확한 경로를 알 수 있습니다.
Flask 서버에서 파일 경로 확인하기
위의 코드로 Flask 서버를 실행한 후, 다음을 확인해 보세요:

Flask 서버 실행:

python app.py로 Flask 서버를 실행합니다.
API 요청 테스트:

/api/version?apk=apk1와 같은 요청을 보내서 버전 정보를 가져오는지 확인합니다.
/download/apk1 요청을 보내서 APK 파일을 다운로드할 수 있는지 확인합니다.
콘솔 로그 확인:

서버의 콘솔에서 출력된 경로를 확인하여 Flask가 어떤 경로를 가리키고 있는지 확인합니다. 예를 들어, Checking version file at:와 Trying to serve APK from: 로그를 확인합니다.
이 디버깅을 통해 Flask가 파일을 찾지 못하는 원인을 파악할 수 있을 것입니다. 파일이 올바른 위치에 있는지, 경로가 맞는지 확인하시고, 필요한 경우 경로를 수정해 주세요. 문제가 지속되면 경로에 대한 자세한 정보를 제공해 주시면 추가로 도와드리겠