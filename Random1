파이썬 가상환경을 설정하고 머신러닝 관련 라이브러리를 설치하는 과정을 단계별로 자세히 설명드리겠습니다.

1. Python 가상환경 설치 및 활성화
1-1. 파이썬 3.9.13 다운로드 및 설치
Python 공식 웹사이트에서 Python 3.9.13 설치 파일을 다운로드합니다.
설치 과정에서 "Add Python to PATH" 옵션을 반드시 체크합니다.
설치 완료 후, 명령 프롬프트(cmd)에서 설치 확인:
cmd
코드 복사
python --version
결과: Python 3.9.13
1-2. 가상환경 생성
작업할 프로젝트 폴더를 생성합니다:
cmd
코드 복사
mkdir ML_Project
cd ML_Project
가상환경 생성:
cmd
코드 복사
python -m venv venv
venv는 가상환경의 이름입니다. 원하는 이름으로 바꿔도 됩니다.
1-3. 가상환경 활성화
Windows
cmd
코드 복사
venv\Scripts\activate
활성화되면 프롬프트 앞에 (venv)가 표시됩니다.
2. 필수 라이브러리 설치
가상환경 활성화 상태에서 아래 명령어를 사용합니다.

2-1. 업데이트
pip를 최신 버전으로 업데이트:
cmd
코드 복사
python -m pip install --upgrade pip
2-2. 머신러닝 필수 라이브러리 설치
아래 라이브러리를 한 번에 설치합니다:

cmd
코드 복사
pip install numpy pandas scikit-learn matplotlib seaborn tensorflow keras jupyter notebook pymssql
설치되는 주요 라이브러리:

numpy: 수학 연산 및 배열 처리
pandas: 데이터 처리 및 분석
scikit-learn: 머신러닝 알고리즘
matplotlib: 데이터 시각화
seaborn: 고급 데이터 시각화
tensorflow: 딥러닝 프레임워크
keras: 딥러닝 모델 빌드 (TensorFlow와 함께 사용)
jupyter notebook: 데이터 분석용 인터페이스
pymssql: MSSQL 데이터베이스 연결
3. Jupyter Notebook 설정
Jupyter Notebook 설치 후 실행:
cmd
코드 복사
pip install notebook
jupyter notebook
브라우저에서 Jupyter Notebook이 열리며, 여기에 코드를 작성하고 실행할 수 있습니다.
4. 기본 테스트
설치된 라이브러리가 잘 작동하는지 확인하기 위해 간단한 코드를 실행해 봅니다.

4-1. numpy와 pandas 테스트
python
코드 복사
import numpy as np
import pandas as pd

# Numpy 배열 생성
array = np.array([1, 2, 3, 4, 5])
print("Numpy Array:", array)

# Pandas 데이터프레임 생성
data = {'Name': ['Alice', 'Bob', 'Charlie'], 'Age': [25, 30, 35]}
df = pd.DataFrame(data)
print("Pandas DataFrame:")
print(df)
4-2. scikit-learn 테스트
python
코드 복사
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score

# Iris 데이터셋 로드
iris = load_iris()
X = iris.data
y = iris.target

# 데이터 분리
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# 모델 학습
model = RandomForestClassifier()
model.fit(X_train, y_train)

# 예측 및 정확도 확인
y_pred = model.predict(X_test)
print("Accuracy:", accuracy_score(y_test, y_pred))
4-3. TensorFlow 테스트
python
코드 복사
import tensorflow as tf
from tensorflow.keras import Sequential
from tensorflow.keras.layers import Dense

# 간단한 모델 생성
model = Sequential([
    Dense(10, input_shape=(4,), activation='relu'),
    Dense(3, activation='softmax')
])
model.summary()
5. 완료 후 가상환경 비활성화
작업을 마친 후 가상환경을 비활성화하려면:

cmd
코드 복사
deactivate
이 과정대로 따라 하시면 Python 3.9.13 가상환경에서 머신러닝 프로젝트를 시작할 준비가 완료됩니다. 추가적인 질문이 있으시면 알려주세요!




