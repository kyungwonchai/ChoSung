Updated VBA Macro for Uploading Data to MSSQL
📌 Changes in the Uploading Rules
Rows are structured as TOTAL → BOT → TOP (3-row sets).
The key identifier is in column K:
TOTAL
B
T
If TOTAL, B, T do not appear consecutively, skip the incomplete set.
If another TOTAL appears, start checking for a new valid set.
Upload only complete sets to the database.
✅ 🔹 VBA Macro to Upload Data to MSSQL
vba
코드 복사
Sub UploadDataToMSSQL()
    Dim conn As Object
    Dim cmd As Object
    Dim ws As Worksheet
    Dim lastRow As Long
    Dim i As Long
    Dim insertQuery As String
    Dim values As String
    Dim colLine, colModel, colTime As String
    Dim totalRow, botRow, topRow As Long
    Dim isCompleteSet As Boolean

    ' 📌 Set up MSSQL connection
    Set conn = CreateObject("ADODB.Connection")
    conn.Open "Provider=SQLOLEDB;Data Source=YOUR_SERVER;Initial Catalog=YOUR_DB;User ID=YOUR_USER;Password=YOUR_PASSWORD;"

    ' 📌 Set the active sheet
    Set ws = ThisWorkbook.Sheets("Sheet1")

    ' 📌 Find the last row
    lastRow = ws.Cells(ws.Rows.Count, "A").End(xlUp).Row

    ' 📌 Loop through the rows to find TOTAL → BOT → TOP sets
    i = 5
    Do While i <= lastRow
        If ws.Cells(i, 11).Value = "TOTAL" Then  ' K column check for TOTAL
            If ws.Cells(i + 1, 11).Value = "B" And ws.Cells(i + 2, 11).Value = "T" Then
                ' ✅ Found a valid TOTAL → BOT → TOP set
                totalRow = i
                botRow = i + 1
                topRow = i + 2
                isCompleteSet = True
            Else
                ' ❌ Incomplete set, skip to next TOTAL occurrence
                isCompleteSet = False
            End If
        Else
            ' If not TOTAL, move to the next row
            i = i + 1
            GoTo ContinueLoop
        End If

        ' ✅ Process and upload only if a complete set is found
        If isCompleteSet Then
            ' 📌 Extract common columns
            colLine = Trim(ws.Cells(totalRow, 1).Value)  ' Line1
            colModel = Trim(ws.Cells(totalRow, 2).Value) ' Model1
            colTime = Trim(ws.Cells(totalRow, 3).Value)  ' Time1

            ' 📌 Build the SQL INSERT query
            values = "'" & colLine & "', '" & colModel & "', '" & colTime & "'"

            Dim j As Integer
            For j = 1 To 8
                values = values & ", " & IIf(ws.Cells(botRow, 3 + j).Value = "", 0, ws.Cells(botRow, 3 + j).Value) ' BOT CT values
            Next j
            For j = 1 To 8
                values = values & ", " & IIf(ws.Cells(topRow, 3 + j).Value = "", 0, ws.Cells(topRow, 3 + j).Value) ' TOP CT values
            Next j

            insertQuery = "INSERT INTO dbo.ExcelData (line1, model1, time1, " & _
                          "BCT1_1, BCT1_2, BCT1_3, BCT1_4, BCT1_5, BCT1_6, BCT1_7, BCT1_8, " & _
                          "TCT1_1, TCT1_2, TCT1_3, TCT1_4, TCT1_5, TCT1_6, TCT1_7, TCT1_8) " & _
                          "VALUES (" & values & ")"

            ' 📌 Execute SQL Insert command
            Set cmd = CreateObject("ADODB.Command")
            cmd.ActiveConnection = conn
            cmd.CommandText = insertQuery
            cmd.Execute
        End If

        ' Move to the next possible TOTAL occurrence
        i = i + 3

ContinueLoop:
    Loop

    ' 📌 Close the connection
    conn.Close
    Set conn = Nothing
    Set cmd = Nothing

    MsgBox "Data successfully uploaded to MSSQL.", vbInformation
End Sub
✅ 📌 How the Macro Works
Iterates from row 5 to the last row (lastRow).
Checks for a valid TOTAL → BOT → TOP sequence in column K.
If valid, extracts data and proceeds to upload.
If invalid, skips and searches for the next TOTAL.
Extracts values for BCT1_1 ~ BCT1_8 and TCT1_1 ~ TCT1_8.
Uploads only complete sets to dbo.ExcelData in MSSQL.
Moves to the next valid TOTAL occurrence.
✅ 📌 Example Data Structure
Row	A (line1)	B (model1)	C (time1)	D	E	F	G	H	I	J	K (Identifier)
5	L1	M100	2024-03-18	...	...	...	...	...	...	...	TOTAL
6				...	...	...	...	...	...	...	B
7				...	...	...	...	...	...	...	T
8	L1	M101	2024-03-18	...	...	...	...	...	...	...	TOTAL
9				...	...	...	...	...	...	...	B
10				...	...	...	...	...	...	...	T
11	L1	M102	2024-03-18	...	...	...	...	...	...	...	TOTAL
12				...	...	...	...	...	...	...	❌ (Invalid: Missing BOT/TOP)
13	L1	M103	2024-03-18	...	...	...	...	...	...	...	TOTAL
14				...	...	...	...	...	...	...	B
15				...	...	...	...	...	...	...	T
✅ 📌 How It Works in This Example
✅ Rows 5-7 → Uploaded
✅ Rows 8-10 → Uploaded
❌ Row 11 (Incomplete Set) → Skipped
✅ Rows 13-15 → Uploaded
✅ 📌 How to Use the Macro
Open Excel and Press ALT + F11 to open VBA Editor.
Insert a New Module and Paste the Code.
Run UploadDataToMSSQL Macro.
It will automatically upload all valid TOTAL → BOT → TOP sets.
✅ 📌 Summary
Checks for valid TOTAL → BOT → TOP structure.
Uploads only complete sets.
Skips incomplete sets and continues from the next TOTAL.
Efficient SQL Insert for MSSQL.
✅ Now, the Excel VBA macro follows the new structure correctly and only uploads valid sets! 🚀











검색

심층 리서치



ChatGPT는 실수를 할 수 있습니다. 중요한 정보는 재차 확인하세요.