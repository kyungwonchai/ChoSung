 DevExpress GridControl 자체에서 행 추가 기능을 활성화하려면, GridControl의 AllowEditing 속성과 TableView의 NewItemRowPosition 속성을 설정하면 됩니다. 이를 통해 사용자가 직접 그리드에서 새로운 행을 추가할 수 있습니다.

다음은 이를 설정하는 방법을 보여주는 코드 예제입니다.

먼저, XAML 파일에서 GridControl을 설정합니다:

xml
코드 복사
<Window x:Class="WpfApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
        Title="MainWindow" Height="450" Width="800">
    <Grid>
        <dxg:GridControl x:Name="gridControl" AutoGenerateColumns="AddNew" 
                         ItemsSource="{Binding DataTable}" 
                         AllowEditing="True">
            <dxg:GridControl.View>
                <dxg:TableView AutoWidth="True" NewItemRowPosition="Top"/>
            </dxg:GridControl.View>
        </dxg:GridControl>
    </Grid>
</Window>
다음으로, C# 코드에서 DataTable을 DataAdapter로 채우고 GridControl에 바인딩합니다.

csharp
코드 복사
using DevExpress.Xpf.Grid;
using System.Data;
using System.Data.SqlClient;
using System.Windows;

namespace WpfApp
{
    public partial class MainWindow : Window
    {
        public DataTable DataTable { get; set; }
        private SqlDataAdapter dataAdapter;
        private SqlConnection connection;

        public MainWindow()
        {
            InitializeComponent();
            DataContext = this;
            LoadData();
        }

        private void LoadData()
        {
            // 데이터베이스 연결 문자열을 설정합니다.
            string connectionString = "your_connection_string_here";

            // SQL 쿼리를 설정합니다.
            string query = "SELECT * FROM YourTable";

            // 연결을 초기화합니다.
            connection = new SqlConnection(connectionString);

            // DataAdapter와 DataTable을 초기화합니다.
            dataAdapter = new SqlDataAdapter(query, connection);
            DataTable = new DataTable();

            // DataAdapter를 사용하여 DataTable을 채웁니다.
            dataAdapter.Fill(DataTable);

            // InsertCommand 설정 (필요한 경우)
            SqlCommandBuilder commandBuilder = new SqlCommandBuilder(dataAdapter);
            dataAdapter.InsertCommand = commandBuilder.GetInsertCommand();
        }
    }
}
이 설정을 통해 사용자는 GridControl의 상단에 있는 빈 행을 클릭하여 데이터를 입력하고 새로운 행을 추가할 수 있습니다. 새로 추가된 행은 DataTable에 반영되며, 필요에 따라 dataAdapter.Update(DataTable)을 호출하여 데이터베이스에 업데이트할 수 있습니다.

이 방법은 GridControl에 직접적인 행 추가 기능을 활성화하여 사용자가 인터페이스를 통해 데이터를 쉽게 추가할 수 있도록 합니다.