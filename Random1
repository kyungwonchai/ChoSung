using System;
using System.Diagnostics;

class NetworkPerformanceDataCollector
{
    public static void CollectAndSendData()
    {
        PerformanceCounterCategory category = new PerformanceCounterCategory("Network Interface");
        string[] instanceNames = category.GetInstanceNames();

        foreach (string name in instanceNames)
        {
            PerformanceCounter bytesSentSec = new PerformanceCounter("Network Interface", "Bytes Sent/sec", name);
            PerformanceCounter bytesReceivedSec = new PerformanceCounter("Network Interface", "Bytes Received/sec", name);

            Console.WriteLine($"Interface: {name}");
            Console.WriteLine($"Bytes Sent/sec: {bytesSentSec.NextValue()}");
            Console.WriteLine($"Bytes Received/sec: {bytesReceivedSec.NextValue()}");
            Console.WriteLine();

            // 데이터베이스에 데이터 저장 로직을 여기에 구현합니다.
            // 예: InsertDataIntoDatabase(name, bytesSentSec.NextValue(), bytesReceivedSec.NextValue());
        }
    }
}

class Program
{
    static void Main(string[] args)
    {
        // 주기적 실행을 위해서는 Task Scheduler를 사용하거나, 아래 코드를 반복 실행하는 로직을 구현합니다.
        NetworkPerformanceDataCollector.CollectAndSendData();
    }
}
