 특정 문자열 뒤에 오는 값을 가져오기 위해 정규식을 사용하고 싶다면, 주어진 문제에서 "szBarcode" 다음에 나오는 공백과 콜론(:)을 기준으로, 그 뒤에 나오는 문자열을 매칭하는 정규식을 작성할 수 있습니다. "szBarcode" 뒤에 바로 숫자가 오는 경우를 제외하기 위해, 문자열이 "szBarcode"로 정확히 시작하고, 그 뒤에 어느 정도의 공백이 오며, 콜론(:)이 오고, 그 다음에 원하는 값을 매칭하는 패턴이 필요합니다. 중간에 다른 문자가 들어가는 것을 방지하기 위해, "szBarcode" 뒤에 바로 숫자가 오는 경우를 제외하는 조건을 추가할 필요가 있습니다.

다음은 이러한 조건을 충족하는 C#에서 사용할 수 있는 정규식 예시입니다:

csharp
Copy code
using System;
using System.Text.RegularExpressions;

class Program
{
    static void Main()
    {
        string input = "szBarcode       : ABCDE";
        // 정규식 패턴: "szBarcode"로 시작, 공백(여러 개 가능), 콜론, 더 많은 공백, 그리고 그 뒤에 오는 문자열(ABCDE) 매칭
        // (?<=...)는 긍정형 후방탐색을 나타내며, 이 경우 "szBarcode" 다음에 나오는 공백과 콜론까지 포함하여 매칭하지만, 결과에는 포함하지 않습니다.
        // [^1]은 '1'을 제외한 모든 문자와 매치됩니다. 이를 사용하여 "szBarcode1"과 같은 경우를 제외할 수 있습니다.
        string pattern = @"(?<=szBarcode\s*:\s*)[^\s][^\1]*";

        Match match = Regex.Match(input, pattern);
        if (match.Success)
        {
            Console.WriteLine($"Matched Value: {match.Value}"); // ABCDE를 출력합니다.
        }
        else
        {
            Console.WriteLine("No match found.");
        }
    }
}
이 코드는 "szBarcode" 뒤에 공백과 콜론이 오고, 그 뒤에 오는 값("ABCDE")을 매칭하여 추출합니다. 여기서 중요한 점은 "szBarcode" 뒤에 다른 문자(예: 숫자)가 오는 경우를 제외하기 위해 정규식을 조정할 필요가 있을 수 있습니다. 제시한 패턴은 "szBarcode" 다음에 바로 숫자가 오는 경우를 제외하지 않으므로, 구체적인 요구 사항에 따라 정규식을 더 조정해야 할 수 있습니다.

만약 "szBarcode1" 같은 문자열이 입력으로 주어지면 매칭되지 않게 하려면, 정규식 패턴을 조금 더 복잡하게 만들어야 합니다. 예를 들어, 숫자를 포함하지 않는 단어에 대해서만 매칭하도록 정규식을 구성할 수 있습니다. 하지만 제공된 예시와 설명은 기본적인 아이디어를 제공하며, 구체적인 요구 사항에 따라 정규식을 수정해야 할 