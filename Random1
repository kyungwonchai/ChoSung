cessImageProxy 함수의 수정된 코드입니다.

수정된 processImageProxy 함수
kotlin
코드 복사
private fun processImageProxy(barcodeScanner: BarcodeScanner, imageProxy: ImageProxy) {
    val mediaImage = imageProxy.image
    if (mediaImage != null) {
        val image = InputImage.fromMediaImage(mediaImage, imageProxy.imageInfo.rotationDegrees)
        barcodeScanner.process(image)
            .addOnSuccessListener { barcodes ->
                for (barcode in barcodes) {
                    val rawValue = barcode.rawValue

                    // 3초 이내에 동일한 QR 코드가 스캔된 경우 무시
                    val lastScannedTime = recentQrCodes[rawValue]
                    val currentTime = System.currentTimeMillis()
                    if (lastScannedTime != null && (currentTime - lastScannedTime) < 3000) {
                        // 3초 이내에 스캔된 경우 처리하지 않음
                        return@addOnSuccessListener
                    }

                    // 스캔한 시간 기록
                    recentQrCodes[rawValue] = currentTime

                    // 여기서 이후 처리 (DB 체크, 화면 업데이트 등)
                    // 예시로 텍스트 뷰 업데이트
                    findViewById<TextView>(R.id.text_view_result).text = rawValue

                    // 3초 후에 해시맵에서 QR 코드 제거
                    handler.postDelayed({
                        recentQrCodes.remove(rawValue)
                    }, 3000)
                }
            }
            .addOnFailureListener {
                // 실패 처리
            }
            .addOnCompleteListener {
                imageProxy.close()
            }
    }
}
주요 수정 사항:
3초 내 재스캔 방지:

해시맵(recentQrCodes)을 사용하여 QR 코드를 마지막으로 스캔한 시간을 기록하고, 3초 이내에 동일한 QR 코드가 다시 스캔되지 않도록 합니다.
해시맵에서 QR 코드 제거:

스캔된 후 3초가 지나면 QR 코드를 해시맵에서 제거하여 다시 스캔할 수 있도록 합니다.
이제 이 코드로 인해 동일한 QR 코드를 3초 이내에 다시 스캔하지 않도록