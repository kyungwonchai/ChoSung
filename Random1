넷 환경에서 CDN을 사용할 수 없고 외부 리소스에 접근이 불가능한 경우, 부트스트랩 파일을 직접 다운로드하여 로컬에서 제공하는 것이 좋습니다. 이렇게 하면 외부 네트워크에 의존하지 않고도 부트스트랩을 사용할 수 있습니다.

1. 부트스트랩 파일 다운로드
먼저, 부트스트랩의 CSS 및 JS 파일을 로컬로 다운로드받아야 합니다.

부트스트랩 다운로드:

부트스트랩 공식 사이트로 이동하여 최신 버전을 다운로드합니다.
압축 파일을 해제하면 css 및 js 폴더가 포함되어 있습니다.
로컬 서버에 부트스트랩 파일 복사:

다운로드한 bootstrap.min.css와 bootstrap.min.js 파일을 프로젝트의 static 디렉토리에 복사합니다. 예를 들어, 다음과 같이 디렉토리 구조를 만들 수 있습니다:
arduino
코드 복사
/static/
├── css/
│   └── bootstrap.min.css
└── js/
    └── bootstrap.bundle.min.js
2. HTML에서 로컬 부트스트랩 파일 사용
HTML 파일에서 CDN 대신 로컬에 있는 부트스트랩 파일을 참조하도록 변경합니다.

html
코드 복사
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bootstrap Example</title>
    <!-- 부트스트랩 CSS 로컬 파일 -->
    <link rel="stylesheet" href="{{ url_for('static', filename='css/bootstrap.min.css') }}">
    <!-- 커스텀 CSS -->
    <link rel="stylesheet" href="{{ url_for('static', filename='css/style.css') }}">
</head>
<body>
    <div class="container">
        <h1>Hello, world!</h1>
    </div>
    <!-- 부트스트랩 JS 로컬 파일 -->
    <script src="{{ url_for('static', filename='js/bootstrap.bundle.min.js') }}"></script>
</body>
</html>
3. Flask 애플리케이션에서 로컬 파일 제공
위 코드에서는 {{ url_for('static', filename='css/bootstrap.min.css') }} 및 {{ url_for('static', filename='js/bootstrap.bundle.min.js') }}를 사용하여 Flask의 static 디렉토리에서 부트스트랩 파일을 제공하고 있습니다. 이를 통해 외부 네트워크에 의존하지 않고도 인트라넷 환경에서 부트스트랩을 사용할 수 있습니다.

4. 요약
부트스트랩 파일 다운로드: 부트스트랩의 최신 CSS 및 JS 파일을 공식 사이트에서 다운로드하여 로컬 static 디렉토리에 저장합니다.
HTML에서 로컬 파일 사용: HTML 파일에서 부트스트랩 CDN 대신 로컬 파일을 참조하도록 수정합니다.
인트라넷 환경에서 제공: 인트라넷 환경에서 외부 네트워크에 의존하지 않고 부트스트랩을 사용할 수 있도록 설정합니다.
이 방법을 사용하면 인트라넷 환경에서도 부트스트랩을 안정적으로 사용할 수 있습니