ridControl에서 날짜1 컬럼의 정렬이 즉시 반영되지 않고 테이블을 클릭해야만 정렬이 적용되는 문제를 해결하려면 GridView.BeginSort 및 GridView.EndSort 메서드를 사용하여 정렬을 명시적으로 적용해 주어야 합니다. 아래와 같이 코드를 수정해 보세요.

전체 코드 예제 수정
csharp
코드 복사
using DevExpress.XtraGrid;
using DevExpress.XtraGrid.Views.Grid;
using System;
using System.Data;
using System.Drawing;
using System.Windows.Forms;

public partial class Form1 : Form
{
    public Form1()
    {
        InitializeComponent();

        // GridControl과 GridView를 초기화합니다.
        GridControl gridControl = new GridControl();
        GridView gridView = new GridView(gridControl);
        gridControl.MainView = gridView;
        gridControl.Dock = DockStyle.Fill;
        this.Controls.Add(gridControl);

        // 데이터 소스를 설정합니다.
        DataTable dataTable = new DataTable();
        dataTable.Columns.Add("날짜1", typeof(DateTime));
        dataTable.Columns.Add("컬럼2", typeof(string));
        dataTable.Columns.Add("컬럼3", typeof(int));

        dataTable.Rows.Add(DateTime.Now, "Test1", 1);
        dataTable.Rows.Add(DateTime.Now.AddDays(-1), "Test2", 2);
        dataTable.Rows.Add(DateTime.Now.AddDays(-2), "Test3", 3);

        gridControl.DataSource = dataTable;

        // GridView의 RowStyle 이벤트 핸들러를 추가합니다.
        gridView.RowStyle += GridView_RowStyle;

        // 날짜1 컬럼을 내림차순으로 정렬합니다.
        gridView.BeginSort();
        try
        {
            gridView.Columns["날짜1"].SortOrder = DevExpress.Data.ColumnSortOrder.Descending;
        }
        finally
        {
            gridView.EndSort();
        }
    }

    // RowStyle 이벤트 핸들러를 정의합니다.
    private void GridView_RowStyle(object sender, RowStyleEventArgs e)
    {
        GridView view = sender as GridView;
        if (view == null) return;

        // 현재 행의 컬럼3 값 가져오기
        int column3Value = Convert.ToInt32(view.GetRowCellValue(e.RowHandle, view.Columns["컬럼3"]));

        // 컬럼3의 값에 따라 행 색상 변경
        if (column3Value == 1)
        {
            e.Appearance.BackColor = Color.Yellow; // 컬럼3의 값이 1이면 노랑색
        }
        else if (column3Value >= 2)
        {
            e.Appearance.BackColor = Color.Orange; // 컬럼3의 값이 2 이상이면 주황색
        }
    }
}
설명
gridView.BeginSort()와 gridView.EndSort()를 사용하여 정렬 작업이 시작되고 끝났음을 명시적으로 알립니다. 이 메서드들을 사용하면 정렬이 즉시 적용됩니다.
gridView.Columns["날짜1"].SortOrder = DevExpress.Data.ColumnSortOrder.Descending;로 날짜1 컬럼을 내림차순으로 정렬합니다.
이 수정된 코드를 사용하면 GridControl이 로드될 때 날짜1 컬럼이 바로 내림차순으로 정렬될 것입니다.