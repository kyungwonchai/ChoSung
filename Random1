네, 알겠습니다. 달력 UI를 포함한 "근무일/비근무일 예외 관리" 페이지의 HTML 템플릿 파일 (app/templates/admin/manage_calendar_exceptions.html) 전체 최종 코드를 다시 제공해 드리겠습니다.

이 템플릿은 app/routes_admin.py의 manage_calendar_exceptions 라우트 함수에서 전달하는 달력 데이터(calendar_weeks)와 폼 객체(form) 등을 사용하여 월별 달력을 그리고, 사용자가 예외 날짜를 관리할 수 있는 인터페이스를 제공합니다.

CSS 스타일은 템플릿 파일 내의 {% block styles %} 안에 포함시켜 이 파일 하나로 스타일까지 적용되도록 했습니다.

최종: app/templates/admin/manage_calendar_exceptions.html (전체 코드)
HTML

{% extends "layout.html" %}

{% block title %}{{ title }}{% endblock %}

{% block styles %}
{{ super() }} {# layout.html의 스타일을 상속받고, 이 페이지 고유의 스타일 추가 #}
<style>
    .calendar-table {
        border-collapse: collapse;
        width: 100%;
        table-layout: fixed; /* 모든 셀의 너비를 동일하게 고정 */
        margin-bottom: 30px; /* 달력과 추가 폼 사이 간격 */
    }
    .calendar-table th, .calendar-table td {
        border: 1px solid #e0e0e0;
        width: 14.28%; /* 7일이므로 100/7 % */
        height: 120px; 
        vertical-align: top;
        padding: 6px 8px; /* 셀 내부 여백 */
        text-align: left;
        position: relative; 
    }
    .calendar-table th {
        background-color: #f8f9fa;
        text-align: center;
        font-weight: bold;
        padding: 10px 0;
        color: #333;
    }
    .calendar-table td.other-month .day-number, 
    .calendar-table td.other-month .day-status,
    .calendar-table td.other-month .day-actions {
        color: #bbb; /* 현재 달이 아닌 날짜는 흐리게 */
        opacity: 0.7;
    }
    .calendar-table td.today {
        border: 2px solid #007bff !important; /* 오늘 날짜 강조 */
        background-color: #e7f3ff;
    }
    .day-number {
        font-size: 1.1em;
        font-weight: bold;
        text-align: right;
        margin-bottom: 3px;
    }
    /* 요일별 날짜 숫자 색상 */
    .day-number.weekday-6 { color: red; } /* 일요일 */
    .day-number.weekday-5 { color: blue; } /* 토요일 */

    .day-status {
        font-size: 0.8em;
        margin-top: 3px;
        line-height: 1.3;
    }
    .day-status .status-text { /* (가동), (비가동) 등 텍스트 */
        display: block;
        font-weight: bold;
        margin-bottom: 2px;
    }
    .day-status .description-text { /* 공휴일명, 사용자 지정 설명 */
        color: #555;
        font-size: 0.9em;
        word-break: break-word; /* 긴 설명 자동 줄바꿈 */
        max-height: 40px; /* 설명 텍스트 최대 높이 (넘치면 숨김) */
        overflow: hidden;
    }

    /* 날짜 상태별 스타일 */
    .status-public-holiday .status-text { color: red; }
    .status-weekend-sun .status-text { color: red; }
    .status-weekend-sat .status-text { color: blue; }
    .status-weekday-op .status-text { color: darkgreen; }
    
    /* 사용자 지정 예외 스타일 */
    .user-op { background-color: #e6ffe6; } /* 사용자 지정 가동일 배경 */
    .user-op .status-text { color: darkgreen; }
    .user-non-op { background-color: #ffe6e6; } /* 사용자 지정 비가동일 배경 */
    .user-non-op .status-text { color: crimson; }
    
    /* 사용자 지정 시, 원래 주말/공휴일 숫자 색상 유지 또는 기본화 */
    .user-op .day-number, .user-non-op .day-number { color: #333; } /* 기본 숫자 색상 */
    .user-op .day-number.weekday-6, .user-non-op .day-number.weekday-6 { color: red !important; }
    .user-op .day-number.weekday-5, .user-non-op .day-number.weekday-5 { color: blue !important; }


    .day-actions { /* 셀 우측 하단 버튼 영역 */
        position: absolute;
        bottom: 5px;
        right: 5px;
    }
    .day-actions .btn-sm { /* 버튼 크기 및 패딩 조정 */
        padding: 2px 5px;
        font-size: 0.78em;
        margin-left: 3px;
    }
    .btn-outline-danger { color: crimson; border: 1px solid crimson; background-color: transparent;}
    .btn-outline-danger:hover { background-color: crimson; color: white; }
    .btn-outline-info { color: #007bff; border: 1px solid #007bff; background-color: transparent;}
    .btn-outline-info:hover { background-color: #007bff; color: white; }

    .exception-form-container { /* 예외 추가 폼 컨테이너 */
        margin-top: 30px;
        padding: 20px;
        background-color: #f0f8ff; /* 연한 하늘색 배경 */
        border: 1px solid #add8e6; /* 연한 하늘색 테두리 */
        border-radius: 5px;
    }
    .exception-form-container h2 { margin-top:0; font-size: 1.3em; color: #2c3e50;}
</style>
{% endblock %}

{% block content %}
    <h1>{{ title }} ({{ current_year }}년 {{ current_month }}월)</h1>
    <p>달력에서 날짜의 기본 상태(주말/공휴일: 비가동, 평일: 가동)를 확인하고, 필요한 경우 아래 폼을 사용하여 특정 날짜를 가동일 또는 비가동일로 지정(예외 설정)할 수 있습니다.</p>
    
    <div style="margin-bottom: 20px; text-align: center; padding: 10px 0;">
        <a href="{{ url_for('admin.manage_calendar_exceptions', year=prev_month_params.year, month=prev_month_params.month) }}" class="btn btn-secondary">&laquo; 이전 달</a>
        <span style="font-size: 1.6em; margin: 0 20px; font-weight: bold; vertical-align: middle; color: #34495e;">{{ current_year }}년 {{ current_month }}월</span>
        <a href="{{ url_for('admin.manage_calendar_exceptions', year=next_month_params.year, month=next_month_params.month) }}" class="btn btn-secondary">다음 달 &raquo;</a>
    </div>

    <table class="calendar-table">
        <thead>
            <tr>
                <th style="color: red;">일</th><th>월</th><th>화</th><th>수</th><th>목</th><th>금</th><th style="color: blue;">토</th>
            </tr>
        </thead>
        <tbody>
            {% for week in calendar_weeks %}
            <tr>
                {% for day_cell in week %}
                <td class="{{ 'today' if day_cell.is_today else '' }} 
                           {{ day_cell.status_class if day_cell.is_current_month else 'other-month' }}">
                    {# 날짜 숫자 표시: 요일에 따라 다른 색상 적용을 위해 day-number에 weekday 클래스 추가 #}
                    <div class="day-number weekday-{{ day_cell.date_obj.weekday() }}">{{ day_cell.day_num }}</div>
                    
                    {% if day_cell.is_current_month %} {# 현재 달의 날짜에만 상세 정보 및 버튼 표시 #}
                        <div class="day-status">
                            <span class="status-text">{{ day_cell.status_text }}</span>
                            {# 공휴일 이름이나 사용자 지정 설명이 '주말', '평일'이 아닌 경우에만 표시 #}
                            {% if day_cell.description and day_cell.description not in ['주말', '평일'] %}
                            <span class="description-text" title="{{ day_cell.description }}">{{ day_cell.description|truncate(20, True, '...') }}</span>
                            {% endif %}
                        </div>

                        <div class="day-actions">
                            {% if day_cell.status_class.startswith('user-') %} {# 사용자 지정 예외가 있는 경우 #}
                                <form method="POST" action="{{ url_for('admin.delete_calendar_exception', date_str=day_cell.date_obj.strftime('%Y-%m-%d')) }}" style="display:inline;" onsubmit="return confirm('날짜 [{{ day_cell.date_obj.strftime('%Y-%m-%d') }}]의 예외 설정을 삭제하시겠습니까?');">
                                    <input type="submit" value="지정해제" class="btn btn-sm btn-outline-danger">
                                </form>
                            {% else %}
                                <button type="button" class="btn btn-sm btn-outline-info" 
                                        title="날짜 {{ day_cell.date_obj.strftime('%Y-%m-%d') }}에 대한 예외 지정"
                                        onclick="setFormDateAndFocus('{{ day_cell.date_obj.strftime('%Y-%m-%d') }}', {{ 'true' if day_cell.is_operational_final else 'false' }})">
                                    예외지정
                                </button>
                            {% endif %}
                        </div>
                    {% endif %} {# end if day_cell.is_current_month #}
                </td>
                {% endfor %} {# end for day_cell in week #}
            </tr>
            {% endfor %} {# end for week in calendar_weeks #}
        </tbody>
    </table>

    <div class="exception-form-container" id="exceptionFormContainer"> {# 스크롤 타겟용 ID 추가 #}
        <h2>새 예외 날짜 추가 / 상태 변경</h2>
        <p style="font-size:0.9em; color: #555;">
            위 달력에서 '예외 지정' 버튼을 클릭하면 아래 '날짜'와 '운영 상태' 필드가 자동으로 채워집니다.<br>
            이미 예외가 지정된 날짜의 설정을 변경하려면, 먼저 '지정 해제' 후 새로 추가하거나, 아래 폼에서 해당 날짜를 선택하고 새 상태로 '예외 날짜 설정 저장'을 클릭하세요. (중복된 날짜 추가 시 현재는 오류가 발생합니다. 수정 기능은 추후 구현될 수 있습니다.)
        </p>
        <form method="POST" action="{{ url_for('admin.manage_calendar_exceptions', year=current_year, month=current_month) }}" novalidate>
            {{ form.hidden_tag() }} {# CSRF 보호 등을 위한 숨겨진 태그 #}
            <div class="form-group">
                {{ form.exception_date.label(class="form-label") }}<br>
                {{ form.exception_date(class="form-control", id="exception_date_field") }}
                {% if form.exception_date.errors %}<ul class="errors">{% for error in form.exception_date.errors %}<li>{{ error }}</li>{% endfor %}</ul>{% endif %}
            </div>
            <div class="form-group">
                {{ form.is_operational.label(class="form-label") }}<br>
                {{ form.is_operational(class="form-control", id="is_operational_field") }}
                {% if form.is_operational.errors %}<ul class="errors">{% for error in form.is_operational.errors %}<li>{{ error }}</li>{% endfor %}</ul>{% endif %}
            </div>
            <div class="form-group">
                {{ form.description.label(class="form-label") }}<br>
                {{ form.description(class="form-control", rows="2", placeholder="예: 회사 창립일, 임시 대체 근무 등") }}
                {% if form.description.errors %}<ul class="errors">{% for error in form.description.errors %}<li>{{ error }}</li>{% endfor %}</ul>{% endif %}
            </div>
            <div class="form-group">
                {{ form.submit(class="btn btn-primary", value="예외 날짜 설정 저장") }}
            </div>
        </form>
    </div>
    
    {# --- 하단 Flash 메시지 표시 영역 --- #}
    <div style="margin-top: 30px;">
        {% with messages = get_flashed_messages(with_categories=true) %}
            {% if messages %}
                <h3 style="font-size: 1.1em; margin-bottom: 8px;">알림:</h3>
                <ul class="flash-messages">
                {% for category, message in messages %}
                    <li class="{{ category }}">{{ message }}</li>
                {% endfor %}
                </ul>
            {% endif %}
        {% endwith %}
    </div>
    {# --- Flash 메시지 표시 영역 끝 --- #}
    
{% endblock %}

{% block scripts %}
{{ super() }} {# layout.html의 scripts 블록이 있다면 내용을 먼저 포함 #}
<script>
    function setFormDateAndFocus(dateStr, isCurrentlyOperational) {
        document.getElementById("exception_date_field").value = dateStr;
        // 현재 날짜의 'is_operational_final' 값을 기반으로, 예외 설정 시 반대 상태를 기본으로 제안하거나,
        // 또는 항상 '비가동일'을 기본으로 제안할 수 있습니다. 여기서는 현재 상태를 반영합니다.
        document.getElementById("is_operational_field").value = isCurrentlyOperational ? '1' : '0';
        
        var formContainer = document.getElementById("exceptionFormContainer");
        if (formContainer) {
            formContainer.scrollIntoView({ behavior: 'smooth', block: 'center' }); // 폼 중앙으로 스크롤
        }
        document.getElementById("exception_date_field").focus(); // 날짜 필드에 포커스 (또는 설명 필드)
    }
</script>
{% endblock %}
app/templates/admin/manage_calendar_exceptions.html 주요 변경 및 설명:

CSS 스타일 추가/개선 ({% block styles %}):
달력 테이블(calendar-table), 각 날짜 셀(td), 날짜 숫자(day-number), 상태 텍스트(day-status) 등에 대한 스타일을 추가하고 다듬었습니다.
other-month (현재 달이 아닌 날짜), today (오늘 날짜)에 대한 스타일을 적용합니다.
날짜의 최종 운영 상태 (day_cell.status_class 값: user-op, user-non-op, public-holiday 등)에 따라 셀의 배경색이나 텍스트 색상을 다르게 표시합니다.
각 날짜 셀 우측 하단에 "지정 해제" (사용자 지정 예외가 있을 경우) 또는 "예외 지정" (기본 상태일 경우) 버튼을 위한 영역(day-actions)과 버튼 스타일을 추가했습니다.
예외 추가 폼을 담을 컨테이너(exception-form-container)에 대한 스타일을 추가했습니다.
달력 렌더링:
routes_admin.py에서 전달받은 calendar_weeks (이전 calendar_display_data)를 순회하며 달력 테이블을 그립니다.
각 day_cell 객체의 속성들 (day_num, is_today, is_current_month, status_class, status_text, description)을 사용하여 날짜 정보를 표시합니다.
day_cell.date_obj.weekday()를 사용하여 요일별로 날짜 숫자 색상을 다르게 적용합니다(일:빨강, 토:파랑).
"예외 지정" 및 "지정 해제" 버튼:
사용자 지정 예외가 이미 있는 날짜에는 "지정 해제" 버튼(실제로는 삭제 폼)이 표시됩니다. 클릭 시 JavaScript confirm으로 확인 후 delete_calendar_exception 라우트로 POST 요청을 보냅니다.
그렇지 않은 날짜에는 "예외 지정" 버튼이 표시됩니다. 이 버튼을 클릭하면 setFormDateAndFocus JavaScript 함수가 호출되어, 페이지 하단의 "새 예외 날짜 추가" 폼에 해당 날짜와 현재의 기본 운영 상태가 자동으로 채워지고, 폼으로 스크롤 및 포커스가 이동됩니다.
예외 추가 폼:
이전과 동일한 WorkCalendarExceptionForm을 사용합니다.
폼의 제출(action) URL에 year와 month 파라미터를 포함하여, 예외 추가 후 현재 보고 있는 달력 페이지로 다시 돌아오도록 했습니다.
폼 상단에 간단한 안내 문구를 추가했습니다.
Flash 메시지 위치 변경: 이전에 논의된 대로, 페이지 하단 (폼 아래)으로 flash 메시지 표시 영역을 옮겼습니다.
JavaScript (setFormDateAndFocus):
달력에서 "예외 지정" 버튼 클릭 시 호출됩니다.
선택된 날짜(dateStr)와 해당 날짜의 현재 최종 운영 상태(isCurrentlyOperational)를 받아와서, 페이지 하단 폼의 날짜 필드와 운영 상태 선택 필드에 자동으로 값을 채워줍니다.
사용자 편의를 위해 폼 영역으로 부드럽게 스크롤하고 날짜 필드에 포커스를 줍니다.
이 수정된 app/routes_admin.py와 app/templates/admin/manage_calendar_exceptions.html 파일을 프로젝트에 적용하시면, 요청하신 달력 UI와 기본적인 예외 관리 기능이 구현될 것입니다.