용자별로 즐겨찾기를 관리하기 위해 DB를 연동하고, 사용자 ID(user.idnum)를 기준으로 즐겨찾기 데이터를 저장하고 불러오는 방식으로 구현하겠습니다. 데이터베이스는 SQLite를 사용하며, 로컬 DB 파일은 클라우드 동기화 폴더(예: OneDrive, Google Drive 등)에 저장하여 어디서든 동일한 데이터를 사용할 수 있도록 구성합니다.

데이터베이스 설계
DB 구조:

테이블 이름: Favorites
컬럼:
UserId (TEXT): 사용자 ID
ButtonName (TEXT): 즐겨찾기 버튼의 이름
GroupName (TEXT): 버튼이 속한 그룹 이름
SQLite 파일 경로:

Favorites.db를 프로그램 디렉터리 또는 동기화 가능한 경로에 저장.
수정된 전체 코드
전역 변수 및 초기화
csharp
코드 복사
using System.Data.SQLite; // SQLite 사용
using System.IO;

private static readonly string DbFilePath = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, "Favorites.db");
private string currentUserId = "default"; // 현재 사용자 ID

private void InitializeDatabase()
{
    if (!File.Exists(DbFilePath))
    {
        SQLiteConnection.CreateFile(DbFilePath); // DB 파일 생성

        using (var connection = new SQLiteConnection($"Data Source={DbFilePath};Version=3;"))
        {
            connection.Open();
            var command = connection.CreateCommand();
            command.CommandText = @"
                CREATE TABLE IF NOT EXISTS Favorites (
                    UserId TEXT NOT NULL,
                    ButtonName TEXT NOT NULL,
                    GroupName TEXT NOT NULL,
                    PRIMARY KEY (UserId, ButtonName)
                );";
            command.ExecuteNonQuery();
        }
    }
}
즐겨찾기 데이터 로드 (LoadFavorites)
csharp
코드 복사
private void LoadFavorites()
{
    favoriteKeys.Clear();

    using (var connection = new SQLiteConnection($"Data Source={DbFilePath};Version=3;"))
    {
        connection.Open();
        var command = connection.CreateCommand();
        command.CommandText = "SELECT ButtonName FROM Favorites WHERE UserId = @UserId";
        command.Parameters.AddWithValue("@UserId", currentUserId);

        using (var reader = command.ExecuteReader())
        {
            while (reader.Read())
            {
                favoriteKeys.Add(reader.GetString(0)); // 버튼 이름 추가
            }
        }
    }
}
즐겨찾기 데이터 저장 (SaveFavorites)
csharp
코드 복사
private void SaveFavorites()
{
    using (var connection = new SQLiteConnection($"Data Source={DbFilePath};Version=3;"))
    {
        connection.Open();

        // 기존 사용자 데이터 삭제
        var deleteCommand = connection.CreateCommand();
        deleteCommand.CommandText = "DELETE FROM Favorites WHERE UserId = @UserId";
        deleteCommand.Parameters.AddWithValue("@UserId", currentUserId);
        deleteCommand.ExecuteNonQuery();

        // 새 데이터 삽입
        var insertCommand = connection.CreateCommand();
        foreach (var buttonName in favoriteKeys)
        {
            insertCommand.CommandText = @"
                INSERT INTO Favorites (UserId, ButtonName, GroupName)
                VALUES (@UserId, @ButtonName, @GroupName)";
            insertCommand.Parameters.Clear();
            insertCommand.Parameters.AddWithValue("@UserId", currentUserId);
            insertCommand.Parameters.AddWithValue("@ButtonName", buttonName);
            insertCommand.Parameters.AddWithValue("@GroupName", GetButtonGroupName(buttonsDictionary[buttonName]));
            insertCommand.ExecuteNonQuery();
        }
    }
}
ToggleFavorite 함수 수정
csharp
코드 복사
private void ToggleFavorite(string buttonName, BarButtonItem button)
{
    if (favoriteKeys.Contains(buttonName))
    {
        favoriteKeys.Remove(buttonName);
        ResetButtonStyle(button);
        RemoveFromFavorites(button);
    }
    else
    {
        favoriteKeys.Add(buttonName);
        ApplyFavoriteStyle(button);
        AddToFavorites(button, GetButtonGroupName(button));
    }

    SaveFavorites(); // DB에 즉시 반영
}
프로그램 초기화 시 호출
csharp
코드 복사
private void ProgramStartup()
{
    InitializeDatabase(); // DB 초기화
    currentUserId = GetCurrentUserId(); // 사용자 ID 설정 (로그인 시스템에서 받아오기)
    LoadFavorites(); // 사용자별 즐겨찾기 로드
    InitializeButtons(); // 버튼 초기화
}
주요 변경 사항
SQLite DB 추가:

SQLite 데이터베이스를 생성하고 Favorites 테이블을 구성.
사용자 ID를 기준으로 데이터를 저장하고 로드.
즐겨찾기 저장/로드:

LoadFavorites: 사용자 ID에 해당하는 즐겨찾기 로드.
SaveFavorites: 현재 상태를 DB에 저장.
사용자 ID:

currentUserId 변수로 현재 사용자 ID 관리.
동작 흐름
프로그램 실행 시:

InitializeDatabase로 DB 파일을 확인하고 초기화.
LoadFavorites로 사용자별 즐겨찾기 로드.
버튼 초기화(InitializeButtons).
즐겨찾기 추가/제거 시:

ToggleFavorite에서 SaveFavorites를 호출해 즉시 DB에 반영.
다른 PC에서 실행:
