네, CSV 파일 저장 시 한글이 깨지는 건 인코딩(Encoding) 문제 때문이 맞습니다. PyCharm 콘솔이나 데이터 뷰어에서는 UTF-8로 잘 보여주다가, 파일로 저장할 때 Windows의 기본 인코딩인 cp949 등으로 자동 설정되면서 글자가 깨지는 현상입니다.

이건 PyCharm 설정 문제라기보다는, 파일을 저장하는 코드에 인코딩을 명확히 지정해주지 않아서 발생하는 경우가 99%입니다.

## 표준 해결 코드 (UTF-8로 저장)
아래 코드가 한글 깨짐 없이 CSV 파일을 저장하는 가장 표준적인 방법입니다. 핵심은 open() 함수에 encoding='utf-8-sig' 옵션을 추가하는 것입니다.

utf-8 대신 **utf-8-sig**를 사용하는 이유는, Excel에서 파일을 열 때 한글이 깨지지 않도록 파일의 맨 앞에 **BOM(Byte Order Mark)**이라는 눈에 보이지 않는 식별자를 추가해 주기 때문입니다.

샘플 코드
Python

import csv

# 1. 저장할 데이터 준비 (딕셔너리 리스트 형태)
data = [
    {"이름": "홍길동", "부서": "개발팀", "직책": "팀장"},
    {"이름": "성춘향", "부서": "디자인팀", "직책": "사원"},
    {"이름": "이몽룡", "부서": "기획팀", "직책": "대리"}
]

# 2. CSV 파일로 저장
# 파일 경로. 'w'는 쓰기 모드, newline=''은 불필요한 빈 줄 방지
# encoding='utf-8-sig'가 가장 중요합니다.
file_path = "직원명부.csv"
with open(file_path, 'w', newline='', encoding='utf-8-sig') as csvfile:
    # CSV 파일의 헤더(첫 줄)가 될 키들을 지정
    fieldnames = ["이름", "부서", "직책"]
    
    # 데이터를 CSV 형식으로 변환해주는 writer 생성
    writer = csv.DictWriter(csvfile, fieldnames=fieldnames)

    #  헤더 쓰기
    writer.writeheader()
    
    # 데이터 쓰기
    writer.writerows(data)

print(f"'{file_path}' 파일이 성공적으로 저장되었습니다.")
## PyCharm 설정 확인 및 수정법
일반적으로 위 코드를 사용하면 PyCharm 설정과 관계없이 문제가 해결됩니다. 하지만 혹시 모를 경우를 대비해 PyCharm의 전반적인 파일 인코딩 설정을 확인하는 방법은 다음과 같습니다.

File > Settings (또는 Ctrl + Alt + S) 로 들어갑니다.

왼쪽 메뉴에서 Editor > File Encodings 로 이동합니다.

아래 세 가지 항목이 모두 **UTF-8**로 설정되어 있는지 확인하고, 다르다면 UTF-8로 변경 후 Apply 버튼을 누릅니다.

Global Encoding: UTF-8

Project Encoding: UTF-8

Default encoding for properties files: UTF-8