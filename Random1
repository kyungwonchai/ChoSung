SimpleButton)**으로 최소화, 최대화/복원, 닫기 버튼을 우측에 배치하고, 창 타이틀을 더블 클릭하면 최대화/복원 동작을 구현하는 완성된 코드입니다. 모든 기본 동작을 유지하며, 버튼과 타이틀을 커스터마이징할 수 있습니다.

구현 코드
csharp
코드 복사
using DevExpress.XtraEditors;
using System;
using System.Drawing;
using System.Windows.Forms;

public partial class MySkinableForm : XtraForm
{
    private SimpleButton minimizeButton;
    private SimpleButton maximizeButton;
    private SimpleButton closeButton;

    public MySkinableForm()
    {
        InitializeComponent();

        // 기본 설정
        this.FormBorderStyle = FormBorderStyle.None; // 기본 타이틀바 제거
        this.Padding = new Padding(0, 30, 0, 0); // 사용자 정의 타이틀바 영역 확보
        this.DoubleBuffered = true; // 깜빡임 방지

        // 최소화 버튼
        minimizeButton = CreateTitleBarButton("-", new Point(this.Width - 120, 5), MinimizeButton_Click);

        // 최대화/복원 버튼
        maximizeButton = CreateTitleBarButton("🗖", new Point(this.Width - 80, 5), MaximizeButton_Click);

        // 닫기 버튼
        closeButton = CreateTitleBarButton("X", new Point(this.Width - 40, 5), CloseButton_Click);

        // 버튼을 컨트롤에 추가
        this.Controls.Add(minimizeButton);
        this.Controls.Add(maximizeButton);
        this.Controls.Add(closeButton);

        // 폼 크기 변경 시 버튼 위치 조정
        this.SizeChanged += MySkinableForm_SizeChanged;
    }

    private void MySkinableForm_SizeChanged(object sender, EventArgs e)
    {
        // 버튼 위치 업데이트
        minimizeButton.Location = new Point(this.Width - 120, 5);
        maximizeButton.Location = new Point(this.Width - 80, 5);
        closeButton.Location = new Point(this.Width - 40, 5);
    }

    protected override void OnPaint(PaintEventArgs e)
    {
        base.OnPaint(e);

        // 타이틀바 배경
        var titleBarRect = new Rectangle(0, 0, this.Width, 30);
        using (var titleBarBrush = new SolidBrush(Color.SkyBlue)) // 타이틀바 색상
        {
            e.Graphics.FillRectangle(titleBarBrush, titleBarRect);
        }

        // 타이틀 텍스트
        string titleText = this.Text;
        using (var font = new Font("Arial", 10, FontStyle.Bold))
        using (var textBrush = new SolidBrush(Color.White))
        {
            e.Graphics.DrawString(titleText, font, textBrush, new PointF(10, 7));
        }
    }

    protected override void OnMouseDown(MouseEventArgs e)
    {
        base.OnMouseDown(e);

        // 타이틀바 드래그로 폼 이동
        if (e.Button == MouseButtons.Left && e.Y <= 30)
        {
            this.Capture = false;
            var message = Message.Create(this.Handle, 0xA1, new IntPtr(2), IntPtr.Zero); // WM_NCLBUTTONDOWN, HTCAPTION
            this.WndProc(ref message);
        }
    }

    protected override void OnDoubleClick(EventArgs e)
    {
        base.OnDoubleClick(e);

        // 타이틀바 더블 클릭으로 최대화/복원
        if (this.WindowState == FormWindowState.Maximized)
        {
            this.WindowState = FormWindowState.Normal;
        }
        else
        {
            this.WindowState = FormWindowState.Maximized;
        }
    }

    private SimpleButton CreateTitleBarButton(string text, Point location, EventHandler clickHandler)
    {
        var button = new SimpleButton
        {
            Text = text,
            Appearance = { BackColor = Color.LightGray, ForeColor = Color.Black },
            Size = new Size(30, 20),
            Location = location,
            ButtonStyle = DevExpress.XtraEditors.Controls.BorderStyles.NoBorder,
            FlatStyle = FlatStyle.Flat,
        };
        button.Click += clickHandler;
        return button;
    }

    private void MinimizeButton_Click(object sender, EventArgs e)
    {
        this.WindowState = FormWindowState.Minimized; // 최소화
    }

    private void MaximizeButton_Click(object sender, EventArgs e)
    {
        // 최대화 또는 복원
        if (this.WindowState == FormWindowState.Maximized)
        {
            this.WindowState = FormWindowState.Normal;
            maximizeButton.Text = "🗖"; // 최대화 아이콘
        }
        else
        {
            this.WindowState = FormWindowState.Maximized;
            maximizeButton.Text = "🗗"; // 복원 아이콘
        }
    }

    private void CloseButton_Click(object sender, EventArgs e)
    {
        this.Close(); // 닫기
    }
}
설명
타이틀바 버튼 추가:

SimpleButton을 생성하여 폼의 컨트롤에 추가.
CreateTitleBarButton 함수에서 버튼 속성과 이벤트 핸들러를 설정.
버튼 위치는 폼 크기(SizeChanged 이벤트)와 동기화.
최소화/최대화/복원/닫기 버튼 구현:

최소화: MinimizeButton_Click에서 WindowState를 Minimized로 설정.
최대화/복원: MaximizeButton_Click에서 WindowState를 Maximized 또는 Normal로 전환.
닫기: CloseButton_Click에서 Close() 호출.
타이틀바 기본 동작 유지:

폼 이동: OnMouseDown에서 타이틀바 영역을 클릭하면 폼을 이동 가능.
더블 클릭 최대화/복원: OnDoubleClick에서 WindowState 변경.
디자인 요소:

타이틀바 배경과 텍스트는 OnPaint에서 그립니다.
버튼 스타일은 SimpleButton의 Appearance 속성을 사용해 조정.
결과
타이틀바 오른쪽에 최소화(-), 최대화/복원(🗖/🗗), 닫기(X) 버튼이 추가됩니다.
모든 버튼이 동작하며, UI가 깔끔하게 커스터마이징됩니다.
타이틀바를 드래그하여 폼 이동 가능, 더블 클릭 시 최대화/복원 동작 유지.
버튼 스타일은 DevExpress SimpleButton 스타일을 활용해 더 아름답게 표시됩니다.
이 코드는 실질적인 모든 요구사항을 충족합니다.












ChatGPT는 실수를 할 수 있습니다. 중요한 정보를 확인하세요.