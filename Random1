import paramiko
import os
import logging
import sys

# ===================================================================
# ==                 ★★★★★ 설정 (사용자 수정 영역) ★★★★★                 ==
# ===================================================================
# 접속할 서버 목록
HOSTS = ['192.168.1.101', '192.168.1.102'] 

# 라즈베리파이 'pi' 계정의 초기 비밀번호
PI_PASSWORD = 'raspberry' # 초기 비밀번호가 다르다면 수정하세요.

# 서버에 등록할 SSH 공개키. 아래 '1단계'를 참고하여 채워주세요.
# 예시: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC..."
PUBLIC_KEY = ""

# 로그 파일 이름
LOG_FILE = 'bootstrap_log.txt'
# ===================================================================

def setup_logging():
    logger = logging.getLogger('BootstrapLogger')
    logger.setLevel(logging.INFO)
    if not logger.handlers:
        file_handler = logging.FileHandler(LOG_FILE, encoding='utf-8')
        file_handler.setFormatter(logging.Formatter('%(asctime)s - %(hostname)s - %(message)s'))
        stream_handler = logging.StreamHandler()
        stream_handler.setFormatter(logging.Formatter('%(message)s'))
        logger.addHandler(file_handler)
        logger.addHandler(stream_handler)
    return logging.LoggerAdapter(logger, {'hostname': 'LOCAL'})


def bootstrap_host(hostname, password, pub_key, logger):
    adapter = logging.LoggerAdapter(logger, {'hostname': f'[{hostname}]'})
    adapter.info("SSH 키 등록 작업 시작...")
    client = paramiko.SSHClient()
    client.set_missing_host_key_policy(paramiko.AutoAddPolicy())

    if not pub_key.strip():
        adapter.error("오류: PUBLIC_KEY 변수가 비어있습니다. 스크립트를 수정해주세요.")
        return

    try:
        # 'pi' 계정과 '비밀번호'로 연결
        adapter.info(f"'pi' 계정과 비밀번호로 연결 시도...")
        client.connect(
            hostname,
            username='pi',
            password=password,
            timeout=10
        )
        adapter.info("연결 성공. 이제 SSH 키를 등록합니다.")

        # 홈디렉토리에 .ssh 폴더를 생성하고 권한 설정
        client.exec_command('mkdir -p ~/.ssh && chmod 700 ~/.ssh')
        
        # authorized_keys 파일에 공개키를 추가하고 권한 설정
        # '>'가 아닌 '>>'를 사용하여 기존 키가 있어도 덮어쓰지 않고 추가하도록 함
        command = f'echo "{pub_key}" >> ~/.ssh/authorized_keys && chmod 600 ~/.ssh/authorized_keys'
        stdin, stdout, stderr = client.exec_command(command)
        
        # 명령어 실행 완료 대기
        exit_status = stdout.channel.recv_exit_status()
        if exit_status != 0:
            error = stderr.read().decode().strip()
            raise Exception(f"키 등록 실패: {error}")

        adapter.info("성공! SSH 공개키가 성공적으로 등록되었습니다.")

    except paramiko.AuthenticationException:
        adapter.error("인증 실패! 비밀번호가 틀렸거나 SSH 설정이 다를 수 있습니다.")
    except Exception as e:
        adapter.error(f"오류 발생: {e}")
    finally:
        client.close()
        adapter.info("작업 종료.\n")

if __name__ == '__main__':
    logger = setup_logging()
    logger.info("="*20 + " 전체 서버에 SSH 키 등록 시작 " + "="*20)

    if not PUBLIC_KEY.strip():
        logger.error("스크립트 상단의 PUBLIC_KEY 변수에 SSH 공개키를 입력해야 합니다.")
        sys.exit(1)

    for host in HOSTS:
        bootstrap_host(host, PI_PASSWORD, PUBLIC_KEY, logger)
