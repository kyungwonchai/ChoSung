환경에서 Jupyter Notebook 실행 시 "404: Kernel does not exist" 에러가 발생하는 이유는 Jupyter Notebook이 사용하는 커널이 현재 가상환경과 연결되지 않았기 때문입니다. 특히, Python 3.7과 3.9 두 가지 가상환경을 사용하는 경우, 잘못된 커널 연결 설정으로 인해 발생할 수 있습니다.

아래에 이 문제를 해결하는 방법을 단계별로 설명합니다.

1. 문제의 원인
Jupyter Notebook이 현재 가상환경에 설치된 Python 커널을 인식하지 못함.
Jupyter Notebook이 이전에 사용된 가상환경(예: Python 3.7)을 참조.
Jupyter 설치 및 커널 설정이 잘못되었거나 누락됨.
2. 해결 방법
2-1. 현재 가상환경 활성화 및 확인
Python 3.9 가상환경 활성화:

cmd
코드 복사
cd <3.9_가상환경_경로>
venv\Scripts\activate
활성화되면 (venv)와 같은 프롬프트가 표시됩니다.

Python 버전 확인:

cmd
코드 복사
python --version
출력이 Python 3.9.x인지 확인합니다.

2-2. Jupyter Notebook 설치
가상환경 내에서 Jupyter Notebook이 설치되어 있는지 확인하고, 없으면 설치합니다.

Jupyter Notebook 설치:

cmd
코드 복사
pip install notebook
Jupyter 커널 모듈 설치:

cmd
코드 복사
pip install ipykernel
2-3. 가상환경을 Jupyter 커널에 등록
현재 가상환경을 Jupyter Notebook의 커널로 등록합니다.

커널 등록 명령 실행:

cmd
코드 복사
python -m ipykernel install --user --name=<가상환경_이름> --display-name "Python (3.9 가상환경)"
<가상환경_이름>: 가상환경 이름 (예: venv).
--display-name은 Jupyter Notebook에서 표시될 이름입니다.
등록된 커널 확인:

cmd
코드 복사
jupyter kernelspec list
출력 예:

mathematica
코드 복사
Available kernels:
  python3      C:\Users\<사용자>\AppData\Roaming\jupyter\kernels\python3
  venv         C:\Users\<사용자>\AppData\Roaming\jupyter\kernels\venv
2-4. Jupyter Notebook 실행
Jupyter Notebook 실행:
cmd
코드 복사
jupyter notebook
Notebook을 새로 생성할 때 "Python (3.9 가상환경)" 커널을 선택합니다:
상단 메뉴에서 Kernel > Change Kernel > Python (3.9 가상환경) 선택.
3. 문제 발생 시 추가 조치
3-1. 커널 정보 강제 삭제
이전 환경의 잘못된 커널 정보를 삭제합니다.

Jupyter의 커널 설정 파일 경로 확인:
cmd
코드 복사
jupyter kernelspec list
잘못된 커널 경로가 보이면 해당 폴더를 삭제합니다:
cmd
코드 복사
rmdir /s /q "<경로>"
3-2. Jupyter Notebook 업데이트
Jupyter Notebook과 관련 모듈을 최신 버전으로 업데이트합니다:

cmd
코드 복사
pip install --upgrade notebook ipykernel
4. 결론
위 과정을 완료한 후에도 문제가 지속된다면:

jupyter kernelspec list 결과를 공유해주세요.