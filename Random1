using System;
using System.Data.SqlClient;
using System.Windows;
using System.IO;

namespace AutoMemo
{
    public partial class MainWindow : Window
    {
        private string connectionString = "Server=your_server;Database=AutoMemoDB;User Id=your_username;Password=your_password;";
        private string settingsFilePath = "settings.txt";

        public MainWindow()
        {
            InitializeComponent();
            ProcessClipboardContent();
            SetWindowTitle();
        }

        private void ProcessClipboardContent()
        {
            if (Clipboard.ContainsText())
            {
                string clipboardText = Clipboard.GetText();
                clipboardTextBox.Text = clipboardText;
                SaveMemoToDatabase(clipboardText);
            }
        }

        private void SaveMemoToDatabase(string memoText)
        {
            using (SqlConnection conn = new SqlConnection(connectionString))
            {
                string query = "INSERT INTO T_AutoMemo (MemoText, RecordTime) VALUES (@MemoText, @RecordTime)";
                SqlCommand cmd = new SqlCommand(query, conn);
                cmd.Parameters.AddWithValue("@MemoText", memoText);
                cmd.Parameters.AddWithValue("@RecordTime", DateTime.Now);

                conn.Open();
                cmd.ExecuteNonQuery();
            }
        }

        private void btnLast5Days_Click(object sender, RoutedEventArgs e)
        {
            LoadMemos(DateTime.Now.AddDays(-5));
        }

        private void btnAll_Click(object sender, RoutedEventArgs e)
        {
            LoadMemos(null);
        }

        private void LoadMemos(DateTime? fromDate)
        {
            memoDataGrid.Items.Clear();
            using (SqlConnection conn = new SqlConnection(connectionString))
            {
                string query = "SELECT Id, MemoText, RecordTime FROM T_AutoMemo";
                if (fromDate.HasValue)
                {
                    query += " WHERE RecordTime >= @FromDate";
                }

                SqlCommand cmd = new SqlCommand(query, conn);
                if (fromDate.HasValue)
                {
                    cmd.Parameters.AddWithValue("@FromDate", fromDate.Value);
                }

                conn.Open();
                SqlDataReader reader = cmd.ExecuteReader();
                while (reader.Read())
                {
                    memoDataGrid.Items.Add(new MemoItem
                    {
                        Id = reader.GetInt32(0),
                        MemoText = reader.GetString(1),
                        RecordTime = reader.GetDateTime(2)
                    });
                }
            }
        }

        private void memoDataGrid_SelectionChanged(object sender, System.Windows.Controls.SelectionChangedEventArgs e)
        {
            if (memoDataGrid.SelectedItem != null)
            {
                MemoItem selectedMemo = memoDataGrid.SelectedItem as MemoItem;
                memoDetailsTextBox.Text = selectedMemo.MemoText;
            }
        }

        public class MemoItem
        {
            public int Id { get; set; }
            public string MemoText { get; set; }
            public DateTime RecordTime { get; set; }

            public override string ToString()
            {
                return $"{RecordTime}: {MemoText}";
            }
        }

        private void SetWindowTitle()
        {
            int nextNumber = 1;

            // 파일에서 마지막 번호를 읽어옴
            if (File.Exists(settingsFilePath))
            {
                string lastNumberStr = File.ReadAllText(settingsFilePath);
                if (int.TryParse(lastNumberStr, out int lastNumber))
                {
                    nextNumber = lastNumber + 1;
                }
            }

            // 새 번호를 제목에 설정
            this.Title = $"M{nextNumber}";

            // 새 번호를 파일에 기록
            File.WriteAllText(settingsFilePath, nextNumber.ToString());
        }
    }
}
