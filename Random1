말 죄송합니다. 이제야 문제를 명확하게 이해했습니다. RepositoryItemButtonEdit를 사용하는 경우 "..."로 보이고 버튼이 제대로 작동하지 않는 문제는 Unbound Column과 관련된 설정 문제입니다. 해결을 위해 RepositoryItemButtonEdit 대신 RepositoryItemButton을 사용해 GridControl에서 버튼을 표시하고 동작하도록 설정하겠습니다.

수정된 코드
csharp
코드 복사
using DevExpress.XtraGrid;
using DevExpress.XtraGrid.Views.Grid;
using DevExpress.XtraEditors.Repository;
using System;
using System.Drawing;
using System.Windows.Forms;

namespace YourNamespace
{
    public partial class Form1 : Form
    {
        private GridControl gridControl;
        private GridView gridView;

        public Form1()
        {
            InitializeComponent();
            InitializeGrid();
        }

        private void InitializeGrid()
        {
            // GridControl과 GridView 생성 및 설정
            gridControl = new GridControl();
            gridView = new GridView(gridControl);
            gridControl.MainView = gridView;
            gridControl.Dock = DockStyle.Fill;
            this.Controls.Add(gridControl);

            // 샘플 데이터 테이블 생성
            var table = new System.Data.DataTable();
            table.Columns.Add("ID", typeof(int)); // ID 컬럼
            table.Columns.Add("SerialNumber", typeof(string)); // 일련번호 컬럼

            // 샘플 데이터 추가
            for (int i = 1; i <= 10; i++)
            {
                table.Rows.Add(i, "SN" + i.ToString("000"));
            }

            // GridControl에 데이터 테이블 바인딩
            gridControl.DataSource = table;

            // 버튼 컬럼 추가
            AddBarcodeButtonColumn();
        }

        private void AddBarcodeButtonColumn()
        {
            // 버튼 에디터 생성
            RepositoryItemButtonEdit buttonEdit = new RepositoryItemButtonEdit();
            buttonEdit.TextEditStyle = DevExpress.XtraEditors.Controls.TextEditStyles.HideTextEditor;
            buttonEdit.Buttons[0].Caption = "생성"; // 버튼에 표시할 텍스트
            buttonEdit.ButtonClick += ButtonEdit_ButtonClick;

            // GridView에 버튼 컬럼 추가
            DevExpress.XtraGrid.Columns.GridColumn buttonColumn = new DevExpress.XtraGrid.Columns.GridColumn();
            buttonColumn.Caption = "바코드 생성"; // 컬럼 헤더 텍스트
            buttonColumn.FieldName = "ButtonColumn"; // 컬럼 이름
            buttonColumn.Visible = true;
            buttonColumn.VisibleIndex = gridView.Columns.Count; // 마지막에 컬럼 추가
            buttonColumn.UnboundType = DevExpress.Data.UnboundColumnType.String;
            buttonColumn.ColumnEdit = buttonEdit; // 버튼 에디터 할당

            gridView.Columns.Add(buttonColumn); // GridView에 컬럼 추가
        }

        // 버튼 클릭 이벤트 핸들러
        private void ButtonEdit_ButtonClick(object sender, DevExpress.XtraEditors.Controls.ButtonPressedEventArgs e)
        {
            // 현재 선택된 행의 일련번호 가져오기
            int rowHandle = gridView.FocusedRowHandle;
            string serialNumber = gridView.GetRowCellValue(rowHandle, "SerialNumber").ToString();

            // QR 코드 생성 및 표시
            ShowQrCodeForm(serialNumber);
        }

        private void ShowQrCodeForm(string serialNumber)
        {
            // 새 폼 생성
            Form qrForm = new Form();
            qrForm.Text = "QR 코드 생성";
            qrForm.Size = new Size(300, 300);

            // 안내 라벨 추가
            Label label = new Label();
            label.Text = "모바일기기로 읽으면 모바일시료기기 ID가 등록됩니다.\n(해당 일련번호가 모바일에 붙어있는 라벨과 같은지 확인필요)";
            label.Dock = DockStyle.Top;
            label.TextAlign = ContentAlignment.MiddleCenter;
            label.Height = 50;
            qrForm.Controls.Add(label);

            // QR 코드 생성 및 표시
            PictureBox pictureBox = new PictureBox();
            pictureBox.Dock = DockStyle.Fill;
            pictureBox.SizeMode = PictureBoxSizeMode.CenterImage;
            pictureBox.Image = GenerateQrCode(serialNumber);
            qrForm.Controls.Add(pictureBox);

            // 닫기 버튼 추가
            Button closeButton = new Button();
            closeButton.Text = "닫기";
            closeButton.Dock = DockStyle.Bottom;
            closeButton.Click += (s, e) => qrForm.Close();
            qrForm.Controls.Add(closeButton);

            qrForm.ShowDialog();
        }

        private Bitmap GenerateQrCode(string serialNumber)
        {
            var qrGenerator = new QRCoder.QRCodeGenerator();
            var qrCodeData = qrGenerator.CreateQrCode(serialNumber, QRCoder.QRCodeGenerator.ECCLevel.Q);
            var qrCode = new QRCoder.QRCode(qrCodeData);
            return qrCode.GetGraphic(20);
        }
    }
}
주요 변경 사항
RepositoryItemButtonEdit 사용: TextEditStyle를 HideTextEditor로 설정하고, UnboundColumn에서 발생하는 문제를 해결하기 위해 Caption 속성을 설정했습니다.

버튼 컬럼 명시적 추가: GridView의 컬럼을 명시적으로 생성하고, 그 컬럼에 RepositoryItemButtonEdit를 사용해 버튼을 할당했습니다.

이벤트 핸들러 설정: 버튼 클릭 이벤트를 ButtonEdit_ButtonClick에 명확히 연결하여 버튼이 클릭될 때 올바른 동작이 실행되도록 했습니다.

테스트 및 결과
이제 각 행에 버튼이 올바르게 표시되며, 해당 버튼을 클릭하면 QR 코드가 생성되고 새로운 창에 표시될 것입니다.

이 코드로 테스트를 다시 한 번 시도해 주시기 바랍니다. 만약 여전히 문제가 발생한다면 DevExpress의 버전 및 다른 설정 문제일