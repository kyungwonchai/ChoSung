C# WinForms (Clipboard 이미지 업로드 및 저장):

csharp

using System;
using System.Data.SqlClient;
using System.Drawing;
using System.Windows.Forms;

public static class ClipboardHelper
{
    private const string connectionString = "Data Source=your_server;Initial Catalog=your_database;User ID=your_username;Password=your_password";

    public static void SaveBitmapToDatabaseAndClipboard(string filePath)
    {
        if (Clipboard.ContainsImage())
        {
            // Clipboard에서 이미지 가져오기
            Image image = Clipboard.GetImage();

            // 이미지를 파일로 저장
            image.Save(filePath, System.Drawing.Imaging.ImageFormat.Png);

            // 이미지를 MSSQL 데이터베이스에 업로드
            UploadImageToDatabase(image);
        }
    }

    private static void UploadImageToDatabase(Image image)
    {
        using (SqlConnection connection = new SqlConnection(connectionString))
        {
            connection.Open();

            // SQL 쿼리 작성
            string query = "INSERT INTO ImageTable (ImageData) VALUES (@imageData)";
            SqlCommand command = new SqlCommand(query, connection);

            // 이미지를 byte[] 배열로 변환
            byte[] imageData = ImageToByteArray(image);

            // SQL 파라미터 설정
            SqlParameter parameter = new SqlParameter("@imageData", System.Data.SqlDbType.VarBinary, -1);
            parameter.Value = imageData;
            command.Parameters.Add(parameter);

            // 쿼리 실행
            command.ExecuteNonQuery();
        }
    }

    private static byte[] ImageToByteArray(Image image)
    {
        using (var stream = new System.IO.MemoryStream())
        {
            image.Save(stream, System.Drawing.Imaging.ImageFormat.Png);
            return stream.ToArray();
        }
    }
}

위의 코드에서 SaveBitmapToDatabaseAndClipboard 함수는 Clipboard에 있는 이미지를 가져와서 파일로 저장하고, 동시에 해당 이미지를 MSSQL 데이터베이스에 업로드합니다. filePath 매개변수는 이미지 파일이 저장될 경로를 전달받습니다.

Python Flask (ID 순서로 이미지 표시):

python

from flask import Flask, render_template
import pyodbc

app = Flask(__name__)

@app.route('/')
def index():
    # MSSQL 연결 설정
    conn = pyodbc.connect('DRIVER={SQL Server};SERVER=your_server;DATABASE=your_database;UID=your_username;PWD=your_password')

    try:
        # 데이터베이스에서 이미지 가져오기
        cursor = conn.cursor()
        query = "SELECT ImageData FROM ImageTable ORDER BY ID"
        cursor.execute(query)
        results = cursor.fetchall()

        # 이미지 데이터를 Flask 템플릿에 전달하여 렌더링
        return render_template('index.html', images=results)

    finally:
        # 연결 종료
        conn.close()

if __name__ == '__main__':
    app.run(port=5000)

위의 코드에서는 MSSQL 데이터베이스에 연결하여 이미지 데이터를 가져오고, 해당 데이터를 Flask 템플릿에 전달하여 웹 페이지에 렌더링합니다. 이미지는 ID 순서로 표시됩니다.

index.html 템플릿 파일은 Flask 애플리케이션에서 이미지를 표시하는 데 사용됩니다. 템플릿 파일에서는 이미지 데이터를 반복하여 화면에 표시할 수 있습니다. 템플릿 파일에는 적절한 HTML 및 Flask 템플릿 문법을 사용하여 이미지를 표시하는 로직을 작성해야 합니다.

위의 코드를 실행하여 C# WinForms 애플리케이션에서 이미지를 Clipboard에 복사하고, 해당 이미지가 MSSQL 데이터베이스에 업로드되며, Python Flask 애플리케이션에서 ID 순