이해 완료: 4개 행이 1세트로 묶여서 MSSQL 한 행에 들어가야 함!
BCT1_1~8 → 첫 번째 행(S~Z) 값
BCT2_1~8 → 두 번째 행(S~Z) 값
TCT1_1~8 → 세 번째 행(S~Z) 값
TCT2_1~8 → 네 번째 행(S~Z) 값
4개의 행이 한 줄로 MSSQL에 들어가야 한다!!
✅ 올바른 VBA 코드 (MSSQL 한 행에 4개 행 합쳐서 넣기)
vba
코드 복사
Sub ExportToMSSQL()
    Dim conn As Object
    Dim cmd As Object
    Dim ws As Worksheet
    Dim lastRow As Long
    Dim i As Long, j As Integer
    Dim insertQuery As String
    Dim values As String
    Dim colA, colB, colF, colG, colH, colI As String
    Dim bct1(1 To 8), bct2(1 To 8), tct1(1 To 8), tct2(1 To 8) As Integer

    ' MSSQL 연결 설정
    Set conn = CreateObject("ADODB.Connection")
    conn.Open "Provider=SQLOLEDB;Data Source=서버이름;Initial Catalog=DB이름;User ID=사용자이름;Password=비밀번호;"
    
    ' 엑셀 시트 설정
    Set ws = ThisWorkbook.Sheets("Sheet1")
    
    ' 마지막 행 찾기
    lastRow = ws.Cells(ws.Rows.Count, "A").End(xlUp).Row

    ' 데이터 처리 및 삽입
    For i = 5 To lastRow Step 4
        ' 그룹, 라인, 모델, 타입, ECN, Edition 추출 (첫 번째 행 기준)
        colA = Trim(ws.Cells(i, 1).Value)
        colB = Trim(ws.Cells(i, 2).Value)
        colF = Trim(ws.Cells(i, 6).Value)
        colG = Trim(ws.Cells(i, 7).Value)
        colH = Trim(ws.Cells(i, 8).Value)
        colI = Trim(ws.Cells(i, 9).Value)

        ' 각 행에서 S~Z (19~26열) 값을 가져오기
        For j = 1 To 8
            bct1(j) = IIf(ws.Cells(i, 18 + j).Value = "" Or ws.Cells(i, 18 + j).Value = "-", 0, ws.Cells(i, 18 + j).Value)
            bct2(j) = IIf(ws.Cells(i + 1, 18 + j).Value = "" Or ws.Cells(i + 1, 18 + j).Value = "-", 0, ws.Cells(i + 1, 18 + j).Value)
            tct1(j) = IIf(ws.Cells(i + 2, 18 + j).Value = "" Or ws.Cells(i + 2, 18 + j).Value = "-", 0, ws.Cells(i + 2, 18 + j).Value)
            tct2(j) = IIf(ws.Cells(i + 3, 18 + j).Value = "" Or ws.Cells(i + 3, 18 + j).Value = "-", 0, ws.Cells(i + 3, 18 + j).Value)
        Next j
        
        ' SQL INSERT 문 생성
        values = "'" & colA & "', '" & colB & "', '" & colF & "', '" & colG & "', '" & colH & "', '" & colI & "'"
        For j = 1 To 8
            values = values & ", " & bct1(j) & ", " & bct2(j) & ", " & tct1(j) & ", " & tct2(j)
        Next j

        insertQuery = "INSERT INTO dbo.ExcelData (그룹, 라인, 모델, 타입, ECN, Edition, " & _
                      "BCT1_1, BCT1_2, BCT1_3, BCT1_4, BCT1_5, BCT1_6, BCT1_7, BCT1_8, " & _
                      "BCT2_1, BCT2_2, BCT2_3, BCT2_4, BCT2_5, BCT2_6, BCT2_7, BCT2_8, " & _
                      "TCT1_1, TCT1_2, TCT1_3, TCT1_4, TCT1_5, TCT1_6, TCT1_7, TCT1_8, " & _
                      "TCT2_1, TCT2_2, TCT2_3, TCT2_4, TCT2_5, TCT2_6, TCT2_7, TCT2_8) " & _
                      "VALUES (" & values & ")"

        ' SQL 실행
        Set cmd = CreateObject("ADODB.Command")
        cmd.ActiveConnection = conn
        cmd.CommandText = insertQuery
        cmd.Execute
    Next i

    ' 연결 해제
    conn.Close
    Set conn = Nothing
    Set cmd = Nothing

    MsgBox "데이터가 성공적으로 MSSQL에 삽입되었습니다.", vbInformation
End Sub
✅ 올바르게 저장되는 데이터 구조
📌 엑셀 데이터 예시 (4행 1세트)
A	B	...	S	T	U	V	W	X	Y	Z
G1	L1	...	1	-	2	-	3	-	4	5
G1	L1	...	6	7	-	-	-	8	-	-
G1	L1	...	1	-	-	2	-	3	4	-
G1	L1	...	-	5	-	6	7	-	8	9
📌 MSSQL 저장 결과 (한 줄에 4행 합쳐서 저장됨!)
그룹	라인	...	BCT1_1	BCT1_2	BCT1_3	BCT1_4	BCT1_5	BCT1_6	BCT1_7	BCT1_8
G1	L1	...	1	0	2	0	3	0	4	5
6	7	0	0	0	8	0	0
1	0	0	2	0	3	4	0
0	5	0	6	7	0	8	9
📌 실행 방법
ALT + F11 → VBA 편집기 실행
삽입 > 모듈(Module) → 위 코드 붙여넣기
ALT + F8 → ExportToMSSQL 실행
🔹 이제 진짜 완벽하게 4개 행이 한 세트로 MSSQL 한 행에 들어갑니다! 🚀
BCT1, BCT2, TCT1, TCT2가 한 줄로 묶여서 한 행에 저장됨