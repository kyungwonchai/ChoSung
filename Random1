AllowDragDrop 속성은 DevExpress의 GridControl에서 직접 지원하지 않는 속성입니다. DevExpress의 GridControl에서 드래그 앤 드롭을 구현하기 위해서는 Drag-and-Drop Behavior를 설정해줘야 합니다.

아래는 DevExpress의 GridControl에서 드래그 앤 드롭 기능을 올바르게 구현하는 코드입니다.

GridControl에서 드래그 앤 드롭 기능 구현
1. XAML 코드 - DragDropBehavior 설정 추가
GridControl에 드래그 앤 드롭 기능을 설정하려면 dxg:GridControl.DragDropBehavior를 추가해야 합니다.

xml
코드 복사
<dxg:GridControl ItemsSource="{Binding TaskManager.Tasks}">
    <dxg:GridControl.View>
        <dxg:TableView AllowPerPixelScrolling="True" />
    </dxg:GridControl.View>
    <dxg:GridControl.Columns>
        <dxg:GridColumn FieldName="Priority" Header="순위" />
        <dxg:GridColumn FieldName="CreatedTime" Header="생성시간" />
        <dxg:GridColumn FieldName="UpdateCount" Header="수정횟수" />
        <dxg:GridColumn FieldName="LastUpdateTime" Header="수정시간" />
        <dxg:GridColumn FieldName="FolderPath" Header="폴더 경로" />
        <dxg:GridColumn FieldName="CellColor" Header="셀 색상">
            <dxg:GridColumn.CellTemplate>
                <DataTemplate>
                    <Border Background="{Binding CellColor}" />
                </DataTemplate>
            </dxg:GridColumn.CellTemplate>
        </dxg:GridColumn>
        <dxg:GridColumn FieldName="Assignee" Header="담당자" />
        <dxg:GridColumn FieldName="IsCompleted" Header="완료 여부" />
    </dxg:GridControl.Columns>
    
    <!-- 드래그 앤 드롭 기능을 활성화하기 위한 Behavior 설정 -->
    <dxg:GridControl.Behaviors>
        <dxg:DragDropBehavior AllowDrop="True" Drop="OnDrop" />
    </dxg:GridControl.Behaviors>
</dxg:GridControl>
2. Drop 이벤트 핸들러 - MainWindow.xaml.cs 코드에 추가
드래그 앤 드롭으로 항목 순서를 변경할 때, Drop 이벤트를 활용하여 작업 목록의 순서를 업데이트하고 데이터베이스에 저장할 수 있습니다.

csharp
코드 복사
using DevExpress.Xpf.Grid;
using System.Windows;
using System.Windows.Controls;
using SwiftAIMaster.ViewModels;
using SwiftAIMaster.Models;

namespace SwiftAIMaster.Views
{
    public partial class MainWindow : Window
    {
        private MainViewModel ViewModel => (MainViewModel)DataContext;

        public MainWindow()
        {
            InitializeComponent();
        }

        private void OnDrop(object sender, DevExpress.Xpf.Grid.DragDropEventArgs e)
        {
            if (e.Data.GetData(typeof(TaskModel)) is TaskModel droppedTask)
            {
                var grid = (GridControl)sender;
                var targetIndex = grid.GetRowHandleByMouseEventArgs(e);
                
                // 현재 위치에서 제거하고 새로운 위치로 이동
                ViewModel.TaskManager.Tasks.Remove(droppedTask);
                ViewModel.TaskManager.Tasks.Insert(targetIndex, droppedTask);

                // 순위 업데이트
                ViewModel.TaskManager.UpdateTaskPriorities();
                
                e.Handled = true;
            }
        }
    }
}
설명
DragDropBehavior: GridControl에 DragDropBehavior를 추가하여 드래그 앤 드롭 기능을 활성화합니다.
OnDrop 이벤트 핸들러: 항목을 드롭할 때 호출되며, 드래그한 작업을 새 위치에 삽입하고 UpdateTaskPriorities 메서드를 호출하여 순위를 데이터베이스에 업데이트합니다.
UpdateTaskPriorities 메서드: TaskManager 클래스에 정의된 메서드로, 순위를 새롭게 설정하고 데이터베이스에 변경 사항을