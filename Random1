package com.aibattlenet.smdcomponentmarking

import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.Manifest
import android.content.pm.PackageManager

import android.view.TextureView
import android.widget.Button
import android.widget.TextView

import androidx.core.app.ActivityCompat
import androidx.core.content.ContextCompat

import org.opencv.android.BaseLoaderCallback
import org.opencv.android.CameraBridgeViewBase
import org.opencv.android.LoaderCallbackInterface
import org.opencv.android.OpenCVLoader
import org.opencv.core.Core
import org.opencv.core.CvType
import org.opencv.core.Mat
import org.opencv.core.Rect
import org.opencv.core.Scalar
import org.opencv.core.Size
import org.opencv.imgproc.Imgproc

private val CAMERA_PERMISSION_REQUEST_CODE = 100
private lateinit var cameraPreview: TextureView
private lateinit var startButton: Button
private lateinit var stopButton: Button
private lateinit var resultText: TextView


class MainActivity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)


        // XML에서 정의한 요소들을 가져옴
        cameraPreview = findViewById(R.id.cameraPreview)
        startButton = findViewById(R.id.startButton)
        stopButton = findViewById(R.id.stopButton)
        resultText = findViewById(R.id.resultText)

        // "on" 버튼 클릭 이벤트 처리
        startButton.setOnClickListener {
            // 카메라 권한 요청
            if (ContextCompat.checkSelfPermission(this, Manifest.permission.CAMERA)
                != PackageManager.PERMISSION_GRANTED
            ) {
                ActivityCompat.requestPermissions(
                    this,
                    arrayOf(Manifest.permission.CAMERA),
                    CAMERA_PERMISSION_REQUEST_CODE
                )
            } else {
                // 카메라 인식 시작
                startCameraRecognition()
            }
        }

        // "off" 버튼 클릭 이벤트 처리
        stopButton.setOnClickListener {
            // 카메라 인식 종료
            stopCameraRecognition()
        }

    }

    // 카메라 인식 시작 메서드
    private fun startCameraRecognition() {
        // 카메라 미리보기 활성화 및 글자 인식 기능 구현
        // 여기서부터 실제로 카메라 및 글자 인식 기능을 구현하시면 됩니다.
        // 인식된 결과는 resultText에 표시하도록 구현하면 됩니다.
    }

    // 카메라 인식 종료 메서드
    private fun stopCameraRecognition() {
        // 카메라 미리보기 종료 및 인식 기능 중지
        // 필요한 정리 작업을 수행하면 됩니다.
    }

    override fun onRequestPermissionsResult(
        requestCode: Int,
        permissions: Array<String>,
        grantResults: IntArray
    ) {
        super.onRequestPermissionsResult(requestCode, permissions, grantResults)
        if (requestCode == CAMERA_PERMISSION_REQUEST_CODE) {
            if (grantResults.isNotEmpty() && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
                // 카메라 인식 시작
                startCameraRecognition()
            }
        }
    }
}