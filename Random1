    경색을 저장할 속성을 추가합니다.

csharp

public class YourDataItemType
{
    // 기존의 필드들...
    public int key1 { get; set; }

    // 새로운 배경색 필드
    public string RowBackground { get; set; }
}

    TableView의 RowStyle 이벤트를 구독하여 배경색을 설정합니다.

csharp

private void TableView_RowStyle(object sender, RowStyleEventArgs e)
{
    var item = gridControl1.GetRow(e.RowHandle) as YourDataItemType;
    if (item != null)
    {
        if (!string.IsNullOrEmpty(item.RowBackground))
        {
            e.Appearance.BackColor = System.Drawing.ColorTranslator.FromHtml(item.RowBackground);
        }
    }
}

    LockAndChangeColor 함수에서 행의 배경색을 변경합니다.

csharp

private void LockAndChangeColor(int keyValue)
{
    TableView tableView = gridControl1.View as TableView;
    if (tableView != null)
    {
        for (int rowHandle = 0; rowHandle < tableView.Grid.VisibleRowCount; rowHandle++)
        {
            object cellValue = tableView.Grid.GetCellValue(rowHandle, "key1");
            if (cellValue != null && (int)cellValue == keyValue)
            {
                var rowData = tableView.Grid.GetRow(rowHandle) as YourDataItemType;
                if (rowData != null)
                {
                    rowData.RowBackground = "#FFFF00";  // 노란색
                }
            }
        }
        tableView.RefreshData();
    }
}

이렇게 하면 LockAndChang