
You will use the GridColumn with CellTemplate to embed a button inside the column cells. Here's how to set it up:

xml
Copy code
<Window x:Class="YourNamespace.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
        Title="MainWindow" Height="450" Width="800">
    <Grid>
        <dxg:GridControl x:Name="gridControl">
            <dxg:GridControl.Columns>
                <dxg:GridColumn FieldName="abc" Header="ABC" />
                <!-- New Column with Button -->
                <dxg:GridColumn Header="View Minimum CT">
                    <dxg:GridColumn.CellTemplate>
                        <DataTemplate>
                            <Button Content="View Minimum CT" Click="Button_Click"/>
                        </DataTemplate>
                    </dxg:GridColumn.CellTemplate>
                </dxg:GridColumn>
            </dxg:GridControl.Columns>
            <dxg:GridControl.View>
                <dxg:TableView x:Name="tableView" />
            </dxg:GridControl.View>
        </dxg:GridControl>
    </Grid>
</Window>
2. Handling the Button Click in C#
You need to handle the button click event to show a message box displaying the value from the "abc" column of the same row where the button was clicked. Implement the event handler in your code-behind:

csharp
Copy code
public MainWindow()
{
    InitializeComponent();
}

private void Button_Click(object sender, RoutedEventArgs e)
{
    // Get the current button
    var button = sender as Button;
    if (button != null)
    {
        // Find the row that contains this button
        var row = button.Tag as GridRow;
        if (row == null)
        {
            row = LayoutTreeHelper.GetVisualParents(button).OfType<GridRow>().FirstOrDefault();
        }

        if (row != null)
        {
            // Get the value of 'abc' from the current row
            var value = gridControl.GetCellValue(row.RowHandle, "abc");
            MessageBox.Show($"Value in 'abc' column: {value}");
        }
    }
}
Explanation:
CellTemplate with Button: The CellTemplate in the new column contains a button. Each button's Click event is tied to the Button_Click event handler defined in the C# code.
Button_Click Event Handler: This handler first finds the row associated with the clicked button. It uses helper functions and the visual tree to locate the row containing the button. Once the row is identified, it retrieves the value from the "abc" column and displays it in a message box.
This setup allows each button in the new column to function interactively, retrieving and displaying data from its corresponding row, 