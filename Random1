 트레이 아이콘이 생기는 문제는 MainWindow를 두 번 생성해서 발생한 것으로 보입니다. 이는 App.xaml.cs에서 MainWindow를 다시 생성하기 때문입니다. App.xaml.cs에서는 단순히 트레이 아이콘을 처리하고 MainWindow를 별도로 생성하지 않도록 해야 합니다.

여기서는 App.xaml.cs에서 MainWindow를 생성하는 부분을 제거하고, 트레이 아이콘 처리를 MainWindow.xaml.cs에만 두는 방식으로 해결할 수 있습니다.

MainWindow.xaml.cs 수정
필요한 네임스페이스 추가:
csharp
코드 복사
using System;
using System.Windows;
using System.Windows.Forms; // Windows Forms 사용을 위해 추가
using System.Drawing; // Icon 사용을 위해 추가
MainWindow 클래스 수정:
csharp
코드 복사
namespace SMDFileCleaner
{
    public partial class MainWindow : Window
    {
        private NotifyIcon _notifyIcon;

        public MainWindow()
        {
            InitializeComponent();
            InitializeTrayIcon();
        }

        private void InitializeTrayIcon()
        {
            _notifyIcon = new NotifyIcon();
            string iconPath = System.IO.Path.Combine(AppDomain.CurrentDomain.BaseDirectory, "youricon.ico"); // .ico 파일 경로 지정
            _notifyIcon.Icon = new Icon(iconPath);
            _notifyIcon.Visible = true;
            _notifyIcon.DoubleClick += NotifyIcon_DoubleClick;

            AppDomain.CurrentDomain.ProcessExit += OnProcessExit;
            Application.Current.Exit += OnApplicationExit;
        }

        private void NotifyIcon_DoubleClick(object sender, EventArgs e)
        {
            // 트레이 아이콘 더블 클릭 시 동작할 코드
            this.Show();
            this.WindowState = WindowState.Normal;
        }

        private void OnApplicationExit(object sender, ExitEventArgs e)
        {
            if (_notifyIcon != null)
            {
                _notifyIcon.Visible = false;
                _notifyIcon.Dispose();
            }
        }

        private void OnProcessExit(object sender, EventArgs e)
        {
            if (_notifyIcon != null)
            {
                _notifyIcon.Visible = false;
                _notifyIcon.Dispose();
            }
        }

        protected override void OnClosed(EventArgs e)
        {
            _notifyIcon.Dispose(); // 트레이 아이콘 파괴
            base.OnClosed(e);
        }
    }
}
App.xaml.cs 수정
App.xaml.cs에서는 MainWindow를 생성하지 않고, 트레이 아이콘 처리만 MainWindow 내에서 하도록 수정합니다.

csharp
코드 복사
using System;
using System.Windows;

namespace SMDFileCleaner
{
    public partial class App : Application
    {
        protected override void OnStartup(StartupEventArgs e)
        {
            base.OnStartup(e);

            // MainWindow는 여기서 생성하지 않음
        }
    }
}
이렇게 하면, 트레이 아이콘 초기화 및 제거는 MainWindow에서만 처리되므로 두 번 생성되지 않으며, 애플리케이션 종료 시 트레이 아이콘이 올바르게 제거됩니다.

다시 정리하면, MainWindow.xaml.cs에서 트레이 아이콘을 초기화하고, App.xaml.cs에서는 별도로 MainWindow를 생성하지 않도록 합니다. 이 방식으로 두 개의 트레이 아이콘이 생성되는 문제를 해결할 수 있습니다.