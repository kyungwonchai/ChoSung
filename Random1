DevExpress WPF ChartControl에서 크로스헤어(Crosshair) 옵션의 그룹 헤더 패턴(GroupHeaderPattern)을 사용하여 원하는 여러 값을 여러 줄에 걸쳐 표시하려면, 패턴 문자열에 플레이스홀더와 줄 바꿈 문자를 활용하면 됩니다.

1. GroupHeaderPattern 설정:

GroupHeaderPattern 속성은 크로스헤어 그룹 헤더의 텍스트 형식을 지정하는 데 사용됩니다. 여기서 {A}는 현재 포인트의 인수를 나타내며, {V}는 값을 나타냅니다. 줄 바꿈을 위해서는 \n 또는 XML 엔터티 &#x0a;를 사용할 수 있습니다.

예시:

xml
코드 복사
<dxc:ChartControl.CrosshairOptions>
    <dxc:CrosshairOptions GroupHeaderPattern="인수: {A}&#x0a;값: {V}" />
</dxc:ChartControl.CrosshairOptions>
위의 설정은 크로스헤어 그룹 헤더에 인수와 값을 두 줄에 걸쳐 표시합니다.

2. Series의 CrosshairLabelPattern 설정:

각 시리즈에 대해 CrosshairLabelPattern 속성을 설정하여 크로스헤어 레이블의 형식을 지정할 수 있습니다. 여기서 {S}는 시리즈 이름, {V}는 값, {A}는 인수를 나타냅니다.

예시:

xml
코드 복사
<dxc:LineSeries2D DisplayName="시리즈1" CrosshairLabelPattern="시리즈: {S}&#x0a;인수: {A}&#x0a;값: {V}">
    <!-- 시리즈 데이터 포인트 -->
</dxc:LineSeries2D>
이렇게 하면 크로스헤어 레이블에 시리즈 이름, 인수, 값을 각각 한 줄씩 세 줄에 걸쳐 표시합니다.

3. CustomDrawCrosshair 이벤트 활용:

더 복잡한 커스터마이징이 필요하다면, CustomDrawCrosshair 이벤트를 활용하여 크로스헤어 요소의 모양과 내용을 동적으로 설정할 수 있습니다.

예시:

csharp
코드 복사
chartControl.CustomDrawCrosshair += (sender, e) =>
{
    foreach (var group in e.CrosshairElementGroups)
    {
        // 그룹 헤더 텍스트 설정
        group.HeaderElement.Text = $"인수: {group.CrosshairElements[0].Argument}\n값: {group.CrosshairElements[0].Value}";

        foreach (var element in group.CrosshairElements)
        {
            // 레이블 텍스트 설정
            element.LabelElement.Text = $"시리즈: {element.Series.DisplayName}\n인수: {element.Argument}\n값: {element.Value}";
        }
    }
};
이 코드는 각 크로스헤어 그룹과 요소에 대해 원하는 형식으로 텍스트를 설정합니다.

참고 자료:

CrosshairOptions.GroupHeaderPattern Property

Crosshair Cursor Customization