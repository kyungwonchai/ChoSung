려 했는데, PLC 화면에서 10으로 표시된 문제네요. 이 문제는 값이 16진수로 변환된 후 리틀 엔디안 형식으로 전송되면서 잘못 해석되었을 가능성이 큽니다.

1. 문제 분석
당신이 96이라는 10진수 값을 리틀 엔디안으로 변환한 후 PLC에 전송하려고 했다면, 다음과 같은 절차를 예상할 수 있습니다:

10진수 값 96을 16진수로 변환하면 0x0060이 됩니다.
리틀 엔디안 형식으로 전송하면 이 값은 바이트 순서가 반대로 되어 60 00이 됩니다.
PLC는 이 값을 받아서 다시 10진수로 해석해야 합니다.
하지만 이 과정에서 PLC가 잘못된 바이트 순서나 데이터를 해석했거나, 송신 측에서 값 변환이 잘못되었을 수 있습니다. 결과적으로, PLC는 0x000A 즉 10이라는 값을 표시하게 된 것입니다.

2. 해결 방법
이 문제를 해결하려면 값을 리틀 엔디안 형식으로 올바르게 변환하고, PLC가 이 값을 올바르게 해석하도록 해야 합니다.

1. 10진수 값을 16진수로 변환하고 리틀 엔디안으로 전송하기
PLC에 96이라는 10진수 값을 전송하려면, 먼저 이 값을 16진수로 변환한 후 리틀 엔디안 형식으로 변환해야 합니다. C# 코드로 예를 들면 다음과 같이 작성할 수 있습니다.

C# 코드 예시 (리틀 엔디안으로 변환)
csharp
코드 복사
// 10진수 값 96을 16진수로 변환하고, 리틀 엔디안으로 변환하여 전송
int value = 96; // 10진수 값 96

// 리틀 엔디안 형식으로 변환 (2바이트)
byte[] littleEndianBytes = BitConverter.GetBytes(value);

// 만약 시스템이 빅 엔디안일 경우 바이트 순서를 반대로 뒤집어야 함
if (!BitConverter.IsLittleEndian)
{
    Array.Reverse(littleEndianBytes);
}

// littleEndianBytes 배열을 PLC에 전송
// PLC가 이 값을 올바르게 해석하면 96이 표시되어야 함
이 코드는 10진수 값 96을 16진수로 변환하고 리틀 엔디안 형식으로 변환하여 전송하는 방법을 보여줍니다. PLC에서는 이 데이터를 다시 10진수로 해석할 수 있어야 합니다.

2. PLC에서 바이트 순서 확인
PLC가 데이터를 받을 때, 리틀 엔디안 형식으로 해석해야 합니다. 만약 PLC가 기본적으로 빅 엔디안 형식을 사용한다면, 값이 잘못 해석되어 0x000A (즉, 10)으로 표시될 수 있습니다.

예시: 값 96의 리틀 엔디안 변환
10진수 96은 16진수로 0x0060입니다.
리틀 엔디안으로 전송하면, 바이트 순서는 60 00으로 전송됩니다.
PLC에서 이 바이트를 리틀 엔디안으로 해석하면 다시 0x0060이 되고, 이 값은 10진수로 96이 되어야 합니다.
그러나 PLC가 빅 엔디안으로 해석하면 바이트 순서가 반대로 되어 0x000A, 즉 10으로 표시될 수 있습니다.

3. PLC에서 바이트 순서 설정
PLC에서 데이터를 수신할 때 리틀 엔디안 방식으로 데이터를 처리하는지 확인해보세요. 만약 PLC가 기본적으로 빅 엔디안 방식으로 데이터를 처리하고 있다면, 바이트 순서를 반대로 해석하는 문제가 발생할 수 있습니다.

3. 결론
10진수 96을 PLC에 전송할 때 리틀 엔디안 형식으로 변환하여 전송하고, PLC에서 이 데이터를 올바르게 해석할 수 있는지 확인합니다.
C#에서는 BitConverter.GetBytes()를 사용하여 값을 리틀 엔디안 형식으로 변환할 수 있으며, 필요시 바이트 순서를 조정할 수 있습니다.