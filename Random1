FNL이 감지되면 마젠타색으로 행의 배경색을 변경하고, 기존의 **주황색(-)**과 노란색(RCC) 조건과 함께 추가해보겠습니다. 이를 위해 **FNL**을 감지하는 조건을 추가하고, 해당 행의 배경색을 마젠타로 설정합니다.

수정된 index.html:
html
코드 복사
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Command Log Table</title>
    <style>
        body {
            margin: 0;
            padding: 0;
            font-family: Arial, sans-serif;
        }

        /* 버튼 고정 */
        .fixed-button {
            position: fixed;
            top: 10px;
            left: 10px;
            z-index: 1000;
        }

        /* 테이블 전체 크기를 줄이고 글씨 크기를 작게 설정 */
        table {
            width: 100%;
            border-collapse: collapse;
            margin: 20px 0;
            font-size: 12px; /* 글씨 크기 줄임 */
            text-align: left;
        }
        th, td {
            padding: 8px 10px; /* 패딩 줄이기 */
            border: 1px solid #ddd;
        }
        th {
            background-color: #f2f2f2;
        }

        /* 기본 배경색: 하늘색 */
        .bg-lightblue {
            background-color: lightblue;
        }

        /* RCC 포함시 배경색: 노란색 */
        .bg-yellow {
            background-color: yellow;
        }

        /* '-'만 포함된 경우 배경색: 주황색 */
        .bg-orange {
            background-color: orange;
        }

        /* FNL 감지 시 배경색: 마젠타 */
        .bg-magenta {
            background-color: magenta;
        }

        /* 테이블 컨테이너 설정 */
        .table-container {
            margin-top: 60px;
            overflow-y: auto;
            height: 80vh; /* 화면 높이의 80%로 설정 */
            font-size: 12px; /* 글씨 크기 줄임 */
        }
    </style>

    <script>
        let refreshInterval = null;  // 자동 새로고침 간격을 관리할 변수

        // 체크박스 상태 변경 시 호출되는 함수
        function toggleAutoRefresh(checkbox) {
            if (checkbox.checked) {
                // 체크박스가 체크되면 5초마다 새로고침
                refreshInterval = setInterval(() => {
                    location.reload();
                }, 5000);  // 5000ms = 5초
                // 체크박스 상태를 로컬 스토리지에 저장
                localStorage.setItem('autoRefresh', 'true');
            } else {
                // 체크박스가 체크 해제되면 자동 새로고침 중단
                clearInterval(refreshInterval);
                // 로컬 스토리지에서 체크박스 상태 제거
                localStorage.setItem('autoRefresh', 'false');
            }
        }

        // 페이지 로드 시 체크박스 상태 복원
        window.onload = function() {
            const autoRefresh = localStorage.getItem('autoRefresh');
            const checkbox = document.getElementById('auto-refresh-checkbox');

            if (autoRefresh === 'true') {
                checkbox.checked = true;
                toggleAutoRefresh(checkbox);  // 자동 새로고침을 다시 시작
            }
        }
    </script>
</head>
<body>

<h2>Command Log Table</h2>

<!-- 상단에 고정된 새로고침 버튼과 체크박스 -->
<div class="fixed-button">
    <button onclick="location.reload();">새로고침</button>
    <label>
        <input type="checkbox" id="auto-refresh-checkbox" onchange="toggleAutoRefresh(this)">
        5초마다 새로고침
    </label>
</div>

<!-- 테이블이 포함된 컨테이너 -->
<div class="table-container">
    <table>
        <thead>
            <tr>
                {% for column in columns %}
                <th>{{ column }}</th>
                {% endfor %}
            </tr>
        </thead>
        <tbody>
            {% for row in rows %}
            <tr class="
                {% if 'RCC' in row[2] %}
                    bg-yellow
                {% elif row[2] == '-' %}
                    bg-orange
                {% elif 'FNL' in row[2] %}
                    bg-magenta
                {% else %}
                    bg-lightblue
                {% endif %}
            ">
                {% for item in row %}
                <td>{{ item }}</td>
                {% endfor %}
            </tr>
            {% endfor %}
        </tbody>
    </table>
</div>

</body>
</html>
1. 동작 설명:
기존 조건 유지:

SentCommand에 **RCC**가 포함되어 있으면 노란색.
SentCommand에 **-**만 있으면 주황색.
새로운 조건 추가:

SentCommand에 **FNL**이 포함되어 있으면 마젠타색으로 설정합니다.
CSS 클래스 추가:

.bg-magenta: 마젠타 배경색을 설정하는 클래스입니다.
조건 적용 순서:

**RCC**가 포함된 경우가 가장 우선 적용됩니다.
그다음 **-**가 있는 경우, 그리고 **FNL**이 포함된 경우에 각각 다른 배경색이 적용됩니다.
나머지 조건에 해당하지 않으면 기본 하늘색이 적용됩니다.
2. 실행 후 결과:
**SentCommand**에 **RCC**가 포함된 행은 노란색 배경으로 표시됩니다.
**SentCommand**에 **-**만 포함된 행은 주황색 배경으로 표시됩니다.
**SentCommand**에 **FNL**이 포함된 행은 마젠타색 배경으로 표시됩니다.
위 조건에 해당하지 않는 행은 하늘색으로 표시됩니다.
이렇게 하면 조건별로 다른 배경색을 설정하여 행을 구분할 수 있습니다