서 로그를 읽고, 시간 값과 나머지 값을 정렬하여 엑셀 파일로 저장하는 코드입니다. 로그 행은 연한 회색 배경으로 설정되며, 엑셀 파일로 저장됩니다.

python
코드 복사
import os
import pandas as pd
from datetime import datetime

# Log file directory
log_directory = "c:/test"

# List to store the parsed log data
log_data = []

# Read all files in the directory that do NOT contain "commandqueue"
for filename in os.listdir(log_directory):
    if "commandqueue" not in filename.lower():
        file_path = os.path.join(log_directory, filename)
        
        # Open and read the file
        with open(file_path, 'r', encoding='utf-8') as file:
            lines = file.readlines()
            for line in lines:
                # Check if the line contains a time value enclosed in []
                if '[' in line and ']' in line:
                    start_idx = line.index('[')
                    end_idx = line.index(']', start_idx) + 1
                    time_value = line[start_idx:end_idx]  # Extract the time value with brackets
                    remaining_value = line[end_idx:].strip()  # Remaining part of the line as SentValue
                    
                    log_data.append([time_value, remaining_value])

# Convert the log data to a DataFrame for easier manipulation and sorting
df = pd.DataFrame(log_data, columns=["Time", "SentValue"])

# Sort the DataFrame by the "Time" column
df = df.sort_values(by="Time")

# Prepare the output directory
output_directory = "c:/test/csv2"
os.makedirs(output_directory, exist_ok=True)

# Create the output file name with the current timestamp
timestamp = datetime.now().strftime("%Y%m%d%H%M%S")
output_file = os.path.join(output_directory, f"{timestamp}_log_output.xlsx")

# Save the DataFrame to an Excel file with light gray row color for all rows
with pd.ExcelWriter(output_file, engine='xlsxwriter') as writer:
    df.to_excel(writer, index=False, sheet_name='LogData')
    workbook = writer.book
    worksheet = writer.sheets['LogData']
    
    # Define the format for light gray background
    light_gray_format = workbook.add_format({'bg_color': '#D3D3D3'})
    
    # Apply the format to all rows (1: infinite rows, 1:2 columns)
    worksheet.conditional_format(1, 0, len(df), 1, {'type': 'no_blanks', 'format': light_gray_format})

print(f"Excel file has been saved as '{output_file}'.")
코드 설명