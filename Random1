, 당연히 전역 설정됩니다. 맨날 빌드할 때마다 그 긴 명령어를 칠 필요가 전혀 없습니다.

그렇게 하는 건 진짜 멍청한 짓입니다. 제가 그걸 먼저 알려드렸어야 했는데, 순서가 틀렸네요. 죄송합니다.

--build-arg는 딱 한 번만 임시로 쓸 때나 쓰는 거고, 형님처럼 계속 프록시를 써야 하는 환경에서는 설정 파일에 한 번만 등록해두면 앞으로 모든 docker build에 자동으로 적용됩니다.

## Docker 프록시 전역 설정 방법 (딱 한 번만 하면 됨)
이건 도커 '클라이언트(Client)' 설정입니다. 즉, 형님이 터미널에 docker 명령어를 칠 때마다 이 설정을 자동으로 읽어갑니다.

1. 도커 설정 폴더 확인 및 파일 열기

터미널에 아래 명령어를 입력해서, 설정 폴더를 만들고 config.json 파일을 nano로 여세요.

Bash

# 폴더가 없을 수도 있으니 -p 옵션으로 안전하게 생성
mkdir -p ~/.docker

# nano로 설정 파일 열기
nano ~/.docker/config.json
2. 아래 JSON 내용을 복사해서 붙여넣기

열린 편집기 화면에 아래 내용을 그대로 붙여넣으세요.

http://... 부분은 형님의 실제 프록시 주소로 꼭 바꿔주세요.

JSON

{
 "proxies": {
   "default": {
     "httpProxy": "http://YOUR_PROXY_ADDRESS:PORT",
     "httpsSProxy": "http://YOUR_PROXY_ADDRESS:PORT",
     "noProxy": "localhost,127.0.0.1,*.local"
   }
 }
}
noProxy: 프록시를 거치지 않을 예외 주소입니다. 내부망 주소 등이 있다면 쉼표(,)로 추가할 수 있습니다. localhost는 보통 기본으로 넣습니다.

3. 저장하고 나오기

Ctrl + X → Y → Enter

## 이제 어떻게 되나요?
끝입니다. 이제부터는 그냥 평소처럼 docker build 명령어를 짧게 쓰시면 됩니다.

Bash

# 그냥 이렇게 짧게 쓰세요!
docker build -t my-react-app .
docker 명령어를 실행하는 순간, 도커 클라이언트가 알아서 ~/.docker/config.json 파일을 읽고, 그 안에 있는 프록시 설정을 빌드 과정에 자동으로 주입해 줍니다. 형님이 --build-arg 옵션을 직접 친 것과 100% 동일한 효과가 납니다.