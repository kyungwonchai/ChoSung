private void AnalyzeFolders(string path, bool isRootCall)
{
    try
    {
        DirectoryInfo rootDir = new DirectoryInfo(path);
        foreach (DirectoryInfo dir in rootDir.GetDirectories())
        {
            try
            {
                // 이 폴더의 파일들만을 사용해 용량을 계산
                long size = CalculateFolderSize(dir);
                if (size >= 1073741824) // 1GB 이상
                {
                    DateTime lastModified = GetMostRecentFileDate(dir);
                    string info = $"{dir.FullName} ({size} bytes) - Last Modified: {lastModified.ToString("yyyy-MM-dd HH:mm:ss")}";
                    Application.Current.Dispatcher.Invoke(() => UpdateListBoxes(info, lastModified));
                }
                // 하위 폴더 검사 계속 진행
                AnalyzeFolders(dir.FullName, false);
            }
            catch (UnauthorizedAccessException)
            {
                continue;
            }
        }

        if (isRootCall)
        {
            Application.Current.Dispatcher.Invoke(() => UpdateListBox1("분석 완료"));
        }
    }
    catch (Exception ex)
    {
        MessageBox.Show($"An error occurred: {ex.Message}");
    }
}

private long CalculateFolderSize(DirectoryInfo directory)
{
    // 이 폴더 내 파일들의 총 용량을 계산하고, 하위 폴더는 제외
    return directory.GetFiles("*", SearchOption.TopDirectoryOnly).Sum(file => file.Length);
}

private DateTime GetMostRecentFileDate(DirectoryInfo directory)
{
    FileInfo[] files = directory.GetFiles("*", SearchOption.TopDirectoryOnly);
    return files.Length > 0 ? files.Max(file => file.LastWriteTime) : directory.LastWriteTime;
}
