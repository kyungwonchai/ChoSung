아래는 변수명을 ForceEjectNumbers로 변경한 예제입니다.

수정된 코드 예제
Step 1: MainViewModel에서 ForceEjectNumbers 정의 및 초기화
csharp
코드 복사
using System.Collections.ObjectModel;

public class MainViewModel
{
    // 숫자형 데이터를 저장하는 ObservableCollection
    public ObservableCollection<int> ForceEjectNumbers { get; set; }

    public MainViewModel()
    {
        // 초기 값 추가
        ForceEjectNumbers = new ObservableCollection<int> { 10, 20, 30 };
    }

    // 값을 변경하는 메서드 (테스트용)
    public void UpdateValue(int index, int newValue)
    {
        if (index >= 0 && index < ForceEjectNumbers.Count)
        {
            ForceEjectNumbers[index] = newValue; // ObservableCollection의 값 변경
        }
    }
}
Step 2: 다른 클래스에서 ForceEjectNumbers 주입 및 값 변경
csharp
코드 복사
public class NumberUpdater
{
    private ObservableCollection<int> _forceEjectNumbers;

    // 생성자에서 ObservableCollection 주입
    public NumberUpdater(ObservableCollection<int> forceEjectNumbers)
    {
        _forceEjectNumbers = forceEjectNumbers;
    }

    // 특정 인덱스의 값을 변경하는 메서드
    public void UpdateNumber(int index, int newValue)
    {
        if (index >= 0 && index < _forceEjectNumbers.Count)
        {
            _forceEjectNumbers[index] = newValue; // ObservableCollection 값 변경
        }
    }
}
Step 3: ViewModel과 클래스 연결 및 값 업데이트
csharp
코드 복사
class Program
{
    static void Main(string[] args)
    {
        // MainViewModel 초기화
        var mainViewModel = new MainViewModel();

        // NumberUpdater 클래스에 ForceEjectNumbers 주입
        var updater = new NumberUpdater(mainViewModel.ForceEjectNumbers);

        // 값 업데이트
        updater.UpdateNumber(1, 50); // ForceEjectNumbers[1]의 값을 50으로 변경

        // 변경된 값 확인
        foreach (var number in mainViewModel.ForceEjectNumbers)
        {
            Console.WriteLine(number); // 출력: 10, 50, 30
        }
    }
}
UI 바인딩 (선택 사항)
XAML에서 ForceEjectNumbers를 바인딩하는 예제는 아래와 같습니다.

XAML
xml
코드 복사
<Window x:Class="ObservableExample.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="MainWindow" Height="200" Width="300">
    <Grid>
        <!-- ForceEjectNumbers 바인딩 -->
        <ListBox ItemsSource="{Binding ForceEjectNumbers}" />
    </Grid>
</Window>
MainWindow.xaml.cs
csharp
코드 복사
public partial class MainWindow : Window
{
    public MainWindow()
    {
        InitializeComponent();
        DataContext = new MainViewModel(); // ViewModel 바인딩
    }
}
주요 포인트
ForceEjectNumbers는 참조 타입(ObservableCollection)이므로, 주입된 클래스에서 값을 변경하면 원본 객체도 업데이트됩니다.
UI에 바인딩된 경우, 값 변경이 자동으로 반영됩니다.