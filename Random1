아요! 이번엔 매우 간단하게,
문자열(string) 하나만 전달하고,
다른 클래스의 함수가 그 문자열을 받아 처리하는 이벤트 구조를 보여드릴게요.

복잡한 EventArgs 서브클래스 없이,
EventHandler<string> 을 사용하면 됩니다!

간단한 샘플 코드
csharp
코드 복사
using System;

namespace SimpleEventExample
{
    // 문자열 이벤트를 발생시키는 클래스
    public class ClassA
    {
        // 문자열만 전달하는 이벤트 선언 (EventHandler<string> 사용)
        public event EventHandler<string> OnMessageSent;

        // 외부에서 이 메서드를 호출하면 문자열 이벤트가 발생됨
        public void SendMessage(string msg)
        {
            Console.WriteLine("[ClassA] 메시지 보냄: " + msg);

            // 이벤트가 등록되어 있으면 실행 (null 체크 필요)
            OnMessageSent?.Invoke(this, msg);
        }
    }

    // 문자열 이벤트를 받아 처리하는 클래스
    public class ClassB
    {
        // 이벤트를 처리하는 함수 (문자열 하나 받음)
        public void HandleMessage(object sender, string message)
        {
            Console.WriteLine("[ClassB] 받은 메시지 처리함: " + message);
        }
    }

    // 실행 메인
    class Program
    {
        static void Main(string[] args)
        {
            ClassA a = new ClassA(); // 이벤트 보내는 클래스
            ClassB b = new ClassB(); // 이벤트 받는 클래스

            // 이벤트 연결: 메시지가 오면 b가 처리함
            a.OnMessageSent += b.HandleMessage;

            // 테스트로 메시지 보내기
            a.SendMessage("안녕하세요");

            Console.ReadLine();
        }
    }
}
결과
csharp
코드 복사
[ClassA] 메시지 보냄: 안녕하세요  
[ClassB] 받은 메시지 처리함: 안녕하세요
요약
구성	설명
EventHandler<string>	따로 EventArgs 서브클래스 없이 문자열만 전달 가능
OnMessageSent?.Invoke(this, msg);	이벤트 발생 (this는 sender, msg는 전달할 문자열)
b.HandleMessage(...)	문자열 받아서 처리하는 함수