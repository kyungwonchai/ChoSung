네, 알겠습니다. Flask 웹 애플리케이션이 사용할 MSSQL Server 2014 데이터베이스 생성 스크립트 최종 전체 버전을 한국어 설명과 함께 다시 제공해 드리겠습니다.

이 스크립트는 다음 테이블들을 생성합니다:

admin_ips: 관리자 IP 주소 목록
allowed_user_ips: 일반 접속 허용 사용자 IP 주소 목록
target_pcs: 원격 제어 대상 PC 목록
최종: mssql_db_schema.sql (MSSQL Server 2014 DDL 스크립트)
SQL

-- 사용할 데이터베이스 선택 (예: SControlFlaskDB)
-- 만약 데이터베이스가 없다면 먼저 생성해야 합니다.
-- 예시:
-- IF NOT EXISTS (SELECT * FROM sys.databases WHERE name = 'SControlFlaskDB')
-- BEGIN
--     CREATE DATABASE SControlFlaskDB;
-- END
-- GO
-- USE SControlFlaskDB;
-- GO

PRINT '--- 테이블 생성 시작 ---';

-- 1. admin_ips 테이블: 관리자 IP 주소 저장
PRINT 'Creating table: admin_ips';
IF OBJECT_ID('dbo.admin_ips', 'U') IS NOT NULL
    DROP TABLE dbo.admin_ips;
GO
CREATE TABLE dbo.admin_ips (
    id INT IDENTITY(1,1) PRIMARY KEY,           -- 고유 ID (자동 증가)
    ip_address NVARCHAR(50) NOT NULL UNIQUE,    -- IP 주소 (IPv4 또는 IPv6, 중복 불가)
    description NVARCHAR(255) NULL,             -- 설명
    created_at DATETIME DEFAULT GETDATE()       -- 생성일 (기본값: 현재 시간)
);
GO
PRINT 'Table admin_ips created.';
GO

-- 2. allowed_user_ips 테이블: 관리자가 허용한 일반 사용자 IP 주소 저장
PRINT 'Creating table: allowed_user_ips';
IF OBJECT_ID('dbo.allowed_user_ips', 'U') IS NOT NULL
    DROP TABLE dbo.allowed_user_ips;
GO
CREATE TABLE dbo.allowed_user_ips (
    id INT IDENTITY(1,1) PRIMARY KEY,           -- 고유 ID (자동 증가)
    ip_address NVARCHAR(50) NOT NULL UNIQUE,    -- IP 주소 (중복 불가)
    description NVARCHAR(255) NULL,             -- 설명
    added_by_admin_id INT NULL,                 -- 이 사용자를 추가한 관리자의 ID (admin_ips 테이블 참조)
    created_at DATETIME DEFAULT GETDATE(),      -- 생성일
    CONSTRAINT FK_allowed_user_ips_admin_ips FOREIGN KEY (added_by_admin_id) 
        REFERENCES dbo.admin_ips (id) 
        ON DELETE SET NULL -- 참조하는 관리자 IP가 삭제되면 이 필드는 NULL로 설정
);
GO
PRINT 'Table allowed_user_ips created.';
GO

-- 3. target_pcs 테이블: 제어 대상 PC 정보 저장
PRINT 'Creating table: target_pcs';
IF OBJECT_ID('dbo.target_pcs', 'U') IS NOT NULL
    DROP TABLE dbo.target_pcs;
GO
CREATE TABLE dbo.target_pcs (
    id INT IDENTITY(1,1) PRIMARY KEY,           -- 고유 ID (자동 증가)
    pc_name NVARCHAR(100) NOT NULL UNIQUE,      -- UI에 표시될 PC 이름 (중복 불가 권장)
    address1 VARCHAR(50) NOT NULL,              -- 직접 제어 IP 또는 릴레이 서버 IP
    address2 VARCHAR(50) NULL,                  -- 릴레이 시 최종 목적지 IP (NULL 허용)
    description NVARCHAR(255) NULL,             -- 설명
    -- 포트 번호는 시스템 전체에서 4026으로 고정되므로 테이블에 저장하지 않음
    last_modified DATETIME DEFAULT GETDATE(),     -- 레코드 최종 수정일
    created_at DATETIME DEFAULT GETDATE()         -- 레코드 생성일
);
GO
PRINT 'Table target_pcs created.';
GO

-- 4. target_pcs 테이블의 last_modified 자동 업데이트를 위한 트리거
PRINT 'Creating trigger: trg_target_pcs_update_last_modified';
IF OBJECT_ID('dbo.trg_target_pcs_update_last_modified', 'TR') IS NOT NULL
    DROP TRIGGER dbo.trg_target_pcs_update_last_modified;
GO
CREATE TRIGGER dbo.trg_target_pcs_update_last_modified
ON dbo.target_pcs
AFTER UPDATE
AS
BEGIN
    -- last_modified 컬럼이 명시적으로 업데이트되는 경우는 제외하여 무한 루프 방지
    IF UPDATE(last_modified)
        RETURN;

    -- 실제 데이터가 변경되었을 때만 last_modified 업데이트
    IF EXISTS (
        SELECT * FROM inserted i
        INNER JOIN deleted d ON i.id = d.id
        WHERE i.pc_name <> d.pc_name
           OR i.address1 <> d.address1
           OR ISNULL(i.address2, '') <> ISNULL(d.address2, '') -- NULL 비교 처리
           OR ISNULL(i.description, '') <> ISNULL(d.description, '')
    )
    BEGIN
        UPDATE dbo.target_pcs
        SET last_modified = GETDATE()
        FROM inserted
        WHERE dbo.target_pcs.id = inserted.id;
    END
END;
GO
PRINT 'Trigger trg_target_pcs_update_last_modified created.';
GO

-- 5. 초기 관리자 IP 데이터 예시 (필요에 따라 주석 해제 및 수정하여 사용)
-- 이 스크립트를 실행할 때 아래 MERGE 문은 실제 운영 환경에 맞게 수정하거나,
-- 애플리케이션 UI를 통해 직접 추가하는 것을 권장합니다.
PRINT 'Merging initial admin IPs (example data - modify or comment out for production)...';
/*
MERGE INTO dbo.admin_ips AS TargetTable
USING (VALUES 
    ('127.0.0.1', '로컬 개발/테스트용 관리자'),
    ('::1', '로컬 개발/테스트용 관리자 (IPv6)'),
    ('YOUR_PRIMARY_ADMIN_IP', '주 관리자 PC IP'), -- 실제 주 관리자 IP로 변경
    ('YOUR_SECONDARY_ADMIN_IP', '보조 관리자 PC IP') -- 실제 보조 관리자 IP로 변경 (선택 사항)
) AS SourceTable (ip_address, description)
ON TargetTable.ip_address = SourceTable.ip_address
WHEN NOT MATCHED BY TARGET THEN
    INSERT (ip_address, description) 
    VALUES (SourceTable.ip_address, SourceTable.description)
-- WHEN MATCHED THEN -- 이미 존재하는 IP에 대해 설명을 업데이트하고 싶다면 사용
--    UPDATE SET TargetTable.description = SourceTable.description
;
*/
GO
PRINT 'Initial admin IP merge statement prepared (commented out by default).';
GO

PRINT '--- 데이터베이스 스키마 생성 완료 ---';
GO
스크립트 주요 내용 설명:

데이터베이스 선택/생성: 스크립트 시작 부분에 주석 처리된 USE [데이터베이스명] 구문이 있습니다. 이 스크립트를 실행하기 전에 작업할 데이터베이스를 선택하거나, 필요하다면 새 데이터베이스를 생성해야 합니다.
테이블 생성:
IF OBJECT_ID(...) IS NOT NULL DROP TABLE ...: 기존에 같은 이름의 테이블이 있다면 삭제하고 새로 생성합니다 (개발 초기에는 유용하나, 운영 환경에서는 데이터 유실에 주의).
admin_ips: 관리자 IP와 설명을 저장합니다. ip_address는 UNIQUE 제약 조건이 있습니다.
allowed_user_ips: 허용된 일반 사용자 IP와 설명을 저장합니다. ip_address는 UNIQUE하며, added_by_admin_id는 admin_ips 테이블의 id를 참조하는 외래 키입니다 (관리자 삭제 시 SET NULL).
target_pcs: 제어 대상 PC의 이름, 주소1(직접/릴레이), 주소2(최종 목적지), 설명을 저장합니다. pc_name은 UNIQUE 제약 조건이 권장됩니다.
IDENTITY(1,1): 각 테이블의 id 컬럼에 자동 증가 속성을 부여합니다.
DEFAULT GETDATE(): created_at 및 last_modified 컬럼의 기본값으로 레코드 생성/수정 시의 현재 시간을 사용합니다.
트리거 (trg_target_pcs_update_last_modified): target_pcs 테이블의 레코드가 (실질적으로) 업데이트될 때 last_modified 컬럼을 현재 시간으로 자동 갱신합니다. IF UPDATE(last_modified) 조건과 실제 데이터 변경 여부 확인을 통해 last_modified 컬럼 자체의 업데이트로 인한 무한 루프를 방지하고, 불필요한 업데이트를 줄입니다.
초기 관리자 IP 데이터 (MERGE 문): 예시로 몇 개의 관리자 IP를 추가하는 MERGE 구문이 주석 처리되어 포함되어 있습니다. YOUR_..._IP 부분을 실제 관리자 IP로 변경하여 사용하거나, 애플리케이션 UI를 통해 직접 추가할 수 있습니다. MERGE는 데이터가 없을 때만 INSERT하는 (또는 있으면 UPDATE하는) 유용한 구문입니다.
실행 방법:

SQL Server Management Studio (SSMS)를 사용하여 MSSQL Server 2014 인스턴스에 연결합니다.
위 스크립트 내용을 새 쿼리 창에 복사하여 붙여넣습니다.
스크립트 상단의 USE [데이터베이스명] 부분을 실제 사용할 데이터베이스 이름으로 수정하거나, SSMS에서 해당 데이터베이스를 직접 선택합니다.
초기 관리자 IP를 설정하려면 MERGE 구문의 주석을 해제하고 IP 주소를 수정한 후, 스크립트를 실행합니다.
이것으로 Flask 애플리케이션이 사용할 MSSQL 데이터베이스 스키마 스크립트 제공이 완료되었습니다.