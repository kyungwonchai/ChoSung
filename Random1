Windows Service 애플리케이션(서비스)을 WPF 클라이언트 애플리케이션(UI)에서 제어하고, 필요에 따라 서비스를 업데이트하거나 시작, 중지하기 위해서는 몇 가지 파일 및 배치 작업을 정확히 수행해야 합니다. 여기서는 서비스 EXE 파일을 WPF 애플리케이션과 함께 배포하고 관리하는 방법을 설명하겠습니다.

배포 및 설정 단계
서비스 EXE 파일 위치:

서비스 애플리케이션(EXE 파일)을 WPF 애플리케이션이 설치된 디렉토리 내에 "Service" 폴더를 만들고, 그 안에 서비스 EXE 파일을 복사하는 것이 일반적인 방식입니다.
예를 들어, WPF 애플리케이션이 C:\Program Files\RouterMiddleACR에 설치되어 있다면, 서비스 EXE 파일을 C:\Program Files\RouterMiddleACR\Service 폴더에 복사합니다.
WPF 애플리케이션의 설정:

WPF 애플리케이션이 서비스 EXE 파일을 사용할 수 있도록 해당 위치를 알고 있어야 합니다.
이를 위해 WPF 애플리케이션 내에서 서비스 제어와 관련된 경로를 정확히 설정해야 합니다.
서비스 제어 기능 업데이트:

서비스 EXE 파일의 경로를 설정한 후, WPF 애플리케이션이 서비스의 시작, 중지, 업데이트와 같은 제어 작업을 수행할 수 있습니다.
예제: WPF 애플리케이션 설정
서비스 EXE 파일 복사:

WPF 애플리케이션 설치 폴더 안에 Service 폴더를 만들고, RouterMiddleACRService.exe 파일을 그 안에 복사합니다.
예시 경로: C:\Program Files\RouterMiddleACR\Service\RouterMiddleACRService.exe
ServiceControllerHelper.cs 수정:

ServiceControllerHelper 클래스 내의 서비스 경로를 업데이트하여, 서비스 파일이 복사된 위치를 정확히 참조하도록 합니다.

csharp
코드 복사
using System.ServiceProcess;
using System.IO;

namespace RouterMiddleACR.Services
{
    public class ServiceControllerHelper
    {
        private string _serviceName = "RouterMiddleACRService"; // 서비스 이름
        private string _serviceExePath = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, "Service", "RouterMiddleACRService.exe"); // 서비스 실행 파일 경로
        private string _serviceUpdateSourcePath = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, "Service", "RouterMiddleACRService_Update.exe"); // 업데이트할 새로운 서비스 파일 경로

        // 서비스를 시작하는 메서드
        public void StartService()
        {
            using (var sc = new ServiceController(_serviceName))
            {
                if (sc.Status == ServiceControllerStatus.Stopped)
                {
                    sc.Start();
                    sc.WaitForStatus(ServiceControllerStatus.Running);
                }
            }
        }

        // 서비스를 중지하는 메서드
        public void StopService()
        {
            using (var sc = new ServiceController(_serviceName))
            {
                if (sc.Status == ServiceControllerStatus.Running)
                {
                    sc.Stop();
                    sc.WaitForStatus(ServiceControllerStatus.Stopped);
                }
            }
        }

        // 서비스 상태를 가져오는 메서드
        public string GetServiceStatus()
        {
            using (var sc = new ServiceController(_serviceName))
            {
                return sc.Status.ToString();
            }
        }

        // 서비스를 업데이트하는 메서드
        public void UpdateService()
        {
            StopService(); // 서비스를 중지

            // 서비스 파일 교체
            if (File.Exists(_serviceUpdateSourcePath))
            {
                File.Copy(_serviceUpdateSourcePath, _serviceExePath, true); // 새 파일로 교체
            }

            StartService(); // 서비스를 다시 시작
        }
    }
}
경로 설정:
AppDomain.CurrentDomain.BaseDirectory를 사용하여 애플리케이션의 실행 디렉토리를 가져옵니다.
Service 폴더와 RouterMiddleACRService.exe 파일을 기준으로 경로를 설정합니다.
업데이트 파일 경로:
업데이트할 서비스 파일(RouterMiddleACRService_Update.exe)을 Service 폴더에 준비하고, 업데이트 로직이 해당 파일을 사용하도록 합니다.
전체 흐름
서비스 EXE 파일 준비:

서비스를 빌드하여 EXE 파일을 얻습니다.
WPF 애플리케이션 설치 폴더 내 Service 폴더에 EXE 파일을 복사합니다.
WPF 애플리케이션 실행:

WPF 애플리케이션을 실행합니다.
ServiceControllerHelper가 설정된 경로를 통해 서비스 EXE 파일을 참조하고, 사용자가 요청할 때 서비스 제어를 수행합니다.
서비스 제어 및 업데이트:

사용자가 WPF 애플리케이션 내에서 서비스를 시작, 중지, 업데이트할 수 있습니다.
업데이트 시, 새 버전의 서비스 EXE 파일을 준비하여 Service 폴더에 덮어씁니다.
이렇게 설정하면 WPF 애플리케이션이 서비스 EXE 파일을 올바르게 참조하고 제어할 수 있게 됩니다. 중요한 것은 서비스 EXE 파일이 WPF 애플리케이션과 함께 배포되고, 서비스 제어 클래스(ServiceControllerHelper)가 해당 파일을 정확히 참조하도록 경로를 설정하는 것입니다