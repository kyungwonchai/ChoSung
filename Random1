좌측: 특정 라인 선택 ListBox
우측: BCT1_1 ~ BCT1_8, TCT1_1 ~ TCT1_8 데이터를 표 (HTML Table)로 표시
헤더: 1호기 ~ 8호기
상단: 선택한 모델명과 time1 값 표시
Flask + Quart (비동기 서버) + PyMSSQL (MSSQL 연결)
Ubuntu 기반 Python 서버에서 실행 가능
✅ 🔹 Python (Flask & Quart) 코드
python
코드 복사
from quart import Quart, render_template, request, jsonify
import pymssql

app = Quart(__name__)

# 📌 MSSQL 연결 설정
DB_CONFIG = {
    "server": "서버주소",
    "user": "사용자명",
    "password": "비밀번호",
    "database": "DB이름"
}

# 📌 특정 라인의 데이터를 가져오는 함수
async def get_line_data(line_name):
    conn = pymssql.connect(**DB_CONFIG)
    cursor = conn.cursor(as_dict=True)

    # 최신 모델과 시간 가져오기
    cursor.execute(f"""
        SELECT TOP 1 모델, time1 
        FROM ExcelData 
        WHERE 라인 = %s
        ORDER BY time1 DESC
    """, (line_name,))
    latest = cursor.fetchone()

    if not latest:
        conn.close()
        return None, None, []

    latest_model, latest_time = latest["모델"], latest["time1"]

    # 해당 모델의 최신 10개 데이터 가져오기
    cursor.execute(f"""
        WITH RecentData AS (
            SELECT TOP 10 * FROM ExcelData
            WHERE 라인 = %s AND 모델 = %s
            ORDER BY time1 DESC
        )
        SELECT 
            MIN(CASE WHEN BCT1_1 >= 1 THEN BCT1_1 ELSE NULL END) AS BCT1_1,
            MIN(CASE WHEN BCT1_2 >= 1 THEN BCT1_2 ELSE NULL END) AS BCT1_2,
            MIN(CASE WHEN BCT1_3 >= 1 THEN BCT1_3 ELSE NULL END) AS BCT1_3,
            MIN(CASE WHEN BCT1_4 >= 1 THEN BCT1_4 ELSE NULL END) AS BCT1_4,
            MIN(CASE WHEN BCT1_5 >= 1 THEN BCT1_5 ELSE NULL END) AS BCT1_5,
            MIN(CASE WHEN BCT1_6 >= 1 THEN BCT1_6 ELSE NULL END) AS BCT1_6,
            MIN(CASE WHEN BCT1_7 >= 1 THEN BCT1_7 ELSE NULL END) AS BCT1_7,
            MIN(CASE WHEN BCT1_8 >= 1 THEN BCT1_8 ELSE NULL END) AS BCT1_8,

            MIN(CASE WHEN TCT1_1 >= 1 THEN TCT1_1 ELSE NULL END) AS TCT1_1,
            MIN(CASE WHEN TCT1_2 >= 1 THEN TCT1_2 ELSE NULL END) AS TCT1_2,
            MIN(CASE WHEN TCT1_3 >= 1 THEN TCT1_3 ELSE NULL END) AS TCT1_3,
            MIN(CASE WHEN TCT1_4 >= 1 THEN TCT1_4 ELSE NULL END) AS TCT1_4,
            MIN(CASE WHEN TCT1_5 >= 1 THEN TCT1_5 ELSE NULL END) AS TCT1_5,
            MIN(CASE WHEN TCT1_6 >= 1 THEN TCT1_6 ELSE NULL END) AS TCT1_6,
            MIN(CASE WHEN TCT1_7 >= 1 THEN TCT1_7 ELSE NULL END) AS TCT1_7,
            MIN(CASE WHEN TCT1_8 >= 1 THEN TCT1_8 ELSE NULL END) AS TCT1_8
        FROM RecentData;
    """, (line_name, latest_model))

    data = cursor.fetchone()
    conn.close()

    return latest_model, latest_time, data

# 📌 라인 목록 가져오기
async def get_lines():
    conn = pymssql.connect(**DB_CONFIG)
    cursor = conn.cursor()
    cursor.execute("SELECT DISTINCT 라인 FROM ExcelData ORDER BY 라인")
    lines = [row[0] for row in cursor.fetchall()]
    conn.close()
    return lines

# 📌 메인 페이지
@app.route("/")
async def index():
    lines = await get_lines()
    return await render_template("index.html", lines=lines)

# 📌 AJAX 요청: 특정 라인 데이터 가져오기
@app.route("/get_data", methods=["POST"])
async def get_data():
    data = await request.json
    line_name = data["line_name"]

    latest_model, latest_time, table_data = await get_line_data(line_name)
    return jsonify({
        "model": latest_model,
        "time": latest_time,
        "data": table_data
    })

if __name__ == "__main__":
    app.run(debug=True)
✅ 🔹 HTML (Jinja2) 파일 (templates/index.html)
html
코드 복사
<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <title>라인 데이터 조회</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>
<body>
    <h2>라인 선택</h2>
    <select id="lineSelect">
        {% for line in lines %}
            <option value="{{ line }}">{{ line }}</option>
        {% endfor %}
    </select>

    <h2>모델명: <span id="model"></span></h2>
    <h3>최신 시간: <span id="time"></span></h3>

    <table border="1">
        <thead>
            <tr>
                <th>구분</th>
                <th>1호기</th><th>2호기</th><th>3호기</th><th>4호기</th>
                <th>5호기</th><th>6호기</th><th>7호기</th><th>8호기</th>
            </tr>
        </thead>
        <tbody>
            <tr><td>BCT</td><td id="BCT1"></td><td id="BCT2"></td><td id="BCT3"></td><td id="BCT4"></td>
                <td id="BCT5"></td><td id="BCT6"></td><td id="BCT7"></td><td id="BCT8"></td></tr>
            <tr><td>TCT</td><td id="TCT1"></td><td id="TCT2"></td><td id="TCT3"></td><td id="TCT4"></td>
                <td id="TCT5"></td><td id="TCT6"></td><td id="TCT7"></td><td id="TCT8"></td></tr>
        </tbody>
    </table>

    <script>
        $(document).ready(function () {
            $("#lineSelect").change(function () {
                let lineName = $(this).val();
                $.post("/get_data", JSON.stringify({ line_name: lineName }), function (response) {
                    $("#model").text(response.model);
                    $("#time").text(response.time);

                    for (let i = 1; i <= 8; i++) {
                        $("#BCT" + i).text(response.data["BCT1_" + i] || 0);
                        $("#TCT" + i).text(response.data["TCT1_" + i] || 0);
                    }
                }, "json");
            });

            $("#lineSelect").trigger("change");
        });
    </script>
</body>
</html>
✅ 설치 및 실행
bash
코드 복사
pip install quart pymssql