네, 가능합니다. 와치독은 특정 서비스의 상태를 주기적으로 확인하고, 문제가 발생하면 시스템을 재부팅하도록 설정할 수 있습니다. 이를 위해서는 /etc/watchdog.conf 파일을 수정하고, 특정 서비스의 상태를 확인하는 스크립트를 작성해야 합니다.

1단계: /etc/watchdog.conf 파일 수정 ⚙️
/etc/watchdog.conf 파일에 다음 설정을 추가하거나 수정하여, 와치독이 특정 스크립트를 실행하도록 지시합니다.

Ini, TOML

# 와치독이 주기적으로 실행할 스크립트 경로를 지정합니다.
# /etc/watchdog.d/myservice-check.sh 파일을 생성할 것입니다.
test-binary = /etc/watchdog.d/myservice-check.sh

# 와치독이 test-binary를 실행할 간격(초)을 설정합니다.
# 60초 이상 서비스가 죽었을 때 재부팅하려면, 이 값을 5초 정도로 설정하는 것이 좋습니다.
interval = 5

# test-binary가 실패하면 와치독 타이머를 멈춥니다.
# test-binary의 종료 코드(exit code)가 0이 아니면 실패로 간주합니다.
# 60초 이상 죽었을 때 재부팅하려면, 이 값을 test-binary의 interval과 비슷하게 설정하면 됩니다.
watchdog-timeout = 60

# 추가적으로, 시스템 부하가 높을 때도 재부팅되도록 설정할 수 있습니다.
# 1분 평균 부하가 25를 초과하면 재부팅합니다. (선택 사항)
max-load-1 = 25
2단계: 서비스 상태 확인 스크립트 작성 📝
이제 watchdog.conf에 지정한 경로에 특정 서비스가 실행 중인지 확인하는 스크립트를 만듭니다. 이 예시에서는 **myservice**라는 서비스가 60초 동안 응답이 없으면 와치독이 재부팅을 유발하도록 설정합니다.

스크립트 파일 생성:

Bash

sudo mkdir -p /etc/watchdog.d
sudo nano /etc/watchdog.d/myservice-check.sh
스크립트 내용 작성: myservice를 실제 서비스 이름으로 변경하세요.

Bash

#!/bin/bash

# myservice가 활성 상태인지 확인합니다.
if ! systemctl is-active --quiet myservice; then
  echo "myservice is not active!"
  exit 1  # 0이 아닌 종료 코드를 반환하여 와치독에게 실패를 알립니다.
fi

echo "myservice is active."
exit 0 # 성공
스크립트 실행 권한 부여:

Bash

sudo chmod +x /etc/watchdog.d/myservice-check.sh
3단계: 와치독 서비스 재시작 🔄
설정 파일을 수정한 후, 변경 사항을 적용하려면 와치독 서비스를 재시작해야 합니다.

Bash
