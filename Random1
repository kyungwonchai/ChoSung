 간의 구분선을 그리려면 TableView.RowStyle를 사용하고 해당 로직을 코드 뒷단에 구현해야 합니다. 아래 코드는 그 예시입니다.

XAML:

xaml

<dxg:GridControl x:Name="gridControl1">
    <dxg:GridControl.View>
        <dxg:TableView x:Name="tableView1" RowStyle="{StaticResource MyRowStyle}"/>
    </dxg:GridControl.View>
</dxg:GridControl>

<Window.Resources>
    <Style x:Key="MyRowStyle" TargetType="{x:Type dxg:RowControl}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding RowData.Row.ConfirmDate}" Value="ChangeCondition">
                <Setter Property="BorderBrush" Value="Blue"/>
                <Setter Property="BorderThickness" Value="0,0,0,2"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RowData.Row.Line}" Value="ChangeCondition">
                <Setter Property="BorderBrush" Value="Purple"/>
                <Setter Property="BorderThickness" Value="0,0,0,2"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
</Window.Resources>

C#:

csharp

// 더미 데이터 클래스
public class MyData
{
    public DateTime ConfirmDate { get; set; }
    public string Line { get; set; }
}

이 코드에서는 행의 ConfirmDate나 Line 값이 "ChangeCondition"일 경우 행의 하단에 파란색 또는 보라색 선을 그립니다. 실제 로직에 따라 이 값을 적절히 변경해 주시면 됩니