 요구사항 정리 (다시 정확히 이해함)
MSSQL2014로부터 ACT2_1 ~ ACT2_8 데이터를 가져온다.

ACT2_1 ~ ACT2_8 데이터를 MC1 ~ MC8 컬럼으로 변경해서 표시한다.

컬럼 헤더는 MC1 ~ MC8로 표시하되, 실제 데이터는 ACT2_1 ~ ACT2_8 값이다.

각 행의 MC1 ~ MC8 값 중 최대값에 노란색 스타일을 적용한다.

간단하고 명확하게 작성한다.

✅ Streamlit 코드
python
코드 복사
import streamlit as st
import pymssql
import pandas as pd

# MSSQL 서버 연결 설정 함수
def get_connection():
    return pymssql.connect(
        server="YOUR_SERVER",
        user="YOUR_USER",
        password="YOUR_PASSWORD",
        database="YOUR_DATABASE"
    )

# Get_min_bestdifferent 프로시저 호출 함수 (cursor.fetchall() 방식)
def fetch_main_data():
    conn = get_connection()
    cursor = conn.cursor()
    cursor.execute("EXEC Get_min_bestdifferent")
    rows = cursor.fetchall()
    conn.close()
    return rows

# DataFrame 생성 및 스타일 적용 함수
def create_dataframe(rows):
    # 원래 데이터베이스에서 온 컬럼 (ACT2_1 ~ ACT2_8 포함)
    original_columns = [
        "group1", "line1", "model1", "type1", "ecn1", "edition1",
        "ACT2_1", "ACT2_2", "ACT2_3", "ACT2_4",
        "ACT2_5", "ACT2_6", "ACT2_7", "ACT2_8"
    ]
    
    # 새로운 DataFrame 컬럼명 (MC1 ~ MC8로 변경)
    new_columns = [
        "group1", "line1", "model1", "type1", "ecn1", "edition1",
        "MC1", "MC2", "MC3", "MC4", "MC5", "MC6", "MC7", "MC8"
    ]

    # DataFrame 생성 (원래 컬럼으로)
    df = pd.DataFrame(rows, columns=original_columns)

    # 컬럼 이름을 MC1 ~ MC8로 변경
    df.columns = new_columns

    # MC1 ~ MC8 열 리스트
    mc_columns = [f"MC{i}" for i in range(1, 9)]

    # 최대값을 노란색으로 강조하는 스타일 함수
    def highlight_max(row):
        max_value = row[mc_columns].max()
        return ['background-color: yellow' if v == max_value else '' for v in row]

    # 스타일 적용
    styled_df = df.style.apply(highlight_max, subset=mc_columns, axis=1)
    return styled_df

# Streamlit 앱 구성
def main():
    st.set_page_config(layout="wide")
    st.title("MC1 ~ MC8 Data Table with Styling")

    # 데이터 가져오기
    rows = fetch_main_data()

    if not rows:
        st.error("데이터를 가져오지 못했습니다. 프로시저 또는 데이터베이스 연결을 확인하세요.")
    else:
        # DataFrame 생성 및 스타일 적용
        styled_df = create_dataframe(rows)
        
        # Streamlit 표시 (Styled DataFrame)
        st.write(styled_df)

if __name__ == "__main__":
    main()
✅ 코드 설명
데이터 가져오기 (fetch_main_data())

EXEC Get_min_bestdifferent 프로시저 실행.

ACT2_1 ~ ACT2_8 데이터를 가져온다.

데이터는 rows로 반환된다.

컬럼 변경 (MC1 ~ MC8)

python
코드 복사
original_columns = [
    "group1", "line1", "model1", "type1", "ecn1", "edition1",
    "ACT2_1", "ACT2_2", "ACT2_3", "ACT2_4",
    "ACT2_5", "ACT2_6", "ACT2_7", "ACT2_8"
]

new_columns = [
    "group1", "line1", "model1", "type1", "ecn1", "edition1",
    "MC1", "MC2", "MC3", "MC4", "MC5", "MC6", "MC7", "MC8"
]
df.columns = new_columns
ACT2_1 ~ ACT2_8 데이터를 가져오지만 컬럼 이름은 MC1 ~ MC8로 바꾼다.

최대값 강조

python
코드 복사
def highlight_max(row):
    max_value = row[mc_columns].max()
    return ['background-color: yellow' if v == max_value else '' for v in row]
MC1 ~ MC8 값 중 최대값을 찾아 노란색으로 강조한다.

Streamlit에서 표시하기

python
코드 복사
st.write(styled_df)
DataFrame 스타일 적용 후 Streamlit 화면에 출력.

📌 설치 필요 라이브러리
bash
코드 복사
pip install streamlit pymssql pandas
📌 Streamlit 실행 방법
bash
코드 복사
streamlit run your_script_name.py
🔥 결과
ACT2_1 ~ ACT2_8 값이 MC1 ~ MC8 컬럼으로 표시됨.

각 행의 최대값이 노란색으로 강조됨.
