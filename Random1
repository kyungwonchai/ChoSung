다음은 GetNewRows 함수에 디버깅용 출력을 추가한 수정된 코드입니다. 각 행의 컬럼 값을 Debug.WriteLine으로 출력하도록 수정했습니다.

수정된 GetNewRows 함수
csharp
코드 복사
using System.Diagnostics;

public List<Dictionary<string, object>> GetNewRows(string rootPath)
{
    var newRows = new List<Dictionary<string, object>>();
    var csvFiles = Directory.GetFiles(rootPath, "*.csv", SearchOption.AllDirectories);

    foreach (var file in csvFiles)
    {
        using (var reader = new StreamReader(new FileStream(file, FileMode.Open, FileAccess.Read, FileShare.ReadWrite)))
        {
            reader.ReadLine(); // 첫 번째 행(헤더) 무시
            while (!reader.EndOfStream)
            {
                var values = reader.ReadLine()?.Split(',');
                if (values == null || values.Length < 4) continue;

                // 디버그 출력: 현재 처리 중인 행의 값을 출력
                Debug.WriteLine($"Processing Row: {string.Join(", ", values)}");

                // 4열이 숫자(정수 또는 실수)가 아니면 제외
                if (!decimal.TryParse(values[3], out _))
                {
                    Debug.WriteLine("Skipped Row: 4th column is not a valid number.");
                    continue;
                }

                var row = new Dictionary<string, object>
                {
                    ["InspectionTime"] = DateTime.Parse(values[0]),
                    ["ModelName"] = values[1],
                    ["AlignResult"] = values[2],
                    ["MP1DATA"] = float.Parse(values[3]),
                    ["MP1RESULT"] = values[4],
                    ["MP2DATA"] = float.Parse(values[5]),
                    ["MP2RESULT"] = values[6],
                    ["MP3DATA"] = float.Parse(values[7]),
                    ["MP3RESULT"] = values[8],
                    ["MP4DATA"] = float.Parse(values[9]),
                    ["MP4RESULT"] = values[10],
                    ["ipname"] = _ipAddress // 현재 IP 추가
                };

                // InspectionTime 조건 검사
                if ((DateTime)row["InspectionTime"] > _lastUploadedTime)
                {
                    Debug.WriteLine("Added Row: Passed all checks.");
                    newRows.Add(row);
                }
                else
                {
                    Debug.WriteLine("Skipped Row: InspectionTime is not newer than the last uploaded time.");
                }
            }
        }
    }

    return newRows;
}
추가된 디버깅 기능
현재 처리 중인 행 출력:

각 행의 값을 Debug.WriteLine으로 출력: Processing Row: ...
스킵된 이유 출력:

4열이 숫자가 아닌 경우: Skipped Row: 4th column is not a valid number.
InspectionTime이 이미 처리된 시간보다 이전인 경우: Skipped Row: InspectionTime is not newer than the last uploaded time.
추가된 행 출력:

모든 조건을 통과한 경우: Added Row: Passed all checks.
디버그 출력 예시
plaintext
코드 복사
Processing Row: 2025-01-10 10:00:00, ModelA, Good, 123.45, Result1, 67.89, Result2, 45.67, Result3, 89.01, Result4
Added Row: Passed all checks.
Processing Row: 2025-01-10 09:00:00, ModelB, Good, N/A, Result1, 67.89, Result2, 45.67, Result3, 89.01, Result4
Skipped Row: 4th column is not a valid number.
디버깅 활용
출력 확인:

Visual Studio 디버그 창에서 출력 내용을 확인합니다.
문제 있는 행을 분석할 수 있습니다.
행 처리 단계별 확인:
