송합니다. 이전에 충분한 정보를 제공하지 못한 점 사과드립니다. 이제 모든 컨투어를 원본 이미지에 그려서 PictureBox2에 표시하는 방법을 자세히 안내해 드리겠습니다.

1. 모든 컨투어 그리기
이전에 제공된 코드에서는 가장 큰 흰색 창만을 감지하고 해당 영역에만 테두리를 그렸습니다. 이제 이미지 내의 모든 컨투어를 찾아서 이를 PictureBox2에 표시하도록 하겠습니다.

csharp
코드 복사
using OpenCvSharp;
using OpenCvSharp.Extensions;
using System.Drawing;
using System.Windows.Forms;

public void DrawAllContours()
{
    // 1️⃣ 화면 캡처
    Bitmap screenshot = CaptureScreen();
    Mat matImage = BitmapConverter.ToMat(screenshot);

    // 2️⃣ 그레이스케일 변환
    Mat gray = new Mat();
    Cv2.CvtColor(matImage, gray, ColorConversionCodes.BGR2GRAY);

    // 3️⃣ 이진화 적용 (밝은 영역 강조)
    Mat binary = new Mat();
    Cv2.Threshold(gray, binary, 200, 255, ThresholdTypes.Binary);

    // 4️⃣ 컨투어 찾기
    Cv2.FindContours(binary, out Point[][] contours, out HierarchyIndex[] hierarchy, RetrievalModes.External, ContourApproximationModes.ApproxSimple);

    // 5️⃣ 원본 이미지 복사
    Mat contourImage = matImage.Clone();

    // 6️⃣ 모든 컨투어 그리기
    for (int i = 0; i < contours.Length; i++)
    {
        Cv2.DrawContours(contourImage, contours, i, Scalar.Red, 2, LineTypes.Link8, hierarchy, 0);
    }

    // 7️⃣ PictureBox2에 표시
    pictureBox2.Image = BitmapConverter.ToBitmap(contourImage);
}
2. 코드 설명
화면 캡처: 현재 화면을 캡처하여 Bitmap 형식으로 가져옵니다.
그레이스케일 변환: 이미지를 그레이스케일로 변환하여 처리합니다.
이진화 적용: 밝은 영역을 강조하기 위해 이진화를 적용합니다.
컨투어 찾기: 이미지에서 모든 외곽선을 찾아냅니다.
원본 이미지 복사: 컨투어를 그리기 위해 원본 이미지를 복사합니다.
모든 컨투어 그리기: 찾아낸 모든 컨투어를 빨간색(Scalar.Red)으로 그립니다.
PictureBox2에 표시: 컨투어가 그려진 이미지를 PictureBox2에 표시합니다.
3. 주의사항
컨투어 찾기 모드: RetrievalModes.External은 가장 바깥쪽 컨투어만 찾습니다. 모든 계층의 컨투어를 찾으려면 RetrievalModes.Tree를 사용할 수 있습니다.