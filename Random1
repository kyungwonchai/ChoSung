간이 00시~06시인 경우 day를 하루 빼는 로직을 추가한 쿼리를 제공하겠습니다. 이 경우 DATEADD 함수를 활용하여 datev1의 날짜에서 하루를 빼고 나머지 시간은 그대로 처리합니다.

수정된 쿼리
sql
코드 복사
WITH view1 AS (
    SELECT 
        Line,
        DATEADD(MINUTE, -10, datev) AS datev1,
        pickupcnt
    FROM table_lossdata
),
adjusted_view AS (
    SELECT 
        Line,
        pickupcnt,
        datev1,
        -- 날짜에서 하루를 뺄지 판단
        CASE 
            WHEN DATEPART(HOUR, datev1) BETWEEN 0 AND 6 THEN DATEADD(DAY, -1, datev1)
            ELSE datev1
        END AS adjusted_datev1
    FROM view1
)
SELECT 
    Line,
    pickupcnt,
    adjusted_datev1,
    -- yyyy-MM-dd 형식으로 날짜 추출
    CONVERT(VARCHAR(10), adjusted_datev1, 120) + ' ' +
    CASE
        -- 21시: 21:00 ~ 22:20
        WHEN (DATEPART(HOUR, datev1) = 21 AND DATEPART(MINUTE, datev1) >= 0)
          OR (DATEPART(HOUR, datev1) = 22 AND DATEPART(MINUTE, datev1) <= 20) THEN '21'
        -- 22시: 22:30 ~ 23:20
        WHEN (DATEPART(HOUR, datev1) = 22 AND DATEPART(MINUTE, datev1) >= 30)
          OR (DATEPART(HOUR, datev1) = 23 AND DATEPART(MINUTE, datev1) <= 20) THEN '22'
        -- 23시: 23:30 ~ 00:20
        WHEN (DATEPART(HOUR, datev1) = 23 AND DATEPART(MINUTE, datev1) >= 30)
          OR (DATEPART(HOUR, datev1) = 0 AND DATEPART(MINUTE, datev1) <= 20) THEN '23'
        -- 00시: 00:30 ~ 01:20
        WHEN (DATEPART(HOUR, datev1) = 0 AND DATEPART(MINUTE, datev1) >= 30)
          OR (DATEPART(HOUR, datev1) = 1 AND DATEPART(MINUTE, datev1) <= 20) THEN '00'
        -- 01시: 01:30 ~ 02:20
        WHEN (DATEPART(HOUR, datev1) = 1 AND DATEPART(MINUTE, datev1) >= 30)
          OR (DATEPART(HOUR, datev1) = 2 AND DATEPART(MINUTE, datev1) <= 20) THEN '01'
        -- 02시: 02:30 ~ 03:20
        WHEN (DATEPART(HOUR, datev1) = 2 AND DATEPART(MINUTE, datev1) >= 30)
          OR (DATEPART(HOUR, datev1) = 3 AND DATEPART(MINUTE, datev1) <= 20) THEN '02'
        -- 03시: 03:30 ~ 04:20
        WHEN (DATEPART(HOUR, datev1) = 3 AND DATEPART(MINUTE, datev1) >= 30)
          OR (DATEPART(HOUR, datev1) = 4 AND DATEPART(MINUTE, datev1) <= 20) THEN '03'
        -- 04시: 04:30 ~ 05:20
        WHEN (DATEPART(HOUR, datev1) = 4 AND DATEPART(MINUTE, datev1) >= 30)
          OR (DATEPART(HOUR, datev1) = 5 AND DATEPART(MINUTE, datev1) <= 20) THEN '04'
        -- 05시: 05:30 ~ 06:50
        WHEN (DATEPART(HOUR, datev1) = 5 AND DATEPART(MINUTE, datev1) >= 30)
          OR (DATEPART(HOUR, datev1) = 6 AND DATEPART(MINUTE, datev1) <= 50) THEN '05'
        -- 기본: 그대로 반환
        ELSE RIGHT('0' + CONVERT(VARCHAR, DATEPART(HOUR, datev1)), 2)
    END AS 분류시간,
    -- 날짜와 분류시간 합치기
    CONVERT(VARCHAR(10), adjusted_datev1, 120) + ' ' +
    CASE
        WHEN (DATEPART(HOUR, datev1) = 21 AND DATEPART(MINUTE, datev1) >= 0)
          OR (DATEPART(HOUR, datev1) = 22 AND DATEPART(MINUTE, datev1) <= 20) THEN '21'
        WHEN (DATEPART(HOUR, datev1) = 22 AND DATEPART(MINUTE, datev1) >= 30)
          OR (DATEPART(HOUR, datev1) = 23 AND DATEPART(MINUTE, datev1) <= 20) THEN '22'
        WHEN (DATEPART(HOUR, datev1) = 23 AND DATEPART(MINUTE, datev1) >= 30)
          OR (DATEPART(HOUR, datev1) = 0 AND DATEPART(MINUTE, datev1) <= 20) THEN '23'
        WHEN (DATEPART(HOUR, datev1) = 0 AND DATEPART(MINUTE, datev1) >= 30)
          OR (DATEPART(HOUR, datev1) = 1 AND DATEPART(MINUTE, datev1) <= 20) THEN '00'
        WHEN (DATEPART(HOUR, datev1) = 1 AND DATEPART(MINUTE, datev1) >= 30)
          OR (DATEPART(HOUR, datev1) = 2 AND DATEPART(MINUTE, datev1) <= 20) THEN '01'
        WHEN (DATEPART(HOUR, datev1) = 2 AND DATEPART(MINUTE, datev1) >= 30)
          OR (DATEPART(HOUR, datev1) = 3 AND DATEPART(MINUTE, datev1) <= 20) THEN '02'
        WHEN (DATEPART(HOUR, datev1) = 3 AND DATEPART(MINUTE, datev1) >= 30)
          OR (DATEPART(HOUR, datev1) = 4 AND DATEPART(MINUTE, datev1) <= 20) THEN '03'
        WHEN (DATEPART(HOUR, datev1) = 4 AND DATEPART(MINUTE, datev1) >= 30)
          OR (DATEPART(HOUR, datev1) = 5 AND DATEPART(MINUTE, datev1) <= 20) THEN '04'
        WHEN (DATEPART(HOUR, datev1) = 5 AND DATEPART(MINUTE, datev1) >= 30)
          OR (DATEPART(HOUR, datev1) = 6 AND DATEPART(MINUTE, datev1) <= 50) THEN '05'
        ELSE RIGHT('0' + CONVERT(VARCHAR, DATEPART(HOUR, datev1)), 2)
    END AS 최종시간
FROM adjusted_view
ORDER BY adjusted_datev1;
주요 변경점
adjusted_datev1 생성:

00~06시인 경우 DATEADD(DAY, -1, datev1)로 하루를 뺍니다.
이외 시간은 datev1 그대로 유지.
결과 컬럼 변경:

날짜(yyyy-MM-dd)와 분류시간을 합친 최종 시간 반환.
예시 결과
Line	pickupcnt	adjusted_datev1	분류시간	최종시간
A	10	2025-01-20 23:45:00	23	2025-01-20 23
A	20	2025-01-21 00:35:00	00	2025-01-20 00