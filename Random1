Viewbox를 사용하여 PrintDialog에서 인쇄 시 원하는 DPI에 맞춰 확대 또는 축소하여 출력하는 방법을 C#에서 구현하겠습니다. 이를 위해 Viewbox의 크기를 설정하고, 원하는 DPI를 기준으로 Transform을 적용하여 출력 크기를 조정합니다.

해결 방법
Viewbox에 DPI 적용: PrintDialog의 프린터 DPI와 WPF 기본 DPI(96 DPI)를 기준으로 원하는 출력 크기를 계산합니다.
ScaleTransform 사용: 원하는 DPI에 맞게 확대/축소를 적용하여 인쇄 크기를 맞춥니다.
아래는 이러한 조정을 포함한 전체 코드입니다.

C# 코드 (MainWindow.xaml.cs)
아래 코드에서는 desiredDpi를 사용해 원하는 DPI로 인쇄하도록 설정했습니다.

csharp
코드 복사
using System.Windows;
using System.Windows.Controls;
using System.Windows.Media;

namespace LabelPrinter
{
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
        }

        private void PrintButton_Click(object sender, RoutedEventArgs e)
        {
            PrintDialog printDialog = new PrintDialog();
            if (printDialog.ShowDialog() == true)
            {
                // 원하는 DPI 설정 (예: 300 DPI)
                double desiredDpi = 300.0;

                // WPF 기본 DPI (96 DPI)와의 비율 계산
                double scale = desiredDpi / 96.0;

                // Viewbox 내의 콘텐츠에 스케일 적용
                Transform originalTransform = PrintableArea.LayoutTransform;
                PrintableArea.LayoutTransform = new ScaleTransform(scale, scale);

                // 강제로 레이아웃을 다시 계산 (새 DPI에 맞게)
                PrintableArea.Measure(new Size(printDialog.PrintableAreaWidth, printDialog.PrintableAreaHeight));
                PrintableArea.Arrange(new Rect(new Size(printDialog.PrintableAreaWidth, printDialog.PrintableAreaHeight)));

                // Viewbox를 실제로 인쇄
                printDialog.PrintVisual(PrintableArea, "Label Print");

                // 원래의 Transform 복원
                PrintableArea.LayoutTransform = originalTransform;
            }
        }
    }
}
설명
DPI 설정: desiredDpi 변수에 원하는 DPI(예: 300 DPI)를 설정합니다. 이 값을 WPF 기본 DPI(96 DPI)와 비교하여 확대/축소 비율(scale)을 계산합니다.
ScaleTransform 적용: PrintableArea.LayoutTransform에 ScaleTransform을 적용하여 Viewbox가 자동으로 크기를 조정합니다. 이렇게 하면 WPF에서 지정한 크기와 상관없이 원하는 DPI에 맞춰 인쇄됩니다.
레이아웃 업데이트: Measure 및 Arrange 메서드를 호출하여 새 DPI 비율에 맞춰 레이아웃을 재계산합니다. 이렇게 하면 PrintDialog에서 올바르게 인쇄될 수 있습니다.
원래 상태 복원: 인쇄가 끝나면 LayoutTransform을 원래 상태로 복원하여 화면상 UI가 영향을 받지 않도록 합니다.