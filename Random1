아래는 사용자가 날짜를 선택하면 항상 해당 날짜의 08:00으로 설정되도록 C#에서 처리한 코드입니다. 날짜 선택 시 시간을 자동으로 08:00으로 설정합니다.

수정된 C# 코드
csharp
코드 복사
using System;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.Linq;
using System.Windows;

namespace LineDataViewer
{
    public partial class MainWindow : Window
    {
        private DateTime startDate;
        private DateTime endDate;
        private List<LineGroup> lineGroups;

        public MainWindow()
        {
            InitializeComponent();
            InitializeDates();
            LoadLineData();
        }

        private void InitializeDates()
        {
            // 기본 날짜는 오늘 날짜의 08:00으로 설정
            startDate = DateTime.Now.Date.AddHours(8);
            endDate = DateTime.Now.Date.AddHours(8);
            StartDatePicker.SelectedDate = startDate.Date;
            EndDatePicker.SelectedDate = endDate.Date;
        }

        private void LoadLineData()
        {
            lineGroups = new List<LineGroup>();
            var connectionString = "YourConnectionStringHere";

            using (var connection = new SqlConnection(connectionString))
            {
                connection.Open();
                var query = "SELECT LineGroup, LineName, Sort FROM LineTable ORDER BY Sort";

                using (var command = new SqlCommand(query, connection))
                using (var reader = command.ExecuteReader())
                {
                    while (reader.Read())
                    {
                        var groupName = reader.GetString(0);
                        var lineName = reader.GetString(1);

                        var group = lineGroups.FirstOrDefault(g => g.GroupName == groupName);
                        if (group == null)
                        {
                            group = new LineGroup { GroupName = groupName, Lines = new List<LineInfo>() };
                            lineGroups.Add(group);
                        }

                        group.Lines.Add(new LineInfo
                        {
                            LineName = lineName,
                            IsChecked = true
                        });
                    }
                }
            }

            LineTreeView.ItemsSource = lineGroups;
        }

        private void OnStartDateChanged(object sender, RoutedEventArgs e)
        {
            if (StartDatePicker.SelectedDate != null)
            {
                // 사용자가 선택한 날짜에 시간 08:00 추가
                startDate = StartDatePicker.SelectedDate.Value.Date.AddHours(8);
                Console.WriteLine($"시작 날짜 변경: {startDate}");
            }
        }

        private void OnEndDateChanged(object sender, RoutedEventArgs e)
        {
            if (EndDatePicker.SelectedDate != null)
            {
                // 사용자가 선택한 날짜에 시간 08:00 추가
                endDate = EndDatePicker.SelectedDate.Value.Date.AddHours(8);
                Console.WriteLine($"종료 날짜 변경: {endDate}");
            }
        }

        private void SearchButton_Click(object sender, RoutedEventArgs e)
        {
            var selectedLines = lineGroups
                .SelectMany(g => g.Lines)
                .Where(line => line.IsChecked)
                .Select(line => line.LineName)
                .ToList();

            if (!selectedLines.Any())
            {
                MessageBox.Show("라인을 선택해주세요.", "오류", MessageBoxButton.OK, MessageBoxImage.Warning);
                return;
            }

            LoadChartData(selectedLines, startDate, endDate);
        }

        private void LoadChartData(List<string> selectedLines, DateTime startDate, DateTime endDate)
        {
            Console.WriteLine($"조회: 라인={string.Join(",", selectedLines)}, 날짜={startDate} ~ {endDate}");
        }
    }

    public class LineGroup
    {
        public string GroupName { get; set; }
        public List<LineInfo> Lines { get; set; }
        public bool IsChecked
        {
            get => Lines.All(line => line.IsChecked);
            set
            {
                foreach (var line in Lines)
                {
                    line.IsChecked = value;
                }
            }
        }
    }

    public class LineInfo
    {
        public string LineName { get; set; }
        public bool IsChecked { get; set; }
    }
}