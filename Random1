에서 다른 모든 버튼의 IsChecked 속성을 false로 설정하면 됩니다.

    ButtonModel 업데이트:

csharp

public class ButtonModel
{
    public event Action CheckedChanged;

    private bool _isChecked;
    public bool IsChecked
    {
        get { return _isChecked; }
        set
        {
            _isChecked = value;
            CheckedChanged?.Invoke();
        }
    }

    // ... 기타 코드 ...
}

    ViewModel 업데이트:

csharp

public class ViewModel
{
    public ObservableCollection<ButtonModel> Buttons { get; set; }

    public ViewModel()
    {
        // ... 기타 코드 ...

        foreach (var button in Buttons)
        {
            button.CheckedChanged += OnButtonCheckedChanged;
        }
    }

    private void OnButtonCheckedChanged()
    {
        var checkedButton = Buttons.FirstOrDefault(b => b.IsChecked);
        if (checkedButton != null)
        {
            foreach (var button in Buttons)
            {
                if (button != checkedButton)
                {
                    button.IsChecked = false;
                }
            }
        }
    }

    // ... 기타 코드 ...
}

이제 ButtonModel의 IsChecked 속성이 변경될 때 CheckedChanged 이벤트가 발생하고, ViewModel의 OnButtonCheckedChanged 메서드가 호출됩니다. 이 메서드