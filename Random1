웹 서버에서 도움말 서비스를 구현하기 위해 전체 코드를 작성하겠습니다. 이 코드에는 글 목록을 보여주는 메인 페이지, 글과 이미지를 포함한 도움말을 볼 수 있는 페이지, 관리자가 암호를 입력하고 글과 이미지를 등록, 수정, 삭제할 수 있는 기능을 포함합니다. Bootstrap을 사용하여 UI를 예쁘게 꾸밀 것입니다.

1. 프로젝트 구조
프로젝트 폴더 구조를 다음과 같이 구성합니다:

scss
코드 복사
help_service/
│
├── static/
│   ├── css/
│   │   └── style.css (사용자 정의 CSS 파일)
│   └── uploads/
│       └── (이미지가 저장될 폴더)
├── templates/
│   ├── base.html (기본 템플릿)
│   ├── index.html (메인 페이지)
│   ├── post_detail.html (도움말 상세 페이지)
│   ├── admin_login.html (관리자 로그인 페이지)
│   └── manage_posts.html (도움말 관리 페이지)
├── app.py (메인 Flask 애플리케이션 파일)
└── help.db (SQLite 데이터베이스)
2. app.py (Flask 애플리케이션)
python
코드 복사
from flask import Flask, render_template, request, redirect, url_for, flash, session
from werkzeug.utils import secure_filename
import os
import sqlite3

app = Flask(__name__)
app.secret_key = 'your_secret_key'
UPLOAD_FOLDER = 'static/uploads'
app.config['UPLOAD_FOLDER'] = UPLOAD_FOLDER

# 데이터베이스 초기화
def init_db():
    with sqlite3.connect('help.db') as conn:
        cursor = conn.cursor()
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS posts (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                title TEXT NOT NULL,
                content TEXT NOT NULL,
                image TEXT
            )
        ''')
    print("Database initialized")

@app.route('/')
def index():
    with sqlite3.connect('help.db') as conn:
        cursor = conn.cursor()
        cursor.execute("SELECT * FROM posts")
        posts = cursor.fetchall()
    return render_template('index.html', posts=posts)

@app.route('/post/<int:post_id>')
def post_detail(post_id):
    with sqlite3.connect('help.db') as conn:
        cursor = conn.cursor()
        cursor.execute("SELECT * FROM posts WHERE id = ?", (post_id,))
        post = cursor.fetchone()
    return render_template('post_detail.html', post=post)

@app.route('/admin/login', methods=['GET', 'POST'])
def admin_login():
    if request.method == 'POST':
        password = request.form['password']
        if password == 'admin_password':  # 관리 암호
            session['admin'] = True
            return redirect(url_for('manage_posts'))
        else:
            flash('Invalid password', 'danger')
    return render_template('admin_login.html')

@app.route('/admin/logout')
def admin_logout():
    session.pop('admin', None)
    return redirect(url_for('index'))

@app.route('/admin/manage', methods=['GET', 'POST'])
def manage_posts():
    if 'admin' not in session:
        return redirect(url_for('admin_login'))

    with sqlite3.connect('help.db') as conn:
        cursor = conn.cursor()
        if request.method == 'POST':
            title = request.form['title']
            content = request.form['content']
            image = request.files['image']
            filename = secure_filename(image.filename)
            image.save(os.path.join(app.config['UPLOAD_FOLDER'], filename))

            cursor.execute("INSERT INTO posts (title, content, image) VALUES (?, ?, ?)",
                           (title, content, filename))
            conn.commit()
            flash('Post added successfully!', 'success')

        cursor.execute("SELECT * FROM posts")
        posts = cursor.fetchall()
    return render_template('manage_posts.html', posts=posts)

@app.route('/admin/delete/<int:post_id>')
def delete_post(post_id):
    if 'admin' not in session:
        return redirect(url_for('admin_login'))

    with sqlite3.connect('help.db') as conn:
        cursor = conn.cursor()
        cursor.execute("DELETE FROM posts WHERE id = ?", (post_id,))
        conn.commit()
    flash('Post deleted successfully!', 'success')
    return redirect(url_for('manage_posts'))

@app.route('/admin/edit/<int:post_id>', methods=['GET', 'POST'])
def edit_post(post_id):
    if 'admin' not in session:
        return redirect(url_for('admin_login'))

    with sqlite3.connect('help.db') as conn:
        cursor = conn.cursor()
        cursor.execute("SELECT * FROM posts WHERE id = ?", (post_id,))
        post = cursor.fetchone()

        if request.method == 'POST':
            title = request.form['title']
            content = request.form['content']
            image = request.files['image']
            filename = post[3]  # 기존 이미지 유지

            if image.filename:
                filename = secure_filename(image.filename)
                image.save(os.path.join(app.config['UPLOAD_FOLDER'], filename))

            cursor.execute("UPDATE posts SET title = ?, content = ?, image = ? WHERE id = ?",
                           (title, content, filename, post_id))
            conn.commit()
            flash('Post updated successfully!', 'success')
            return redirect(url_for('manage_posts'))

    return render_template('manage_posts.html', post=post)

if __name__ == '__main__':
    init_db()
    app.run(debug=True)
3. HTML 템플릿
templates/base.html
html
코드 복사
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <title>Help Service</title>
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
        <div class="container-fluid">
            <a class="navbar-brand" href="{{ url_for('index') }}">Help Service</a>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav">
                    <li class="nav-item">
                        <a class="nav-link" href="{{ url_for('index') }}">Home</a>
                    </li>
                    {% if session.get('admin') %}
                        <li class="nav-item">
                            <a class="nav-link" href="{{ url_for('manage_posts') }}">Manage Posts</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="{{ url_for('admin_logout') }}">Logout</a>
                        </li>
                    {% else %}
                        <li class="nav-item">
                            <a class="nav-link" href="{{ url_for('admin_login') }}">Admin Login</a>
                        </li>
                    {% endif %}
                </ul>
            </div>
        </div>
    </nav>
    <div class="container mt-4">
        {% with messages = get_flashed_messages(with_categories=true) %}
            {% if messages %}
                {% for category, message in messages %}
                    <div class="alert alert-{{ category }}">{{ message }}</div>
                {% endfor %}
            {% endif %}
        {% endwith %}
        {% block content %}{% endblock %}
    </div>
</body>
</html>
templates/index.html
html
코드 복사
{% extends 'base.html' %}
{% block content %}
<h1>Help Articles</h1>
<div class="row">
    {% for post in posts %}
        <div class="col-md-4 mb-3">
            <div class="card">
                <img src="{{ url_for('static', filename='uploads/' + post[3]) }}" class="card-img-top" alt="...">
                <div class="card-body">
                    <h5 class="card-title">{{ post[1] }}</h5>
                    <a href="{{ url_for('post_detail', post_id=post[0]) }}" class="btn btn-primary">Read More</a>
                </div>
            </div>
        </div>
    {% endfor %}
</div>
{% endblock %}
templates/post_detail.html
html
코드 복사
{% extends 'base.html' %}
{% block content %}
<h1>{{ post[1] }}</h1>
<img src="{{ url_for('static', filename='uploads/' + post[3]) }}" class="img-fluid" alt="...">
<p>{{ post[2] }}</p>
<a href="{{ url_for('index') }}" class="btn btn-secondary">Back</a>
{% endblock %}
templates/admin_login.html
html
코드 복사
{% extends 'base.html' %}
{% block content %}
<h1>Admin Login</h1>
<form method="POST">
    <div class="mb-3">
        <label for="password" class="form-label">Password</label>
        <input type="password" class="form-control" id="password" name="password" required>
    </div>
    <button type="submit" class="btn btn-primary">Login</button>
</form>
{% endblock %}
templates/manage_posts.html
html
코드 복사
{% extends 'base.html' %}
{% block content %}
<h1>Manage Posts</h1>
<form method="POST" enctype="multipart/form-data">
    <div class="mb-3">
        <label for="title" class="form-label">Title</label>
        <input type="text" class="form-control" id="title" name="title" required>
    </div>
    <div class="mb-3">
        <label for="content" class="form-label">Content</label>
        <textarea class="form-control" id="content" name="content" rows="5" required></textarea>
    </div>
    <div class="mb-3">
        <label for="image" class="form-label">Image</label>
        <input type="file" class="form-control" id="image" name="image" required>
    </div>
    <button type="submit" class="btn btn-success">Add Post</button>
</form>
<hr>
<h2>Existing Posts</h2>
<div class="list-group">
    {% for post in posts %}
        <div class="list-group-item">
            <h5>{{ post[1] }}</h5>
            <a href="{{ url_for('edit_post', post_id=post[0]) }}" class="btn btn-warning btn-sm">Edit</a>
            <a href="{{ url_for('delete_post', post_id=post[0]) }}" class="btn btn-danger btn-sm">Delete</a>
        </div>
    {% endfor %}
</div>
{% endblock %}
4. 스타일 파일 (static/css/style.css)
css
코드 복사
/* Custom styles here */
사용법
app.py를 실행하여 서버를 시작합니다.