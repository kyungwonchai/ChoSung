using System;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Text;
using System.Threading.Tasks;

namespace MailSenderExample
{
    public static class MailSender
    {
        private static readonly HttpClient client = new HttpClient();
        private static readonly string apiUrl = "http://oo/stt/ssc.net/mail/api/v2.0";
        private static readonly string systemId = "시스템 아이디";
        private static readonly string accessToken = "토큰 값";

        public static async Task<(string, string)> SendMail(string userId, string subject, string contents, string senderEmailAddress, string recipientEmailAddress)
        {
            client.DefaultRequestHeaders.Clear();
            client.DefaultRequestHeaders.Add("System-ID", systemId);
            client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", accessToken);

            var formDataContent = new MultipartFormDataContent();
            formDataContent.Headers.ContentType = MediaTypeHeaderValue.Parse("multipart/form-data");

            var requestData = new
            {
                mail = new
                {
                    subject,
                    contents,
                    contentType = "Text",
                    sender = new
                    {
                        emailAddress = senderEmailAddress,
                        recipientType = "TO"
                    },
                    recipients = new[]
                    {
                        new
                        {
                            emailAddress = recipientEmailAddress,
                            recipientType = "TO"
                        }
                    }
                },
                docSecuType = "personal"
            };

            var jsonPayload = Newtonsoft.Json.JsonConvert.SerializeObject(requestData);
            var mailContent = new StringContent(jsonPayload, Encoding.UTF8, "application/json");
            formDataContent.Add(mailContent, "mail");

            var requestUrl = $"{apiUrl}/mails/send?userId={userId}";

            var response = await client.PostAsync(requestUrl, formDataContent);

            if (response.IsSuccessStatusCode)
            {
                var responseContent = await response.Content.ReadAsStringAsync();
                var result = Newtonsoft.Json.JsonConvert.DeserializeObject<dynamic>(responseContent);
                string mailId = result.mailid;
                string sendResult = result.result;

                Console.WriteLine("메일이 성공적으로 발송되었습니다.");
                Console.WriteLine($"메일 ID: {mailId}");
                Console.WriteLine($"전송 결과: {sendResult}");

                return (mailId, sendResult);
            }
            else
            {
                var responseContent = await response.Content.ReadAsStringAsync();
                var result = Newtonsoft.Json.JsonConvert.DeserializeObject<dynamic>(responseContent);
                string errorCode = result.errorCode;
                string errorMessage = result.errorMessage;

                Console.WriteLine("메일 발송에 실패하였습니다.");
                Console.WriteLine($"에러 코드: {errorCode}");
                Console.WriteLine($"에러 메시지: {errorMessage}");

                return (null, null);
            }
        }
    }

    public partial class MainForm : Form
    {
        private string mailId;
        private string sendResult;

        public MainForm()
        {
            InitializeComponent();
        }

        private async void btnSendMail_Click(object sender, EventArgs e)
        {
            string userId = "사용자 ID";
            string subject = "메일 제목";
            string contents = "메일 본문";
            string senderEmailAddress = "보내는 이메일 주소";
            string recipientEmailAddress = "
