c:\processfiles.txt 파일에 적힌 프로세스 목록에 대해 동일한 처리를 하는 코드를 작성하려면, 파일에서 프로세스 이름들을 읽어와 각각에 대해 체크하고, 실행하거나 종료하는 작업을 수행하도록 코드를 수정해야 합니다. 다음은 수정된 전체 코드입니다.

csharp
코드 복사
using System;
using System.Diagnostics;
using System.IO;
using System.Timers;

namespace ProcessMonitor
{
    class Program
    {
        private static Timer checkTimer;
        private static Timer forceRestartTimer;
        private static string processListPath = @"c:\processfiles.txt";

        static void Main(string[] args)
        {
            // 1분마다 프로세스 상태를 확인하기 위한 타이머 설정
            checkTimer = new Timer(60000); // 60000ms = 1분
            checkTimer.Elapsed += CheckProcesses;
            checkTimer.AutoReset = true;
            checkTimer.Enabled = true;

            // 1시간마다 프로세스를 강제 종료하고 재시작하기 위한 타이머 설정
            forceRestartTimer = new Timer(3600000); // 3600000ms = 1시간
            forceRestartTimer.Elapsed += ForceRestartProcesses;
            forceRestartTimer.AutoReset = true;
            forceRestartTimer.Enabled = true;

            // 프로그램이 종료되지 않도록 유지
            Console.WriteLine("프로세스 모니터링을 시작합니다. 종료하려면 Ctrl + C를 누르세요.");
            Console.ReadLine();
        }

        private static void CheckProcesses(Object source, ElapsedEventArgs e)
        {
            try
            {
                if (File.Exists(processListPath))
                {
                    string[] processNames = File.ReadAllLines(processListPath);

                    foreach (string processName in processNames)
                    {
                        string trimmedProcessName = processName.Trim();
                        if (string.IsNullOrEmpty(trimmedProcessName))
                            continue;

                        Process[] processes = Process.GetProcessesByName(trimmedProcessName);

                        if (processes.Length == 0)
                        {
                            // 프로세스가 실행 중이지 않으면 실행
                            Process.Start(@"c:\abc\proc1.exe");
                            Console.WriteLine($"{trimmedProcessName}가 실행되지 않아 proc1.exe를 실행했습니다.");
                        }
                        else
                        {
                            Console.WriteLine($"{trimmedProcessName}가 이미 실행 중입니다.");
                        }
                    }
                }
                else
                {
                    Console.WriteLine($"파일이 존재하지 않습니다: {processListPath}");
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine("오류 발생: " + ex.Message);
                // 예외 처리 코드 추가 (로그 기록 등)
            }
        }

        private static void ForceRestartProcesses(Object source, ElapsedEventArgs e)
        {
            try
            {
                if (File.Exists(processListPath))
                {
                    string[] processNames = File.ReadAllLines(processListPath);

                    foreach (string processName in processNames)
                    {
                        string trimmedProcessName = processName.Trim();
                        if (string.IsNullOrEmpty(trimmedProcessName))
                            continue;

                        Process[] processes = Process.GetProcessesByName(trimmedProcessName);

                        if (processes.Length > 0)
                        {
                            // 프로세스 강제 종료
                            foreach (Process proc in processes)
                            {
                                proc.Kill();
                                proc.WaitForExit();
                            }
                            Console.WriteLine($"{trimmedProcessName}를 강제 종료했습니다.");
                        }

                        // 프로세스가 종료된 것을 확인한 후 다시 실행
                        Process.Start(@"c:\abc\proc1.exe");
                        Console.WriteLine($"{trimmedProcessName}를 재실행했습니다.");
                    }
                }
                else
                {
                    Console.WriteLine($"파일이 존재하지 않습니다: {processListPath}");
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine("오류 발생: " + ex.Message);
                // 예외 처리 코드 추가 (로그 기록 등)
            }
        }
    }
}
코드 설명:
프로세스 목록 파일 읽기: c:\processfiles.txt 파일에서 프로세스 이름들을 읽어옵니다. 각 프로세스 이름은 줄 단위로 구분되어 있습니다.
프로세스 상태 확인: 각 프로세스 이름에 대해 실행 중인지 확인합니다. 실행 중이지 않으면 지정된 경로의 실행 파일(c:\abc\proc1.exe)을 실행합니다.
프로세스 강제 종료 및 재실행: 1시간마다 각 프로세스를 강제 종료하고 종료된 것을 확인한 후 다시 실행합니다.
예외 처리: 파일이 존재하지 않거나, 프로세스를 관리하는 중에 발생할 수 있는 오류를 처리합니다.
이 코드는 c:\processfiles.txt 파일에 적힌 모든 프로세스 이름에 대해 1분마다 상태를 확인하고, 1시간마다 강제 종료 및 재실행을 수행합니다. 이 코드를 실행하는 프로그램이 항상 실행 중이어야 하며, 프로그램이 종료되지 않도록 하기 위해서는 추가적인 예외 처리와 안정적인 로그 기록 기능을 포함시키는 것이 좋습