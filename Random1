알겠습니다. ViewModel을 사용하지 않고 MainWindow.xaml.cs에서 직접 IP 리스트와 Visibility를 관리하는 방식으로 간단하게 구현해드리겠습니다.

Step 1: XAML에서 Visibility 설정
MainWindow.xaml에서 BooleanToVisibilityConverter를 추가하고, 각 메뉴 항목의 Visibility 속성을 바인딩합니다.

xml
코드 복사
<Window x:Class="YourNamespace.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="MainWindow" Height="350" Width="525">
    <Window.Resources>
        <!-- Boolean 값을 Visibility로 변환 -->
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
    </Window.Resources>
    
    <Grid>
        <!-- 메뉴1의 Visibility 설정 -->
        <TextBlock Text="Menu 1 Content" 
                   Visibility="{Binding IsMenu1Visible, RelativeSource={RelativeSource AncestorType=Window}, Converter={StaticResource BoolToVisibilityConverter}}"/>

        <!-- 메뉴2의 Visibility 설정 -->
        <TextBlock Text="Menu 2 Content" 
                   Visibility="{Binding IsMenu2Visible, RelativeSource={RelativeSource AncestorType=Window}, Converter={StaticResource BoolToVisibilityConverter}}"/>
    </Grid>
</Window>
Step 2: MainWindow.xaml.cs에서 IP 리스트와 Visibility 속성 설정
MainWindow.xaml.cs에 두 개의 IP 리스트와 메뉴별 Visibility를 제어하는 변수를 추가하고, IP 확인 메서드를 통해 Visibility를 제어합니다.

csharp
코드 복사
using System.Collections.ObjectModel;
using System.Windows;

namespace YourNamespace
{
    public partial class MainWindow : Window
    {
        // 메뉴별 허용된 IP 리스트
        private readonly ObservableCollection<string> AllowedIPsMenu1 = new ObservableCollection<string> { "192.168.0.1", "10.0.0.1" };
        private readonly ObservableCollection<string> AllowedIPsMenu2 = new ObservableCollection<string> { "192.168.0.2", "10.0.0.2" };

        // 메뉴별 Visibility 속성
        public bool IsMenu1Visible { get; set; }
        public bool IsMenu2Visible { get; set; }

        public MainWindow()
        {
            InitializeComponent();

            // 예제 IP 설정 (문서를 열 때 실제 IP를 얻어 설정)
            string currentIP = "192.168.0.1";
            CheckIpVisibility(currentIP);

            // DataContext 설정
            DataContext = this;
        }

        // IP 리스트에 따라 Visibility를 설정하는 메서드
        private void CheckIpVisibility(string currentIP)
        {
            // 메뉴 1에 대한 Visibility 설정
            IsMenu1Visible = AllowedIPsMenu1.Contains(currentIP);

            // 메뉴 2에 대한 Visibility 설정
            IsMenu2Visible = AllowedIPsMenu2.Contains(currentIP);

            // Property 변경 알림
            OnPropertyChanged(nameof(IsMenu1Visible));
            OnPropertyChanged(nameof(IsMenu2Visible));
        }

        // Property 변경 알림을 위한 이벤트
        public event PropertyChangedEventHandler PropertyChanged;

        protected void OnPropertyChanged(string propertyName)
        {
            PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}
설명
AllowedIPsMenu1과 AllowedIPsMenu2는 각 메뉴가 표시될 때 필요한 IP 리스트입니다.
CheckIpVisibility 메서드를 통해 현재 IP가 각 리스트에 포함되는지 확인하여 IsMenu1Visible과 IsMenu2Visible을 설정합니다.