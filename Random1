YPE_APPLICATION_OVERLAY)은 Android에서 특별한 권한이기 때문에 AndroidManifest.xml에 단순히 추가한다고 해서 자동으로 요청할 수 있는 권한이 아닙니다. 대신, 사용자에게 직접 설정 화면을 통해 권한을 부여하도록 안내해야 합니다.

1. AndroidManifest.xml에 권한 추가
먼저, AndroidManifest.xml에 다음과 같이 오버레이 권한을 선언해야 합니다. 하지만 이 선언만으로는 권한을 자동으로 요청할 수 없습니다.

xml
코드 복사
<uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW"/>
2. 오버레이 권한 요청 방법
Android에서는 SYSTEM_ALERT_WINDOW 권한이 위험한 권한으로 간주되기 때문에, 다른 권한들처럼 자동으로 권한을 요청할 수 없습니다. 대신, 사용자가 직접 앱 설정 화면으로 가서 권한을 부여해야 합니다. 이를 위해 Settings.ACTION_MANAGE_OVERLAY_PERMISSION 인텐트를 사용하여 설정 화면으로 이동하도록 해야 합니다.

아래는 권한 요청을 구현한 코드입니다.

코드 구현
kotlin
코드 복사
import android.content.Intent
import android.net.Uri
import android.provider.Settings

// 오버레이 권한 확인 및 요청
private fun checkOverlayPermission() {
    if (!Settings.canDrawOverlays(this)) {
        val intent = Intent(Settings.ACTION_MANAGE_OVERLAY_PERMISSION, Uri.parse("package:$packageName"))
        startActivityForResult(intent, REQUEST_OVERLAY_PERMISSION)
    }
}

// 권한 요청 코드 정의
companion object {
    private const val REQUEST_OVERLAY_PERMISSION = 1001
}

// onActivityResult 메서드에서 권한이 부여되었는지 확인
override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {
    super.onActivityResult(requestCode, resultCode, data)
    if (requestCode == REQUEST_OVERLAY_PERMISSION) {
        if (Settings.canDrawOverlays(this)) {
            // 권한이 부여되었을 때 작업 수행
            playAlarmSound()
        } else {
            // 권한이 거부된 경우 사용자에게 알림
            Toast.makeText(this, "오버레이 권한이 필요합니다.", Toast.LENGTH_SHORT).show()
        }
    }
}
설명
checkOverlayPermission 함수:

Settings.canDrawOverlays(this)를 사용하여 오버레이 권한이 있는지 확인합니다.
권한이 없다면, ACTION_MANAGE_OVERLAY_PERMISSION 인텐트를 사용하여 설정 화면으로 이동합니다. 사용자는 앱 설정 화면에서 오버레이 권한을 부여해야 합니다.
onActivityResult 함수:

사용자가 설정 화면에서 돌아오면, 권한이 부여되었는지 다시 확인합니다.
권한이 부여된 경우에만 playAlarmSound를 호출하여 작업을 진행합니다.
주의 사항
오버레이 권한은 자동 요청 불가: Android는 이 권한을 위험하게 간주하여, 앱이 자동으로 요청할 수 없도록 제한합니다. 사용자는 앱 설정 화면을 통해 직접 권한을 부여해야 합니다.
사용자 안내: 권한이 필요한 이유와 설정 화면으로 이동해야 하는 이유를 사용자에게 명확히 설명하는 것이 좋습니다.