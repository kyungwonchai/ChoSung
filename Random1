데이터베이스에서 데이터 가져오기
데이터베이스에서 model1 컬럼의 데이터를 가져오는 코드는 동일합니다.

csharp
Copy code
// ... 이전과 동일한 DatabaseHelper 클래스 ...
2. ViewModel 준비
ViewModel 클래스도 동일합니다.

csharp
Copy code
// ... 이전과 동일한 MainViewModel 클래스 ...
3. XAML에서 ComboBoxEdit 사용
XAML에서 ComboBoxEdit를 CellTemplate으로 정의합니다.

xml
Copy code
<Window ...
        xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
        xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
        xmlns:local="clr-namespace:YourNamespace">
    <Window.DataContext>
        <local:MainViewModel />
    </Window.DataContext>
    <Grid>
        <dxg:GridControl Name="grid" ItemsSource="{Binding YourItemsSource}">
            <dxg:GridControl.Columns>
                <dxg:GridColumn FieldName="YourDataFieldName">
                    <dxg:GridColumn.CellTemplate>
                        <DataTemplate>
                            <dxe:ComboBoxEdit 
                                ItemsSource="{Binding Path=DataContext.Model1Data, 
                                                      RelativeSource={RelativeSource AncestorType={x:Type dxg:GridControl}}}"
                                IsTextEditable="False"
                                DisplayMember="YourDisplayMember" />
                        </DataTemplate>
                    </dxg:GridColumn.CellTemplate>
                </dxg:GridColumn>
            </dxg:GridControl.Columns>
            <dxg:GridControl.View>
                <dxg:TableView AutoWidth="True"/>
            </dxg:GridControl.View>
        </dxg:GridControl>
    </Grid>
</Window>
이 코드에서는 YourItemsSource를 GridControl의 데이터 소스로 설정하고, YourDataFieldName은 해당 필드의 이름입니다. Model1Data는 model1 컬럼의 데이터를 포함합니다. YourDisplayMember는 ComboBoxEdit의 DisplayMember 속성으로, 보여줄 텍스트를 결정합니다.

이렇게 하면 GridControl의 각 셀에 ComboBoxEdit 컨트롤이 표시되며, Mode