로그인/로그아웃 시 사용자 ID(user.idnum)가 변경될 때마다 즐겨찾기 내용이 자동으로 갱신되도록 코드를 수정하겠습니다. 아래는 로그인/로그아웃 상태에 따라 즐겨찾기 데이터를 로드하거나 초기화하는 코드를 포함한 수정된 버전입니다.

주요 변경 사항
SetCurrentUser 함수:

로그인/로그아웃 시 호출되어 사용자 ID를 설정하고 즐겨찾기를 로드합니다.
로그아웃 시 초기화:

user.idnum을 null 또는 빈 값으로 설정하면 즐겨찾기 목록을 초기화합니다.
수정된 코드
전역 변수
csharp
코드 복사
private string currentUserId; // 현재 사용자 ID
SetCurrentUser 함수
csharp
코드 복사
public void SetCurrentUser(string userId)
{
    try
    {
        // 사용자 ID 변경
        currentUserId = userId;

        if (!string.IsNullOrWhiteSpace(currentUserId))
        {
            Console.WriteLine($"[Info] Logged in as User ID: {currentUserId}");
            LoadFavorites(); // 새로운 사용자 ID에 따라 즐겨찾기 로드
        }
        else
        {
            Console.WriteLine("[Info] Logged out. Favorites cleared.");
            favoriteKeys.Clear(); // 즐겨찾기 초기화
        }

        // 버튼 상태를 갱신
        InitializeButtons();
    }
    catch (Exception ex)
    {
        Console.WriteLine($"[Error] SetCurrentUser: {ex.Message}");
    }
}
수정된 LoadFavorites 함수
csharp
코드 복사
private void LoadFavorites()
{
    // 사용자 ID가 비어 있으면 초기화
    if (string.IsNullOrWhiteSpace(currentUserId))
    {
        favoriteKeys.Clear();
        return;
    }

    try
    {
        favoriteKeys.Clear();

        using (var connection = new SqlConnection(ConnectionString))
        {
            connection.Open();
            var command = new SqlCommand("SELECT FavoriteItems FROM Favorites WHERE UserId = @UserId", connection);
            command.Parameters.AddWithValue("@UserId", currentUserId);

            using (var reader = command.ExecuteReader())
            {
                if (reader.Read() && !reader.IsDBNull(0))
                {
                    var favorites = reader.GetString(0);
                    favoriteKeys.UnionWith(favorites.Split(new[] { Separator }, StringSplitOptions.RemoveEmptyEntries));
                }
            }
        }
    }
    catch (Exception ex)
    {
        Console.WriteLine($"[Error] LoadFavorites: {ex.Message}");
    }
}
수정된 SaveFavorites 함수
csharp
코드 복사
private void SaveFavorites()
{
    // 사용자 ID가 비어 있으면 저장하지 않음
    if (string.IsNullOrWhiteSpace(currentUserId))
    {
        Console.WriteLine("[Info] SaveFavorites: User ID is invalid.");
        return;
    }

    try
    {
        using (var connection = new SqlConnection(ConnectionString))
        {
            connection.Open();

            // 즐겨찾기 문자열 생성
            var favorites = string.Join(Separator, favoriteKeys);

            // 사용자별 즐겨찾기 업데이트 또는 삽입
            var command = new SqlCommand(@"
                IF EXISTS (SELECT 1 FROM Favorites WHERE UserId = @UserId)
                BEGIN
                    UPDATE Favorites SET FavoriteItems = @FavoriteItems WHERE UserId = @UserId
                END
                ELSE
                BEGIN
                    INSERT INTO Favorites (UserId, FavoriteItems) VALUES (@UserId, @FavoriteItems)
                END", connection);

            command.Parameters.AddWithValue("@UserId", currentUserId);
            command.Parameters.AddWithValue("@FavoriteItems", favorites);
            command.ExecuteNonQuery();
        }
    }
    catch (Exception ex)
    {
        Console.WriteLine($"[Error] SaveFavorites: {ex.Message}");
    }
}
로그인/로그아웃 테스트
csharp
코드 복사
// 로그인
SetCurrentUser("user123");

// 로그아웃
SetCurrentUser(null);
동작 흐름
로그인:

SetCurrentUser("user123") 호출 시:
currentUserId를 user123으로 설정.
LoadFavorites 호출로 해당 사용자의 즐겨찾기 데이터 로드.
로그아웃:

SetCurrentUser(null) 호출 시:
currentUserId를 null로 설정.
favoriteKeys.Clear()로 즐겨찾기 초기화.
즐겨찾기 변경:

ToggleFavorite 호출 시 변경된 데이터를 SaveFavorites로 즉시 저장.
유의사항
로그아웃 후 초기화:

로그아웃하면 UI에서도 즉시 즐겨찾기 상태가 비워집니다.
로그인 후 갱신:
