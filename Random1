Flask를 사용하여 MSSQL 2014에서 데이터를 읽어와 HTML 테이블로 표시하려면, Flask에서 MSSQL에 연결하고 데이터를 가져온 후 템플릿 렌더링을 사용하여 HTML에서 데이터를 표시하면 됩니다.

1. Flask에서 MSSQL 연결 및 데이터 가져오기
먼저, Flask에서 MSSQL에 연결하는 예시 코드입니다. pyodbc를 사용하여 MSSQL에 연결하고 데이터를 가져오겠습니다.

app.py
python
코드 복사
from flask import Flask, render_template
import pyodbc

app = Flask(__name__)

# MSSQL에 연결하는 함수
def get_db_connection():
    conn = pyodbc.connect(
        'DRIVER={ODBC Driver 17 for SQL Server};'
        'SERVER=your_server_name;'
        'DATABASE=your_database_name;'
        'UID=your_username;'
        'PWD=your_password;'
    )
    return conn

# MSSQL에서 데이터를 가져오는 함수
def fetch_command_log():
    conn = get_db_connection()
    cursor = conn.cursor()
    
    # SQL 쿼리 실행
    cursor.execute('SELECT Id, CommandText, SentCommand, RecdivedCommand, Status, Result, RetryCount, ResponseTime, Timestamp FROM CommandLog')
    
    # 데이터를 모두 가져옴
    rows = cursor.fetchall()
    
    # 컬럼 이름을 가져옴
    columns = [column[0] for column in cursor.description]
    
    # 데이터베이스 연결 종료
    conn.close()
    
    # 결과 반환
    return rows, columns

# Flask 라우팅
@app.route('/')
def index():
    # 데이터를 가져옴
    rows, columns = fetch_command_log()
    
    # 데이터를 index.html로 렌더링
    return render_template('index.html', rows=rows, columns=columns)

if __name__ == '__main__':
    app.run(debug=True)
2. HTML 템플릿 생성 (index.html)
Flask는 Jinja2 템플릿 엔진을 사용합니다. HTML 테이블을 만들어 CommandLog의 데이터를 표시하도록 하겠습니다.

templates/index.html
html
코드 복사
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Command Log Table</title>
    <style>
        table {
            width: 100%;
            border-collapse: collapse;
            margin: 20px 0;
            font-size: 18px;
            text-align: left;
        }
        th, td {
            padding: 12px 15px;
            border: 1px solid #ddd;
        }
        th {
            background-color: #f2f2f2;
        }
        tr:nth-child(even) {
            background-color: #f9f9f9;
        }
    </style>
</head>
<body>

<h2>Command Log Table</h2>

<table>
    <thead>
        <tr>
            {% for column in columns %}
            <th>{{ column }}</th>
            {% endfor %}
        </tr>
    </thead>
    <tbody>
        {% for row in rows %}
        <tr>
            {% for item in row %}
            <td>{{ item }}</td>
            {% endfor %}
        </tr>
        {% endfor %}
    </tbody>
</table>

</body>
</html>
3. MSSQL 데이터 구조
fetch_command_log() 함수에서 가져오는 데이터는 다음과 같습니다:

Id: 명령의 고유 식별자.
CommandText: 보낸 명령어 텍스트.
SentCommand: 실제로 보낸 명령어.
RecdivedCommand: 받은 응답.
Status: 작업 상태 (Pending, Processing, Completed, Failed).
Result: 작업 결과 (1: 성공, 0: 실패).
RetryCount: 재시도 횟수.
ResponseTime: 응답 시간(밀리초).
Timestamp: 작업 완료 시간.
이 모든 데이터를 **index.html**에서 테이블 형식으로 표시합니다.

4. 결과 페이지
Flask 서버를 실행하고 **http://localhost:5000/**에 접속하면, CommandLog 테이블의 모든 항목이 HTML 테이블로 표시됩니다. 데이터가 많다면 페이지네이션 또는 필터 기능을 추가할 수 있습니다.

5. 실행 방법
Flask 설치:

bash
코드 복사
pip install flask pyodbc
Flask 앱 실행:

bash
코드 복사
python app.py
브라우저에서 **http://localhost:5000/**에 접속하면, DB에서 가져온 데이터가 표로 표시됩니다.

결론
이 코드는 Flask를 사용해 MSSQL에서 데이터를 읽어오고, **index.html**에서 그 데이터를 표 형식으로 표시하는 방법을 보여줍니다. CommandLog의 모든 열을 테이블에 맞게 표현하고, CSS를 통해 테이블을 간단하게 스