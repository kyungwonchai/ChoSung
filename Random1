아래는 SignalR로 메시지를 수신하여 MSSQL 2014에 저장하고, WinForms DevExpress 22.2의 GridControl에 비동기로 데이터를 표시하는 전체 솔루션을 위한 코드를 제공합니다.

1. MSSQL 테이블 생성 쿼리
MSSQL 2014에 사용할 테이블을 생성하기 위한 쿼리입니다. 이 테이블에는 IP 주소, ReceivedMessage, Time1, LogType을 저장합니다.

sql
코드 복사
CREATE TABLE LogMessages
(
    Id INT PRIMARY KEY IDENTITY(1,1),  -- 기본 키 (자동 증가)
    IP NVARCHAR(50),                   -- IP 주소
    ReceivedMessage NVARCHAR(255),      -- 수신된 메시지
    Time1 DATETIME,                     -- 수신 시간
    LogType NVARCHAR(50)                -- 로그 유형
);
2. SignalR 서버에서 메시지를 받아서 MSSQL에 저장하는 코드
SignalR 허브에서 메시지를 수신하여 MSSQL에 저장하는 예시입니다. Dapper 라이브러리를 사용하여 DB에 비동기로 데이터를 삽입하는 방법입니다.

SignalRHub.cs (서버 코드)
csharp
코드 복사
using Microsoft.AspNetCore.SignalR;
using System.Threading.Tasks;
using Dapper;
using System.Data.SqlClient;

public class SignalRHub : Hub
{
    private readonly string _connectionString = "Data Source=your-server;Initial Catalog=your-database;User ID=your-username;Password=your-password";

    // 클라이언트로부터 메시지를 수신하는 메서드
    public async Task SendMessage(string message)
    {
        // 메시지에서 ^ 구분자를 사용해 데이터를 분리
        var parts = message.Split('^');
        if (parts.Length < 4)
        {
            return;
        }

        string ip = parts[0];
        string receivedMessage = parts[1];
        string logType = parts[2];
        string time1 = parts[3];

        // 데이터베이스에 비동기로 데이터를 삽입
        using (var connection = new SqlConnection(_connectionString))
        {
            await connection.ExecuteAsync(
                "INSERT INTO LogMessages (IP, ReceivedMessage, Time1, LogType) VALUES (@IP, @ReceivedMessage, @Time1, @LogType)",
                new { IP = ip, ReceivedMessage = receivedMessage, Time1 = time1, LogType = logType }
            );
        }

        // 응답 메시지를 클라이언트에 전송 (옵션)
        await Clients.Caller.SendAsync("ReceiveResponse", "Data saved successfully.");
    }
}
설명:
SignalR 허브에서 클라이언트로부터 메시지를 수신하고, ^ 기호로 메시지를 분리하여 각 부분을 DB에 삽입합니다.
Dapper를 사용해 비동기로 MSSQL 데이터베이스에 삽입합니다.
3. WinForms에서 DevExpress GridControl을 사용하여 데이터를 표시하는 코드
WinForms에서 DevExpress GridControl을 사용하여 MSSQL에서 데이터를 불러와 GridControl에 비동기로 표시하는 방법입니다.

WinForms (비동기 방식으로 MSSQL 데이터를 가져와 GridControl에 표시)
csharp
코드 복사
using DevExpress.XtraGrid;
using DevExpress.XtraGrid.Views.Grid;
using System;
using System.Data;
using System.Data.SqlClient;
using System.Threading.Tasks;
using System.Windows.Forms;

public partial class Form1 : Form
{
    private string _connectionString = "Data Source=your-server;Initial Catalog=your-database;User ID=your-username;Password=your-password";

    public Form1()
    {
        InitializeComponent();
        LoadGridDataAsync();  // 폼 로드 시 데이터를 비동기로 로드
    }

    // MSSQL 데이터를 비동기 방식으로 불러와 GridControl에 로드하는 메서드
    private async void LoadGridDataAsync()
    {
        try
        {
            DataTable dataTable = await GetDataFromDatabaseAsync();
            gridControl1.DataSource = dataTable;  // GridControl에 데이터 바인딩
        }
        catch (Exception ex)
        {
            MessageBox.Show($"Error loading data: {ex.Message}");
        }
    }

    // 비동기로 MSSQL에서 데이터를 가져오는 메서드
    private async Task<DataTable> GetDataFromDatabaseAsync()
    {
        DataTable dataTable = new DataTable();

        using (SqlConnection connection = new SqlConnection(_connectionString))
        {
            await connection.OpenAsync();

            // 데이터 조회 쿼리
            string query = "SELECT IP, ReceivedMessage, Time1, LogType FROM LogMessages";

            using (SqlCommand command = new SqlCommand(query, connection))
            {
                using (SqlDataReader reader = await command.ExecuteReaderAsync())
                {
                    dataTable.Load(reader);  // DataTable에 데이터 로드
                }
            }
        }

        return dataTable;
    }
}
설명:
LoadGridDataAsync: 폼이 로드될 때 비동기로 MSSQL에서 데이터를 가져와 GridControl에 표시하는 메서드입니다.
GetDataFromDatabaseAsync: 비동기 방식으로 MSSQL에서 데이터를 읽어와 DataTable에 로드한 다음, GridControl에 바인딩합니다.
gridControl1: DevExpress GridControl은 데이터를 DataTable로부터 바인딩하여 UI에 표시합니다.
DevExpress GridControl 설정 (디자인)
DevExpress GridControl을 폼에 추가합니다.
GridControl의 이름을 gridControl1로 설정합니다.
DevExpress GridView는 기본적으로 GridView1로 설정되며, 디자인 타임에서 열 설정을 구성할 수 있습니다.
4. 전체 흐름
SignalR 클라이언트가 서버에 메시지를 전송합니다. (Send1 함수가 메시지를 ^ 구분자로 보냄)
SignalR 서버는 해당 메시지를 수신하고 MSSQL 2014 데이터베이스에 삽입합니다.