using System;
using System.IO;
using System.Text.RegularExpressions;
using System.Windows;

namespace LogFileWatcher
{
    public partial class MainWindow : Window
    {
        private FileSystemWatcher _watcher;
        private readonly string _folderPath = @"C:\G-MES2.0\GUMI_WEB\log"; // Path to the folder to monitor

        public MainWindow()
        {
            InitializeComponent();
            SetupWatcher();
        }

        private void SetupWatcher()
        {
            _watcher = new FileSystemWatcher
            {
                Path = _folderPath,
                NotifyFilter = NotifyFilters.LastWrite | NotifyFilters.FileName,
                Filter = "*.log", // Only watch log files
                EnableRaisingEvents = true,
                IncludeSubdirectories = false
            };

            // Register event handlers
            _watcher.Created += OnChanged;
            _watcher.Changed += OnChanged;

            Console.WriteLine("Watcher started. Monitoring folder: " + _folderPath);
        }

        private void OnChanged(object sender, FileSystemEventArgs e)
        {
            // Extract filename from the full path
            string fileName = Path.GetFileName(e.FullPath);

            // Define the regular expression pattern based on the provided naming convention
            string pattern = @"^10\.56\.166\.81_M4OIA\d{6}_gumi\d{7}_\d{2}\.log$";

            // Check if the file matches the pattern
            if (Regex.IsMatch(fileName, pattern))
            {
                // Extract the date from the filename (the two digits before ".log")
                string datePart = fileName.Substring(fileName.Length - 6, 2);
                
                // Convert to an integer representing the date
                int fileDate = int.Parse(datePart);

                // Get today's date
                int todayDate = DateTime.Now.Day;

                // Check if the file was created within the last 24 hours
                if (Math.Abs(todayDate - fileDate) <= 1)
                {
                    // If the date is within the last 24 hours, you can process the file
                    Console.WriteLine($"File {fileName} was modified within the last 24 hours.");

                    // TODO: Handle file content monitoring or changes here
                }
            }
        }

        // Dispose the watcher when the window is closed
        protected override void OnClosed(EventArgs e)
        {
            _watcher.Dispose();
            base.OnClosed(e);
        }
    }
}
