act 서버를 우분투에서 실행하는 react1.service를 중단하고, 디버깅할 수 있도록 실행하려면 다음 단계를 따르세요.

1. React 서버 서비스 중단
bash
코드 복사
sudo systemctl stop react1.service
이 명령어를 실행하면 react1.service가 실행 중이면 중단됩니다.

2. 서비스 상태 확인
정지 여부를 확인하려면:

bash
코드 복사
sudo systemctl status react1.service
inactive (dead) 상태라면 정상적으로 중단된 것입니다.
3. 디버깅 모드로 실행
서비스를 systemd에서 실행하지 않고 직접 실행하여 로그를 확인하려면:

1) 작업 디렉토리 이동
bash
코드 복사
cd /path/to/react-app
서비스 파일에서 WorkingDirectory= 값을 참고하여 해당 디렉토리로 이동하세요.
2) 환경 설정 확인
서비스 파일(/etc/systemd/system/react1.service)에서 실행 명령을 확인하세요. 보통 ExecStart 항목에 npm start 또는 node server.js 같은 명령이 있을 것입니다.

3) 디버깅 모드 실행
npm으로 실행:
bash
코드 복사
npm start
yarn으로 실행:
bash
코드 복사
yarn start
직접 node 실행:
bash
코드 복사
node server.js
이렇게 하면 표준 출력으로 로그를 확인하면서 실행할 수 있습니다.

4. 추가적인 로그 확인
만약 서비스 실행 중 에러가 발생하면 로그를 확인해야 합니다.

1) 시스템 로그 확인
bash
코드 복사
journalctl -u react1.service --no-pager --full
이 명령어는 react1.service 관련 로그를 보여줍니다.

2) React 로그 확인
React 앱이 별도의 로그 파일을 사용하고 있다면:

bash
코드 복사
tail -f /path/to/logs/react.log
5. 에러 해결 후 서비스 재실행
문제를 해결한 후 다시 서비스로 실행하려면:

bash
코드 복사
sudo systemctl start react1.service
그리고 부팅 시 자동 실행하도록 설정하려면:

bash
코드 복사
sudo systemctl enable react1.service
🚀 요약
systemctl stop react1.service로 서비스 중단
cd /path/to/react-app으로 이동
npm start 또는 node server.js로 직접 실행
에러 로그 확인 (journalctl -u react1.service, npm start 로그 등)