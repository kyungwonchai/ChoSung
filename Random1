래는 ForceEjectNumbers를 MainViewModel에서도 변경하고, 다른 클래스에서도 변경하는 코드 예제입니다. 이 예제는 두 클래스에서 동일한 ObservableCollection을 참조하도록 설정되어 있습니다.

코드 예제
MainViewModel 클래스
csharp
코드 복사
using System.Collections.ObjectModel;

public class MainViewModel
{
    // ForceEjectNumbers: 숫자 데이터를 저장하는 ObservableCollection
    public ObservableCollection<int> ForceEjectNumbers { get; set; }

    public MainViewModel()
    {
        // 초기 값 추가
        ForceEjectNumbers = new ObservableCollection<int> { 10, 20, 30 };
    }

    // MainViewModel 내부에서 ForceEjectNumbers 값을 변경하는 메서드
    public void UpdateValueFromMain(int index, int newValue)
    {
        if (index >= 0 && index < ForceEjectNumbers.Count)
        {
            ForceEjectNumbers[index] = newValue;
            Console.WriteLine($"[MainViewModel] Index {index} updated to {newValue}");
        }
    }
}
ForceEjectUpdater 클래스 (MainViewModel에서 주입받음)
csharp
코드 복사
public class ForceEjectUpdater
{
    private ObservableCollection<int> _forceEjectNumbers;

    // 생성자에서 ForceEjectNumbers 주입
    public ForceEjectUpdater(ObservableCollection<int> forceEjectNumbers)
    {
        _forceEjectNumbers = forceEjectNumbers;
    }

    // ForceEjectNumbers 값을 변경하는 메서드
    public void UpdateValueFromUpdater(int index, int newValue)
    {
        if (index >= 0 && index < _forceEjectNumbers.Count)
        {
            _forceEjectNumbers[index] = newValue;
            Console.WriteLine($"[ForceEjectUpdater] Index {index} updated to {newValue}");
        }
    }
}
Main 메서드 (동작 테스트)
csharp
코드 복사
class Program
{
    static void Main(string[] args)
    {
        // MainViewModel 초기화
        var mainViewModel = new MainViewModel();

        // ForceEjectUpdater 클래스에 ForceEjectNumbers 주입
        var forceEjectUpdater = new ForceEjectUpdater(mainViewModel.ForceEjectNumbers);

        // MainViewModel에서 값 변경
        mainViewModel.UpdateValueFromMain(0, 100); // Index 0의 값을 100으로 변경

        // ForceEjectUpdater에서 값 변경
        forceEjectUpdater.UpdateValueFromUpdater(1, 200); // Index 1의 값을 200으로 변경

        // ForceEjectNumbers 최종 상태 출력
        Console.WriteLine("Final ForceEjectNumbers:");
        foreach (var number in mainViewModel.ForceEjectNumbers)
        {
            Console.WriteLine(number); // 출력: 100, 200, 30
        }
    }
}
출력 결과
plaintext
코드 복사
[MainViewModel] Index 0 updated to 100
[ForceEjectUpdater] Index 1 updated to 200
Final ForceEjectNumbers:
100
200
30
동작 설명
MainViewModel에서 값 변경:

UpdateValueFromMain 메서드를 통해 ForceEjectNumbers의 값을 변경.
변경된 값은 다른 클래스에서도 확인 가능.
ForceEjectUpdater에서 값 변경:

생성자로 전달받은 ForceEjectNumbers 참조를 사용해 값을 변경.
변경된 값은 MainViewModel에서도 반영.
공유된 참조:

ForceEjectNumbers는 참조 타입이기 때문에 두 클래스에서 동일한 데이터를 공유.
출력 확인:

최종 출력에서 두 클래스에서의 변경 사항이 모두 반영된 상태를 확인.
중요한 포인트