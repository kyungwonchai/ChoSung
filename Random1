1 및 AN2 컬럼에 각각 버튼을 추가하려면 DevExpress GridControl의 RepositoryItemButtonEdit을 사용해야 합니다. 이 예제에서는 GridView에 버튼을 추가하고, 각 버튼 클릭 시 이벤트를 처리하는 방법을 설명합니다.

csharp
코드 복사
using System;
using System.Data;
using System.Data.SqlClient;
using System.Windows.Forms;
using DevExpress.XtraGrid;
using DevExpress.XtraGrid.Views.Grid;
using DevExpress.XtraEditors.Repository;

namespace YourNamespace
{
    public partial class YourForm : Form
    {
        private GridControl gridControl;
        private GridView gridView;
        private string connectionString = "Your_Connection_String_Here";
        private string query = "SELECT Column1 FROM TableA";

        public YourForm()
        {
            InitializeComponent();
            InitializeGridControl();
            LoadData();
        }

        private void InitializeComponent()
        {
            this.gridControl = new GridControl();
            this.gridView = new GridView(gridControl);
            this.SuspendLayout();
            // 
            // gridControl
            // 
            this.gridControl.Dock = DockStyle.Fill;
            this.gridControl.MainView = this.gridView;
            this.gridControl.ViewCollection.AddRange(new DevExpress.XtraGrid.Views.Base.BaseView[] {
            this.gridView});
            this.Controls.Add(this.gridControl);
            // 
            // gridView
            // 
            this.gridView.GridControl = this.gridControl;
            this.gridView.Name = "gridView";
            this.ResumeLayout(false);
        }

        private void InitializeGridControl()
        {
            gridView.OptionsBehavior.Editable = true;
            gridView.OptionsSelection.EnableAppearanceFocusedCell = false;
            gridView.FocusRectStyle = DevExpress.XtraGrid.Views.Grid.DrawFocusRectStyle.RowFocus;

            // Create button editors
            RepositoryItemButtonEdit buttonEditVAL1 = new RepositoryItemButtonEdit();
            buttonEditVAL1.Buttons[0].Caption = "Q1";
            buttonEditVAL1.Buttons[0].Kind = DevExpress.XtraEditors.Controls.ButtonPredefines.Glyph;
            buttonEditVAL1.ButtonClick += ButtonEditVAL1_ButtonClick;

            RepositoryItemButtonEdit buttonEditAN2 = new RepositoryItemButtonEdit();
            buttonEditAN2.Buttons[0].Caption = "A1";
            buttonEditAN2.Buttons[0].Kind = DevExpress.XtraEditors.Controls.ButtonPredefines.Glyph;
            buttonEditAN2.ButtonClick += ButtonEditAN2_ButtonClick;

            gridControl.RepositoryItems.Add(buttonEditVAL1);
            gridControl.RepositoryItems.Add(buttonEditAN2);

            // Add columns to grid
            gridView.Columns.AddVisible("Column1", "Column1");
            gridView.Columns.AddVisible("VAL1", "VAL1").ColumnEdit = buttonEditVAL1;
            gridView.Columns.AddVisible("AN2", "AN2").ColumnEdit = buttonEditAN2;
        }

        private void LoadData()
        {
            using (SqlConnection connection = new SqlConnection(connectionString))
            {
                SqlDataAdapter dataAdapter = new SqlDataAdapter(query, connection);
                DataTable dataTable = new DataTable();
                dataAdapter.Fill(dataTable);

                // Add extra columns
                dataTable.Columns.Add("VAL1", typeof(string));
                dataTable.Columns.Add("AN2", typeof(string));

                gridControl.DataSource = dataTable;
            }
        }

        private void ButtonEditVAL1_ButtonClick(object sender, DevExpress.XtraEditors.Controls.ButtonPressedEventArgs e)
        {
            GridView view = gridControl.FocusedView as GridView;
            if (view != null)
            {
                DataRow row = view.GetDataRow(view.FocusedRowHandle);
                if (row != null)
                {
                    string column1Value = row["Column1"].ToString();
                    MessageBox.Show("VAL1 Button Clicked, Column1 Value: " + column1Value);
                }
            }
        }

        private void ButtonEditAN2_ButtonClick(object sender, DevExpress.XtraEditors.Controls.ButtonPressedEventArgs e)
        {
            GridView view = gridControl.FocusedView as GridView;
            if (view != null)
            {
                DataRow row = view.GetDataRow(view.FocusedRowHandle);
                if (row != null)
                {
                    string column1Value = row["Column1"].ToString();
                    MessageBox.Show("AN2 Button Clicked, Column1 Value: " + column1Value);
                }
            }
        }

        [STAThread]
        static void Main()
        {
            Application.EnableVisualStyles();
            Application.SetCompatibleTextRenderingDefault(false);
            Application.Run(new YourForm());
        }
    }
}
이 코드는 다음을 수행합니다:

MSSQL2014 데이터베이스에서 TableA의 Column1 값을 가져옵니다.
DataTable에 데이터를 로드한 후, VAL1 및 AN2라는 두 개의 컬럼을 추가합니다.
VAL1과 AN2 컬럼에 버튼을 추가합니다.
각 버튼 클릭 이벤트를 처리하여 Column1 값을 메시지 박스로 표시합니다.
이 코드를 통해 DevExpress GridControl에 버튼을 추가하고, 각 버튼 클릭 시 원하는 작업을 수행할 수 있습니다.






