네, 알겠습니다. Flask 애플리케이션의 config.py 파일에 요청하신 대로 예시 IP 주소, DB 포트 5555, 그리고 임의의 계정 정보를 포함하여 수정된 코드를 제공해 드리겠습니다. 이 코드를 보시고 실제 환경에 맞게 YOUR_... 부분이나 예시 값들을 변경하시면 됩니다.

수정: config.py (Flask 애플리케이션 환경 설정)
Python

# scontrol_flask_web/config.py
import os
from dotenv import load_dotenv

# .env 파일이 있다면 로드 (선택 사항)
basedir = os.path.abspath(os.path.dirname(__file__))
load_dotenv(os.path.join(basedir, '.env')) # .env 파일 사용 시

class Config:
    # Flask 애플리케이션의 CSRF 보호, 세션 관리 등에 사용되는 비밀 키입니다.
    # 실제 배포 시에는 매우 강력하고 예측 불가능한 문자열로 변경해야 합니다.
    SECRET_KEY = os.environ.get('SECRET_KEY') or '임의의-매우-안전한-비밀키로-변경하세요'
    
    # MSSQL SQLAlchemy URI 설정
    # 형식: mssql+pyodbc://<사용자이름>:<비밀번호>@<서버주소>,<포트>/<데이터베이스이름>?driver=<ODBC드라이버이름>
    # 환경 변수에서 값을 가져오거나, 없을 경우 코드에 명시된 예시 값 사용
    DB_USER = os.environ.get('DB_USER') or 'aaaaa'  # 예시 사용자 ID
    DB_PASSWORD = os.environ.get('DB_PASSWORD') or 'bbbbb' # 예시 비밀번호
    # 실제 MSSQL 서버 주소/인스턴스 이름으로 변경해야 합니다.
    DB_SERVER_ADDRESS = os.environ.get('DB_SERVER_ADDRESS') or 'YOUR_MSSQL_SERVER_INSTANCE' 
    DB_PORT = os.environ.get('DB_PORT') or '5555' # 요청하신 DB 포트
    DB_NAME = os.environ.get('DB_NAME') or 'SControlFlaskDB' # 사용할 데이터베이스 이름
    
    # 시스템에 설치된 ODBC 드라이버 이름. 환경에 따라 다를 수 있습니다.
    # 예: 'ODBC Driver 17 for SQL Server', 'SQL Server Native Client 11.0', 'SQL Server' 등
    # Ubuntu에서 msodbcsql17 드라이버 설치 시 보통 'ODBC Driver 17 for SQL Server'
    ODBC_DRIVER = os.environ.get('ODBC_DRIVER') or 'ODBC Driver 17 for SQL Server' 

    # DB_SERVER_ADDRESS에 포트 포함 (예: 'YOUR_SERVER,5555' 또는 'localhost\SQLEXPRESS,5555')
    DB_SERVER_WITH_PORT = f"{DB_SERVER_ADDRESS},{DB_PORT}"

    SQLALCHEMY_DATABASE_URI = os.environ.get('DATABASE_URL') or \
        f'mssql+pyodbc://{DB_USER}:{DB_PASSWORD}@{DB_SERVER_WITH_PORT}/{DB_NAME}?driver={ODBC_DRIVER.replace(" ", "+")}'

    SQLALCHEMY_TRACK_MODIFICATIONS = False # SQLAlchemy 이벤트 알림 기능 비활성화 (성능에 도움)

    # IP 기반 접근 제어를 위한 관리자 IP 목록 (예시)
    # 실제 운영 시에는 DB에서 관리하거나, 더 안전한 방법으로 설정하는 것이 좋습니다.
    ADMIN_IPS = [
        '192.168.0.10', # 예시 관리자 IP 1
        '10.0.0.5',     # 예시 관리자 IP 2
        '127.0.0.1',    # 로컬호스트 IPv4 (개발/테스트용)
        '::1'           # 로컬호스트 IPv6 (개발/테스트용)
    ]
    # 위 ADMIN_IPS 목록에 실제 관리자로 사용할 PC의 IP 주소를 추가/수정하세요.

    @staticmethod
    def init_app(app):
        # 애플리케이션 초기화 시 추가 작업이 필요하면 여기에 작성
        pass

class DevelopmentConfig(Config):
    DEBUG = True
    # 개발 환경에서만 사용할 추가 설정이 있다면 여기에 작성
    # 예를 들어, 개발용 관리자 IP를 추가할 수 있습니다.
    # ADMIN_IPS = Config.ADMIN_IPS + ['your_development_machine_ip']

class ProductionConfig(Config):
    DEBUG = False
    # 실제 운영 환경에서는 DEBUG = False로 설정하고,
    # SECRET_KEY, 데이터베이스 접속 정보 등은 반드시 환경 변수(.env 파일 등)를 통해 안전하게 설정해야 합니다.
    # 예시:
    # SECRET_KEY = os.environ.get('PRODUCTION_SECRET_KEY') # 필수
    # SQLALCHEMY_DATABASE_URI = os.environ.get('PRODUCTION_DATABASE_URL') # 필수

# 사용할 설정을 매핑합니다. 환경 변수 FLASK_CONFIG 값에 따라 다른 설정을 로드할 수 있습니다.
config = {
    'development': DevelopmentConfig,
    'production': ProductionConfig,
    'default': DevelopmentConfig # 기본값으로 개발 설정 사용
}
주요 변경 및 참고 사항:

DB_USER, DB_PASSWORD: 요청하신 대로 예시 값 aaaaa와 bbbbb를 기본값으로 설정했습니다. 실제 DB 계정 정보로 변경해주세요.
DB_SERVER_ADDRESS: YOUR_MSSQL_SERVER_INSTANCE라는 플레이스홀더를 유지했습니다. 실제 MSSQL 서버 주소(예: 192.168.1.100 또는 myserver.database.windows.net 또는 localhost\SQLEXPRESS)로 변경해야 합니다.
DB_PORT: 요청하신 5555 포트를 사용하도록 DB_SERVER_WITH_PORT 변수를 구성했습니다. MSSQL이 실제로 이 포트에서 수신 대기하도록 설정되어 있어야 합니다 (기본 포트는 1433).
DB_NAME: 사용할 데이터베이스 이름입니다. 예시로 SControlFlaskDB를 사용했습니다.
ODBC_DRIVER: MSSQL 연결에 사용할 ODBC 드라이버 이름입니다. Ubuntu 서버에 msodbcsql17 패키지 등으로 드라이버를 설치했다면 보통 'ODBC Driver 17 for SQL Server'가 맞습니다. Windows 환경이라면 설치된 드라이버에 따라 이름이 다를 수 있습니다 (예: 'SQL Server Native Client 11.0' 또는 간단히 'SQL Server').
ADMIN_IPS: 예시로 임의의 IP 주소 두 개('192.168.0.10', '10.0.0.5')와 로컬호스트 IP를 추가했습니다. 이 목록에 실제 관리자로 접속할 PC의 IP 주소를 정확히 입력해야 합니다.
환경 변수 사용 권장: 코드에 직접적인 계정 정보나 비밀 키를 하드코딩하는 대신, .env 파일과 python-dotenv 라이브러리를 사용하거나 실제 서버 환경 변수를 통해 설정하는 것이 훨씬 안전합니다. 위 코드는 환경 변수가 없을 경우 예시 값을 사용하도록 되어 있습니다.
실제 사용 시 수정할 부분:

SECRET_KEY: 강력한 임의의 문자열로 변경하세요.
DB_USER, DB_PASSWORD, DB_SERVER_ADDRESS, DB_NAME, ODBC_DRIVER: 실제 MSSQL 데이터베이스 접속 정보로 정확하게 수정하거나, .env 파일에 정의하고 해당 파일이 올바르게 로드되는지 확인하세요.