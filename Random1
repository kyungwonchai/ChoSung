클립보드 내용 저장 및 메모 리스트 조회 기능을 포함한 WPF 애플리케이션을 작성해보겠습니다. 메모 리스트는 DataGrid를 사용해 시간값만 표시하고, 클릭 시 세부 내용을 보여주도록 구현하겠습니다.

MSSQL2014 DB 스크립트
우선 데이터베이스와 테이블을 생성하는 스크립트를 작성하겠습니다.

sql
코드 복사
CREATE DATABASE AutoMemoDB;

USE AutoMemoDB;

CREATE TABLE T_AutoMemo (
    Id INT IDENTITY(1,1) PRIMARY KEY,
    MemoText NVARCHAR(MAX),
    RecordTime DATETIME
);
WPF 애플리케이션
프로젝트 생성: Visual Studio에서 WPF App (.NET Framework) 프로젝트를 생성합니다.
DevExpress 설치: DevExpress를 사용하려면 NuGet 패키지 관리자에서 DevExpress.Wpf를 설치합니다.
MainWindow.xaml: 메인 윈도우의 레이아웃을 설정합니다.
xml
코드 복사
<Window x:Class="AutoMemo.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="AutoMemo" Height="450" Width="800">
    <Grid>
        <TabControl>
            <TabItem Header="Clipboard">
                <Grid>
                    <TextBox Name="clipboardTextBox" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />
                </Grid>
            </TabItem>
            <TabItem Header="Saved Memos">
                <Grid>
                    <StackPanel>
                        <Button Name="btnLast5Days" Content="Last 5 Days" Click="btnLast5Days_Click"/>
                        <Button Name="btnAll" Content="All" Click="btnAll_Click"/>
                        <DataGrid Name="memoDataGrid" AutoGenerateColumns="False" SelectionChanged="memoDataGrid_SelectionChanged">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Record Time" Binding="{Binding RecordTime}" Width="*"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </StackPanel>
                </Grid>
            </TabItem>
            <TabItem Header="Memo Details">
                <Grid>
                    <TextBox Name="memoDetailsTextBox" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
MainWindow.xaml.cs: 주요 기능을 구현합니다.
csharp
코드 복사
using System;
using System.Data.SqlClient;
using System.Windows;

namespace AutoMemo
{
    public partial class MainWindow : Window
    {
        private string connectionString = "Server=your_server;Database=AutoMemoDB;User Id=your_username;Password=your_password;";

        public MainWindow()
        {
            InitializeComponent();
            ProcessClipboardContent();
        }

        private void ProcessClipboardContent()
        {
            if (Clipboard.ContainsText())
            {
                string clipboardText = Clipboard.GetText();
                clipboardTextBox.Text = clipboardText;
                SaveMemoToDatabase(clipboardText);
            }
        }

        private void SaveMemoToDatabase(string memoText)
        {
            using (SqlConnection conn = new SqlConnection(connectionString))
            {
                string query = "INSERT INTO T_AutoMemo (MemoText, RecordTime) VALUES (@MemoText, @RecordTime)";
                SqlCommand cmd = new SqlCommand(query, conn);
                cmd.Parameters.AddWithValue("@MemoText", memoText);
                cmd.Parameters.AddWithValue("@RecordTime", DateTime.Now);

                conn.Open();
                cmd.ExecuteNonQuery();
            }
        }

        private void btnLast5Days_Click(object sender, RoutedEventArgs e)
        {
            LoadMemos(DateTime.Now.AddDays(-5));
        }

        private void btnAll_Click(object sender, RoutedEventArgs e)
        {
            LoadMemos(null);
        }

        private void LoadMemos(DateTime? fromDate)
        {
            memoDataGrid.Items.Clear();
            using (SqlConnection conn = new SqlConnection(connectionString))
            {
                string query = "SELECT Id, MemoText, RecordTime FROM T_AutoMemo";
                if (fromDate.HasValue)
                {
                    query += " WHERE RecordTime >= @FromDate";
                }

                SqlCommand cmd = new SqlCommand(query, conn);
                if (fromDate.HasValue)
                {
                    cmd.Parameters.AddWithValue("@FromDate", fromDate.Value);
                }

                conn.Open();
                SqlDataReader reader = cmd.ExecuteReader();
                while (reader.Read())
                {
                    memoDataGrid.Items.Add(new MemoItem
                    {
                        Id = reader.GetInt32(0),
                        MemoText = reader.GetString(1),
                        RecordTime = reader.GetDateTime(2)
                    });
                }
            }
        }

        private void memoDataGrid_SelectionChanged(object sender, System.Windows.Controls.SelectionChangedEventArgs e)
        {
            if (memoDataGrid.SelectedItem != null)
            {
                MemoItem selectedMemo = memoDataGrid.SelectedItem as MemoItem;
                memoDetailsTextBox.Text = selectedMemo.MemoText;
            }
        }

        public class MemoItem
        {
            public int Id { get; set; }
            public string MemoText { get; set; }
            public DateTime RecordTime { get; set; }

            public override string ToString()
            {
                return $"{RecordTime}: {MemoText}";
            }
        }
    }
}
주요 기능
프로그램 실행 시 클립보드 내용 로드 및 저장: 프로그램이 시작되면 클립보드 내용을 가져와서 텍스트 박스에 표시하고 데이터베이스에 저장합니다.
메모 목록 로드: 버튼 클릭 이벤트를 통해 최근 5일간의 메모와 모든 메모를 로드합니다. DataGrid에 시간값만 표시합니다.
메모 상세 보기: DataGrid의 행을 클릭하면 선택된 메모의 상세 내용을 텍스트 박스에 표시합니다.
위의 코드와 DB 스크립트를 사용하여 WPF 애플리케