청에 따라 에러값별 가로 막대 차트를 추가하여, 에러값을 기준으로 많은 순서대로 정렬한 차트를 구현합니다. 라인별 차트와 동일한 원리로 구성하며, 에러값도 가로 막대 차트로 표현합니다.

Flask 애플리케이션 코드 (app.py)
python
코드 복사
from flask import Flask, render_template, request
import pymssql
import pandas as pd

app = Flask(__name__)

# MSSQL 데이터베이스 연결 정보
DB_CONFIG = {
    "server": "YOUR_SERVER",
    "database": "YOUR_DATABASE",
    "username": "YOUR_USERNAME",
    "password": "YOUR_PASSWORD"
}

# MSSQL 연결 함수
def get_db_connection():
    return pymssql.connect(
        server=DB_CONFIG['server'],
        user=DB_CONFIG['username'],
        password=DB_CONFIG['password'],
        database=DB_CONFIG['database']
    )

@app.route('/PLCErr', methods=['GET'])
def plcerr():
    conn = get_db_connection()
    query = """
        SELECT 
            linename AS '라인명',
            errN AS '에러번호',
            errValue AS '에러값',
            CONVERT(VARCHAR, Time1, 121) AS '시간'
        FROM View_PLCErrjoin
    """
    df = pd.read_sql(query, conn)
    conn.close()

    # 검색 처리
    search_query = request.args.get("search", "")
    if search_query:
        df = df[
            df["라인명"].str.contains(search_query, case=False, na=False) |
            df["에러번호"].astype(str).str.contains(search_query, case=False, na=False) |
            df["에러값"].astype(str).str.contains(search_query, case=False, na=False)
        ]

    # 라인별 발생 수 데이터 준비 (번호 순 정렬)
    line_counts = (
        df['라인명']
        .value_counts()
        .reset_index()
        .sort_values(by='index', key=lambda x: x.str.extract(r'(\d+)')[0].astype(int))
    )
    line_counts.columns = ['라인명', '발생수']

    # 에러값별 발생 수 데이터 준비 (내림차순)
    errvalue_counts = df['에러값'].value_counts().reset_index()
    errvalue_counts.columns = ['에러값', '발생수']

    # 페이지네이션 처리
    page = int(request.args.get("page", 1))
    per_page = 20
    total_pages = -(-len(df) // per_page)  # 총 페이지 수
    df_page = df.iloc[(page - 1) * per_page : page * per_page]

    return render_template(
        'plcerr.html',
        data=df_page.to_dict(orient='records'),
        line_counts=line_counts.to_dict(orient='records'),
        errvalue_counts=errvalue_counts.to_dict(orient='records'),
        current_page=page,
        total_pages=total_pages,
        search_query=search_query
    )


if __name__ == '__main__':
    app.run(debug=True)
HTML 템플릿 (templates/plcerr.html)
html
코드 복사
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>PLC Error Viewer</title>
    <style>
        body {
            background-color: #121212;
            color: #e0e0e0;
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
        }
        h1 {
            text-align: center;
            color: #00bcd4;
        }
        .charts {
            display: flex;
            flex-direction: column;
            gap: 20px;
            margin-bottom: 20px;
        }
        .chart-container {
            background-color: #1e1e1e;
            border-radius: 10px;
            padding: 20px;
        }
        canvas {
            display: block;
            margin: 0 auto;
        }
        .search-bar {
            margin-bottom: 20px;
            text-align: center;
        }
        .search-bar input {
            width: 50%;
            padding: 10px;
            border: none;
            border-radius: 5px;
            font-size: 16px;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            background-color: #1e1e1e;
        }
        thead {
            background-color: #004d66;
        }
        thead th, tbody td {
            padding: 8px;
            text-align: left;
        }
        tbody tr:nth-child(even) {
            background-color: #2a2a2a;
        }
        tbody tr:hover {
            background-color: #3d3d3d;
        }
        .pagination {
            text-align: center;
            margin: 20px 0;
        }
        .pagination button {
            padding: 8px 16px;
            margin: 0 5px;
            border: none;
            border-radius: 5px;
            background-color: #00bcd4;
            color: #fff;
            cursor: pointer;
        }
        .pagination button.disabled {
            background-color: #555;
            cursor: not-allowed;
        }
    </style>
</head>
<body>
    <h1>PLC Error Logs</h1>

    <!-- 검색 입력 필드 -->
    <div class="search-bar">
        <form method="GET" action="/PLCErr">
            <input type="text" name="search" placeholder="라인명, 에러번호, 에러값으로 검색" value="{{ search_query }}">
        </form>
    </div>

    <!-- 차트 영역 -->
    <div class="charts">
        <!-- 라인별 가로 막대 차트 -->
        <div class="chart-container">
            <canvas id="lineChart" width="800" height="{{ line_counts|length * 40 }}"></canvas>
        </div>

        <!-- 에러값별 가로 막대 차트 -->
        <div class="chart-container">
            <canvas id="errValueChart" width="800" height="{{ errvalue_counts|length * 40 }}"></canvas>
        </div>
    </div>

    <!-- 데이터 테이블 -->
    <table>
        <thead>
            <tr>
                <th>라인명</th>
                <th>에러번호</th>
                <th>에러값</th>
                <th>시간</th>
            </tr>
        </thead>
        <tbody>
            {% for row in data %}
                <tr>
                    <td>{{ row['라인명'] }}</td>
                    <td>{{ row['에러번호'] }}</td>
                    <td>{{ row['에러값'] }}</td>
                    <td>{{ row['시간'] }}</td>
                </tr>
            {% endfor %}
        </tbody>
    </table>

    <!-- 페이지네이션 -->
    <div class="pagination">
        {% set start_page = ((current_page - 1) // 10) * 10 + 1 %}
        {% set end_page = min(total_pages, start_page + 9) %}
        {% if start_page > 1 %}
            <button onclick="changePage({{ start_page - 1 }})">◀</button>
        {% endif %}
        {% for page in range(start_page, end_page + 1) %}
            <button 
                onclick="changePage({{ page }})" 
                class="{{ 'active' if page == current_page else '' }}"
            >
                {{ page }}
            </button>
        {% endfor %}
        {% if end_page < total_pages %}
            <button onclick="changePage({{ end_page + 1 }})">▶</button>
        {% endif %}
    </div>

    <script>
        function changePage(page) {
            const params = new URLSearchParams(window.location.search);
            params.set('page', page);
            window.location.search = params.toString();
        }

        document.addEventListener('DOMContentLoaded', function () {
            // 라인별 가로 막대 차트
            drawHorizontalBarChart('lineChart', {{ line_counts | tojson }}, '라인명', '발생수', '#007acc');

            // 에러값별 가로 막대 차트
            drawHorizontalBarChart('errValueChart', {{ errvalue_counts | tojson }}, '에러값', '발생수', '#ff5722');
        });

        function drawHorizontalBarChart(canvasId, data, labelKey, valueKey, color) {
            const canvas = document.getElementById(canvasId);
            const ctx = canvas.getContext('2d');
            const labels = data.map(d => d[labelKey]);
            const values = data.map(d => d[valueKey]);
            const barHeight = 30;
            const maxValue = Math.max(...values);
            const scale = (canvas.width - 100) / maxValue;

            labels.forEach((label, index) => {
                const barWidth = values[index] * scale;
                const y = index * (barHeight + 10) + 20;

                // Draw bar
                ctx.fillStyle = color;
                ctx.fillRect(100, y, barWidth, barHeight);

                // Draw label
                ctx.fillStyle = '#ffffff';
                ctx.textAlign = 'right';
                ctx.fillText(label, 90, y + barHeight / 2 + 5);

                // Draw value
                ctx.textAlign = 'left';
                ctx.fillText(values[index], 100 + barWidth + 5, y + barHeight / 2 + 5);
            });
        }
    </script>
</body>
</html>
주요 변경 사항
에러값별 가로 막대 차트:

Canvas API를 사용하여 에러값과 발생 수 데이터를 기반으로 가로 막대 차트 구현.
막대의 왼쪽에 에러값 이름, 오른쪽에 발생 수 표시.
정렬 및 크기 조정:

에러값별 차트는 발생 수 기준 내림차순으로 정렬.