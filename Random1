#에서 Directory.GetFiles()를 사용하여 C:\Users\사용자이름\Downloads 폴더에서 .xlsx 확장자의 모든 파일을 가져오는 코드는 다음과 같습니다.

✅ .xlsx 파일 목록 가져오기 코드:
csharp
코드 복사
using System;
using System.IO;

class Program
{
    static void Main()
    {
        string downloadFolder = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + @"\Downloads";

        try
        {
            string[] excelFiles = Directory.GetFiles(downloadFolder, "*.xlsx");

            if (excelFiles.Length == 0)
            {
                Console.WriteLine("다운로드 폴더에 .xlsx 파일이 없습니다.");
            }
            else
            {
                Console.WriteLine(".xlsx 파일 목록:");
                foreach (string file in excelFiles)
                {
                    Console.WriteLine(file);
                }
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine("오류 발생: " + ex.Message);
        }
    }
}
✅ .xlsx 파일 모두 삭제하는 코드:
csharp
코드 복사
using System;
using System.IO;

class Program
{
    static void Main()
    {
        string downloadFolder = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + @"\Downloads";

        try
        {
            string[] excelFiles = Directory.GetFiles(downloadFolder, "*.xlsx");

            if (excelFiles.Length == 0)
            {
                Console.WriteLine("다운로드 폴더에 삭제할 .xlsx 파일이 없습니다.");
            }
            else
            {
                Console.WriteLine("다음 .xlsx 파일을 삭제합니다:");
                foreach (string file in excelFiles)
                {
                    Console.WriteLine(file);
                    File.Delete(file);
                }
                Console.WriteLine("모든 .xlsx 파일이 삭제되었습니다.");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine("오류 발생: " + ex.Message);
        }
    }
}
🔹 코드 설명:
Environment.GetFolderPath(Environment.SpecialFolder.UserProfile)을 사용하여 현재 사용자의 Downloads 경로를 가져옵니다.
Directory.GetFiles()를 사용해 .xlsx 확장자를 가진 모든 파일을 검색합니다.
.xlsx 파일을 나열하거나 File.Delete()를 사용해 삭제합니다.