형님, 알겠습니다.

리눅스에서 5초 걸리던 게 도커 안에서 10분 넘게 걸리는 건 절대 정상이 아닙니다. 이건 형님 잘못이 아니고, 서버에 설치된 도커의 기본 설정 때문에 발생하는 아주 흔한 문제입니다.

범인은 거의 99% 도커의 느려터진 DNS 설정 때문입니다.

## 원인: 도대체 왜 느린 건가? (전화번호부 비유)
npm install은 수많은 패키지 서버에 접속해서 파일을 다운로드합니다. 서버에 접속하려면 먼저 그 서버의 IP 주소를 알아내야 하는데, 이 과정이 마치 **'이름(주소)을 보고 전화번호부에서 전화번호를 찾는 것'**과 같습니다. 이 역할을 DNS가 합니다.

리눅스 (형님 컴퓨터): 이미 동네 전화번호부(127.0.0.53 같은 내부 DNS)를 가지고 있어서, 전화번호를 1초 만에 바로 찾아냅니다.

도커 (기본값): 동네 전화번호부를 안 쓰고, 굳이 저 멀리 미국에 있는 거대한 중앙 전화번호부(구글 DNS 8.8.8.8 등)까지 매번 전화를 걸어 물어봅니다. 패키지가 10개면 전화도 수십, 수백 통을 겁니다. 이러니 당연히 느려터질 수밖에 없습니다.

## 대처법: 도커가 동네 전화번호부를 쓰게 만들기
도커의 설정을 딱 한 번만 바꿔서, 빠릿빠릿한 DNS 서버를 사용하도록 강제로 지정해주면 됩니다. 앞으로 이 서버에서 만드는 모든 도커 작업이 다 빨라집니다.

1. 지금 멈춰있는 빌드 강제 종료

빌드 중인 터미널에서 Ctrl + C를 눌러서 일단 빠져나오세요.

2. 도커 설정 파일 열기

터미널에 아래 명령어를 입력해서, nano로 도커 설정 파일을 여세요. 파일이 없다면 새로 만들어질 겁니다.

Bash

sudo nano /etc/docker/daemon.json
3. 아래 내용 복사해서 붙여넣기

열린 편집기 화면에 아래 내용을 그대로 복사해서 붙여넣으세요. { 와 } 까지 전부 다 넣어야 합니다. (Cloudflare와 Google의 가장 빠른 공개 DNS 서버를 지정하는 겁니다.)

JSON

{
  "dns": ["1.1.1.1", "8.8.8.8"]
}
4. 저장하고 나오기

Ctrl + X → Y → Enter

5. 도커 서비스 재시작

가장 중요합니다. 바뀐 설정을 적용하려면 도커를 껐다 켜야 합니다.

Bash

sudo systemctl restart docker
6. (혹시 모르니) 도커 빌드 캐시 청소

이전에 느리게 빌드되던 찌꺼기가 남아있을 수 있으니, 아래 명령어로 깨끗하게 청소해 줍니다.

Bash

docker builder prune
물어보면 y를 입력하고 엔터를 치세요.

## 최종 단계: 다시 빌드해보기
이제 모든 준비가 끝났습니다. 원래 작업하던 react1 폴더로 다시 돌아가서, 빌드 명령어를 실행해보세요.

Bash

# /home/kw/docker1/react1 폴더로 이동
cd /home/kw/docker1/react1

# 다시 빌드 시작