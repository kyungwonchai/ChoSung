<!DOCTYPE html>
<html>
<head>
    <title>Image Gallery with Doodle</title>
    <style>
        canvas {
            border: 1px solid #000;
        }
    </style>
</head>
<body>
    <h1>Image Gallery with Doodle</h1>

    <div id="gallery">
        {% for image in images %}
            <div>
                <img src="data:image/png;base64,{{ image }}" width="300" height="200" alt="Image">
                <canvas class="doodleCanvas" width="300" height="200"></canvas>
                <button class="saveButton">Save Doodle</button>
            </div>
        {% endfor %}
    </div>

    <script>
        window.addEventListener('DOMContentLoaded', (event) => {
            const doodleCanvases = document.querySelectorAll('.doodleCanvas');
            const saveButtons = document.querySelectorAll('.saveButton');

            for (let i = 0; i < doodleCanvases.length; i++) {
                const canvas = doodleCanvases[i];
                const saveButton = saveButtons[i];
                const context = canvas.getContext('2d');
                let isDrawing = false;
                let drawingPath = [];

                canvas.addEventListener('mousedown', startDrawing);
                canvas.addEventListener('mousemove', draw);
                canvas.addEventListener('mouseup', stopDrawing);
                canvas.addEventListener('mouseout', stopDrawing);

                function startDrawing(event) {
                    isDrawing = true;
                    draw(event);
                }

                function draw(event) {
                    if (!isDrawing) return;

                    const rect = canvas.getBoundingClientRect();
                    const x = event.clientX - rect.left;
                    const y = event.clientY - rect.top;

                    context.lineTo(x, y);
                    context.stroke();

                    drawingPath.push({ x, y });
                }

                function stopDrawing() {
                    isDrawing = false;
                    context.beginPath();
                }

                saveButton.addEventListener('click', () => {
                    saveDoodle(i);
                });

                function saveDoodle(index) {
                    const imageData = images[index];
                    const doodleData = {
                        path: drawingPath,
                        image: imageData
                    };

                    // 서버로 그린 경로 데이터와 이미지 인덱스 전송
                    fetch('/savedoodle', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(doodleData)
                    })
                    .then(response => {
                        if (response.ok) {
                            alert('Doodle saved successfully.');
                        } else {
                            alert('Failed to save doodle.');
                        }
                    })
                    .catch(error => {
                        alert('An error occurred while saving doodle.');
                        console.error(error);
                    });
                }
            }
        });
    </script>
</body>
</html>
