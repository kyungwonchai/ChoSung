rms 앱에서 WPF 컨트롤을 사용하려면 ElementHost를 사용해야 합니다. 그런 다음에 ElementHost 안에 WPF UserControl을 넣어주면 됩니다. 이 WPF UserControl 안에 GridControl을 배치할 것입니다. 여기서는 MSSQL 2014에서 테이블의 데이터를 가져와 GridControl에 넣는 것까지만 다룰게요. XAML 코드는 텍스트 박스에 출력됩니다.

    WinForms 프로젝트를 만들고 ElementHost를 폼에 추가합니다.
    WPF UserControl을 추가하고 그 안에 GridControl을 배치합니다.

아래는 WPF UserControl 내부의 XAML 예시입니다.

xaml

<dxg:GridControl x:Name="gridControl">
    <dxg:GridControl.View>
        <dxg:TableView x:Name="tableView" AllowEditing="True" />
    </dxg:GridControl.View>
</dxg:GridControl>

C# 코드:

csharp

using System.Data;
using System.Data.SqlClient;
using DevExpress.Xpf.Grid;
// ...

public partial class YourWPFUserControl : UserControl
{
    public YourWPFUserControl()
    {
        InitializeComponent();

        // DB 연결 및 데이터 가져오기
        string connStr = "Data Source=YourServer;Initial Catalog=YourDatabase;User ID=YourUsername;Password=YourPassword";
        using (SqlConnection conn = new SqlConnection(connStr))
        {
            conn.Open();
            SqlDataAdapter da = new SqlDataAdapter("SELECT * FROM YourTable", conn);
            DataTable dt = new DataTable();
            da.Fill(dt);

            // 데이터를 GridControl에 바인딩
            gridControl.ItemsSource = dt;

            // 컬럼 설정
            foreach (DataColumn column in dt.Columns)
            {
                // 권한에 따라 컬럼 설정
                if (column.ColumnName == "권한1")
                {
                    tableView.Columns["권한1"].AllowEditing = DefaultBoolean.False;

                    Style style = new Style(typeof(GridCellContentPresenter));
                    style.Setters.Add(new Setter(GridCellContentPresenter.VisibilityProperty,
                                                 new Binding("RowData.Row.권한1") { Converter = new YourConverter() }));
                    tableView.Columns["권한1"].CellStyle = style;
                }
            }
        }
    }
}

여기서 YourConverter는 권한1의 값에 따라 Visibility 속성을 결정하는 컨버터 클래스입니다. 이 클래스를 추가해야 합니다.

다음으로, 이 WPF UserControl을 WinForms의 ElementHost 안에 넣어줍니다. 그리고 텍스트 박스에 XAML 코드를 출력하면 됩니다.

WinForms의 C# 코드 예시:

csharp

private void Form1_Load(object sender, EventArgs e)
{
    YourWPFUserControl wpfControl = new YourWPFUserControl();
    elementHost1.Child = wpfControl;

    // XAML 코드를 텍스트 박스에 출력
    textBox1.Text = wpfControl.XamlCode;  // XamlCode는 WPF UserControl에서 XAML을 문자열로 가져온 것
}

이렇게 하면 요구사항에 맞는 구현이 가능합니