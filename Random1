네, 맞습니다. IIS(인터넷 정보 서비스) 관리자에서 배포하는 가장 일반적인 방법 중 하나는 새 웹 사이트를 추가하는 것입니다. Windows Server 2012에서 ASP.NET Core API를 배포하는 상세 단계를 안내해 드리겠습니다.

★★ 매우 중요 ★★ 사전 필수 조건 확인:

ASP.NET Core 호스팅 번들 설치: API를 빌드할 때 사용한 .NET 버전 (예: .NET 8.0 또는 .NET 6.0)에 맞는 ASP.NET Core 호스팅 번들(Hosting Bundle)이 서버에 반드시 설치되어 있어야 합니다. 이것이 없으면 IIS가 ASP.NET Core 애플리케이션을 실행할 수 없습니다.
마이크로소프트 .NET 다운로드 페이지(https://dotnet.microsoft.com/ko-kr/download/dotnet)로 이동합니다.
설치하려는 .NET 버전 (예: .NET 8)을 선택합니다.
페이지 오른쪽의 'ASP.NET Core 런타임' 섹션 아래에서 '호스팅 번들 (Hosting Bundle)' 설치 관리자를 다운로드하여 서버에 설치합니다. 설치 후 서버 재부팅이 필요할 수 있습니다.
API 프로젝트 게시 (Publish): Visual Studio에서 API 프로젝트를 **게시(Publish)**해야 합니다.
Visual Studio에서 API 프로젝트를 마우스 오른쪽 버튼으로 클릭 -> '게시...' 선택.
게시 대상: '폴더(Folder)' 선택.
특정 폴더 위치를 지정합니다. (예: C:\inetpub\MyRepairApi 또는 D:\MyPublishedApps\MyRepairApi)
'게시' 버튼을 클릭하여 빌드된 파일들을 해당 폴더에 생성합니다. 이 폴더에는 YourApiName.dll, web.config, appsettings.json 등의 파일이 포함됩니다. 이 '게시된 폴더'의 경로를 IIS 설정에 사용합니다.
IIS에 새 웹 사이트 추가 상세 단계 (Windows Server 2012):

IIS 관리자 열기:

'서버 관리자' > '도구' > '인터넷 정보 서비스(IIS) 관리자'를 선택하거나, 실행(Win+R) 창에 inetmgr을 입력하고 실행합니다.
사이트 노드 이동:

왼쪽 '연결' 창에서 서버 이름을 확장하고 '사이트(Sites)' 폴더를 찾습니다.
새 웹 사이트 추가:

'사이트(Sites)' 폴더를 마우스 오른쪽 버튼으로 클릭하고 '웹 사이트 추가...(Add Website...)' 를 선택합니다. (네, 여기가 맞습니다.)
웹 사이트 추가 창 입력:

사이트 이름 (Site name):

IIS 내에서 이 웹 사이트를 식별할 이름을 입력합니다. (예: MyRepairApi, RepairApiService). 이 이름은 URL과는 직접적인 관련이 없습니다. 사용자가 관리하기 편한 이름을 지정하세요.
응용 프로그램 풀 (Application pool):

기본적으로 '사이트 이름'과 동일한 이름의 새 응용 프로그램 풀이 생성되도록 제안됩니다. 그대로 두는 것이 일반적입니다. (예: MyRepairApi 풀이 생성됨).
★★ 중요 설정 (사이트 생성 후 확인 필요): ASP.NET Core 애플리케이션은 IIS 작업자 프로세스에서 직접 .NET CLR을 로드하는 방식이 아니므로, 이 응용 프로그램 풀의 '.NET CLR 버전'은 '관리 코드 없음(No Managed Code)'으로 설정해야 합니다. 이 설정은 사이트 생성 후 별도로 확인하고 변경해야 합니다.
실제 경로 (Physical path):

매우 중요: 여기에 Visual Studio에서 게시(Publish)한 API 파일들이 있는 폴더의 경로를 지정해야 합니다. (예: C:\inetpub\MyRepairApi). '...' 버튼을 눌러 해당 폴더를 찾아 선택할 수 있습니다. 프로젝트 소스 코드 경로가 아닙니다!
바인딩 (Binding):

사용자가 이 API에 어떻게 접속할지를 정의합니다.
종류 (Type): http 또는 https.
https를 사용하려면 서버에 SSL 인증서가 설치 및 구성되어 있어야 합니다. 처음 테스트 시에는 http가 간단할 수 있습니다.
IP 주소 (IP address): 일반적으로 '모든 IP 주소 사용(All Unassigned)'으로 둡니다. 서버에 특정 IP 주소를 할당한 경우에만 해당 IP를 선택합니다.
포트 (Port): API 서비스에 사용할 포트 번호를 입력합니다.
80번 포트는 HTTP의 기본 포트이며, 보통 'Default Web Site'에서 이미 사용 중일 수 있습니다.
만약 80번 포트를 사용할 수 없다면, 다른 사용하지 않는 포트 번호(예: 8080, 8001, 5000 등)를 지정합니다. 이 포트 번호는 API 호출 URL에 포함됩니다 (예: http://서버주소:8080).
호스트 이름 (Host name): (선택 사항) 특정 도메인 이름(예: api.mydomain.com)으로만 이 사이트에 접속하게 하려면 여기에 입력합니다. DNS 설정이 필요합니다. IP 주소와 포트로 직접 접속하여 테스트할 경우 비워 둡니다.
'웹 사이트 즉시 시작 (Start website immediately)': 체크된 상태로 둡니다.

확인 클릭:

모든 정보를 입력했으면 '확인' 버튼을 클릭하여 웹 사이트 생성을 완료합니다.
웹 사이트 생성 후 필수 확인 및 설정:

응용 프로그램 풀 설정 확인 및 변경:

IIS 관리자 왼쪽 창에서 '응용 프로그램 풀(Application Pools)'을 선택합니다.
방금 생성된 응용 프로그램 풀(예: MyRepairApi)을 찾습니다.
해당 풀을 마우스 오른쪽 버튼으로 클릭하고 '고급 설정...(Advanced Settings...)'을 선택합니다.
'(일반)' 섹션에서 '.NET CLR 버전 (.NET CLR version)' 값을 찾습니다. 기본값이 'v4.0' 등으로 되어 있을 수 있습니다. 이것을 '관리 코드 없음 (No Managed Code)' 으로 변경합니다. 이것이 매우 중요합니다.
'(프로세스 모델)' 섹션의 'ID (Identity)' 값을 확인합니다. 기본값은 ApplicationPoolIdentity일 것입니다. 이 ID에 폴더 접근 권한을 부여해야 합니다.
'확인'을 눌러 변경 사항을 저장합니다.
폴더 권한 설정:

Windows 탐색기를 열고, 위 4단계의 '실제 경로 (Physical path)' 로 지정했던 폴더(게시된 파일이 있는 폴더)로 이동합니다.
폴더를 마우스 오른쪽 버튼으로 클릭 -> '속성(Properties)' -> '보안(Security)' 탭으로 이동합니다.
'편집(Edit...)' 버튼 클릭 -> '추가(Add...)' 버튼 클릭.
'선택할 개체 이름을 입력하십시오' 상자에 IIS AppPool\YourAppPoolName 형식으로 입력합니다. (YourAppPoolName은 6단계에서 확인한 응용 프로그램 풀 이름, 예: IIS AppPool\MyRepairApi).
'이름 확인(Check Names)' 버튼을 클릭하면 밑줄이 생기며 이름이 확인됩니다. '확인' 클릭.
보안 탭 사용자 목록에 추가된 YourAppPoolName 계정을 선택합니다.
아래 '권한' 목록에서 최소한 '읽기 및 실행(Read & execute)', '폴더 내용 보기(List folder contents)', '읽기(Read)' 권한을 '허용(Allow)' 에 체크합니다.
만약 API가 로그 파일 등을 해당 폴더 내에 기록해야 한다면 '수정(Modify)' 또는 '쓰기(Write)' 권한도 필요할 수 있습니다 (필요한 경우에만 부여).
'적용(Apply)' -> '확인'을 눌러 권한 설정을 완료합니다.
web.config 파일 확인:

게시된 폴더('실제 경로') 안에 web.config 파일이 있는지 확인합니다. ASP.NET Core 게시 프로세스에서 자동으로 생성되어야 합니다. 이 파일은 IIS의 ASP.NET Core Module (ANCM) 설정을 담고 있습니다. processPath, arguments 등이 올바르게 설정되어 있는지 간단히 확인해볼 수 있습니다.
방화벽 설정:

Windows 방화벽에서 위 4단계의 '바인딩' 설정에서 지정한 포트 번호(예: 8080)에 대한 **인바운드 규칙(Inbound Rule)**을 추가하여 외부에서의 접속을 허용해야 합니다.
배포 테스트:

IIS에서 찾아보기:
IIS 관리자에서 방금 생성한 웹 사이트(예: MyRepairApi)를 선택합니다.
오른쪽 '작업' 창의 '찾아보기(Browse)' 섹션 아래에 있는 '찾아보기 *:포트 (http)' 링크를 클릭합니다.
서버 자체에서 웹 브라우저가 열립니다. API 루트에 기본 페이지가 없다면 403.14 또는 404 오류가 표시될 수 있는데, 이는 정상일 수 있습니다. API 엔드포인트가 제대로 작동하는 것이 중요합니다. 만약 500.xx 오류가 발생하면 API 시작 자체에 문제가 있는 것이므로 이벤트 뷰어나 로그를 확인해야 합니다.
API 엔드포인트 직접 호출 (서버 내부):
서버의 웹 브라우저에서 http://localhost:지정한포트번호/api/RepairInfo/테스트바코드 와 같이 실제 API 경로를 호출해 봅니다. (예: http://localhost:8080/api/RepairInfo/12345)
API 엔드포인트 직접 호출 (외부):