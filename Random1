폴더를 검사하기 전에 하위 폴더와 파일을 체크해 최신 수정 날짜를 확인하는 절차를 추가해야 합니다. 이렇게 하면 최신 수정 날짜를 바탕으로 검사할지 말지를 결정할 수 있습니다. 아래는 이 로직을 적용한 코드 예시입니다:

csharp
Copy code
using System;
using System.IO;

public void CheckDirectory(DirectoryInfo dir)
{
    // 폴더의 최신 수정 날짜를 재귀적으로 확인
    DateTime latestModification = GetLatestModificationDate(dir.FullName);

    // 최신 수정 날짜가 10일 이내인 경우에만 폴더 검사를 계속함
    if (DateTime.Now.Subtract(latestModification).TotalDays <= 10)
    {
        // 폴더 검사 로직
        Console.WriteLine($"Inspecting {dir.FullName} for changes.");
        foreach (var subDir in dir.GetDirectories())
        {
            CheckDirectory(subDir); // 재귀적으로 하위 폴더 검사
        }
    }
    else
    {
        Console.WriteLine($"{dir.FullName} has no recent changes and was skipped.");
    }
}

public DateTime GetLatestModificationDate(string directoryPath)
{
    DateTime latestDate = Directory.GetLastWriteTime(directoryPath);

    // 모든 하위 파일들의 최신 수정 날짜를 확인
    foreach (string filePath in Directory.GetFiles(directoryPath))
    {
        DateTime fileDate = File.GetLastWriteTime(filePath);
        if (fileDate > latestDate)
        {
            latestDate = fileDate;
        }
    }

    // 모든 하위 폴더에 대해 재귀적으로 최신 수정 날짜를 확인
    foreach (string subDirPath in Directory.GetDirectories(directoryPath))
    {
        try
        {
            DateTime subDirDate = GetLatestModificationDate(subDirPath);
            if (subDirDate > latestDate)
            {
                latestDate = subDirDate;
            }
        }
        catch (Exception ex)
        {
            // 액세스 거부 등의 예외를 로그로 기록하거나 사용자에게 알림
            Console.WriteLine($"Error accessing {subDirPath}: {ex.Message}");
        }
    }

    return latestDate;
}
이 코드는 CheckDirectory 메서드에 DirectoryInfo 인스턴스를 전달하여 각 폴더를 검사합니다. 이 메서드는 GetLatestModificationDate를 호출하여 해당 폴더 및 하위 모든 폴더와 파일의 최신 수정 날짜를 확인합니다. 이 날짜가 지난 10일 이내이면 폴더 검사를 계속하고, 그렇지 않으면 폴더를 건너뜁니다. 이는 폴더 내의 최근 변경사항을 놓