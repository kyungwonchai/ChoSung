evExpress WPF의 GridControl에서 ComboBoxEdit를 사용하여 데이터를 바인딩하는 문제를 겪고 계신 것 같습니다. 바인딩이 제대로 작동하지 않을 때는 여러 가지 원인이 있을 수 있습니다. 주로, 바인딩 경로, 컨텍스트, 또는 데이터 유형 문제 때문에 발생합니다.

여기에 DevExpress WPF GridControl에서 ComboBoxEdit 컬럼을 바인딩하는 기본 예제 코드를 제공해드리겠습니다. 이 코드는 ItemsSource를 ViewModel의 속성에 바인딩하는 방식을 사용합니다.

xml
Copy code
<Window ...
        xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
        xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors">
    <Grid>
        <dxg:GridControl Name="grid">
            <dxg:GridControl.Columns>
                <!-- 다른 컬럼들 -->

                <dxg:GridColumn FieldName="YourFieldName">
                    <dxg:GridColumn.EditSettings>
                        <dxe:ComboBoxEditSettings 
                            ItemsSource="{Binding Path=YourItemsSourceProperty, Source={StaticResource YourViewModel}}"
                            DisplayMember="YourDisplayMember"
                            ValueMember="YourValueMember"/>
                    </dxg:GridColumn.EditSettings>
                </dxg:GridColumn>

                <!-- 다른 컬럼들 -->
            </dxg:GridControl.Columns>
            <dxg:GridControl.View>
                <dxg:TableView AutoWidth="True" />
            </dxg:GridControl.View>
        </dxg:GridControl>
    </Grid>
</Window>
이 코드에서 주의해야 할 점은 다음과 같습니다:

YourFieldName은 GridControl의 데이터 소스 내에서 ComboBox와 바인딩하고자 하는 필드의 이름입니다.
YourItemsSourceProperty는 ComboBoxEdit의 ItemsSource에 바인딩할 ViewModel의 속성입니다. 이 속성은 보통 ObservableCollection<T> 또는 다른 리스트 유형입니다.
YourDisplayMemb