using DevExpress.XtraBars;
using DevExpress.XtraBars.Ribbon;
using System.Collections.Generic;
using System.Drawing;
using System.Linq;
using System.Windows.Forms;

public partial class MainForm : RibbonForm
{
    // 버튼 설정을 위한 클래스 정의
    public class ButtonConfig
    {
        public string PageName { get; set; }   // 리본 페이지 이름
        public string GroupName { get; set; }  // 그룹 이름
        public string ButtonName { get; set; } // 버튼 이름
        public string Caption { get; set; }    // 버튼 캡션
        public string Tag { get; set; }        // 버튼 태그
        public RibbonItemStyles Style { get; set; }  // 버튼 스타일
    }

    // 버튼 설정 리스트
    private List<ButtonConfig> buttonConfigs = new List<ButtonConfig>
    {
        new ButtonConfig { PageName = "File", GroupName = "FileOperations", ButtonName = "btnNew", Caption = "새로 만들기", Tag = "NewDocument", Style = RibbonItemStyles.Large },
        new ButtonConfig { PageName = "File", GroupName = "FileOperations", ButtonName = "btnOpen", Caption = "열기", Tag = "OpenDocument", Style = RibbonItemStyles.Large },
        new ButtonConfig { PageName = "File", GroupName = "FileOperations", ButtonName = "btnSave", Caption = "저장", Tag = "SaveDocument", Style = RibbonItemStyles.Large },
        new ButtonConfig { PageName = "File", GroupName = "Print", ButtonName = "btnPrint", Caption = "인쇄", Tag = "PrintDocument", Style = RibbonItemStyles.Large },
        new ButtonConfig { PageName = "Help", GroupName = "Support", ButtonName = "btnHelp", Caption = "도움말", Tag = "Help", Style = RibbonItemStyles.SmallWithText }
    };

    private Dictionary<string, RibbonPage> pageCache = new Dictionary<string, RibbonPage>();  // 📌 페이지 캐싱
    private Dictionary<string, RibbonPageGroup> groupCache = new Dictionary<string, RibbonPageGroup>();  // 📌 그룹 캐싱

    public MainForm()
    {
        InitializeComponent();

        // 커스텀 버튼 추가
        AddCustomButtons();

        // 체크박스 생성
        CheckBox toggleButtonVisibilityCheckBox = new CheckBox
        {
            Text = "커스텀 버튼 표시",
            Checked = true,
            AutoSize = true,
            Dock = DockStyle.Top
        };

        toggleButtonVisibilityCheckBox.CheckedChanged += ToggleButtonVisibilityCheckBox_CheckedChanged;
        this.Controls.Add(toggleButtonVisibilityCheckBox);
    }

    private void AddCustomButtons()
    {
        foreach (var config in buttonConfigs)
        {
            // 📌 **페이지 추가 (중복 방지)**
            if (!pageCache.TryGetValue(config.PageName, out RibbonPage page))
            {
                page = ribbonK.Pages.FirstOrDefault(p => p.Name == config.PageName);
                if (page == null)
                {
                    page = new RibbonPage(config.PageName) { Text = config.PageName };
                    ribbonK.Pages.Add(page);
                }
                pageCache[config.PageName] = page;
            }

            // 📌 **그룹 추가 (중복 방지)**
            string groupKey = $"{config.PageName}_{config.GroupName}";
            if (!groupCache.TryGetValue(groupKey, out RibbonPageGroup group))
            {
                group = page.Groups.FirstOrDefault(g => g.Name == config.GroupName);
                if (group == null)
                {
                    group = new RibbonPageGroup(config.GroupName) { Text = config.GroupName };
                    page.Groups.Add(group);
                }
                groupCache[groupKey] = group;
            }

            // 📌 **버튼이 이미 추가되어 있는지 확인 후 추가**
            if (!ribbonK.Items.OfType<BarButtonItem>().Any(b => b.Name == config.ButtonName))
            {
                BarButtonItem newButton = new BarButtonItem
                {
                    Name = config.ButtonName,
                    Caption = config.Caption,
                    Tag = config.Tag,
                    Id = ribbonK.Manager.GetNewItemId(),
                    ImageOptions = { Image = Properties.Resources.Donut },
                    RibbonStyle = config.Style
                };

                // 📌 **그룹에 버튼 추가**
                group.ItemLinks.Add(newButton);
            }
        }
    }

    private void ToggleButtonVisibilityCheckBox_CheckedChanged(object sender, System.EventArgs e)
    {
        bool isChecked = (sender as CheckBox).Checked;

        // 📌 **버튼 가시성 변경**
        foreach (var config in buttonConfigs)
        {
            BarButtonItem button = ribbonK.Items.OfType<BarButtonItem>().FirstOrDefault(b => b.Name == config.ButtonName);
            if (button != null)
            {
                button.Visibility = isChecked ? BarItemVisibility.Always : BarItemVisibility.Never;
            }
        }
    }