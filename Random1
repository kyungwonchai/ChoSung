using System;
using System.Collections.Generic;
using System.Windows;
using System.Windows.Media;
using DevExpress.Xpf.Grid;

namespace WpfApp {
    public partial class MainWindow {
        public MainWindow() {
            InitializeComponent();
            Loaded += OnLoaded;
        }

        private void OnLoaded(object sender, RoutedEventArgs e) {
            // GridControl 데이터 셋팅 및 이벤트 핸들러 등록
            gridControl.ItemsSource = CreateTestData();
            gridView.RowStyle += GridView_RowStyle;
        }

        private void GridView_RowStyle(object sender, RowStyleEventArgs e) {
            if (e.RowHandle == GridControl.InvalidRowHandle)
                return;

            // 행의 데이터 가져오기
            var rowData = (YourDataClass)e.Row;

            // key1 컬럼의 값을 가져오기
            object key1Value = gridView.GetCellValue(e.RowHandle, "key1");

            // val1과 key1의 값이 같은지 비교
            if (Equals(key1Value, rowData.val1)) {
                // 행을 잠그고 색상 변경
                e.Row.IsEnabled = false;
                e.Row.Background = Brushes.LightBlue;
            } else {
                // 행 잠금 해제하고 기본 색상으로 변경
                e.Row.IsEnabled = true;
                e.Row.ClearValue(Control.BackgroundProperty);
            }
        }

        private List<YourDataClass> CreateTestData() {
            // 테스트 데이터 생성 및 반환
            return new List<YourDataClass> {
                new YourDataClass { key1 = "val1", val1 = "Some Value" },
                new YourDataClass { key1 = "val2", val1 = "Another Value" },
                // ... 추가 데이터 추가 ...
            };
        }
    }

    public class YourDataClass {
        public string key1 { get; set; }
        public string val1 { get; set; }
        // 추가 데이터 멤버 추가...
    }
}
