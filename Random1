의 수정된 SQL 프로시저는 먼저 TBL1에 IP 값을 삽입하고, 그 후에 TBL2에 동일한 데이터를 추가합니다.

수정된 MSSQL 프로시저
sql
Copy code
USE YourDatabaseName;
GO

CREATE PROCEDURE InsertIPAndUpdate
    @ipAddress VARCHAR(20)
AS
BEGIN
    -- 현재 날짜와 시간
    DECLARE @currentDateTime DATETIME = GETDATE();

    -- TBL1에 IP 삽입 (다른 컬럼은 기본값이나 NULL로 남겨짐)
    INSERT INTO TBL1 (IPAddress)
    VALUES (@ipAddress);

    -- TBL2에 IP와 날짜 삽입
    INSERT INTO TBL2 (IPAddress, Date)
    VALUES (@ipAddress, @currentDateTime);
END;
GO
이 프로시저는 TBL1에 IP 주소만 삽입하고, TBL2에는 IP 주소와 현재 날짜를 삽입합니다. TBL1의 다른 컬럼은 기본값이나 NULL로 남겨질 것입니다.

C# 코드
C# 코드는 이전과 동일하게 사용할 수 있습니다. 단지, 프로시저의 이름이 InsertIPAndUpdate로 변경되었습니다.

csharp
Copy code
// ... 이전 C# 코드와 동일 ...

public class DatabaseHandler
{
    private string connectionString = "YourConnectionStringHere";

    public void InsertIP(string ipAddress)
    {
        using (SqlConnection connection = new SqlConnection(connectionString))
        {
            using (SqlCommand command = new SqlCommand("InsertIPAndUpdate", connection))
            {
                command.CommandType = CommandType.StoredProcedure;
                command.Parameters.AddWithValue("@ipAddress", ipAddress);

                connection.Open();
                command.ExecuteNonQuery();
            }
        }
    }
}

// 사용 예시
public class Program
{
    public static void Main()
    {
        DatabaseHandler dbHandler = new DatabaseHandler();
        dbHandler.InsertIP("192.168.1.1"); // 예시 IP 주소
    }
}
이 코드를 사용하여 프로시저를 호출하면, 지정된 IP 주소가 TBL1에 삽입되고, 동