Chrome 브라우저로 열고, 이를 화면의 좌우에 배치하는 기능을 구현하려면, 여러 단계를 거쳐야 합니다. 이 과정에는 WebBrowser 컨트롤을 사용하여 웹 페이지를 표시하고, Window 객체의 위치와 크기를 조정하여 화면을 나누는 작업이 포함됩니다. 또한, 최소화 버튼의 동작을 구현해야 합니다.

다음은 이를 수행하기 위한 WPF 프로젝트의 기본적인 구성 요소와 C# 코드 예시입니다.

1. WPF 프로젝트 생성
Visual Studio에서 WPF 프로젝트를 생성합니다.

2. XAML 구성
MainWindow.xaml 파일에 다음과 같이 WebBrowser 컨트롤과 최소화 버튼을 추가합니다.

xml
Copy code
<Window x:Class="YourNamespace.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="MainWindow" Height="450" Width="800">
    <Grid>
        <WebBrowser Name="webBrowser" />
        <Button Content="최소화" HorizontalAlignment="Left" VerticalAlignment="Top" Click="MinimizeButton_Click"/>
    </Grid>
</Window>
3. C# 코드
MainWindow.xaml.cs 파일에서 Chrome을 통해 웹 페이지를 열고, 창의 위치 및 크기를 설정하는 로직을 추가합니다.

csharp
Copy code
using System;
using System.Windows;
using System.Diagnostics;

public partial class MainWindow : Window
{
    public MainWindow()
    {
        InitializeComponent();
        OpenWebPageInChrome("http://localhost:8080/lws/...");
        PositionWindow();
    }

    private void OpenWebPageInChrome(string url)
    {
        try
        {
            Process.Start("chrome.exe", url);
        }
        catch (Exception ex)
        {
            MessageBox.Show("Chrome을 열 수 없습니다: " + ex.Message);
        }
    }

    private void PositionWindow()
    {
        // 화면 해상도에 맞춰 창 위치 조정
        this.Left = SystemParameters.PrimaryScreenWidth / 2;
        this.Top = 0;
        this.Width = SystemParameters.PrimaryScreenWidth / 2;
        this.Height = SystemParameters.PrimaryScreenHeight;
    }

    private void MinimizeButton_Click(object sender, RoutedEventArgs e)
    {
        this.WindowState = WindowState.Minimized;
    }
}
이 코드는 http://localhost:8080/lws/... 주소를 Chrome으로 열고, WPF 창을 화면의 오른쪽 절반에 배치합니다. 최소화 버튼을 누르면 창이 최소화됩니다.

유의사항
Chrome이 설치되어 있고 시스템 경로에 등록되어 있어야 합니다.
보안 설정에 따라 Process.Start를 통한 외부 프로그램 실행이 제한될 수 있습니다.
이 코드는 기본적인 예시이므로, 실제 사용 환경에 맞게 조정이 필요합니다.