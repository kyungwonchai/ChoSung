이름과 그룹 이름 초기화, 그리고 즐겨찾기 기능을 구현한 코드입니다. 요구사항에 맞게 즐겨찾기 페이지에서 그룹명만 추가하고, 기존 버튼 기능을 유지하며 전체 코드를 제공하겠습니다.

전체 코드
csharp
코드 복사
using System;
using System.Linq;
using System.Windows.Forms;
using DevExpress.XtraBars;
using DevExpress.XtraBars.Ribbon;

namespace MyRibbonApp
{
    public partial class MainForm : RibbonForm
    {
        private RibbonPage favoritesPage; // 즐겨찾기 페이지
        private RibbonPageGroup favoritesGroup; // 즐겨찾기 기본 그룹

        public MainForm()
        {
            InitializeComponent();

            InitializeRibbon(); // 리본 초기화
        }

        // 리본 초기화
        private void InitializeRibbon()
        {
            // 기본 리본 페이지 및 그룹 생성
            CreateRibbonPageWithGroups("Home", "Main Actions");
            CreateRibbonPageWithGroups("Edit", "Editing Tools");

            // 즐겨찾기 페이지 초기화
            InitializeFavoritesPage();
        }

        // 리본 페이지 및 그룹 생성 함수
        private void CreateRibbonPageWithGroups(string pageName, string groupName)
        {
            var page = new RibbonPage(pageName); // 페이지 생성
            var group = new RibbonPageGroup(groupName); // 그룹 생성

            // 그룹에 버튼 추가
            AddButtonToGroup(group, "Action 1", "Action1");
            AddButtonToGroup(group, "Action 2", "Action2");

            // 페이지에 그룹 추가
            page.Groups.Add(group);

            // 리본 컨트롤에 페이지 추가
            ribbonControl1.Pages.Add(page);
        }

        // 버튼 생성 및 그룹에 추가
        private void AddButtonToGroup(RibbonPageGroup group, string caption, string name)
        {
            var button = new BarButtonItem
            {
                Caption = caption,
                Name = name
            };

            // 버튼 클릭 이벤트 연결
            button.ItemClick += OnButtonClick;

            // 그룹에 버튼 추가
            group.ItemLinks.Add(button);

            // 오른쪽 클릭 메뉴 추가 (즐겨찾기 추가/제거)
            button.Manager = ribbonControl1.Manager;
            button.Manager.PopupMenuShowing += (s, e) =>
            {
                if (e.Link == null || e.Link.Item != button) return;

                var menu = new PopupMenu { Ribbon = ribbonControl1 };
                menu.ItemLinks.Add(CreateFavoriteMenuItem(button));
                e.PopupControl = menu;
            };
        }

        // 즐겨찾기 추가/제거 메뉴 항목 생성
        private BarButtonItem CreateFavoriteMenuItem(BarButtonItem targetButton)
        {
            var menuItem = new BarButtonItem
            {
                Caption = favoritesGroup.ItemLinks.Any(link => link.Caption == targetButton.Caption)
                    ? "Remove from Favorites"
                    : "Add to Favorites"
            };

            menuItem.ItemClick += (s, e) =>
            {
                if (menuItem.Caption.Contains("Add"))
                    AddToFavorites(targetButton); // 즐겨찾기에 추가
                else
                    RemoveFromFavorites(targetButton); // 즐겨찾기에서 제거
            };

            return menuItem;
        }

        // 즐겨찾기 페이지 초기화
        private void InitializeFavoritesPage()
        {
            favoritesPage = new RibbonPage("Favorites"); // 즐겨찾기 페이지 생성
            favoritesGroup = new RibbonPageGroup("My Favorites"); // 기본 그룹 생성

            favoritesPage.Groups.Add(favoritesGroup); // 페이지에 그룹 추가
            ribbonControl1.Pages.Add(favoritesPage); // 리본에 페이지 추가
        }

        // 즐겨찾기에 버튼 추가
        private void AddToFavorites(BarButtonItem button)
        {
            if (favoritesGroup.ItemLinks.Any(link => link.Caption == button.Caption))
            {
                MessageBox.Show("This button is already in Favorites.");
                return;
            }

            // 즐겨찾기 그룹에 버튼 추가
            favoritesGroup.ItemLinks.Add(button);
        }

        // 즐겨찾기에서 버튼 제거
        private void RemoveFromFavorites(BarButtonItem button)
        {
            var link = favoritesGroup.ItemLinks.FirstOrDefault(l => l.Caption == button.Caption);
            if (link != null)
                favoritesGroup.ItemLinks.Remove(link);
        }

        // 버튼 클릭 이벤트 핸들러
        private void OnButtonClick(object sender, ItemClickEventArgs e)
        {
            MessageBox.Show($"You clicked: {e.Item.Caption}");
        }
    }
}
주요 기능
페이지와 그룹 초기화:

CreateRibbonPageWithGroups 함수로 기본 페이지와 그룹을 동적으로 생성.
그룹에 버튼을 추가하며, 버튼마다 클릭 이벤트를 연결.
즐겨찾기 페이지와 그룹 생성:

InitializeFavoritesPage 함수로 "Favorites" 페이지를 생성.
그룹명을 "My Favorites"로 설정.
즐겨찾기 추가/제거:

오른쪽 클릭 시 PopupMenu를 통해 즐겨찾기에 버튼 추가/제거 옵션 표시.
AddToFavorites 및 RemoveFromFavorites 함수로 동작 구현.
즐겨찾기 중복 방지:

이미 추가된 버튼인지 확인하여 중복 추가 방지.
버튼 클릭 처리:

OnButtonClick 이벤트로 버튼 동작 처리.
결과 동작
기본 페이지와 그룹이 초기화됩니다.
각 버튼에 오른쪽 클릭 메뉴가 표시되며, 즐겨찾기 추가/제거가 가능합니다.