터가 제대로 전송되었는지 확인하려면 다음 사항을 점검해야 합니다. 또한, 선택된 포트를 취소하는 방법도 추가로 설명드리겠습니다.

1. 데이터 전송 확인
먼저, 스캐너 포트로 데이터를 전송한 후 보낼 포트로 데이터가 전송되는지 확인하려면 SendData_Click 메서드에서 아래 조건을 확인해야 합니다:

조건: ShouldForwardData 메서드에서 정의한 조건이 만족되었을 때만 데이터가 보낼 포트로 전달됩니다.
전송: 조건이 만족되었을 경우, _targetPorts 배열의 각 포트로 데이터가 전송됩니다.
데이터 전송 로직
csharp
코드 복사
private void SendData_Click(object sender, RoutedEventArgs e)
{
    if (_scannerPort != null && _scannerPort.IsOpen)
    {
        try
        {
            string data = DataTextBox.Text;
            _scannerPort.WriteLine(data); // 데이터를 스캐너 포트로 전송
            LogMessage($"스캐너 포트로 데이터 전송: {data}");

            // 특정 조건이 충족되면 데이터를 다른 포트로 전달
            for (int i = 0; i < _targetPorts.Length; i++)
            {
                if (_targetPorts[i] != null && _targetPorts[i].IsOpen && ShouldForwardData(data))
                {
                    _targetPorts[i].WriteLine(data);
                    LogMessage($"데이터가 {_targetPorts[i].PortName}로 전달되었습니다: {data}");
                }
            }
        }
        catch (Exception ex)
        {
            MessageBox.Show($"데이터 전송 실패: {ex.Message}", "오류", MessageBoxButton.OK, MessageBoxImage.Error);
            LogMessage($"데이터 전송 실패: {ex.Message}");
        }
    }
    else
    {
        MessageBox.Show("스캐너 포트가 열려 있지 않습니다. 먼저 스캐너 포트를 여세요.", "경고", MessageBoxButton.OK, MessageBoxImage.Warning);
        LogMessage("데이터 전송 실패: 스캐너 포트가 열려 있지 않습니다.");
    }
}
2. 보낼 포트로 데이터가 전송되지 않은 경우
데이터가 보낼 포트로 전송되지 않았다면, 다음 사항을 점검하십시오:

조건 확인: ShouldForwardData 메서드의 조건이 올바르게 설정되었는지 확인합니다. 기본적으로 FORWARD 문자열이 포함된 데이터만 보낼 포트로 전달됩니다.

csharp
코드 복사
private bool ShouldForwardData(string data)
{
    // 데이터에 "FORWARD"가 포함된 경우에만 다른 포트로 전송
    return data.Contains("FORWARD");
}
포트 상태 확인: 보낼 포트가 정상적으로 열려 있고(IsOpen == true), _targetPorts 배열에 올바르게 설정되었는지 확인합니다.

3. 포트 선택 취소 방법
현재 코드에는 포트 선택을 취소하는 기능이 구현되어 있지 않습니다. 이를 추가하기 위해서는, ComboBox에서 선택을 취소할 수 있도록 로직을 추가할 필요가 있습니다.

포트 선택 취소 구현 방법
포트를 선택하지 않았을 때 포트를 닫고, 텍스트 색상을 기본 색상으로 되돌릴 수 있습니다.

csharp
코드 복사
private void ScannerPortComboBox_SelectionChanged(object sender, SelectionChangedEventArgs e)
{
    if (ScannerPortComboBox.SelectedItem != null)
    {
        string selectedPort = ScannerPortComboBox.SelectedItem.ToString();
        OpenPort(ref _scannerPort, selectedPort, ScannerPortComboBox);
    }
    else
    {
        // 포트 선택 취소 시
        ClosePort(ref _scannerPort, ScannerPortComboBox);
        ScannerPortComboBox.Foreground = Brushes.Black; // 색상 초기화
    }
}

private void TargetPortComboBox_SelectionChanged(object sender, SelectionChangedEventArgs e)
{
    ComboBox comboBox = (ComboBox)sender;
    int index = GetTargetPortComboBoxIndex(comboBox);

    if (comboBox.SelectedItem != null)
    {
        string selectedPort = comboBox.SelectedItem.ToString();
        OpenPort(ref _targetPorts[index], selectedPort, comboBox);
    }
    else
    {
        // 포트 선택 취소 시
        ClosePort(ref _targetPorts[index], comboBox);
        comboBox.Foreground = Brushes.Black; // 색상 초기화
    }
}
요약
데이터 전송: 스캐너 포트로 데이터를 전송한 후, 보낼 포트로 데이터가 전달되려면 ShouldForwardData 메서드의 조건을 만족해야 합니다. 데이터 전송 여부는 로그에 기록됩니다.
포트 선택 취소: 포트 선택을 취소하면 해당 포트가 닫히고, 콤보박스 텍스트 색상이 기본 색상(검정)으로 초기화됩니다.
이렇게 수정하면 데이터가 스캐너 포트에서 보낼 포트로 정상적으로 전송되는지 확인할 수 있으며, 포트 선택을 취소할 수 있습니다. 추가적인 문제가 있거나 도움이 필요하시면 언제든지 말씀해 주