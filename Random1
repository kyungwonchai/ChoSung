아래는 .txt 파일에서 데이터를 가져올 때,

1/16 확률로 샘플링
각 행을 공백(split())으로 분리하여 세 번째 컬럼(인덱스 2)이 날짜인 경우
날짜가 2주 이내인 경우만 필터링
최종적으로 샘플링된 개수를 출력하는 코드입니다.
python
Copy code
import random
from datetime import datetime, timedelta

# 파일 경로
file_path = "sample.txt"

# 샘플링 확률 (1/16)
sampling_rate = 1 / 16

# 현재 시간 기준 2주 전 계산
two_weeks_ago = datetime.now() - timedelta(weeks=2)

# 샘플링된 줄을 저장할 리스트
filtered_lines = []

# 파일 읽기 및 샘플링 수행
with open(file_path, "r", encoding="utf-8") as file:
    for line in file:
        if random.random() >= sampling_rate:
            continue  # 1/16 확률에 걸리지 않으면 건너뜀

        parts = line.strip().split()  # 공백 분리
        if len(parts) < 3:
            continue  # 최소한 3개 이상의 컬럼이 있어야 함
        
        date_str = parts[2]  # 날짜 컬럼 추출

        try:
            # 날짜 형식이 'YYYYMMDDHHMMSS'라고 가정하고 변환
            log_date = datetime.strptime(date_str, "%Y%m%d%H%M%S")
            
            # 2주 이내 데이터만 필터링
            if log_date >= two_weeks_ago:
                filtered_lines.append(line.strip())

        except ValueError:
            continue  # 날짜 형식이 맞지 않으면 무시

# 샘플링된 개수 출력
print(f"2주 이내 샘플링된 줄 개수: {len(filtered_lines)}")

# 샘플링된 줄 일부 출력 (최대 10개만 표시)
print("\n샘플링된 줄 예시:")
for i, line in enumerate(filtered_lines[:10]):
    print(f"{i+1}. {line}")
코드 설명: