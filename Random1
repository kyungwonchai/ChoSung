<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <title>예쁜 대화창 + 복사 기능</title>
    <style>
        body { font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; margin: 0; background-color: #eef2f5; display: flex; justify-content: center; align-items: center; min-height: 100vh; padding: 20px; box-sizing: border-box; }
        .chat-container { width: 100%; max-width: 700px; background-color: #fff; border-radius: 12px; box-shadow: 0 8px 24px rgba(0,30,80,0.12); display: flex; flex-direction: column; height: calc(100vh - 40px); max-height: 800px; }
        .chat-header { background-color: #007bff; color: white; padding: 15px 20px; border-radius: 12px 12px 0 0; font-size: 1.2em; text-align: center; }
        #chatbox { flex-grow: 1; padding: 20px; overflow-y: auto; display: flex; flex-direction: column; gap: 12px; }
        .message-wrapper { display: flex; max-width: 75%; }
        .message { padding: 10px 15px; border-radius: 18px; line-height: 1.5; position: relative; word-wrap: break-word; white-space: pre-wrap; }
        .message-meta { font-size: 0.75em; color: #777; margin-top: 4px; }
        .user-message-wrapper { align-self: flex-end; }
        .user-message .message { background-color: #007bff; color: white; border-radius: 18px 18px 5px 18px; }
        .api-response-wrapper { align-self: flex-start; }
        .api-response .message { background-color: #f1f3f5; color: #333; border-radius: 18px 18px 18px 5px; }
        .copy-btn {
            background: none; border: none; cursor: pointer; padding: 2px 5px; font-size: 0.9em; color: #555;
            opacity: 0.5; transition: opacity 0.2s;
            position: absolute; /* 메시지 박스 내 위치 조정을 위해 */
            bottom: 5px;
            right: 5px;
        }
        .message:hover .copy-btn { opacity: 1; }
        .copy-btn-icon { width: 14px; height: 14px; vertical-align: middle; } /* SVG 아이콘 사용 권장 */
        #inputArea { display: flex; padding: 15px; border-top: 1px solid #e0e0e0; background-color: #f8f9fa; }
        #messageInput { flex-grow: 1; padding: 12px; border: 1px solid #d1d1d1; border-radius: 20px; margin-right: 10px; font-size: 1em; }
        #sendButton { padding: 12px 20px; border: none; background-color: #007bff; color: white; cursor: pointer; border-radius: 20px; font-size: 1em; transition: background-color 0.2s; }
        #sendButton:hover { background-color: #0056b3; }
    </style>
</head>
<body>
    <div class="chat-container">
        <div class="chat-header">AI 상담원</div>
        <div id="chatbox">
            </div>
        <div id="inputArea">
            <input type="text" id="messageInput" placeholder="메시지를 입력하세요...">
            <button id="sendButton">전송</button>
        </div>
    </div>

    <script>
        const chatbox = document.getElementById('chatbox');
        const messageInput = document.getElementById('messageInput');
        const sendButton = document.getElementById('sendButton');
        
        // SVG 복사 아이콘 (인라인으로 사용하거나, 파일로 분리 가능)
        const copyIconSvg = `
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-clipboard" viewBox="0 0 16 16">
              <path d="M4 1.5H3a2 2 0 0 0-2 2V14a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-1v1h1a1 1 0 0 1 1 1V14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V3.5a1 1 0 0 1 1-1h1v-1z"/>
              <path d="M9.5 1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-1a.5.5 0 0 1 .5-.5h3zm-3-1A1.5 1.5 0 0 0 5 1.5v1A1.5 1.5 0 0 0 6.5 4h3A1.5 1.5 0 0 0 11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3z"/>
            </svg>`;

        // 실제 API 키로 교체해야 합니다.
        // const API_KEY = "YOUR_API_KEY"; 
        // const API_URL = "https://agent.sec.samsung.net/api/v1/run/9dba307d-2ba3-44f0-a0ed-79d47b2f4de8?stream=false";

        function addMessageToChat(text, senderType) { // senderType: 'user' or 'api'
            const messageWrapper = document.createElement('div');
            messageWrapper.classList.add('message-wrapper', senderType + '-message-wrapper');

            const messageBubble = document.createElement('div');
            messageBubble.classList.add(senderType + '-message'); // 'user-message' or 'api-response'
            
            const messageContent = document.createElement('div');
            messageContent.classList.add('message');
            messageContent.textContent = text;

            // 복사 버튼 추가
            const copyButton = document.createElement('button');
            copyButton.classList.add('copy-btn');
            copyButton.innerHTML = copyIconSvg + ' 복사'; // 아이콘 + 텍스트
            copyButton.title = '메시지 복사';
            copyButton.addEventListener('click', () => {
                navigator.clipboard.writeText(text).then(() => {
                    alert('메시지가 복사되었습니다!');
                }).catch(err => {
                    console.error('복사 실패:', err);
                    alert('메시지 복사에 실패했습니다.');
                });
            });

            messageContent.appendChild(copyButton);
            messageBubble.appendChild(messageContent);
            messageWrapper.appendChild(messageBubble);
            chatbox.appendChild(messageWrapper);
            chatbox.scrollTop = chatbox.scrollHeight;
        }

        // 실제 API 호출 로직 (이전 답변 참고하여 수정)
        async function callChatApi(userMessage) {
            // API_KEY와 API_URL을 사용하여 fetch 요청을 보내는 로직
            // ... fetch().then(response => response.text()).then(data => { ... }) ...
            // 아래는 임시 응답입니다. 실제 API 연동 시 이 부분을 수정하세요.
            addMessageToChat("API 키와 URL을 설정하고 실제 API를 호출해주세요. 이것은 임시 AI 응답입니다: " + userMessage, 'api');
        }
        
        sendButton.addEventListener('click', () => {
            const messageText = messageInput.value.trim();
            if (messageText) {
                addMessageToChat(messageText, 'user');
                callChatApi(messageText); // 실제 API 호출
                messageInput.value = '';
            }
        });

        messageInput.addEventListener('keypress', (event) => {
            if (event.key === 'Enter') {
                sendButton.click();
            }
        });

        // 초기 메시지
        addMessageToChat("안녕하세요! 무엇을 도와드릴까요?", 'api');

    </script>
</body>
</html>