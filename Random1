이해를 잘못하고 있었습니다. 아래는 주어진 조건에 맞게 팝업 윈도우를 찾는 코드 예시입니다.

csharp

using System;
using System.Drawing;
using System.Threading;
using System.Windows.Forms;
using OpenCvSharp;
using OpenCvSharp.Extensions;

public class Program
{
    public static void Main()
    {
        // 팝업 윈도우의 색상 조건
        int maxColorValue = 75; // R, G, B 모두 75 이하
        int minHeight = 150; // Y 높이 최소값
        int maxHeight = 300; // Y 높이 최대값

        // 스크린 이미지 캡처
        Bitmap screenCapture = CaptureScreen();

        // 팝업 윈도우 찾기
        Rectangle? windowRect = FindPopupWindow(screenCapture, maxColorValue, minHeight, maxHeight);

        if (windowRect != null)
        {
            // 팝업 윈도우 닫기 버튼 클릭
            int closeButtonX = windowRect.Value.Right - 10;
            int closeButtonY = windowRect.Value.Top + 10;
            ClickMouse(closeButtonX, closeButtonY);
        }
        else
        {
            Console.WriteLine("팝업 윈도우를 찾을 수 없습니다.");
        }
    }

    public static Bitmap CaptureScreen()
    {
        Rectangle screenBounds = Screen.PrimaryScreen.Bounds;

        using (Bitmap bitmap = new Bitmap(screenBounds.Width, screenBounds.Height))
        {
            using (Graphics graphics = Graphics.FromImage(bitmap))
            {
                graphics.CopyFromScreen(screenBounds.Left, screenBounds.Top, 0, 0, screenBounds.Size);
            }

            return bitmap.Clone() as Bitmap;
        }
    }

    public static Rectangle? FindPopupWindow(Bitmap screenCapture, int maxColorValue, int minHeight, int maxHeight)
    {
        using (Mat screenMat = BitmapConverter.ToMat(screenCapture))
        {
            int width = screenMat.Width;
            int height = screenMat.Height;

            // 창틀 상단 색상 검사
            bool isTopColorValid = true;
            for (int x = 0; x < width; x++)
            {
                Vec3b color = screenMat.At<Vec3b>(0, x);
                if (color.Item0 > maxColorValue || color.Item1 > maxColorValue || color.Item2 > maxColorValue)
                {
                    isTopColorValid = false;
                    break;
                }
            }

            // Y 높이 검사
            bool isHeightValid = height >= minHeight && height <= maxHeight;

            if (isTopColorValid && isHeightValid)
            {
                // 창틀 주변색상 검사
                bool isSurroundingColorValid = true;
                for (int y = 0; y < height; y++)
                {
                    Vec3b leftColor = screenMat.At<Vec3b>(y, 0);
                    Vec3b rightColor = screenMat.At<Vec3b>(y, width - 1);
                    if (leftColor.Item0 > maxColorValue || leftColor.Item1 > maxColorValue || leftColor.Item2 > maxColorValue ||
                        rightColor.Item0 > maxColorValue || rightColor.Item1 > maxColorValue || rightColor.Item2 > maxColorValue)
                    {
                        isSurroundingColorValid = false;
                        break

User
이어서
ChatGPT

arduino

                }
            }

            if (isSurroundingColorValid)
            {
                // 팝업 윈도우 사각형 반환
                return new Rectangle(0, 0, width, height);
            }
        }
    }

    return null;
}

public static void ClickMouse(int x, int y)
{
    Cursor.Position = new Point(x, y);
    Thread.Sleep(100);

    // 마우스 왼쪽 버튼 클릭
    mouse_event(MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0);
    Thread.Sleep(100);
    mouse_event(MOUSEEVENTF_LEFTUP, 0, 0, 0, 0);
}

private const int MOUSEEVENTF_LEFTDOWN = 0x02;
private const int MOUSEEVENTF_LEFTUP = 0x04;
[System.Runtime.InteropServices.DllImport("user32.dll")]
public static extern void mouse_event(int dwFlags, int dx, int dy, int cButtons, int dwExtraInfo);

}


위의 코드는 주어진 조