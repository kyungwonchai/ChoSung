아래는 요청에 따라 yyyy-MM-dd 형식의 날짜와 분류 시간을 합쳐 하나의 VARCHAR 값으로 생성하는 쿼리입니다.

수정된 쿼리
sql
코드 복사
WITH view1 AS (
    SELECT 
        Line,
        DATEADD(MINUTE, -10, datev) AS datev1,
        pickupcnt
    FROM table_lossdata
)
SELECT 
    Line,
    pickupcnt,
    datev1,
    -- yyyy-MM-dd 형식의 날짜와 분류시간을 합친 값 생성
    CONVERT(VARCHAR(10), datev1, 120) + ' ' + 
    CASE
        -- 21시: 21:00 ~ 22:20
        WHEN (DATEPART(HOUR, datev1) = 21 AND DATEPART(MINUTE, datev1) >= 0)
          OR (DATEPART(HOUR, datev1) = 22 AND DATEPART(MINUTE, datev1) <= 20) THEN '21'
        -- 22시: 22:30 ~ 23:20
        WHEN (DATEPART(HOUR, datev1) = 22 AND DATEPART(MINUTE, datev1) >= 30)
          OR (DATEPART(HOUR, datev1) = 23 AND DATEPART(MINUTE, datev1) <= 20) THEN '22'
        -- 23시: 23:30 ~ 00:20
        WHEN (DATEPART(HOUR, datev1) = 23 AND DATEPART(MINUTE, datev1) >= 30)
          OR (DATEPART(HOUR, datev1) = 0 AND DATEPART(MINUTE, datev1) <= 20) THEN '23'
        -- 00시: 00:30 ~ 01:20
        WHEN (DATEPART(HOUR, datev1) = 0 AND DATEPART(MINUTE, datev1) >= 30)
          OR (DATEPART(HOUR, datev1) = 1 AND DATEPART(MINUTE, datev1) <= 20) THEN '00'
        -- 01시: 01:30 ~ 02:20
        WHEN (DATEPART(HOUR, datev1) = 1 AND DATEPART(MINUTE, datev1) >= 30)
          OR (DATEPART(HOUR, datev1) = 2 AND DATEPART(MINUTE, datev1) <= 20) THEN '01'
        -- 02시: 02:30 ~ 03:20
        WHEN (DATEPART(HOUR, datev1) = 2 AND DATEPART(MINUTE, datev1) >= 30)
          OR (DATEPART(HOUR, datev1) = 3 AND DATEPART(MINUTE, datev1) <= 20) THEN '02'
        -- 03시: 03:30 ~ 04:20
        WHEN (DATEPART(HOUR, datev1) = 3 AND DATEPART(MINUTE, datev1) >= 30)
          OR (DATEPART(HOUR, datev1) = 4 AND DATEPART(MINUTE, datev1) <= 20) THEN '03'
        -- 04시: 04:30 ~ 05:20
        WHEN (DATEPART(HOUR, datev1) = 4 AND DATEPART(MINUTE, datev1) >= 30)
          OR (DATEPART(HOUR, datev1) = 5 AND DATEPART(MINUTE, datev1) <= 20) THEN '04'
        -- 05시: 05:30 ~ 06:50
        WHEN (DATEPART(HOUR, datev1) = 5 AND DATEPART(MINUTE, datev1) >= 30)
          OR (DATEPART(HOUR, datev1) = 6 AND DATEPART(MINUTE, datev1) <= 50) THEN '05'
        -- 기본: 그대로 반환
        ELSE RIGHT('0' + CONVERT(VARCHAR, DATEPART(HOUR, datev1)), 2)
    END AS 분류시간,
    -- 날짜와 분류시간 합치기
    CONVERT(VARCHAR(10), datev1, 120) + ' ' +
    CASE
        WHEN (DATEPART(HOUR, datev1) = 21 AND DATEPART(MINUTE, datev1) >= 0)
          OR (DATEPART(HOUR, datev1) = 22 AND DATEPART(MINUTE, datev1) <= 20) THEN '21'
        WHEN (DATEPART(HOUR, datev1) = 22 AND DATEPART(MINUTE, datev1) >= 30)
          OR (DATEPART(HOUR, datev1) = 23 AND DATEPART(MINUTE, datev1) <= 20) THEN '22'
        WHEN (DATEPART(HOUR, datev1) = 23 AND DATEPART(MINUTE, datev1) >= 30)
          OR (DATEPART(HOUR, datev1) = 0 AND DATEPART(MINUTE, datev1) <= 20) THEN '23'
        WHEN (DATEPART(HOUR, datev1) = 0 AND DATEPART(MINUTE, datev1) >= 30)
          OR (DATEPART(HOUR, datev1) = 1 AND DATEPART(MINUTE, datev1) <= 20) THEN '00'
        WHEN (DATEPART(HOUR, datev1) = 1 AND DATEPART(MINUTE, datev1) >= 30)
          OR (DATEPART(HOUR, datev1) = 2 AND DATEPART(MINUTE, datev1) <= 20) THEN '01'
        WHEN (DATEPART(HOUR, datev1) = 2 AND DATEPART(MINUTE, datev1) >= 30)
          OR (DATEPART(HOUR, datev1) = 3 AND DATEPART(MINUTE, datev1) <= 20) THEN '02'
        WHEN (DATEPART(HOUR, datev1) = 3 AND DATEPART(MINUTE, datev1) >= 30)
          OR (DATEPART(HOUR, datev1) = 4 AND DATEPART(MINUTE, datev1) <= 20) THEN '03'
        WHEN (DATEPART(HOUR, datev1) = 4 AND DATEPART(MINUTE, datev1) >= 30)
          OR (DATEPART(HOUR, datev1) = 5 AND DATEPART(MINUTE, datev1) <= 20) THEN '04'
        WHEN (DATEPART(HOUR, datev1) = 5 AND DATEPART(MINUTE, datev1) >= 30)
          OR (DATEPART(HOUR, datev1) = 6 AND DATEPART(MINUTE, datev1) <= 50) THEN '05'
        ELSE RIGHT('0' + CONVERT(VARCHAR, DATEPART(HOUR, datev1)), 2)
    END AS 최종시간
FROM view1
ORDER BY datev1;
쿼리 요약
CONVERT(VARCHAR(10), datev1, 120):
날짜를 yyyy-MM-dd 형식으로 변환.
CASE 문으로 분류시간 추가:
주어진 조건에 따라 시간 분류.