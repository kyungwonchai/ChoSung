ss 22.2와 MSSQL 2014를 사용하여 버튼 클릭 이벤트를 처리하여 특정 테이블의 데이터를 Excel 파일로 저장하는 예제 코드를 제공하겠습니다. 이 예제에서는 C#을 사용하며, DevExpress의 Spreadsheet 컴포넌트와 System.Data.SqlClient를 사용하여 SQL 데이터베이스에서 데이터를 읽어 Excel 파일로 저장합니다.

프로젝트에 필요한 라이브러리 추가: DevExpress Spreadsheet 컴포넌트와 SQL 데이터 액세스를 위해 필요한 네임스페이스를 포함시키세요.

데이터베이스 접속 및 데이터 읽기: SqlConnection과 SqlCommand를 사용하여 데이터베이스에서 데이터를 조회합니다.

Excel 파일 생성 및 저장: DevExpress의 Workbook 클래스를 사용하여 Excel 파일을 생성하고 저장합니다.

여기서는 Employees 테이블의 데이터를 Excel로 저장하는 간단한 예제를 보여드리겠습니다.

csharp
코드 복사
using System;
using System.Data.SqlClient;
using DevExpress.Spreadsheet;

// 버튼 클릭 이벤트 핸들러
private void btnSaveToExcel_Click(object sender, EventArgs e) {
    // 데이터베이스 연결 문자열
    string connectionString = "Data Source=서버이름;Initial Catalog=데이터베이스이름;Integrated Security=True";
    string query = "SELECT * FROM Employees";  // Excel로 저장할 테이블

    using (SqlConnection con = new SqlConnection(connectionString)) {
        SqlCommand cmd = new SqlCommand(query, con);
        con.Open();

        using (SqlDataReader reader = cmd.ExecuteReader()) {
            var workbook = new Workbook();
            Worksheet worksheet = workbook.Worksheets[0];

            // 컬럼 헤더 설정
            for (int i = 0; i < reader.FieldCount; i++) {
                worksheet.Cells[0, i].Value = reader.GetName(i);
            }

            int row = 1;
            while (reader.Read()) {
                for (int i = 0; i < reader.FieldCount; i++) {
                    worksheet.Cells[row, i].Value = reader[i].ToString();
                }
                row++;
            }

            // 파일 저장
            workbook.SaveDocument("Employees.xlsx");
        }

        con.Close();
    }
}
위 코드를 사용하여 DevExpress Spreadsheet 컴포넌트를 통해 SQL Server 데이터베이스에서 읽은 데이터를 Excel 파일로 저장할 수 있습니다. btnSaveToExcel_Click 메서드는 버튼 클릭 이벤트에 연결되어 있어야 합니다.

이 코드는 DevExpress 컴포넌트가 설치되어 있고, 프로젝트에 올바르게 참조되어 있어야 하며, SQL 서버에 접속할 수 있는 올바른 접속 문자열을 사용해야 합니다. 파