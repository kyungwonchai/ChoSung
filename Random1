래는 포함되는 키를 처리할 수 있도록 수정한 전체 코드입니다. 요청에 따라 dict.exists를 사용하는 대신 딕셔너리 키를 순회하며 특정 패턴을 포함하는지 확인하도록 변경했습니다.

수정된 코드
vba
코드 복사
Sub ProcessAndFillMergedCells()
    Dim lastRow As Long
    Dim currentRow As Long
    Dim dict As Object
    Dim t1 As String
    Dim key As String
    Dim combinedKey As String
    Dim col As Integer
    Dim tempArr As Variant
    Dim b4Color As Long

    ' 딕셔너리 생성
    Set dict = CreateObject("Scripting.Dictionary")

    ' C3부터 B100000의 마지막 행까지 확인
    lastRow = 주차2_시트.Cells(주차2_시트.Rows.Count, "B").End(xlUp).Row

    ' 초기 t1 값
    t1 = ""

    ' B4의 배경색 가져오기
    b4Color = 주차2_시트.Range("B4").Interior.Color

    ' 첫 번째 루프: 딕셔너리 생성
    For currentRow = 3 To lastRow
        Dim cValue As String
        Dim dValue As String

        cValue = Trim(주차2_시트.Cells(currentRow, "C").Value)
        dValue = Trim(주차2_시트.Cells(currentRow, "D").Value)

        ' C열 값이 빈 값이 아니면 t1 업데이트
        If cValue <> "" Then
            t1 = cValue
        End If

        ' D열에서 키 추출
        key = GetKey(dValue)

        ' t1과 키를 묶어서 새로운 키 생성
        If t1 <> "" And key <> "" Then
            combinedKey = t1 & "_" & key

            ' 딕셔너리에 키가 없으면 초기화
            If Not dict.exists(combinedKey) Then
                dict(combinedKey) = Array(0, 0, 0, 0, 0, 0) ' F~K 열 초기값
            End If

            ' 딕셔너리에서 배열 복사
            tempArr = dict(combinedKey)

            ' F~K 열 값을 배열에 합산
            For col = 1 To 6
                tempArr(col - 1) = tempArr(col - 1) + Val(주차2_시트.Cells(currentRow, 6 + col).Value)
            Next col

            ' 수정된 배열을 다시 딕셔너리에 저장
            dict(combinedKey) = tempArr
        End If
    Next currentRow

    ' 두 번째 루프: 병합된 셀 처리 및 F~K 열 채우기
    For currentRow = 3 To lastRow
        Dim mergeCValue As String
        Dim mergeDValue As String
        Dim totalArr(0 To 5) As Double
        Dim splitValues() As String
        Dim innerKey As String
        Dim partKey As String

        ' 병합된 C열 및 D열 처리
        If 주차2_시트.Cells(currentRow, "C").MergeCells Then
            mergeCValue = Trim(주차2_시트.Cells(currentRow, "C").Value)
            mergeDValue = Trim(주차2_시트.Cells(currentRow, "D").Value)

            ' C열 배경색이 B4와 같은 경우
            If 주차2_시트.Cells(currentRow, "C").Interior.Color = b4Color Then
                ' C열 값에 +가 포함된 경우 처리
                If InStr(mergeCValue, "+") > 0 Then
                    splitValues = Split(mergeCValue, "+")
                    For Each partKey In splitValues
                        partKey = Trim(partKey)

                        ' 딕셔너리의 모든 키를 순회하며 포함 여부 확인
                        Dim dictKey As Variant
                        For Each dictKey In dict.Keys
                            If InStr(dictKey, partKey & "_") > 0 Then
                                ' 포함된 키의 값을 합산
                                For col = 0 To 5
                                    totalArr(col) = totalArr(col) + dict(dictKey)(col)
                                Next col
                            End If
                        Next dictKey
                    Next partKey
                Else
                    ' +가 없는 경우 단일 키로 합산
                    For Each dictKey In dict.Keys
                        If InStr(dictKey, mergeCValue & "_") > 0 Then
                            For col = 0 To 5
                                totalArr(col) = totalArr(col) + dict(dictKey)(col)
                            Next col
                        End If
                    Next dictKey
                End If

                ' 결과를 F~K 열에 채우기
                For col = 0 To 5
                    주차2_시트.Cells(currentRow, 6 + col).Value = totalArr(col)
                Next col
            End If
        End If
    Next currentRow

    MsgBox "작업 완료!", vbInformation
End Sub

' 키를 추출하는 함수
Function GetKey(value As String) As String
    Dim i As Long
    Dim char As String
    Dim keyStart As Long
    Dim keyEnd As Long

    keyStart = 0
    keyEnd = InStr(1, value, "/") - 1 ' / 위치 전까지

    If keyEnd > 0 Then
        For i = keyEnd To 1 Step -1
            char = Mid(value, i, 1)
            ' 첫 번째 영어 문자를 발견한 위치
            If char Like "[A-Za-z]" Then
                keyStart = i
                Exit For
            End If
        Next i
    End If

    ' 키 추출
    If keyStart > 0 And keyEnd > 0 Then
        GetKey = Mid(value, keyStart, keyEnd - keyStart + 1)
    Else
        GetKey = "" ' 키가 없으면 빈 문자열 반환
    End If
End Function
주요 수정 내용
포함 키 처리:

dict.exists 대신 For Each를 사용하여 딕셔너리의 모든 키를 순회합니다.
InStr(dictKey, partKey & "_") > 0 조건으로 키가 특정 패턴을 포함하는지 확인합니다.
+ 및 괄호 처리:

Split을 사용하여 +로 분리한 각 부분을 개별적으로 처리합니다.
InStr로 포함 키를 찾으며, 괄호가 포함된 경우에도 처리합니다.
F~K 값 합산:

포함된 모든 키의 값을 합산하여 totalArr 배열에 저장합니다.
결과 출력:

계산된 값을 F~K 열에 출력합니다.
사용 방법
코드 삽입:

VBA 편집기에서 새 모듈을 추가하고 코드를 붙여넣습니다.
매크로 실행:

매크로를 실행하여 작업을 수행합니다.
결과 확인:
