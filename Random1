ARM64 환경에서 pip install이 실패하고 pip subprocess to install build dependencies did not run successfully 오류가 발생하는 경우 몇 가지 확인해야 할 사항이 있습니다.

1. pip.ini 설정 확인
사용자 폴더에 pip.ini를 만들었다면, 그 안의 설정이 잘못되었을 가능성이 있습니다.
아래 내용을 확인하세요.

📌 pip.ini (Windows 기준, %APPDATA%\pip\pip.ini)
ini
코드 복사
[global]
trusted-host = pypi.org
               pypi.python.org
               files.pythonhosted.org
timeout = 60
📌 Linux 또는 macOS에서 (~/.config/pip/pip.conf)
ini
코드 복사
[global]
trusted-host = pypi.org
               pypi.python.org
               files.pythonhosted.org
timeout = 60
✅ pip 설정 파일이 문제라면, 아래 방법으로 기본값으로 초기화

sh
코드 복사
mv ~/.config/pip/pip.conf ~/.config/pip/pip.conf.bak
(Windows에서는 pip.ini를 %APPDATA%\pip\pip.ini.bak로 변경 후 시도)

2. Python 및 pip 버전 확인
sh
코드 복사
python --version
pip --version
✅ 최신 버전인지 확인하고, 아니면 업데이트

sh
코드 복사
python -m ensurepip --default-pip
python -m pip install --upgrade pip setuptools wheel
3. ARM64 환경에 맞는 Python 사용 여부 확인
만약 pip install 중에 빌드가 실패하는 경우, 사용 중인 Python이 ARM64에 맞지 않을 수 있습니다.

✅ 설치된 Python 아키텍처 확인
sh
코드 복사
python -c "import platform; print(platform.machine())"
x86_64 → x86 환경 (ARM64에서는 실행 문제 발생 가능)
aarch64 또는 arm64 → ARM 환경 (정상)
만약 x86_64라면, ARM64 버전의 Python을 설치해야 합니다.

ARM64용 Python 설치 링크:

Windows (ARM64) Python 다운로드
Linux: sudo apt install python3 또는 brew install python (Mac)
4. PIP가 ARM64용 바이너리를 찾지 못할 경우
일부 패키지는 ARM64 환경에서 바이너리(휠) 파일을 제공하지 않기 때문에 pip가 직접 빌드를 시도합니다.
이 경우 빌드에 필요한 gcc, make, python3-dev 등이 누락되었을 수 있습니다.

✅ 필요한 빌드 도구 설치 (Linux/macOS)
sh
코드 복사
sudo apt update && sudo apt install python3-dev python3-pip python3-venv build-essential
(macOS에서는 brew install python 후 시도)

Windows의 경우 Build Tools for Visual Studio를 설치 후 시도.

5. pip 캐시 삭제 후 다시 설치 시도
sh
코드 복사
pip cache purge
pip install --no-cache-dir <패키지명>
6. --use-deprecated=legacy-resolver 옵션 추가
일부 패키지는 pip의 최신 의존성 해석 방식과 호환되지 않을 수 있습니다.

sh
코드 복사
pip install --use-deprecated=legacy-resolver <패키지명>
🔥 최종 해결 방법 정리
1️⃣ pip.ini를 기본값으로 돌리고
2️⃣ pip install --upgrade pip setuptools wheel 실행
3️⃣ python -c "import platform; print(platform.machine())" 로 ARM64 확인
4️⃣ sudo apt install python3-dev build-essential (Linux) 또는 VS Build Tools 설치 (Windows)
5️⃣ pip cache purge 후 pip install --no-cache-dir <패키지명> 실행