inForms + DevExpress GridView에서 동적으로 컬럼을 추가한 후, 재고(int) <= 부족기준(int) 조건을 만족하는 경우 해당 **행(Row)**의 색상을 노란색으로 변경하려면, GridView.RowStyle 이벤트를 사용하면 됩니다.

아래는 전문가 수준으로 구성한 코드입니다:

1. 컬럼을 동적으로 추가한 코드 (예시)
csharp
코드 복사
gridView_Item.Columns.AddRange(new GridColumn[] {
    new GridColumn() {
        FieldName = "재고",
        Caption = "재고",
        Visible = true
    },
    new GridColumn() {
        FieldName = "부족기준",
        Caption = "부족 기준",
        Visible = true
    },
    new GridColumn() {
        FieldName = "품목명",
        Caption = "품목명",
        Visible = true
    }
});
2. RowStyle 이벤트 등록
Form의 Load 또는 초기화 영역에서 다음 코드를 추가하세요.

csharp
코드 복사
gridView_Item.RowStyle += gridView_Item_RowStyle;
3. 조건에 따라 행 색상 변경하는 이벤트 핸들러
csharp
코드 복사
private void gridView_Item_RowStyle(object sender, RowStyleEventArgs e)
{
    GridView view = sender as GridView;

    // 유효한 Row인지 확인 (GroupRow가 아닌 일반 DataRow만 처리)
    if (e.RowHandle >= 0)
    {
        // 재고와 부족기준 값을 가져오기
        object stockObj = view.GetRowCellValue(e.RowHandle, "재고");
        object minObj = view.GetRowCellValue(e.RowHandle, "부족기준");

        if (stockObj != null && minObj != null &&
            int.TryParse(stockObj.ToString(), out int stock) &&
            int.TryParse(minObj.ToString(), out int min))
        {
            if (stock <= min)
            {
                // 배경색을 노란색으로 설정
                e.Appearance.BackColor = Color.Yellow;
            }
        }
    }
}
요약:
컬럼 이름은 반드시 "재고", "부족기준" 이라고 정확히 매칭되어야 합니다.

조건에 만족하면 해당 행 전체에 노란 배경색 적용됩니다.

필요하다면:

다른 컬럼에 따라 색상을 다르게

글자색 변경도 가능

셀 단위로 색상 적용도 가능