isual Studio에서 React와 DevExtreme을 사용한 TypeScript 프로젝트를 설정하는 방법을 단계별로 안내하겠습니다.

Visual Studio 설치 및 설정
Visual Studio 설치
Visual Studio 웹사이트에서 Visual Studio를 다운로드하고 설치합니다.
설치 시 "Node.js development" 워크로드를 선택합니다.
React + TypeScript 프로젝트 생성
새 프로젝트 생성

Visual Studio를 열고 "Create a new project"를 클릭합니다.
"React App (TypeScript)" 템플릿을 검색하여 선택합니다.
프로젝트 이름과 경로를 설정하고 "Create"를 클릭합니다.
DevExtreme 설치

Visual Studio의 "View" 메뉴에서 "Terminal"을 선택하여 터미널을 엽니다.
터미널에서 다음 명령을 입력하여 DevExtreme 및 DevExtreme React 컴포넌트를 설치합니다.
bash
코드 복사
npm install devextreme devextreme-react
App.tsx 파일 수정

src/App.tsx 파일을 열고 DevExtreme 컴포넌트를 사용하는 코드를 추가합니다. 아래 예시를 참고하세요.
tsx
코드 복사
import React from 'react';
import DataGrid, { Column } from 'devextreme-react/data-grid';

const App: React.FC = () => {
  const dataSource = [
    { id: 1, name: 'John', age: 30 },
    { id: 2, name: 'Jane', age: 25 }
  ];

  return (
    <div>
      <h2>DevExtreme DataGrid Example</h2>
      <DataGrid
        dataSource={dataSource}
        showBorders={true}
      >
        <Column dataField="id" />
        <Column dataField="name" />
        <Column dataField="age" />
      </DataGrid>
    </div>
  );
};

export default App;
개발 서버 실행

Visual Studio의 "Debug" 메뉴에서 "Start Without Debugging"을 선택하거나, F5 키를 눌러 개발 서버를 실행합니다.
브라우저가 열리면서 React 애플리케이션이 로드됩니다.
추가 구성 (Flask 서버와의 통신)
React 애플리케이션이 Flask 서버와 통신하여 이미지를 가져오는 기능을 추가하려면, 다음과 같은 단계가 필요합니다.

Flask 서버 설정
Flask 서버에서 이미지 URL을 제공하는 엔드포인트를 설정합니다. 예시:

python
코드 복사
from flask import Flask, request, jsonify
import pyodbc

app = Flask(__name__)

# MSSQL 연결 설정
conn = pyodbc.connect('DRIVER={ODBC Driver 17 for SQL Server};SERVER=your_server;DATABASE=your_db;UID=your_user;PWD=your_password')

@app.route('/image', methods=['GET'])
def get_image():
    column = request.args.get('column')
    cursor = conn.cursor()
    cursor.execute(f"SELECT image_url FROM your_table WHERE column_number = ?", (column,))
    row = cursor.fetchone()
    if row:
        return jsonify({"image_url": row[0]})
    return jsonify({"error": "Image not found"}), 404

if __name__ == '__main__':
    app.run(debug=True)
React에서 Flask 서버와 통신
App.tsx 파일에서 Flask 서버와 통신하는 코드를 추가합니다.

tsx
코드 복사
import React, { useState } from 'react';
import { Button } from 'devextreme-react/button';
import axios from 'axios';

const App: React.FC = () => {
  const [imageSrc, setImageSrc] = useState('');

  const fetchImage = async (columnNumber: number) => {
    try {
      const response = await axios.get(`http://your-flask-server-url/image?column=${columnNumber}`);
      setImageSrc(response.data.image_url);
    } catch (error) {
      console.error("Error fetching image:", error);
    }
  };

  return (
    <div>
      {[...Array(10).keys()].map(num => (
        <Button
          key={num}
          text={`Button ${num + 1}`}
          onClick={() => fetchImage(num + 1)}
        />
      ))}
      {imageSrc && <img src={imageSrc} alt="Fetched from server" />}
    </div>
  );
};

export default App;
이와 같은 방법으로 Visual Studio를 사용하여 Windows에서 React와 DevExtreme을 활용한 TypeScript 프로젝트를 설정하고 개발할 수 있습니다. Flask 서버와의 통신을 통해 이미지를 동적으로 가져오는 기능도 구현할 수 있습니다.






