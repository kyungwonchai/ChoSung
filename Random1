import subprocess
import getpass
import os

# ===================================================================
# ==                 ★★★★★ 설정 (사용자 수정 영역) ★★★★★                 ==
# ===================================================================

# 1. 500대 라즈베리파이의 IP 주소 목록
HOSTS = [
    '192.168.1.101',
    '192.168.1.102',
    # ... 500개 IP 주소 추가 ...
]

# 2. 라즈베리파이 접속 유저 이름
SSH_USER = 'pi'

# 3. 중앙 컴퓨터의 SSH 공개키 파일 경로 (보통 수정할 필요 없음)
#    만약 키가 없다면 'ssh-keygen -t rsa' 명령어로 먼저 생성해야 합니다.
PUBLIC_KEY_FILE = os.path.expanduser('~/.ssh/id_rsa.pub')

# ===================================================================

def check_prerequisites():
    """스크립트 실행에 필요한 sshpass와 키 파일이 있는지 확인하는 함수"""
    # 1. sshpass 명령어 확인
    try:
        subprocess.run(['which', 'sshpass'], check=True, capture_output=True)
    except (subprocess.CalledProcessError, FileNotFoundError):
        print("!!!!!! [오류] 'sshpass' 유틸리티가 설치되어 있지 않습니다. !!!!!!")
        print("Debian/Ubuntu: sudo apt-get install sshpass")
        print("macOS (Homebrew): brew install hudochenkov/sshpass/sshpass")
        return False

    # 2. SSH 공개키 파일 확인
    if not os.path.exists(PUBLIC_KEY_FILE):
        print(f"!!!!!! [오류] SSH 공개키 파일이 없습니다: {PUBLIC_KEY_FILE}")
        print("터미널에서 'ssh-keygen -t rsa' 명령어를 실행하여 먼저 키를 생성해주세요.")
        return False
    
    return True

def copy_key_to_host(hostname, user, password):
    """단일 호스트에 SSH 공개키를 복사하는 함수"""
    print(f"\n--- [{hostname}] 키 복사 작업 시작 ---")
    
    # ssh-copy-id 명령어를 sshpass로 감싸서 비밀번호를 자동으로 입력
    command = [
        'sshpass',
        '-p', password,
        'ssh-copy-id',
        '-o', 'StrictHostKeyChecking=no',  # 처음 접속 시 호스트 키 확인을 자동으로 수락
        '-o', 'ConnectTimeout=10',
        f'{user}@{hostname}'
    ]

    try:
        # 명령어 실행
        result = subprocess.run(
            command,
            check=True,
            capture_output=True,
            text=True,
            encoding='utf-8'
        )
        print(f"  [성공] [{hostname}]에 공개키가 성공적으로 복사되었습니다.")
        # ssh-copy-id의 상세 출력 내용을 보여줌
        print("  [상세] " + result.stdout.strip().replace('\n', '\n  [상세] '))
        
    except subprocess.CalledProcessError as e:
        print(f"!!!!!! [{hostname}]에서 키 복사 실패 !!!!!!")
        # 오류의 원인을 파악하기 위해 stderr 내용을 출력
        error_message = e.stderr.strip()
        if "Permission denied" in error_message:
            print("  [원인] 비밀번호가 틀렸을 가능성이 높습니다.")
        else:
            print(f"  [오류 내용] {error_message}")
    except FileNotFoundError:
         print(f"!!!!!! [{hostname}]에서 ssh-copy-id 명령어 실행 실패 !!!!!!")
         print("  [원인] 'ssh-copy-id'가 설치되어 있지 않을 수 있습니다.")


if __name__ == '__main__':
    if not check_prerequisites():
        exit(1)

    print("="*50)
    print("SSH 공개키 자동 복사 스크립트를 시작합니다.")
    print(f"대상 장비 수: {len(HOSTS)}대")
    print("="*50)

    # 모든 라즈베리파이의 비밀번호를 한 번만 입력받음
    # (모든 장비의 비밀번호가 동일하다고 가정)
    try:
        pi_password = getpass.getpass(f"모든 라즈베리파이({SSH_USER})의 비밀번호를 입력하세요: ")
    except Exception as e:
        print(f"\n비밀번호 입력 중 오류 발생: {e}")
        exit(1)

    if not pi_password:
        print("\n비밀번호가 입력되지 않았습니다. 프로그램을 종료합니다.")
        exit(1)

    # 목록에 있는 모든 호스트에 대해 키 복사 작업 수행
    for host in HOSTS:
        copy_key_to_host(host, SSH_USER, pi_password)

    print("\n\n모든 작업이 완료되었습니다.")