음은 Flask 애플리케이션에서 /meserr 경로를 통해 MSSQL2014에서 데이터를 조회하고, 해당 데이터를 화면에 표시하면서 버튼을 통해 엑셀로 내보내는 기능을 구현하는 예제입니다.

코드 구현
1. MSSQL 데이터베이스 연결
MSSQL에 연결하기 위해 pyodbc 패키지를 사용합니다. 설치가 필요하면 아래 명령을 실행하세요:

bash
코드 복사
pip install pyodbc pandas openpyxl
2. Flask 애플리케이션 코드
python
코드 복사
from flask import Flask, render_template, request, send_file
import pyodbc
import pandas as pd
import os

app = Flask(__name__)

# MSSQL 데이터베이스 연결 정보
DB_CONFIG = {
    "server": "YOUR_SERVER",
    "database": "YOUR_DATABASE",
    "username": "YOUR_USERNAME",
    "password": "YOUR_PASSWORD"
}

# MSSQL 연결 함수
def get_db_connection():
    conn_str = (
        f"DRIVER={{ODBC Driver 17 for SQL Server}};"
        f"SERVER={DB_CONFIG['server']};"
        f"DATABASE={DB_CONFIG['database']};"
        f"UID={DB_CONFIG['username']};"
        f"PWD={DB_CONFIG['password']}"
    )
    return pyodbc.connect(conn_str)

# /meserr 페이지
@app.route('/meserr', methods=['GET', 'POST'])
def meserr():
    if request.method == 'POST':  # 엑셀로 내보내기 요청
        # 데이터 조회
        conn = get_db_connection()
        query = """
            SELECT 
                linename AS '라인',
                magno AS 'MAG',
                FORMAT(Time1, 'yyyy-MM-dd HH:mm:ss.fff') AS '시간',
                ngname AS '에러명',
                MessageContent AS '에러메시지',
                Remarks AS '비고'
            FROM View_MESErr_UniqueJoin
        """
        df = pd.read_sql(query, conn)
        conn.close()

        # 엑셀 파일 생성
        file_path = os.path.join(os.getcwd(), 'meserr_export.xlsx')
        df.to_excel(file_path, index=False, engine='openpyxl')

        # 파일 다운로드 제공
        return send_file(file_path, as_attachment=True)

    # GET 요청 - 데이터 조회 및 렌더링
    conn = get_db_connection()
    query = """
        SELECT 
            linename AS '라인',
            magno AS 'MAG',
            FORMAT(Time1, 'yyyy-MM-dd HH:mm:ss.fff') AS '시간',
            ngname AS '에러명',
            MessageContent AS '에러메시지',
            Remarks AS '비고'
        FROM View_MESErr_UniqueJoin
    """
    df = pd.read_sql(query, conn)
    conn.close()

    # 데이터를 HTML에 전달
    return render_template('meserr.html', data=df.to_dict(orient='records'))

# Flask 실행
if __name__ == '__main__':
    app.run(debug=True)
3. HTML 템플릿 (templates/meserr.html)
html
코드 복사
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>MES Error Viewer</title>
</head>
<body>
    <h1>MES Error Logs</h1>
    <table border="1">
        <thead>
            <tr>
                <th>라인</th>
                <th>MAG</th>
                <th>시간</th>
                <th>에러명</th>
                <th>에러메시지</th>
                <th>비고</th>
            </tr>
        </thead>
        <tbody>
            {% for row in data %}
                <tr>
                    <td>{{ row['라인'] }}</td>
                    <td>{{ row['MAG'] }}</td>
                    <td>{{ row['시간'] }}</td>
                    <td>{{ row['에러명'] }}</td>
                    <td>{{ row['에러메시지'] }}</td>
                    <td>{{ row['비고'] }}</td>
                </tr>
            {% endfor %}
        </tbody>
    </table>

    <form method="POST" action="/meserr">
        <button type="submit">엑셀로 내보내기</button>
    </form>
</body>
</html>
주요 기능 설명
MSSQL 연결:

pyodbc를 사용해 MSSQL2014에서 데이터를 읽습니다.
데이터는 View_MESErr_UniqueJoin 뷰에서 조회됩니다.
HTML 데이터 표시:
