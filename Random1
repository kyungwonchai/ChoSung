해했습니다! 다음은 요청하신 대로 QR 코드를 읽은 후, 첫 번째 값을 MSSQL의 QRCodeData 테이블에서 확인하고, 해당 값이 존재하면 두 번째 값을 MySQL의 management_mobile_checksheet 테이블에 삽입하는 Kotlin 함수를 작성했습니다.

수정된 checkModelInMySQL 함수
kotlin
코드 복사
import java.sql.Connection
import java.sql.DriverManager
import java.sql.ResultSet
import java.sql.SQLException
import java.sql.Timestamp
import java.time.LocalDateTime
import kotlinx.coroutines.Dispatchers
import kotlinx.coroutines.withContext

private var isExecuting = false

suspend fun checkAndInsertModel(qrCode: String): String? {
    return withContext(Dispatchers.IO) {
        if (isExecuting) {
            return@withContext null
        }

        isExecuting = true
        var mssqlConnection: Connection? = null
        var mysqlConnection: Connection? = null
        var preparedStatement: java.sql.PreparedStatement? = null
        var resultSet: ResultSet? = null
        var result: String? = null

        try {
            // QR 코드를 ^로 분리
            val parts = qrCode.split("^")
            val firstPart = parts[0]
            val secondPart = parts.getOrNull(1)

            if (secondPart == null) {
                result = "QR code format is invalid. No second part found."
                return@withContext result
            }

            // MSSQL 데이터베이스 연결
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver")
            mssqlConnection = DriverManager.getConnection(
                "jdbc:sqlserver://your_mssql_server:1433;databaseName=your_database_name;user=your_username;password=your_password;"
            )

            // 첫 번째 값을 MSSQL의 QRCodeData 테이블에서 조회
            val mssqlQuery = "SELECT COUNT(*) FROM QRCodeData WHERE QRCode = ?"
            preparedStatement = mssqlConnection.prepareStatement(mssqlQuery)
            preparedStatement.setString(1, firstPart)

            resultSet = preparedStatement.executeQuery()

            if (resultSet.next() && resultSet.getInt(1) > 0) {
                // 첫 번째 값이 존재할 때 MySQL에 두 번째 값을 삽입

                // MySQL 데이터베이스 연결
                Class.forName("com.mysql.cj.jdbc.Driver")
                mysqlConnection = DriverManager.getConnection(
                    "jdbc:mysql://10.244.122.122:3306/your_database_name?useSSL=false&serverTimezone=UTC",
                    "abc", "1233445"
                )

                // 최근 10분 이내에 해당 modelnumber로 체크된 기록이 있는지 확인 (DB 시간 기준)
                val checkQuery = """
                    SELECT COUNT(*) as count FROM smd.management_mobile_checksheet 
                    WHERE modelnumber = ? AND check_time > (NOW() - INTERVAL 10 MINUTE)
                """.trimIndent()
                preparedStatement = mysqlConnection.prepareStatement(checkQuery)
                preparedStatement.setString(1, secondPart)

                val countResultSet = preparedStatement.executeQuery()

                var shouldInsert = true

                if (countResultSet.next()) {
                    val count = countResultSet.getInt("count")
                    if (count > 0) {
                        shouldInsert = false
                    }
                }

                if (shouldInsert) {
                    // mainsheet에서 데이터를 가져와서 insert
                    val mainSheetQuery = """
                        SELECT depart, part, floor, district, at, model 
                        FROM smd.management_mobile_mainseet 
                        WHERE modelnumber = ?
                    """.trimIndent()
                    preparedStatement = mysqlConnection.prepareStatement(mainSheetQuery)
                    preparedStatement.setString(1, secondPart)
                    resultSet = preparedStatement.executeQuery()

                    if (resultSet.next()) {
                        val insertQuery = """
                            INSERT INTO smd.management_mobile_checksheet 
                            (depart, part, floor, district, at, model, modelnumber, type, checkidnum, checkname, check_time) 
                            VALUES (?, ?, ?, ?, ?, ?, ?, '00000000', 'mobile', '00000000', NOW())
                        """.trimIndent()

                        preparedStatement = mysqlConnection.prepareStatement(insertQuery)
                        preparedStatement.setString(1, resultSet.getString("depart"))
                        preparedStatement.setString(2, resultSet.getString("part"))
                        preparedStatement.setString(3, resultSet.getString("floor"))
                        preparedStatement.setString(4, resultSet.getString("district"))
                        preparedStatement.setString(5, resultSet.getString("at"))
                        preparedStatement.setString(6, resultSet.getString("model"))
                        preparedStatement.setString(7, secondPart)

                        preparedStatement.executeUpdate()
                        result = "New record inserted for modelnumber: $secondPart"
                    } else {
                        result = "No record found in mainsheet for modelnumber: $secondPart"
                    }
                } else {
                    result = "No insertion needed, recent check_time is within 10 minutes"
                }
            } else {
                result = "First part of QR code not found in MSSQL"
            }

        } catch (e: SQLException) {
            e.printStackTrace()
            result = "SQL error: ${e.message}"
        } catch (e: ClassNotFoundException) {
            e.printStackTrace()
            result = "JDBC Driver not found: ${e.message}"
        } catch (e: Exception) {
            e.printStackTrace()
            result = "Unexpected error: ${e.message}"
        } finally {
            try {
                resultSet?.close()
                preparedStatement?.close()
                mssqlConnection?.close()
                mysqlConnection?.close()
            } catch (e: SQLException) {
                e.printStackTrace()
            }
            isExecuting = false // 작업 완료 후 플래그를 다시 false로 설정
        }

        return@withContext result
    }
}
주요 사항:
QR 코드 분리:

qrCode를 ^로 분리하여 firstPart와 secondPart를 추출합니다.
MSSQL에서 첫 번째 부분 확인:

QRCodeData 테이블에서 firstPart가 존재하는지 확인합니다. 존재하지 않으면, 추가 작업을 중단하고 결과를 반환합니다.
MySQL에서 두 번째 부분 삽입:

firstPart가 MSSQL에서 존재할 때, secondPart를 MySQL의 management_mobile_checksheet 테이블에 삽입합니다.
최근 10분 이내의 기록을 확인하고, 없을 때만 삽입합니다.
데이터 가져오기 및 삽입:

smd.management_mobile_mainseet 테이블에서 필요한 데이터를 가져와 management_mobile_checksheet 테이블에 삽입합니다.
에러 처리:

다양한 예외를 처리하여 예상치 못한 오류를 잡아냅니다.
이 코드가 요청하신 작업을 수행할 수 있을 것입니다. 추가적인 질문이 있거나 더 도움이 필요하시면 언제든지 말씀해 주세요.