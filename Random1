죄송합니다. 표현이 혼란스러웠습니다. 가져오기만 하는 경우와 가져와서 덮어쓰는 경우에 대해 두 가지 예시를 제공드리겠습니다.

가져오기만 하는 경우:
csharp
Copy code
string rundate = string.Empty;
using (SqlConnection connection = new SqlConnection(connectionString))
{
    connection.Open();
    SqlCommand command = new SqlCommand("SELECT CONVERT(VARCHAR(10), rundate, 120) AS rundate FROM Table_runlog;", connection);
    rundate = (string)command.ExecuteScalar();
}
위의 코드는 SqlConnection을 열고, SqlCommand를 사용하여 SELECT 쿼리를 실행한 후 ExecuteScalar() 메서드를 호출하여 단일 값을 가져옵니다. rundate 변수에는 rundate 필드의 값이 문자열로 할당됩니다.

가져와서 덮어쓰는 경우:
csharp
Copy code
using (SqlConnection connection = new SqlConnection(connectionString))
{
    connection.Open();
    SqlCommand command = new SqlCommand("SELECT CONVERT(VARCHAR(10), rundate, 120) AS rundate FROM Table_runlog;", connection);
    string rundate = (string)command.ExecuteScalar();
    // 다른 변수에 새로운 값을 할당하는 등의 작업 수행
}
위의 코드는 SqlConnection을 열고, SqlCommand를 사용하여 SELECT 쿼리를 실행한 후 ExecuteScalar() 메서드를 호출하여 단일 값을 가져옵니다. rundate 변수에는 rundate 필드의 값이 문자열로 할당됩니다. 그 후에는 가져온 값을 다른 변수에 할당하거나 다른 작업을 수행할 수 있습니다.





User
아니 update구문은
ChatGPT
알겠습니다. Table_runlog의 rundate 값을 업데이트하는 코드 예시는 다음과 같습니다:

csharp
Copy code
using (SqlConnection connection = new SqlConnection(connectionString))
{
    connection.Open();
    string newRundate = "2023-07-06"; // 업데이트할 새로운 rundate 값
    SqlCommand command = new SqlCommand("UPDATE Table_runlog SET rundate = @newRundate;", connection);
    command.Parameters.AddWithValue("@newRundate", newRundate);
    int rowsAffected = command.ExecuteNonQuery();
    // 업데이트된 행의 수(rowsAffected)를 확인하거나 처리합니다.
}