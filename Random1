s 차트 관련 네임스페이스가 올바르게 임포트되었는지 확인해야 합니다.

다음은 DevExpress 차트를 사용하는 경우 필요한 네임스페이스를 추가하는 방법을 포함한 수정된 코드입니다.

차트 생성 및 데이터 바인딩
csharp
Copy code
using DevExpress.Xpf.Charts; // DevExpress 차트 관련 네임스페이스
using System.Linq;
using System.Collections.ObjectModel;

// 다른 필요한 네임스페이스 추가

void CreateCharts()
{
    var data = FetchDataFromDatabase(); // 데이터베이스에서 데이터 가져오기
    var lines = data.Select(d => d.Line).Distinct();

    foreach (var line in lines)
    {
        var chart = new ChartControl();
        var diagram = new XYDiagram2D();
        chart.Diagram = diagram;
        MainStackPanel.Children.Add(chart);

        foreach (var type in new[] { "T", "B" })
        {
            var seriesData = data.Where(d => d.Line == line && d.Type == type).ToList();
            if (seriesData.Count == 0) continue;

            var series = new LineSeries2D
            {
                DisplayName = type,
                ArgumentScaleType = ScaleType.DateTime,
                ArgumentDataMember = "FileTime",
                ValueDataMember = "CTValue",
                DataSource = seriesData
            };

            series.ToolTipPointPattern = "Model: {Model}\nDivision: {Division}\nMask Number: {MaskNumber}\nRev: {Rev}\nCT: {CTValue}\nFile Time: {FileTime}";
            diagram.Series.Add(series);
        }

        ConfigureAxis(diagram);
    }
}

void ConfigureAxis(XYDiagram2D diagram)
{
    var axisX = new AxisX2D();
    axisX.DateTimeScaleOptions = new DateTimeScaleOptions
    {
        ScaleMode = ScaleMode.Continuous,
        AutoGrid = false,
        GridSpacing = 1
    };
    axisX.Label = new AxisLabel { ResolveOverlappingOptions = new ResolveAxisLabelOverlappingOptions { AllowStagger = true } };
    diagram.AxisX = axisX;

    var axisY = new AxisY2D();
    diagram.AxisY = axisY;
}
DateTimeScaleOptions 클래스는 DevExpress 차트 라이브러리의 일부이며, DevExpress.Xpf.Charts 네임스페이스 안에 있습니다. 해당 네임스페이스를 임포트했음에도 불구하고 문제가 지속된다면, 차트 관련 DevExpress 라이브러리가 프로젝트에 올바르게 참조되었는지 확인해야 합니다. 프로젝트의 참조 설정을 검토하고 필요한 DevExpress 라이브