기억나니?거기에 적용해야되
ChatGPT

죄송합니다. 앞서 설명한 코드와 혼동이 있었습니다. anonymous type(var requestData = new { ... })의 경우에는 프로퍼티를 동적으로 추가하거나 변경할 수 없기 때문에 딕셔너리를 직접 사용할 수 없습니다. 대신에 ExpandoObject를 사용하여 동적으로 프로퍼티를 추가하고 관리할 수 있습니다.

아래의 코드는 ExpandoObject를 사용하여 주소와 송신 방법을 requestData에 적용하는 예시입니다.

csharp

private void btnSend_Click(object sender, EventArgs e)
{
    dynamic requestData = new ExpandoObject();

    // 주소와 송신 방법을 관리하는 딕셔너리 생성
    Dictionary<string, string> recipients = new Dictionary<string, string>();

    // GridView에서 주소와 송신 방법 값을 추출하여 딕셔너리에 저장
    foreach (GridViewRow row in gridView1.Rows)
    {
        if (row.RowType == DataControlRowType.DataRow)
        {
            string address = ((TextBox)row.FindControl("txtAddress")).Text;
            string method = ((TextBox)row.FindControl("txtMethod")).Text;

            recipients.Add(address, method);
        }
    }

    // requestData에 주소와 송신 방법을 적용
    requestData.Recipients = recipients;

    // 나머지 requestData 프로퍼티 설정
    requestData.Subject = "메일 제목";
    requestData.Contents = "메일 내용";

    // API 호출 및 나머지 로직
    // ...
}

위의 코드에서는 requestData를 ExpandoObject로 선언하여 동적으로 프로퍼티를 추가합니다. 그리고 주소와 송신 방법을 관리하는 recipients 딕셔너리를 생성하여 값을 저장합니다. 마지막으로 requestData.Recipients에 딕셔너리를 할당하여 requestData 객체에 주소와 송신 방법을 적용합니다.

API 호출 및 나머지 로직은 해당 프로퍼티에 맞게 설정하시면 됩니다.
User
recipents= recipientEmailAddresses.ConvertAll(emailAddress => new { emailAddress, recipentType="TO" }) 이부분을 바꿔야해
ChatGPT

주어진 코드에서 recipientEmailAddresses 리스트를 ConvertAll 메서드를 사용하여 새로운 익명 객체의 리스트로 변환하고, 해당 객체에 emailAddress와 고정된 recipientType 값을 설정하려면 다음과 같이 변경할 수 있습니다.

csharp

recipients = recipientEmailAddresses.ConvertAll(emailAddress => new { EmailAddress = emailAddress, RecipientType = "TO" });

위의 코드에서 ConvertAll 메서드를 사용하여 recipientEmailAddresses 리스트의 각 항목을 익명 객체로 변환합니다. 익명 객체의 프로퍼티 이름인 EmailAddress와 RecipientType을 변경하여 원하는 형식으로 객체를 생성합니다. 이후 recipients 변수에 해당 리스트를 할당합니다.

예를 들어, recipientEmailAddresses 리스트에 ["email1@example.com", "email2@example.com"] 값이 포함되어 있다면, 위의 코드는 다음과 같이 객체 리스트를 생성합니다.

csharp

[
    { EmailAddress = "email1@example.com", RecipientType = "TO" },
    { EmailAddress = "email2@example.com", RecipientType = "TO" }
]

이렇게 변경된 코드를 사용하여 필요한 위치에서 recipients 객체 리스트를 사용하시면 됩니다.
