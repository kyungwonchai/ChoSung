import os
import csv
import re
from datetime import datetime

# 디렉토리 경로 및 출력 CSV 파일 경로 설정
directory_path = 'c:/abc/'
output_csv_path = 'output.csv'

# 정규 표현식 패턴 설정
time_pattern = r'\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}\.\d{3}'  # 날짜와 시간 추출 패턴
key_pattern = r'고유키:\w+'  # 고유키 추출 패턴
send_value_pattern = r'보낸 값:.*?\*\*'  # 보낸 값 추출 패턴
recv_value_pattern = r'받은 값:.*?\*\*'  # 받은 값 추출 패턴

# CSV로 저장할 데이터를 담을 리스트
data_for_csv = []

# 디렉토리 내 모든 파일 순회
for filename in os.listdir(directory_path):
    # "detailCMD"가 포함된 .txt 파일만 처리
    if filename.endswith('.txt') and 'detailCMD' in filename:
        file_path = os.path.join(directory_path, filename)
        
        with open(file_path, 'r', encoding='utf-8') as file:
            lines = file.readlines()  # 파일의 모든 줄을 읽음
            i = 0
            
            # 각 줄을 순회하면서 "보낸 값"과 "받은 값" 쌍 찾기
            while i < len(lines):
                # "보낸 값" 줄을 찾음
                send_match = re.search(send_value_pattern, lines[i])
                
                if send_match:
                    # "보낸 값" 줄에서 시간, 고유키, 보낸 값 추출
                    time_match = re.search(time_pattern, lines[i])
                    key_match = re.search(key_pattern, lines[i])
                    
                    if time_match and key_match:
                        # 시간과 고유키 추출
                        time_str = time_match.group()
                        unique_key = key_match.group().split(':')[1]
                        send_value = send_match.group().split(':')[-1].strip()

                        # 다음 줄에서 "받은 값" 추출
                        recv_match = re.search(recv_value_pattern, lines[i + 1]) if i + 1 < len(lines) else None
                        
                        if recv_match:
                            recv_value = recv_match.group().split(':')[-1].strip()
                            
                            # 시간 형식을 "yyMMdd HHmmss"로 변환
                            original_time = datetime.strptime(time_str, '%Y-%m-%d %H:%M:%S.%f')
                            formatted_time = original_time.strftime('%y%m%d %H%M%S')

                            # CSV에 추가할 데이터 리스트에 삽입
                            data_for_csv.append([formatted_time, unique_key, send_value, recv_value])
                    
                    # "보낸 값" 다음 줄로 이동
                    i += 2
                else:
                    # "보낸 값"이 없는 경우 다음 줄로 이동
                    i += 1

# 추출한 데이터를 CSV로 저장
with open(output_csv_path, 'w', newline='', encoding='utf-8') as csvfile:
    csv_writer = csv.writer(csvfile)
    csv_writer.writerow(['Time', 'Unique Key', 'Sent Value', 'Received Value'])
    csv_writer.writerows(data_for_csv)
