록 코드를 수정해야 합니다. 이 경우, 각 셀의 값을 확인하여 '/'와 '(' 문자를 기준으로 날짜를 파싱하고, 해당 날짜가 이번 주에 해당하는지를 확인합니다.

아래는 수정된 코드입니다:

vba

Sub UpdateWeeklyPlanColor()
    Dim fd As FileDialog
    Dim filePath As String
    Dim wb As Workbook
    Dim ws As Worksheet
    Dim cell As Range
    Dim startDate As Date
    Dim endDate As Date
    Dim cellDate As Date
    Dim dateStr As String
    Dim dateParts() As String

    ' 파일 선택 대화상자 생성
    Set fd = Application.FileDialog(msoFileDialogFilePicker)
    
    ' 파일 선택 대화상자 표시
    If fd.Show = -1 Then
        filePath = fd.SelectedItems(1)
    Else
        Exit Sub
    End If
    
    ' 선택된 파일 열기
    Set wb = Workbooks.Open(filePath)
    Set ws = wb.Sheets("당주계획")

    ' 이번 주 시작일과 종료일 계산
    startDate = Date - Weekday(Date, vbMonday) + 1
    endDate = startDate + 6

    ' 2행의 모든 셀을 순회
    For Each cell In ws.Rows(2).Cells
        dateStr = cell.Value

        ' 날짜 형식 확인 (예: "11/1 (월)")
        If InStr(dateStr, "/") > 0 And InStr(dateStr, "(") > 0 Then
            ' 날짜 부분만 추출
            dateStr = Left(dateStr, InStr(dateStr, " ") - 1)
            dateParts = Split(dateStr, "/")
            
            If UBound(dateParts) = 1 Then
                ' 날짜 객체 생성
                cellDate = DateSerial(Year(Date), dateParts(0), dateParts(1))
                
                ' 셀의 날짜가 이번 주에 해당하는지 확인
                If cellDate >= startDate And cellDate <= endDate Then
                    ' 배경색을 노랑색으로 변경
                    ws.Columns(cell.Column).Interior.Color = vbYellow
                End If
            End If
        End If
    Next cell

    ' 파일을 닫지 않고 열어둔 상태로 둠
End Sub

이 코드는 각 셀에서 날짜 문자열을 추출하고, '/'와 ' ' (공백)을 사용하여 날짜를 파싱합니다. 그런 다음, 해당 날짜가 이번 주에 속하는지 확인하고, 맞다면 해