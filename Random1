w 객체 자체가 변경되지 않는 한, Row.모델과 같은 경로를 가진 바인딩이 업데이트되지 않는 것은 WPF 바인딩의 일반적인 동작입니다. Row.모델 바인딩이 업데이트되기 위해서는, Row 객체 내의 모델 속성이 변경되어야 하며, 해당 속성이 INotifyPropertyChanged 인터페이스를 구현하여 변경 사항을 알려야 합니다.

해결 방법
INotifyPropertyChanged 구현: 모델 객체가 INotifyPropertyChanged 인터페이스를 구현하고 있는지 확인합니다. 이 인터페이스는 속성이 변경될 때 UI에 알림을 전송하는 데 필요합니다.

속성 변경 알림: 모델 객체 내에서 속성이 변경될 때마다 PropertyChanged 이벤트를 발생시켜야 합니다. 예를 들면:

csharp
Copy code
public class Model : INotifyPropertyChanged
{
    private string _property;
    public string Property
    {
        get { return _property; }
        set
        {
            if (_property != value)
            {
                _property = value;
                OnPropertyChanged(nameof(Property));
            }
        }
    }

    public event PropertyChangedEventHandler PropertyChanged;
    protected virtual void OnPropertyChanged(string propertyName)
    {
        PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
    }
}
바인딩 확인: XAML에서 Row.모델로 바인딩된 경로가 올바른지 확인합니다. UpdateSourceTrigger가 적절히 설정되어 있는지도 확인하세요.

셀 편집 반영: 셀 편집 이벤트(CellValueChanged, CellValueChanging 등)에서 모델 속성을 업데이트하는 로직이 있는지 확인하세요. 셀 편집이 모델 객체의 속성을 올바르게 업데이트하고 있는지 확인이 필요합니다.

강제 업데이트: 때때로 UI의 강제 업데이트가 필요할 수 있습니다. Dispatcher를 사용하거나 뷰의 RefreshData() 메서드를 호출하여 UI를 강제로 업데이트할 수 있습니다.

이러한 점검을 통해 바인딩이 적절히 업데이트되지 않는 문제를 해결할 수 있을 것입니다. 만약 이러한 접근 방법으로도 문제가 해결되지 않는다면, 구체적인 바인딩 구문과 모델 클래스의 구현을 다시 검토해야 할 수 