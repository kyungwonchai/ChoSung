이 오류는 diff_minutes가 None일 때 비교 연산을 수행하려고 할 때 발생합니다. 이를 방지하기 위해, HTML 템플릿에서 diff_minutes가 None인지 확인한 후 스타일을 적용하도록 수정할 수 있습니다.

다음은 diff_minutes가 None일 때를 처리하는 app.py와 index.html의 수정된 예시입니다.

수정된 app.py 코드
python
코드 복사
from flask import Flask, render_template, jsonify
import pymssql
import datetime

app = Flask(__name__)

# MSSQL 데이터베이스 연결 설정
server = 'YOUR_SERVER'
database = 'YOUR_DATABASE'
username = 'YOUR_USERNAME'
password = 'YOUR_PASSWORD'

def get_data():
    conn = pymssql.connect(server=server, user=username, password=password, database=database)
    cursor = conn.cursor()
    query = '''
    SELECT CLine, CMachine, CPCBTEMP, CMASKTEMP, CHUMID, CSORDER, CPAPER, CSOLVENT, CFILETIME
    FROM Table_MaskCleaning2
    '''
    cursor.execute(query)
    rows = cursor.fetchall()
    conn.close()

    data = []
    now = datetime.datetime.now()

    for row in rows:
        CLine, CMachine, CPCBTEMP, CMASKTEMP, CHUMID, CSORDER, CPAPER, CSOLVENT, CFILETIME = row
        if CFILETIME is not None:
            diff_minutes = int((now - CFILETIME).total_seconds() / 60)
        else:
            diff_minutes = None
        data.append({
            'CLine': CLine,
            'CMachine': CMachine,
            'CPCBTEMP': CPCBTEMP,
            'CMASKTEMP': CMASKTEMP,
            'CHUMID': CHUMID,
            'CSORDER': CSORDER,
            'CPAPER': CPAPER,
            'CSOLVENT': CSOLVENT,
            'CFILETIME': CFILETIME,
            'DIFF': diff_minutes
        })

    return data

@app.route('/')
def index():
    data = get_data()
    return render_template('index.html', data=data)

@app.route('/refresh', methods=['GET'])
def refresh():
    data = get_data()
    return jsonify(data)

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000, debug=True)
수정된 index.html 파일
html
코드 복사
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Table Mask Cleaning</title>
    <style>
        table {
            width: 100%;
            border-collapse: collapse;
        }
        th, td {
            border: 1px solid black;
            padding: 8px;
            text-align: left;
        }
        .yellow {
            background-color: yellow;
        }
        .orange {
            background-color: orange;
        }
    </style>
</head>
<body>
    <h1>Table Mask Cleaning</h1>
    <button onclick="refreshData()">Refresh</button>
    <table>
        <thead>
            <tr>
                <th>CLine</th>
                <th>CMachine</th>
                <th>CPCBTEMP</th>
                <th>CMASKTEMP</th>
                <th>CHUMID</th>
                <th>CSORDER</th>
                <th>CPAPER</th>
                <th>CSOLVENT</th>
                <th>CFILETIME</th>
                <th>DIFF</th>
            </tr>
        </thead>
        <tbody id="table-body">
            {% for row in data %}
            <tr class="{% if row.DIFF is not none %}{{ 'orange' if row.DIFF > 480 else 'yellow' if row.DIFF > 10 else '' }}{% endif %}">
                <td>{{ row.CLine }}</td>
                <td>{{ row.CMachine }}</td>
                <td>{{ row.CPCBTEMP }}</td>
                <td>{{ row.CMASKTEMP }}</td>
                <td>{{ row.CHUMID }}</td>
                <td>{{ row.CSORDER }}</td>
                <td>{{ row.CPAPER }}</td>
                <td>{{ row.CSOLVENT }}</td>
                <td>{{ row.CFILETIME }}</td>
                <td>{{ row.DIFF }}</td>
            </tr>
            {% endfor %}
        </tbody>
    </table>
    <script>
        function refreshData() {
            fetch('/refresh')
                .then(response => response.json())
                .then(data => {
                    const tableBody = document.getElementById('table-body');
                    tableBody.innerHTML = '';
                    data.forEach(row => {
                        const tr = document.createElement('tr');
                        let className = '';
                        if (row.DIFF !== null) {
                            if (row.DIFF > 480) {
                                className = 'orange';
                            } else if (row.DIFF > 10) {
                                className = 'yellow';
                            }
                        }
                        tr.className = className;
                        tr.innerHTML = `
                            <td>${row.CLine}</td>
                            <td>${row.CMachine}</td>
                            <td>${row.CPCBTEMP}</td>
                            <td>${row.CMASKTEMP}</td>
                            <td>${row.CHUMID}</td>
                            <td>${row.CSORDER}</td>
                            <td>${row.CPAPER}</td>
                            <td>${row.CSOLVENT}</td>
                            <td>${row.CFILETIME}</td>
                            <td>${row.DIFF}</td>
                        `;
                        tableBody.appendChild(tr);
                    });
                });
        }
    </script>
</body>
</html>
변경된 부분 설명
HTML 템플릿에서 None 체크:

row.DIFF가 None인 경우, 조건부 클래스 적용을 피합니다.
html
코드 복사
<tr class="{% if row.DIFF is not none %}{{ 'orange' if row.DIFF > 480 else 'yellow' if row.DIFF > 10 else '' }}{% endif %}">
JavaScript에서 None 체크:

row.DIFF가 null인지 확인하고, 클래스 이름을 설정합니다.
javascript
코드 복사
if (row.DIFF !== null) {
    if (row.DIFF > 480) {
        className = 'orange';
    } else if (row.DIFF > 10) {
        className = 'yellow';
    }
}
이제 diff_minutes가 None일 때 발생하는 오류를 방지하고, 적절하게 행 색상을 설정할 수 있습니다. 이 코드를 사용하여 서비스를 다시 실행해 보세요.