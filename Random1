ssql.OperationalError: Statement not executed or executed statement has no result set 오류는 pymssql을 통해 MSSQL 서버에 쿼리를 보낼 때, 실행된 SQL 구문이 결과 집합(Result Set)을 반환하지 않아서 발생하는 오류입니다. 이 오류는 주로 다음과 같은 상황에서 발생할 수 있습니다.

1. SELECT 쿼리가 아닌 경우
INSERT, UPDATE, DELETE와 같은 데이터 변경 쿼리를 실행했지만, fetchall() 또는 fetchone()을 사용하여 결과를 가져오려고 하면 해당 오류가 발생할 수 있습니다.

해결 방법: fetchall()이나 fetchone()를 호출할 필요 없이, 단순히 커밋을 실행하세요.

python
코드 복사
cursor = connection.cursor()
cursor.execute("INSERT INTO my_table (column1, column2) VALUES (value1, value2)")
connection.commit()  # INSERT 작업 후 commit 필요
2. SELECT 문 실행 후 커서가 결과를 반환하지 않을 때
올바른 SELECT 문을 실행했지만, 조건에 맞는 결과가 없으면 fetchall()이나 fetchone()을 호출했을 때 결과가 없다는 오류가 발생할 수 있습니다.

해결 방법: 결과가 있는지 먼저 확인한 후, fetchall() 또는 fetchone()을 사용하도록 하세요.

python
코드 복사
cursor.execute("SELECT * FROM my_table WHERE column1 = value1")
result = cursor.fetchone()  # 하나의 결과를 가져옴

if result is None:
    print("No results found.")
else:
    print(result)
3. SET NOCOUNT ON이 사용된 경우
MSSQL에서는 SET NOCOUNT ON을 사용하여 쿼리가 영향을 미친 행 수를 반환하지 않게 할 수 있습니다. 이 설정이 활성화된 경우, pymssql이 결과 집합이 없다고 인식할 수 있습니다.

해결 방법: 쿼리 시작 부분에서 SET NOCOUNT OFF를 설정하여 영향을 미친 행 수를 확인할 수 있게 합니다.

python
코드 복사
cursor.execute("SET NOCOUNT OFF; SELECT * FROM my_table")
result = cursor.fetchall()
4. Stored Procedure 사용 시
저장 프로시저가 SELECT 결과 집합을 반환하지 않는 경우에도 같은 오류가 발생할 수 있습니다.
해결 방법: 저장 프로시저에서 명시적으로 SELECT 결과를 반환하거나, 저장 프로시저의 출력 값으로 설정할 수 있는지 확인하세요.
5. 트랜잭션 블록 문제
트랜잭션 블록 내에서 일부 명령어는 커밋하기 전까지 pymssql에 결과를 반환하지 않을 수 있습니다.