예를 들어, IValueConverter를 사용하여 권한을 체크하는 컨버터를 만들 수 있습니다:

csharp

public class PermissionToEnabledConverter : IValueConverter
{
    public object Convert(object value, Type targetType, object parameter, CultureInfo culture)
    {
        if (value == null || string.IsNullOrEmpty(value.ToString()))
        {
            return false;
        }
        
        if (value.ToString() == "abc")
        {
            return true;
        }
        
        return false;
    }

    public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)
    {
        throw new NotImplementedException();
    }
}

이렇게 만든 후 App.xaml에 이 컨버터를 등록합니다:

xaml

<Application.Resources>
    <ResourceDictionary>
        <local:PermissionToEnabledConverter x:Key="PermissionToEnabled"/>
    </ResourceDictionary>
</Application.Resources>

마지막으로 버튼의 IsEnabled 속성을 바인딩하고 컨버터를 적용합니다:

xaml

<Button Content="My Button"
        IsEnabled="{Binding Path=GlobalPermission, Converter={StaticResource PermissionToEnabled}}"/>

이 방식을 사용하면 GlobalPermission 값이 변경될 때마다 자동으로 버튼의 활성화 상태도 업데이트됩니다. 이 코드는 C#과 W