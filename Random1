erver 2014 데이터베이스에서 데이터를 가져오는 방법을 설명하겠습니다. DevExpress WPF Chart Control을 사용해 차트를 만들고, MouseOver 이벤트를 통해 툴팁을 표시하게 됩니다. 먼저, 필요한 데이터를 로드하는 방법과 차트를 설정하는 기본적인 절차를 설명하겠습니다.

SQL Server 연결: System.Data.SqlClient를 사용하여 SQL Server에 연결합니다.
데이터 로드: SQL 쿼리를 실행하여 필요한 데이터를 가져옵니다. 여기서는 파일 시간 컬럼과 CT 컬럼을 사용합니다.
DevExpress Chart 설정: DevExpress WPF Chart Control을 사용하여 차트를 만들고, 데이터를 바인딩합니다.
툴팁 설정: 각 포인트에 마우스를 올리면 툴팁에 모델, 구분, MASK 번호, REV 정보, 파일 시간을 표시합니다.
다음은 이 과정을 구현하는 대략적인 예시 코드입니다. 이 코드는 시작점으로 사용할 수 있으며, 프로젝트의 구체적인 요구사항에 맞게 조정해야 합니다.

SQL 연결 및 데이터 로드
csharp
Copy code
using System.Data.SqlClient;
using System.Data;

// SQL Server 연결
string connectionString = "Your Connection String Here";
SqlConnection connection = new SqlConnection(connectionString);

// SQL 쿼리
string query = "SELECT 파일시간, CT, 모델, 구분, MASK번호, REV FROM YourTable ORDER BY 파일시간";

// 데이터 어댑터 및 데이터 테이블
SqlDataAdapter dataAdapter = new SqlDataAdapter(query, connection);
DataTable dataTable = new DataTable();
dataAdapter.Fill(dataTable);

// 이제 dataTable에 필요한 데이터가 들어있습니다.
DevExpress Chart 설정
XAML:

xml
Copy code
<Window xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/charts">
    <!-- Chart Control 정의 -->
    <dxc:ChartControl x:Name="realTimeChart">
        <dxc:XYDiagram2D>
            <dxc:LineSeries2D DisplayName="CT" ArgumentDataMember="파일시간" ValueDataMember="CT">
                <!-- 툴팁 설정 -->
                <dxc:LineSeries2D.ToolTipPointPattern>
                    "Model: {Model}\n구분: {구분}\nMASK 번호: {MASK번호}\nREV: {REV}\n파일 시간: {파일시간}"
                </dxc:LineSeries2D.ToolTipPointPattern>
            </dxc:LineSeries2D>
        </dxc:XYDiagram2D>
    </dxc:ChartControl>
</Window>
C#:

csharp
Copy code
// 데이터 바인딩
realTimeChart.DataSource = dataTable;
이 코드 스니펫은 기본적인 차트 설정을 보여줍니다. 데이터 소스를 바인딩하고, 툴팁 패턴을 설정합니다. 툴팁 패턴에서는 {} 내부에 데이터 테이블의 컬럼 이름을 사용하여 해당 값들을 표시합니다.

프로젝트의 구체적인 요구사항에 따라 이 코드를 조정하거나 추가 기능을 구현해야 할 수도 있습니다. 예를 들어, 실시간으로 데이터를 업데이트하거나 특정 이벤트에 대한 처리 등이 필요할 수 있습니다. DevExpres