VM(Node Version Manager)은 여러 버전의 Node.js를 쉽게 관리하고 전환할 수 있는 도구입니다. ~/.nvm/versions/node 디렉토리에는 NVM을 통해 설치된 Node.js 버전들이 저장됩니다. 특정 버전을 삭제하고 싶다면 NVM의 uninstall 명령어를 사용해야 합니다.

1. 설치된 Node.js 버전 확인
먼저, NVM을 사용하여 현재 설치된 Node.js 버전을 확인합니다.

bash
코드 복사
nvm ls
이 명령어는 NVM을 통해 설치된 모든 Node.js 버전과 현재 활성화된 버전을 보여줍니다.

2. 특정 Node.js 버전 제거
nvm uninstall 명령어를 사용하여 특정 버전의 Node.js를 제거할 수 있습니다.

예를 들어, v16.18.1 버전을 제거하려면:

bash
코드 복사
nvm uninstall 16.18.1
또는, 16 버전의 전체 제거를 원한다면:

bash
코드 복사
nvm uninstall 16
이 명령어를 실행하면 NVM이 해당 버전을 제거합니다.

3. 기본 Node.js 버전 설정
Node.js의 기본 버전을 설정하여, 터미널을 열 때마다 항상 특정 버전이 활성화되도록 할 수 있습니다. 예를 들어, v20.x.x 버전을 기본으로 설정하려면:

bash
코드 복사
nvm alias default 20
이 명령어는 v20.x.x 버전을 기본으로 설정합니다. 다음에 터미널을 열 때 이 버전이 자동으로 활성화됩니다.

4. 사용 중인 Node.js 버전 변경
Node.js의 버전을 변경하려면 다음 명령어를 사용하세요:

bash
코드 복사
nvm use 20
이 명령어는 현재 터미널 세션에서 v20.x.x 버전을 활성화합니다.

요약
NVM으로 설치된 Node.js 버전 확인: nvm ls 명령어를 사용하여 설치된 모든 버전을 확인합니다.
특정 버전 제거: nvm uninstall <version> 명령어를 사용하여 특정 Node.js 버전을 제거합니다.
기본 Node.js 버전 설정: nvm alias default <version> 명령어를 사용하여 기본 Node.js 버전을 설정합니다.
Node.js 버전 변경: nvm use <version> 명령어를 사용하여 사용 중인 Node.js 버전을 변경합니다.
이 방법으로 특정 버전을 제거하고, 원하는 Node.js 버전을 설정할 수 있습니다. NVM은 여러 Node.js 버전을 쉽게 관리할 수 있도록 도와주는 도구이므로, 이를 통해 효율적으로 버전을 관리할 수 있습