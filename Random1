네, 그럼요! 지금 터미널에서 node server1.js로 실행하고 있는 바로 그 작업을 pm2로 전환하는 것은 아주 간단하고 올바른 방법입니다.

아래 순서대로 따라 하시면 바로 적용할 수 있습니다.

## 1단계: 현재 실행 중인 Node 서버 중지하기
먼저, node server1.js를 실행하고 있는 터미널 창에서 Ctrl + C 키를 눌러 현재 수동으로 실행 중인 서버를 완전히 종료합니다.

## 2단계: pm2로 server1.js 실행하기
server1.js 파일이 있는 바로 그 폴더에서 아래 명령어를 입력하세요.

--name 옵션으로 관리하기 쉬운 별명을 꼭 지정해 주는 것이 좋습니다. 여기서는 my-server1이라는 이름을 사용하겠습니다.

Bash

pm2 start server1.js --name my-server1
실행 결과 예시:

Bash

[PM2] Starting /home/ubuntu/your-project/server1.js in fork_mode (1 instance)
[PM2] Done.
┌────┬────────────────┬──────────┬──────┬───────────┬──────────┬──────────┐
│ id │ name           │ mode     │ pid  │ status    │ restart  │ uptime   │
├────┼────────────────┼──────────┼──────┼───────────┼──────────┼──────────┤
│ 0  │ my-server1     │ fork     │ 9876 │ online    │ 0        │ 0s       │
└────┴────────────────┴──────────┴──────┴───────────┴──────────┴──────────┘
이제 my-server1이라는 이름으로 server1.js가 백그라운드에서 실행되기 시작했습니다. 터미널 창을 닫아도 서버는 계속 동작합니다.

## 3단계: 앞으로 자주 사용할 필수 명령어
이제 pm2에 등록했으니 아래 명령어들로 서버를 쉽게 관리할 수 있습니다.

실시간 로그(에러) 확인 (가장 중요!)

Bash

pm2 log my-server1
서버 잠시 중지

Bash

pm2 stop my-server1
서버 재시작 (코드 수정 후)

Bash

pm2 restart my-server1
pm2 목록에서 완전히 삭제

Bash

pm2 delete my-server1
## 4단계: (필수) 서버 재부팅 시 자동 실행 설정
이 설정을 해두지 않으면 우분투 서버를 재부팅했을 때 pm2가 자동으로 시작되지 않습니다. 최초 한 번만 설정하면 됩니다.

현재 실행 중인 작업 목록 저장

Bash

pm2 save
부팅 시 자동 실행 스크립트 생성

Bash

pm2 startup
위 명령어를 실행하면 sudo env ... 로 시작하는 명령어가 화면에 나타납니다. 그 명령어를 그대로 복사해서 터미널에 한 번 더 붙여넣고 실행해 주면 모든 설정이 끝납니다.