열이 DateTime 형식으로 변환되지 않는 문제를 해결하기 위해, DateTime.Parse 대신 DateTime.TryParseExact를 사용하여 지정된 형식(yyyyMMdd HH:mm:ss)으로 날짜를 파싱하도록 수정하겠습니다.

다음은 수정된 GetNewRows 함수입니다.

수정된 GetNewRows 함수
csharp
코드 복사
using System.Diagnostics;
using System.Globalization;

public List<Dictionary<string, object>> GetNewRows(string rootPath)
{
    var newRows = new List<Dictionary<string, object>>();
    var csvFiles = Directory.GetFiles(rootPath, "*.csv", SearchOption.AllDirectories);

    foreach (var file in csvFiles)
    {
        using (var reader = new StreamReader(new FileStream(file, FileMode.Open, FileAccess.Read, FileShare.ReadWrite)))
        {
            reader.ReadLine(); // 첫 번째 행(헤더) 무시
            while (!reader.EndOfStream)
            {
                var values = reader.ReadLine()?.Split(',');
                if (values == null || values.Length < 4) continue;

                // 디버그 출력: 현재 처리 중인 행의 값을 출력
                Debug.WriteLine($"Processing Row: {string.Join(", ", values)}");

                // InspectionTime 문자열을 지정된 형식으로 파싱
                if (!DateTime.TryParseExact(values[0], "yyyyMMdd HH:mm:ss", CultureInfo.InvariantCulture, DateTimeStyles.None, out var inspectionTime))
                {
                    Debug.WriteLine("Skipped Row: InspectionTime is not in the valid format (yyyyMMdd HH:mm:ss).");
                    continue;
                }

                // 4열이 숫자(정수 또는 실수)가 아니면 제외
                if (!decimal.TryParse(values[3], out _))
                {
                    Debug.WriteLine("Skipped Row: 4th column is not a valid number.");
                    continue;
                }

                var row = new Dictionary<string, object>
                {
                    ["InspectionTime"] = inspectionTime, // 파싱된 DateTime 값 사용
                    ["ModelName"] = values[1],
                    ["AlignResult"] = values[2],
                    ["MP1DATA"] = float.Parse(values[3]),
                    ["MP1RESULT"] = values[4],
                    ["MP2DATA"] = float.Parse(values[5]),
                    ["MP2RESULT"] = values[6],
                    ["MP3DATA"] = float.Parse(values[7]),
                    ["MP3RESULT"] = values[8],
                    ["MP4DATA"] = float.Parse(values[9]),
                    ["MP4RESULT"] = values[10],
                    ["ipname"] = _ipAddress // 현재 IP 추가
                };

                // InspectionTime 조건 검사
                if (inspectionTime > _lastUploadedTime)
                {
                    Debug.WriteLine("Added Row: Passed all checks.");
                    newRows.Add(row);
                }
                else
                {
                    Debug.WriteLine("Skipped Row: InspectionTime is not newer than the last uploaded time.");
                }
            }
        }
    }

    return newRows;
}
수정된 부분 설명
DateTime.TryParseExact 사용:

형식 문자열: "yyyyMMdd HH:mm:ss"
지정된 형식으로 문자열을 DateTime으로 변환.
변환 실패 시 디버그 출력: "Skipped Row: InspectionTime is not in the valid format (yyyyMMdd HH:mm:ss)."
CultureInfo.InvariantCulture:

날짜 형식을 문화권에 독립적으로 처리.
디버그 출력:

Processing Row: 현재 처리 중인 행의 데이터.
Skipped Row: 변환 실패 또는 조건 불충족 시 이유 출력.
Added Row: 조건 통과 후 데이터 추가 성공.
추가 예제
입력 CSV
plaintext
코드 복사
20250110 10:00:00,ModelA,Good,123.45,Result1,67.89,Result2,45.67,Result3,89.01,Result4
20250109 09:00:00,ModelB,Good,N/A,Result1,67.89,Result2,45.67,Result3,89.01,Result4
InvalidDate,ModelC,Good,123.45,Result1,67.89,Result2,45.67,Result3,89.01,Result4
디버그 출력
plaintext
코드 복사
Processing Row: 20250110 10:00:00, ModelA, Good, 123.45, Result1, 67.89, Result2, 45.67, Result3, 89.01, Result4
Added Row: Passed all checks.
Processing Row: 20250109 09:00:00, ModelB, Good, N/A, Result1, 67.89, Result2, 45.67, Result3, 89.01, Result4
Skipped Row: 4th column is not a valid number.
Processing Row: InvalidDate, ModelC, Good, 123.45, Result1, 67.89, Result2, 45.67, Result3, 89.01, Result4
Skipped Row: InspectionTime is not in the valid format (yyyyMMdd HH:mm:ss).
결과
InspectionTime이 지정된 형식(yyyyMMdd HH:mm:ss)으로 변환되지 않을 경우 해당 행을 스킵합니다.
4열이 숫자가 아닌 경우 스킵합니다.