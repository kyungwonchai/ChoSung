using DevExpress.XtraGrid.Views.Grid;
using DevExpress.XtraGrid.Columns;
using DevExpress.XtraEditors.Repository;
using DevExpress.XtraEditors.Controls;

private void AddButtonColumn()
{
    // 버튼 컬럼 생성
    GridColumn buttonColumn = new GridColumn();
    buttonColumn.Caption = "신청";
    buttonColumn.Name = "buttonColumn";
    buttonColumn.UnboundType = DevExpress.Data.UnboundColumnType.Object;
    gridView.Columns.Insert(0, buttonColumn);

    // 버튼 컬럼에 RepositoryItemButtonEdit 할당
    RepositoryItemButtonEdit repositoryItemButtonEdit = new RepositoryItemButtonEdit();
    repositoryItemButtonEdit.TextEditStyle = DevExpress.XtraEditors.Controls.TextEditStyles.HideTextEditor;
    repositoryItemButtonEdit.Buttons.Clear();
    repositoryItemButtonEdit.ButtonsStyle = DevExpress.XtraEditors.Controls.BorderStyles.NoBorder;
    repositoryItemButtonEdit.ButtonClick += RepositoryItemButtonEdit_ButtonClick;
    gridView.Columns["buttonColumn"].ColumnEdit = repositoryItemButtonEdit;

    // 각 행에 버튼 추가
    foreach (GridRow row in gridView.Rows)
    {
        row["buttonColumn"] = CreateButton("버튼1");
    }
}

private void RepositoryItemButtonEdit_ButtonClick(object sender, ButtonPressedEventArgs e)
{
    ButtonEdit buttonEdit = (ButtonEdit)sender;
    GridView gridView = (GridView)buttonEdit.Parent;
    int rowIndex = gridView.FocusedRowHandle;
    string productCode = gridView.GetRowCellValue(rowIndex, "품목코드").ToString();

    MessageBox.Show("선택된 품목 코드: " + productCode);
}

private Button CreateButton(string buttonText)
{
    Button button = new Button();
    button.Text = buttonText;
    return button;
}
