from flask import Flask, render_template, request
import pyodbc
import pandas as pd
from sklearn.metrics.pairwise import linear_kernel
from sklearn.feature_extraction.text import TfidfVectorizer
import urllib
import sqlalchemy as sa
from sqlalchemy import create_engine

app = Flask(__name__)
app.jinja_env.globals.update(zip=zip)

params = urllib.parse.quote_plus('DRIVER={ODBC Driver 17 for SQL Server};'
                                 'SERVER=YourSqlServer;'
                                 'DATABASE=YourDatabase;'
                                 'UID=YourUsername;'
                                 'PWD=YourPassword')

engine = create_engine("mssql+pyodbc:///?odbc_connect=%s" % params)

# Query를 이용하여 데이터 로드
query = "SELECT 업체PN, 부품코드, 업체명 FROM YourTable"
data = pd.read_sql(query, engine)

# TF-IDF Vectorizer와 데이터를 이용하여 TF-IDF Matrix 생성
tfidf = TfidfVectorizer(analyzer='word', ngram_range=(1, 3), min_df=0)
tfidf_matrix = tfidf.fit_transform(data['업체PN'])

def find_similar_parts(input_str, top_n=10):
    input_vec = tfidf.transform([input_str])
    cosine_similarities = linear_kernel(input_vec, tfidf_matrix).flatten()
    related_docs_indices = cosine_similarities.argsort()[:-top_n-1:-1]
    similarities = cosine_similarities[related_docs_indices]
    return data.iloc[related_docs_indices].values.tolist(), similarities.tolist()

@app.route('/', methods=['GET', 'POST'])
def index():
    if request.method == 'POST':
        input1 = request.form['part_code']
        similar_parts, similarities = find_similar_parts(input1)
        return render_template('index.html', part_code=input1, similar_parts=similar_parts, similarities=similarities)
    return render_template('index.html')

if __name__ == '__main__':
    app.run(debug=True)
