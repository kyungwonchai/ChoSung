의 완성된 전체 코드를 드리겠습니다. 각 줄마다 상세한 주석을 포함하여 제공하겠습니다.

MainWindow.xaml 전체 코드
xml
코드 복사
<Window x:Class="RouterFlowSync.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RouterFlowSync.Converters"
        mc:Ignorable="d"
        Title="RouterFlowSync" Height="600" Width="800">

    <Window.Resources>
        <!-- BoolToBrushConverter를 리소스로 등록하여 UI에서 상태를 시각적으로 표현하기 위해 사용합니다. -->
        <local:BoolToBrushConverter x:Key="BoolToBrushConverter"/>
    </Window.Resources>

    <Grid>
        <!-- 탭 컨트롤 영역: 여러 탭을 통해 다양한 기능을 제공합니다. -->
        <TabControl Name="MainTabControl" Margin="10" VerticalAlignment="Top">

            <!-- 첫 번째 탭: 마이야 -->
            <TabItem Header="마이야">
                <!-- StackPanel을 사용하여 탭의 내용을 수직으로 배치합니다. -->
                <StackPanel Margin="10">
                    <!-- 대시보드 제목 -->
                    <TextBlock Text="마이야 - 상태 대시보드" FontSize="20" FontWeight="Bold" HorizontalAlignment="Center" Margin="10"/>

                    <!-- 상태 표시를 위한 Grid 컨테이너 -->
                    <Grid>
                        <!-- Grid의 열 정의: 3개의 열을 균등하게 나눕니다. -->
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <!-- 라우터 설비 로그 수집 상태 표시 -->
                        <StackPanel Grid.Column="0" Margin="10" MouseDown="RouterLog_Click">
                            <!-- 전구 형태의 상태 표시 -->
                            <Ellipse Fill="{Binding IsRouterLogRunning, Converter={StaticResource BoolToBrushConverter}}" Width="50" Height="50" />
                            <!-- 라우터 설비 로그 텍스트 -->
                            <TextBlock Text="라우터 설비 로그" FontWeight="Bold"/>
                            <!-- 최근 동작 시간 표시 -->
                            <TextBlock Text="{Binding LastRouterLogTime, StringFormat='최근 동작 시간: {0:HH:mm:ss}'}"/>
                        </StackPanel>

                        <!-- PLC 중계 상태 표시 -->
                        <StackPanel Grid.Column="1" Margin="10" MouseDown="PLCRelay_Click">
                            <!-- 전구 형태의 상태 표시 -->
                            <Ellipse Fill="{Binding IsPLCRunning, Converter={StaticResource BoolToBrushConverter}}" Width="50" Height="50" />
                            <!-- PLC 중계 텍스트 -->
                            <TextBlock Text="PLC 중계" FontWeight="Bold"/>
                            <!-- 최근 동작 시간 표시 -->
                            <TextBlock Text="{Binding LastPLCTime, StringFormat='최근 동작 시간: {0:HH:mm:ss}'}"/>
                        </StackPanel>

                        <!-- 병합 OI 중계 상태 표시 -->
                        <StackPanel Grid.Column="2" Margin="10" MouseDown="OICombine_Click">
                            <!-- 전구 형태의 상태 표시 -->
                            <Ellipse Fill="{Binding IsOIRunning, Converter={StaticResource BoolToBrushConverter}}" Width="50" Height="50" />
                            <!-- 병합 OI 중계 텍스트 -->
                            <TextBlock Text="병합 OI 중계" FontWeight="Bold"/>
                            <!-- 최근 동작 시간 표시 -->
                            <TextBlock Text="{Binding LastOITime, StringFormat='최근 동작 시간: {0:HH:mm:ss}'}"/>
                        </StackPanel>
                    </Grid>

                    <!-- 에러 상태 리스트박스 -->
                    <ListBox Name="ErrorLogListBox" ItemsSource="{Binding ErrorLogs}" MaxHeight="100" Foreground="Red" Margin="10"/>
                </StackPanel>
            </TabItem>

            <!-- 라우터 설비 로그 수집 탭 -->
            <TabItem Header="라우터 설비 로그 수집">
                <!-- StackPanel을 사용하여 탭의 내용을 수직으로 배치합니다. -->
                <StackPanel Margin="10">
                    <!-- 네트워크 경로 텍스트 -->
                    <TextBlock Text="네트워크 경로:" FontWeight="Bold"/>
                    <TextBlock Text="{Binding NetworkPath}" Margin="0,0,0,10"/>
                    <!-- 파일 규칙 텍스트 -->
                    <TextBlock Text="파일 규칙 (정규식):" FontWeight="Bold"/>
                    <TextBlock Text="{Binding FilePattern}" Margin="0,0,0,10"/>
                    <!-- 로그 저장 경로 텍스트 -->
                    <TextBlock Text="로그 저장 경로:" FontWeight="Bold"/>
                    <TextBlock Text="C:\Agent\RouterFlowSync\Log\RouterFiles" Margin="0,0,0,10"/>
                    <!-- 파일 처리 로그 리스트박스 -->
                    <ListBox ItemsSource="{Binding FileProcessingLogs}" MaxHeight="200"/>
                    <!-- 점검 목록 텍스트 -->
                    <TextBlock Text="점검 목록:" FontWeight="Bold" Margin="10,10,0,0"/>
                    <ListBox ItemsSource="{Binding CheckList}" MaxHeight="100"/>
                </StackPanel>
            </TabItem>

            <!-- PLC 중계 탭 -->
            <TabItem Header="PLC 중계">
                <!-- StackPanel을 사용하여 탭의 내용을 수직으로 배치합니다. -->
                <StackPanel Margin="10">
                    <!-- 포트 설정과 관련된 UI 요소들을 여기에 배치 -->
                    <!-- 예: 사용 가능한 포트 선택, 설정 저장 버튼 등 -->
                    <TextBlock Text="PLC 포트 설정:" FontWeight="Bold" Margin="0,0,0,10"/>
                    <ComboBox ItemsSource="{Binding AvailablePorts}" SelectedItem="{Binding SelectedPLCComPort}" Margin="0,0,0,10"/>
                    <!-- PLC 설정 저장 버튼 -->
                    <Button Content="저장" Click="SavePLCSettings_Click" Margin="0,0,0,10"/>
                </StackPanel>
            </TabItem>

            <!-- 병합 OI 중계 탭 -->
            <TabItem Header="병합 OI 중계">
                <!-- StackPanel을 사용하여 탭의 내용을 수직으로 배치합니다. -->
                <StackPanel Margin="10">
                    <!-- 포트 설정과 관련된 UI 요소들을 여기에 배치 -->
                    <!-- 예: 사용 가능한 포트 선택, 설정 저장 버튼 등 -->
                    <TextBlock Text="병합 OI 포트 설정:" FontWeight="Bold" Margin="0,0,0,10"/>
                    <ComboBox ItemsSource="{Binding AvailablePorts}" SelectedItem="{Binding SelectedOIComPort}" Margin="0,0,0,10"/>
                    <!-- OI 설정 저장 버튼 -->
                    <Button Content="저장" Click="SaveOISettings_Click" Margin="0,0,0,10"/>
                </StackPanel>
            </TabItem>

            <!-- 설정 탭 -->
            <TabItem Header="설정">
                <!-- StackPanel을 사용하여 탭의 내용을 수직으로 배치합니다. -->
                <StackPanel Margin="10">
                    <!-- 설정과 관련된 UI 요소들을 여기에 배치 -->
                    <!-- 예: 라우터 설비 로그 접근 ID/PW 입력, 로그 폴더 열기 버튼 등 -->
                    <TextBlock Text="설정 관리:" FontWeight="Bold" Margin="0,0,0,10"/>
                    <!-- 로그 폴더 열기 버튼 -->
                    <Button Content="로그 폴더 열기" Click="OpenLogFolder_Click" Margin="0,0,0,10"/>
                </StackPanel>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
주요 설명:
<Window.Resources>: BoolToBrushConverter를 리소스로 등록하여 XAML에서 상태를 시각적으로 표현하기 위해 사용합니다.
대시보드 "마이야" 탭: 전구 모양의 상태 표시와 에러 로그를 표시하는 리스트박스를 포함합니다.
각 탭: 라우터 설비 로그 수집, PLC 중계, 병합 OI 중계, 설정 등의 기능을 각각의 탭으로 분리하여 제공합니다.
응용 방법: 이 XAML 파일은 UI의 구조와 동작을 정의하며, 각 기능은 관련된 ViewModel 속성 및 메서드와 바인딩되어 동작합니다.
이제 MainWindow.xaml 파일의 완성된 전체 코드를 제공해 드렸습니다. 이 코드는 요청하신 대로 모든 내용을 포함하고 있으며, 상세한 주석이 포함되어 있습니다.

추가적인 질문이나 요청이 있으시면 언제든지 말씀해 주세요