using System;
using System.Drawing;
using System.Runtime.InteropServices;
using System.Windows.Forms;
using Microsoft.WindowsAPICodePack.Taskbar;

namespace BlueTaskbarButton
{
    public partial class Form1 : Form
    {
        private const int WM_SYSCOMMAND = 0x0112;
        private const int SC_MINIMIZE = 0xF020;
        private const int SC_RESTORE = 0xF120;

        [DllImport("user32.dll")]
        private static extern IntPtr GetForegroundWindow();

        [DllImport("user32.dll")]
        private static extern bool FlashWindowEx(ref FLASHWINFO pwfi);

        [StructLayout(LayoutKind.Sequential)]
        private struct FLASHWINFO
        {
            public uint cbSize;
            public IntPtr hwnd;
            public uint dwFlags;
            public uint uCount;
            public uint dwTimeout;
        }

        public Form1()
        {
            InitializeComponent();
        }

        protected override void OnLoad(EventArgs e)
        {
            base.OnLoad(e);

            // 작업 표시줄 버튼 색상 설정
            SetTaskbarButtonColor(Color.Blue);
        }

        private void SetTaskbarButtonColor(Color color)
        {
            var taskbarButton = TaskbarManager.Instance.GetTaskbarButton(Handle);
            taskbarButton.SetOverlayIcon(null, "Description");

            var taskbarList = (ITaskbarList)new CTaskbarList();
            taskbarList.HrInit();
            taskbarList.SetOverlayIcon(Handle, IntPtr.Zero, null);

            var taskbarList3 = (ITaskbarList3)taskbarList;
            taskbarList3.SetOverlayIcon(Handle, IntPtr.Zero, null);
            taskbarList3.SetOverlayIcon(Handle, IconFromImage(color), null);
        }

        private Icon IconFromImage(Color color)
        {
            Bitmap bmp = new Bitmap(16, 16);

            using (Graphics g = Graphics.FromImage(bmp))
            {
                using (SolidBrush brush = new SolidBrush(color))
                {
                    g.FillRectangle(brush, 0, 0, 16, 16);
                }
            }

            return Icon.FromHandle(bmp.GetHicon());
        }
    }

    public interface ITaskbarList
    {
        void HrInit();
        void SetOverlayIcon(IntPtr hwnd, IntPtr hIcon, string pszDescription);
    }

    public interface ITaskbarList3 : ITaskbarList
    {
        void SetOverlayIcon(IntPtr hwnd, IntPtr hIcon, string pszDescription);
    }

    [ComImport]
    [Guid("56FDF342-FD6D-11D0-958A-006097C9A090")]
    [ClassInterface(ClassInterfaceType.None)]
    public class CTaskbarList { }
}
