using System;
using System.Collections.Generic;
using System.Data.SqlClient;
using ClosedXML.Excel;
using System.Text.RegularExpressions;
using System.Linq;

namespace YourNamespace
{
    class Program
    {
        static void Main(string[] args)
        {
            using (XLWorkbook workbook = new XLWorkbook(@"C:\allfiles\11.xlsx"))
            {
                IXLWorksheet sheet = workbook.Worksheet(1);
                
                List<string> columns = new List<string>();
                Regex regex = new Regex("[your_pattern_here]");
                
                // Assuming second row in Excel contains headers
                foreach (IXLCell cell in sheet.Row(2).CellsUsed())
                {
                    string result = regex.Replace(cell.Value.ToString(), "-");
                    string columnName = "C_" + result;
                    if (columnName.StartsWith("C_"))
                    {
                        columns.Add(columnName);
                    }
                }

                using (SqlConnection conn = new SqlConnection("Your Connection String Here"))
                {
                    conn.Open();
                    SqlCommand cmd = new SqlCommand();
                    cmd.Connection = conn;
                    
                    DateTime currentTime = DateTime.Now;
                    string formattedTime = currentTime.ToString("yyyy-MM-dd HH:mm:ss");
                    int numbb = 1;
                    
                    foreach (IXLRow row in sheet.RowsUsed().Skip(2))
                    {
                        var rowValues = row.Cells().Select(c => c.Value).ToList();
                        
                        if (rowValues.All(r => r == null))
                        {
                            break;
                        }
                        
                        if (string.IsNullOrEmpty(rowValues[2]?.ToString()))
                        {
                            continue;
                        }
                        
                        Dictionary<string, object> data = new Dictionary<string, object>();
                        for (int i = 0; i < columns.Count; i++)
                        {
                            data[columns[i]] = rowValues[i];
                        }

                        List<string> dataWithQuotes = new List<string>();
                        foreach (var value in data.Values)
                        {
                            dataWithQuotes.Add($"'{value}'");
                        }
                        
                        dataWithQuotes.Add(numbb.ToString());
                        dataWithQuotes.Add($"'{formattedTime}'");
                        
                        string insertQuery = $"INSERT INTO T_메인확정 ({string.Join(",", columns)}, N_number, N_time) VALUES ({string.Join(",", dataWithQuotes)})";
                        cmd.CommandText = insertQuery;
                        cmd.ExecuteNonQuery();
                        
                        numbb++;
                    }
                }
            }
        }
    }
}
