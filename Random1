C#을 사용하여 WPF 애플리케이션에서 ListBox에서 선택된 항목에 따라 탐색기를 열어 폴더를 검색하는 예시 코드가 있습니다. 이 코드는 ListBox에 선택된 값을 가져와서 해당 폴더를 Windows 탐색기에서 여는 방법을 보여줍니다.

XAML 코드: ListBox와 Button을 구성합니다.
xml
Copy code
<Window x:Class="ExplorerExample.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="MainWindow" Height="350" Width="525">
    <Grid>
        <ListBox x:Name="listBox1" HorizontalAlignment="Left" Height="100" Margin="10,10,0,0" VerticalAlignment="Top" Width="100">
            <ListBoxItem Content="Documents"/>
            <ListBoxItem Content="Pictures"/>
            <ListBoxItem Content="Music"/>
        </ListBox>
        <Button Content="Open Folder" HorizontalAlignment="Left" Margin="120,10,0,0" VerticalAlignment="Top" Width="75" Click="Button_Click"/>
    </Grid>
</Window>
C# 코드: Button 클릭 이벤트를 처리하여 선택된 폴더를 엽니다.
csharp
Copy code
using System;
using System.Diagnostics;
using System.Windows;

namespace ExplorerExample
{
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
        }

        private void Button_Click(object sender, RoutedEventArgs e)
        {
            if (listBox1.SelectedItem != null)
            {
                string folderName = (listBox1.SelectedItem as ListBoxItem).Content.ToString();
                string folderPath = System.IO.Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.UserProfile), folderName);
                
                // 폴더 경로를 확인하고 탐색기에서 엽니다.
                if (System.IO.Directory.Exists(folderPath))
                {
                    Process.Start("explorer.exe", folderPath);
                }
                else
                {
                    MessageBox.Show("Folder does not exist.");
                }
            }
        }
    }
}
이 코드는 사용자 프로필 디렉토리 아래에 있는 Documents, Pictures, Music 폴더 중에서 선택한 폴더를 엽니다. 실제 사용 시, ListBox에 표시되는 항목과 실제 폴더 경