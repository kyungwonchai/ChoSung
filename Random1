측할 때 vectorize_qr() 함수는 QR 코드만 벡터화 (입력 크기 = max_length=10)
하지만 훈련할 때는 vectorize_qr_with_line()을 사용하여 QR + Line (11차원) 벡터화
결과적으로 예측 입력 크기(10) ≠ 모델 입력 크기(11) → 행렬 크기 불일치 에러 발생
✅ 해결 방법:

예측 시에도 vectorize_qr() 대신 모델 입력 크기에 맞게 11차원으로 변환
마지막 컬럼(라인 정보)에는 더미 값 0 추가
✅ 예측 부분 수정 (마지막 차원 맞추기)
🔹 기존 예측 코드 (에러 발생)
python
Copy code
X_vectorized = vectorize_qr([qr_value], max_length=10)  # 🔥 문제 발생 (10차원)
🔹 수정된 예측 코드 (입력 크기 11로 맞춤)
python
Copy code
def predict_qr(model, model_encoder, qr_value, max_length):
    device = torch.device("cuda" if torch.cuda.is_available() else "cpu")
    
    # 🔹 QR 코드만 변환
    X_vectorized = vectorize_qr([qr_value], max_length=max_length)  # (1, 10) 크기
    
    # 🔹 마지막 컬럼에 더미 라인 값(0) 추가하여 모델 입력 크기(11)로 맞춤
    X_vectorized = np.pad(X_vectorized, ((0, 0), (0, 1)), mode='constant', constant_values=0)  # (1, 11) 크기
    
    # 🔹 예측 수행
    model.eval()
    with torch.no_grad():
        inputs = torch.tensor(X_vectorized, dtype=torch.float32).to(device)
        outputs = model(inputs)
        predicted = torch.argmax(outputs, dim=1).cpu().numpy()[0]

    predicted_model = model_encoder.inverse_transform([predicted])[0]
    print(f"✅ 예측된 모델: {predicted_model}")
📌 요약
1️⃣ 훈련할 때 → vectorize_qr_with_line() 사용 (입력 크기 11)
2️⃣ 예측할 때 → vectorize_qr() 사용하면 10차원이라 에러 발생