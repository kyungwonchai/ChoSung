-- 데이터베이스가 존재하지 않으면 새로 생성합니다.
IF NOT EXISTS (SELECT * FROM sys.databases WHERE name = 'LockerManagementDB')
BEGIN
    CREATE DATABASE LockerManagementDB;
    PRINT '데이터베이스 LockerManagementDB 생성 완료.';
END
ELSE
BEGIN
    PRINT '데이터베이스 LockerManagementDB가 이미 존재합니다.';
END
GO

-- 생성된 데이터베이스를 사용합니다.
USE LockerManagementDB;
GO

PRINT 'LockerManagementDB 데이터베이스 사용 시작.';
GO

-- 테이블 재생성을 위해 기존 테이블 삭제 (주의: 개발 환경에서만 사용하세요!)
PRINT '기존 테이블 삭제 시도...';
IF OBJECT_ID('dbo.AuditLogs', 'U') IS NOT NULL DROP TABLE dbo.AuditLogs;
IF OBJECT_ID('dbo.LockerAssignments', 'U') IS NOT NULL DROP TABLE dbo.LockerAssignments;
IF OBJECT_ID('dbo.Administrators', 'U') IS NOT NULL DROP TABLE dbo.Administrators;
IF OBJECT_ID('dbo.SubParts', 'U') IS NOT NULL DROP TABLE dbo.SubParts;
IF OBJECT_ID('dbo.Zones', 'U') IS NOT NULL DROP TABLE dbo.Zones;
IF OBJECT_ID('dbo.Floors', 'U') IS NOT NULL DROP TABLE dbo.Floors;
IF OBJECT_ID('dbo.LockerTypes', 'U') IS NOT NULL DROP TABLE dbo.LockerTypes;
PRINT '기존 테이블 삭제 완료 (존재하는 경우).';
GO

-- 마스터 데이터 테이블 생성
PRINT '마스터 데이터 테이블 생성 시작...';
CREATE TABLE LockerTypes (
    Id INT PRIMARY KEY IDENTITY(1,1),    -- 고유 ID (자동 증가)
    Name NVARCHAR(50) NOT NULL UNIQUE   -- 사물함 종류 이름 (예: 개인사물함), 중복 불가
);
PRINT 'LockerTypes 테이블 생성 완료.';

CREATE TABLE Floors (
    Id INT PRIMARY KEY IDENTITY(1,1),    -- 고유 ID
    Name NVARCHAR(10) NOT NULL UNIQUE   -- 층 이름 (예: B1, 1), 중복 불가
);
PRINT 'Floors 테이블 생성 완료.';

CREATE TABLE Zones (
    Id INT PRIMARY KEY IDENTITY(1,1),    -- 고유 ID
    Name NVARCHAR(50) NOT NULL UNIQUE   -- 구역 이름 (예: A, B1), 중복 불가
);
PRINT 'Zones 테이블 생성 완료.';

CREATE TABLE SubParts (
    Id INT PRIMARY KEY IDENTITY(1,1),    -- 고유 ID
    Name NVARCHAR(50) NOT NULL UNIQUE   -- 소파트 이름 (예: MainA), 중복 불가
);
PRINT 'SubParts 테이블 생성 완료.';

CREATE TABLE Administrators (
    Id INT PRIMARY KEY IDENTITY(1,1),    -- 고유 ID
    Name NVARCHAR(100) NOT NULL UNIQUE  -- 관리자 이름 (예: 홍길동A), 중복 불가
);
PRINT 'Administrators 테이블 생성 완료.';
PRINT '마스터 데이터 테이블 생성 완료.';
GO

-- 사물함 배정 테이블 생성 (신규 컬럼 4개 포함)
PRINT 'LockerAssignments 테이블 생성 시작...';
CREATE TABLE LockerAssignments (
    Id INT PRIMARY KEY IDENTITY(1,1),            -- 고유 ID
    LockerType NVARCHAR(50) NOT NULL,           -- 관리항목 (LockerTypes.Name 참조)
    Floor NVARCHAR(10) NOT NULL,                -- 층 (Floors.Name 참조)
    Zone NVARCHAR(50) NOT NULL,                 -- 구역 (Zones.Name 참조)
    SpecificLocation NVARCHAR(100) NOT NULL,    -- 세부 위치 (고유해야 할 수 있음 - 필요 시 UNIQUE 제약 조건 추가)
    UserName NVARCHAR(100) NULL,               -- 사용자 이름
    KnoxId NVARCHAR(100) NULL,                  -- Knox ID
    SubPart NVARCHAR(50) NULL,                  -- 소파트 (SubParts.Name 참조)
    Administrator NVARCHAR(100) NULL,          -- 관리자 (Administrators.Name 참조)

    -- 신규 컬럼 4개 추가
    TransferStatus NVARCHAR(50) NULL,          -- 전배복직 상태
    Details NVARCHAR(500) NULL,                -- 내용
    Remarks NVARCHAR(500) NULL,                -- 특이사항
    Notes NVARCHAR(500) NULL,                  -- 비고

    LastUpdated DATETIME2 NOT NULL DEFAULT GETDATE() -- 마지막 수정일시 (자동 현재 시간 입력)
);
PRINT 'LockerAssignments 테이블 생성 완료.';
GO

-- 감사 로그 테이블 생성
PRINT 'AuditLogs 테이블 생성 시작...';
CREATE TABLE AuditLogs (
    Id INT PRIMARY KEY IDENTITY(1,1),            -- 로그 고유 ID
    Timestamp DATETIME2 NOT NULL DEFAULT GETDATE(), -- 로그 기록 시간
    UserName NVARCHAR(100) NOT NULL,            -- 변경 수행 사용자 (관리자)
    Action NVARCHAR(50) NOT NULL,               -- 작업 종류 (예: Added, Modified, Deleted)
    TableName NVARCHAR(100) NOT NULL,           -- 변경된 테이블 이름
    RecordId NVARCHAR(100) NULL,               -- 변경된 레코드의 주 식별자 (Id 등, 문자열로 저장)
    AffectedColumns NVARCHAR(MAX) NULL,        -- 변경된 컬럼 목록 (Update 시, 콤마 구분 등)
    OldValues NVARCHAR(MAX) NULL,              -- 변경 전 값 (JSON, XML 등 형식으로 저장 권장)
    NewValues NVARCHAR(MAX) NULL               -- 변경 후 값 (JSON, XML 등 형식으로 저장 권장)
);
PRINT 'AuditLogs 테이블 생성 완료.';
GO

-- 인덱스 생성 (성능 향상 목적)
PRINT '인덱스 생성 시작...';
CREATE INDEX IX_LockerAssignments_Location ON dbo.LockerAssignments (Floor, Zone, SpecificLocation);
CREATE INDEX IX_LockerAssignments_User ON dbo.LockerAssignments (UserName);
CREATE INDEX IX_AuditLogs_Timestamp ON dbo.AuditLogs (Timestamp DESC); -- 로그 조회 시 최신순 정렬 성능 향상
PRINT '인덱스 생성 완료.';
GO

-- 초기 마스터 데이터 삽입 (예시)
PRINT '초기 마스터 데이터 삽입 시작...';
INSERT INTO LockerTypes (Name) VALUES (N'개인사물함'), (N'락커'), (N'신발장');
INSERT INTO Floors (Name) VALUES (N'B1'), (N'1'), (N'2'), (N'3'), (N'4');
INSERT INTO Zones (Name) VALUES (N'A'), (N'B'), (N'C'), (N'D'), (N'E'), (N'F'), (N'G'), (N'H'), (N'B1'), (N'B2'), (N'B3'), (N'B4'), (N'1F'), (N'2F'), (N'3F'), (N'4F'), (N'기타');
-- Main(시생산) 및 MainA~Z 추가
INSERT INTO SubParts (Name) VALUES (N'Main(시생산)');
DECLARE @subPartChar CHAR(1) = 'A';
WHILE @subPartChar <= 'Z' BEGIN INSERT INTO SubParts (Name) VALUES (N'Main' + @subPartChar); SET @subPartChar = CHAR(ASCII(@subPartChar) + 1); END;
-- 홍길동A~X 추가
DECLARE @adminChar CHAR(1) = 'A';
WHILE @adminChar <= 'X' BEGIN INSERT INTO Administrators (Name) VALUES (N'홍길동' + @adminChar); SET @adminChar = CHAR(ASCII(@adminChar) + 1); END;
PRINT '초기 마스터 데이터 삽입 완료.';
GO

-- 초기 사물함 배정 데이터 삽입 (예시)
PRINT '초기 사물함 배정 데이터 삽입 시작...';
INSERT INTO LockerAssignments (LockerType, Floor, Zone, SpecificLocation, Administrator, TransferStatus, Details, Remarks, Notes)
VALUES (N'개인사물함', N'1', N'A', N'A-01', N'홍길동A', NULL, N'초기 상태', NULL, NULL),
       (N'개인사물함', N'1', N'A', N'A-02', N'홍길동A', NULL, N'초기 상태', NULL, NULL);
INSERT INTO LockerAssignments (LockerType, Floor, Zone, SpecificLocation, UserName, KnoxId, SubPart, Administrator, TransferStatus, Details, Remarks, Notes)
VALUES (N'개인사물함', N'1', N'B', N'B-15', N'김철수', N'kimcs', N'MainA', N'홍길동B', N'신규', N'테스트 사용자', N'특이사항 없음', N'참고');
PRINT '초기 사물함 배정 데이터 삽입 완료.';
GO

PRINT '데이터베이스 스키마 설정 및 초기 데이터 삽입이 모두 완료되었습니다.';