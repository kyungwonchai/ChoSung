public class DiagramDocumentForm : Form
{
    private DiagramControl diagramControl;
    private string pname;
    private string loginid;

    public DiagramDocumentForm(string pname, string loginid)
    {
        this.pname = pname;
        this.loginid = loginid;

        InitializeComponent();
    }

    private void InitializeComponent()
    {
        // DiagramControl 생성 및 설정
        diagramControl = new DiagramControl();
        diagramControl.Dock = DockStyle.Fill;

        // Form 설정
        Text = "Diagram Document";
        Size = new Size(800, 600);
        Controls.Add(diagramControl);

        Load += DiagramDocumentForm_Load;
    }

    private void DiagramDocumentForm_Load(object sender, EventArgs e)
    {
        // 폼 로드 시 실행되는 코드
        SaveDiagram();
    }

    private void SaveDiagram()
    {
        // diagramControl에서 Diagram을 가져와서 데이터베이스에 저장하는 로직
        string diagram = diagramControl.GetDiagram();
        SaveDiagramToDatabase(pname, loginid, diagram);
    }

    private void SaveDiagramToDatabase(string pname, string loginid, string diagram)
    {
        // 데이터베이스에 pname과 loginid에 해당하는 Diagram을 저장하는 로직
    }
}
위의 코드는 DiagramDocumentForm 클래스를 생성하고, DiagramControl을 포함하는 폼을 구성합니다. DiagramDocumentForm_Load 이벤트 핸들러는 폼이 로드될 때 실행되며, SaveDiagram 메서드는 DiagramControl에서 Diagram을 가져와 데이터베이스에 저장하는 로직입니다. SaveDiagramToDatabase 메서드는 데이터베이스에 Diagram을 저장하는 로직으로 구현되어야 합니다.

이제 DiagramDocumentForm의 코드를 폼의 구현에 맞게 수정하여 사용하시면 됩니다. 도움이 필요하시면 언제든지 말씀해주세요!





User
저장하는 내용까지 적어주세요 ^^
ChatGPT
좋습니다. SaveDiagramToDatabase 메서드를 데이터베이스에 Diagram을 저장하는 로직으로 구현해보겠습니다.

csharp
Copy code
private void SaveDiagramToDatabase(string pname, string loginid, string diagram)
{
    using (SqlConnection connection = new SqlConnection(connectionString))
    {
        connection.Open();

        // 이미 존재하는 데이터가 있는지 확인
        bool existingData = CheckExistingData(pname, loginid, connection);

        if (existingData)
        {
            // 이미 데이터가 존재하는 경우, 업데이트 쿼리 실행
            string updateQuery = "UPDATE view_projectdetail SET Diagram = @Diagram WHERE pname = @Pname AND loginid = @Loginid";
            using (SqlCommand updateCommand = new SqlCommand(updateQuery, connection))
            {
                updateCommand.Parameters.AddWithValue("@Diagram", diagram);
                updateCommand.Parameters.AddWithValue("@Pname", pname);
                updateCommand.Parameters.AddWithValue("@Loginid", loginid);
                updateCommand.ExecuteNonQuery();
            }
        }
        else
        {
            // 데이터가 존재하지 않는 경우, 삽입 쿼리 실행
            string insertQuery = "INSERT INTO view_projectdetail (pname, loginid, Diagram) VALUES (@Pname, @Loginid, @Diagram)";
            using (SqlCommand insertCommand = new SqlCommand(insertQuery, connection))
            {
                insertCommand.Parameters.AddWithValue("@Pname", pname);
                insertCommand.Parameters.AddWithValue("@Loginid", loginid);
                insertCommand.Parameters.AddWithValue("@Diagram", diagram);
                insertCommand.ExecuteNonQuery();
            }
        }
    }
}

private bool CheckExistingData(string pname, string loginid, SqlConnection connection)
{
    string query = "SELECT COUNT(*) FROM view_projectdetail WHERE pname = @Pname AND loginid = @Loginid";
    using (SqlCommand command = new SqlCommand(query, connection))
    {
        command.Parameters.AddWithValue("@Pname", pname);
        command.Parameters.AddWithValue("@Loginid", loginid);
        int count = (int)command.ExecuteScalar();
        return count > 0;
    }
}