드와 컬럼 순서를 재배치하는 과정은 복잡할 수 있습니다. VisibleIndex는 밴드와 컬럼의 표시 순서를 결정합니다. 밴드 안의 컬럼 개수에 따라 VisibleIndex를 조정하는 것은 GridControl의 구조와 상태에 따라 달라집니다.

아래의 ApplyBandOrderToGridControl 메서드는 ColumnsInfo 리스트에서 DisplayIndex에 따라 밴드를 정렬하고, GridControl의 밴드 순서를 업데이트합니다. 이 메서드는 ColumnOrderingWindow 내에 있어야 합니다.

csharp
Copy code
private void ApplyBandOrderToGridControl(List<ColumnInfo> orderedColumnsInfo)
{
    // 밴드 순서를 업데이트하기 위해 메인 윈도우의 GridControl 밴드들의 VisibleIndex를 조정합니다.
    foreach (var colInfo in orderedColumnsInfo)
    {
        var band = mainGridControl.Bands.FirstOrDefault(b => b.Name == colInfo.XName);
        if (band != null)
        {
            // 밴드의 가시성을 설정합니다.
            band.Visible = colInfo.IsVisible;

            // 밴드의 순서를 설정합니다.
            // 이는 밴드가 순서대로 정렬되어 있다고 가정할 때 유효합니다.
            band.VisibleIndex = orderedColumnsInfo.IndexOf(colInfo);
        }
    }

    // 밴드 순서가 변경되었으므로 GridControl을 새로 고침합니다.
    mainGridControl.RefreshData();
}
이 코드는 밴드가 순서대로 정렬되어 있다고 가정하고, DisplayIndex는 밴드 목록 내에서 밴드의 순서를 나타냅니다. 실제 사용 시에는 밴드 안의 컬럼도 순서를 조정해야 할 수 있으며, 이는 더 복잡한 로직을 요구합니다.

만약 밴드 안의 컬럼 순서도 조정해야 한다면, 컬럼의 VisibleIndex도 밴드의 VisibleIndex에 영향을 받으므로, 밴드별로 컬럼의 순서를 재조정하는 추가 로직을 구현해야 합니다. 이는 GridControl의 구조에 따라 크게 달라질 수 있으므로, 자세한 구현은 DevExpress의 문서를 참조하거나, DevExpress 지원 팀에 문의해야 할 수 있습니다.

위 코드는 밴드의 가시성과 순서를 조정하는 기본적인 예시입니다. 실제 애플리케이션에서는 GridControl의 구체적인 요구 사항과 구조에 맞게 코드