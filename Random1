아, 제가 완전히 잘못 이해했네요. 정말 죄송합니다. 폴더들이 /var/www 같은 표준 경로가 아니라, 각기 다른 개인 홈 디렉터리에 흩어져 있다는 말씀이시군요. 이제 확실히 이해했습니다.

/home/kwkw/kw122/r12 와 /home/kw/k124 처럼요.

## 가장 큰 문제: 권한 (Permissions)
지금 404 에러가 나는 이유는 99% 권한 문제입니다.

쉽게 비유해 보겠습니다.

Nginx는 www-data 라는 이름의 '직원'입니다.

/home/kwkw/ 나 /home/kw/ 같은 개인 폴더는 '개인 방'입니다.

보안상 이 www-data 직원은 다른 사람의 '개인 방'에 들어갈 권한이 전혀 없습니다. 그래서 Nginx 설정에 경로를 아무리 정확하게 적어줘도, Nginx(직원)가 그 폴더에 접근 자체를 못해서 "그런 파일 없다(404 Not Found)"고 하는 겁니다.

## 해결책 (2가지 방법)
두 가지 해결 방법이 있습니다. 첫 번째 방법을 강력하게 추천합니다.

방법 1: 프로젝트를 '공용 사무실'로 옮기기 (가장 추천 👍)
웹 프로젝트는 원래부터 모든 사람이 접근할 수 있도록 약속된 공용 공간인 /var/www 에 두는 것이 표준입니다. 개인 방에서 일하는 것보다 안전하고 관리가 편합니다.

프로젝트를 /var/www로 복사하세요.

Bash

# React 프로젝트 복사 (r12를 react-app으로 이름 변경)
sudo cp -r /home/kwkw/kw122/r12 /var/www/react-app

# Flask 프로젝트 복사 (k124를 flask-app으로 이름 변경)
sudo cp -r /home/kw/k124 /var/www/flask-app
(다른 프로젝트들도 이런 식으로 복사하면 됩니다.)

복사한 폴더의 주인을 Nginx 직원(www-data)으로 만드세요.

Bash

sudo chown -R www-data:www-data /var/www/react-app
sudo chown -R www-data:www-data /var/www/flask-app
이 방법을 쓰면 골치 아픈 권한 문제가 한 번에 해결됩니다.

방법 2: '개인 방'의 문을 열어주기 (임시 방편 👎)
www-data 직원이 개인 방에 들어갈 수 있도록 최소한의 길만 열어주는 방법입니다. 보안상 좋지는 않지만, 폴더를 옮기고 싶지 않을 때 사용할 수 있습니다.

폴더 경로의 처음부터 끝까지 Nginx(다른 사용자)가 들어와서 볼 수 있도록 실행(x) 권한을 줘야 합니다.

Bash

# r12 프로젝트를 위한 길 열기
chmod 755 /home
chmod 755 /home/kwkw
chmod 755 /home/kwkw/kw122
chmod -R 755 /home/kwkw/kw122/r12

# k124 프로젝트를 위한 길 열기
# /home은 위에서 했으니 생략
chmod 755 /home/kw
chmod -R 755 /home/kw/k124
chmod 755는 "소유자는 모든 걸 할 수 있고, 다른 사람들은 읽고 들어오는 것만 가능하다"는 뜻입니다.

## 실제 경로를 사용한 Nginx 설정 예시
위의 방법 1 또는 2로 권한 문제를 해결했다는 가정 하에, Nginx 설정 파일(alpha-project.conf)을 실제 경로에 맞게 수정해야 합니다.

만약 방법 2를 선택했다면 이렇게 설정합니다.

Nginx

# /etc/nginx/sites-available/alpha-project.conf

server {
    listen 80;
    server_name 10.244.222.222;

    # React 앱 (/app/)
    # 중요: /home/kwkw, /home/kwkw/kw122 폴더에 실행(x) 권한이 있어야 합니다!
    location /app/ {
        alias /home/kwkw/kw122/r12/; # 사용자님의 실제 React 프로젝트 경로
        try_files $uri $uri/ /app/index.html;
    }

    # Flask 앱 (/service/)
    # 중요: /home/kw 폴더에 실행(x) 권한이 있어야 합니다!
    # 이 앱은 proxy_pass로 넘기므로, 앱을 실행하는 권한만 있으면 됩니다.
    location /service/ {
        # Flask 앱이 8110 포트로 돌고 있다고 가정
        proxy_pass http://127.0.0.1:8110/; 
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # ... (다른 프로젝트들도 이런 식으로 실제 경로를 적어주면 됩니다)
}
그래서 지금 당장 해야 할 일
방법 1(이동) 과 방법 2(권한 변경) 중 하나를 선택해서 반드시 실행하세요. (1번 추천)

선택한 방법의 최종 폴더 경로를 Nginx 설정 파일에 정확하게 다시 적어주세요.

Nginx 설정을 저장하고 재시작하세요. (sudo systemctl restart nginx)

이렇게 하면 Nginx가 드디어 파일들을 찾을 수 있게 되어 404 에러가 해결될 겁니다.

