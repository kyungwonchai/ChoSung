using System;
using System.IO.Ports;
using System.Threading;
using System.Threading.Tasks;

public class ComPortPLC
{
    private static ComPortPLC _instance;
    private SerialPort _serialPort;
    private string _currentPort;         // 현재 연결된 포트 이름
    private bool _isConnected = false;   // 연결 상태 플래그
    private static readonly object _lock = new object();
    private static readonly int MaxReconnectAttempts = 10;
    private static readonly TimeSpan ReconnectInterval = TimeSpan.FromSeconds(30);

    // 싱글톤 인스턴스 반환
    public static ComPortPLC Instance => _instance ?? (_instance = new ComPortPLC());

    // 비공개 생성자 (싱글톤 패턴)
    private ComPortPLC() 
    {
        // 프로그램 시작 시 연결 시도
        Task.Run(async () => await TryConnectToComPortAsync());
    }

    /// <summary>
    /// 현재 COM 포트가 연결되어 있는지 여부를 반환합니다.
    /// </summary>
    public bool IsConnected => _isConnected;

    /// <summary>
    /// COM 포트 연결을 시도하고, 연결 성공 시 플래그를 설정합니다.
    /// </summary>
    private async Task TryConnectToComPortAsync()
    {
        // 기존 저장된 포트 먼저 시도
        if (!string.IsNullOrEmpty(_currentPort))
        {
            if (await TryOpenComPortAsync(_currentPort))
            {
                return; // 성공 시 종료
            }
        }

        // 포트 순회하며 연결 시도
        string[] availablePorts = SerialPort.GetPortNames();
        foreach (var port in availablePorts)
        {
            if (await TryOpenComPortAsync(port))
            {
                return; // 성공 시 종료
            }
        }

        // 포트가 없으면 일정 시간 후 재시도
        await AttemptReconnect();
    }

    /// <summary>
    /// COM 포트를 열고, PLC 신호 테스트를 실행하여 정상 연결 여부를 확인합니다.
    /// </summary>
    private async Task<bool> TryOpenComPortAsync(string port)
    {
        try
        {
            _serialPort = new SerialPort(port, 9600);  // 보통의 PLC 통신 보레이트
            _serialPort.Open();

            // 연결 성공 시 PLC에 테스트 신호 전송 (예: "$01SRCC00014")
            if (await TestPLCConnection())
            {
                _currentPort = port;
                _isConnected = true;
                Console.WriteLine($"Successfully connected to COM port: {port}");
                return true;
            }
            else
            {
                _serialPort.Close(); // 신호 실패 시 포트 닫기
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Failed to connect to COM port: {port}. Error: {ex.Message}");
        }

        return false;
    }

    /// <summary>
    /// PLC 연결 테스트 신호를 보내고 응답을 확인합니다.
    /// </summary>
    private async Task<bool> TestPLCConnection()
    {
        try
        {
            // 테스트 신호 전송 (이 부분은 PLC 기기와의 통신 규약에 맞게 수정)
            _serialPort.WriteLine("$01SRCC00014");

            // 테스트 신호 후 일정 시간 대기 (응답 받는 시간을 줍니다)
            await Task.Delay(500); // 500ms 대기

            // PLC 응답 수신 (예: 응답 내용 확인)
            string response = _serialPort.ReadLine();
            if (response.Contains("SUCCESS"))  // 가정된 정상 응답 값
            {
                return true;
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error during PLC test connection: {ex.Message}");
        }

        return false;
    }

    /// <summary>
    /// 모든 COM 포트를 순회하며 일정 시간 동안 재연결을 시도합니다.
    /// </summary>
    private async Task AttemptReconnect()
    {
        for (int attempt = 1; attempt <= MaxReconnectAttempts; attempt++)
        {
            Console.WriteLine($"Reconnect attempt {attempt}/{MaxReconnectAttempts}...");

            string[] availablePorts = SerialPort.GetPortNames();
            foreach (var port in availablePorts)
            {
                if (await TryOpenComPortAsync(port))
                {
                    return; // 연결 성공 시 바로 종료
                }
            }

            // 일정 시간 대기 후 재시도
            await Task.Delay(ReconnectInterval);
        }

        Console.WriteLine("Failed to reconnect to any COM port.");
        _isConnected = false;
    }

    /// <summary>
    /// 수동으로 COM 포트를 다시 연결하는 메서드
    /// </summary>
    public async Task<bool> ManualReconnect()
    {
        await TryConnectToComPortAsync();
        return _isConnected;
    }

    /// <summary>
    /// PLC 명령어를 전송하는 메서드 (연결 상태 체크 후 실행)
    /// </summary>
    public async Task SendPLCCommand(string command)
    {
        if (_isConnected)
        {
            try
            {
                _serialPort.WriteLine(command);
                Console.WriteLine($"Command sent: {command}");
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error sending command to PLC: {ex.Message}");
                await AttemptReconnect();  // 명령어 실행 중 실패 시 재연결 시도
            }
        }
        else
        {
            Console.WriteLine("Not connected to any COM port.");
            await AttemptReconnect();
        }
    }
}
