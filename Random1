네, 한 시간을 기다려도 안 된다면 서버의 네트워크 환경에 근본적인 문제가 있는 것이 확실합니다. 더 기다리는 것은 의미가 없습니다.

다른 방법이 있고, 그 방법을 쓰시는 게 맞습니다.

그리고 가장 중요한 질문에 먼저 답해 드리겠습니다.

"이거꼭 전부다 설치해야되니 클라이어트네"

아니요, 사용자(클라이언트) PC에는 아무것도 설치되지 않습니다. 지금 겪고 계시는 어려움은 개발자인 우리가 '요리'를 하기 위해 '주방'을 차리는 과정일 뿐입니다. 손님은 완성된 '요리'만 받게 됩니다.

## 개발 환경과 실제 서비스의 차이점 (주방과 요리)
개발 환경 (node_modules): 거대한 레스토랑 주방 🍳

npm install로 설치하는 수백 개의 패키지는 요리를 위한 주방 설비와 같습니다. 화구(webpack), 최신 조리도구(babel), 각종 식자재(react 등), 접시, 칼, 냄비 등 온갖 장비가 있는 복잡하고 거대한 공간입니다.

이 '주방'은 오직 개발용 서버에만 존재합니다.

실제 서비스 (build 폴더): 손님에게 나가는 요리 🍽️

npm run build 명령어는 이 모든 주방 설비를 사용해서 최종 요리 딱 하나를 만들어내는 과정입니다.

이 결과물은 아주 작고 깔끔하게 최적화된 HTML, CSS, JavaScript 파일 몇 개뿐입니다.

실제 사용자(클라이언트)의 웹 브라우저는 이 완성된 '요리'만 다운로드합니다. 주방이 얼마나 크고 복잡한지는 전혀 알 필요도 없고, 영향을 받지도 않습니다.

## 다른 방법: 로컬 PC에서 빌드 후 서버에 업로드
서버의 네트워크가 npm install을 허용하지 않으니, 네트워크가 원활한 PC(개발자님의 개인 PC 등)에서 '요리'를 전부 마친 후, 완성된 '요리'만 서버에 가져다 놓는 방식을 사용하겠습니다.

1단계: 개발자 PC에서 작업 (네트워크 좋은 곳)
이전에 만들었던 pdf_viewer_project 폴더를 PC에 준비합니다. (없다면 파이썬 생성 스크립트를 PC에서 다시 실행)

client 폴더로 이동하여 npm install을 실행합니다. (PC에서는 금방 완료될 것입니다.)

Bash

cd /path/to/pdf_viewer_project/client
npm install
설치가 완료되면 바로 build 명령어를 실행하여 '최종 요리'를 만듭니다.

Bash

npm run build
이 명령을 실행하면 client 폴더 안에 build 라는 폴더가 생성됩니다. 이 안에 최적화된 결과물이 모두 들어있습니다.

2단계: 완성된 파일만 서버에 업로드
이제 PC에서 서버로 필요한 파일만 옮깁니다. FileZilla 같은 SFTP 프로그램을 사용하면 편리합니다.

업로드할 파일 목록:

client 폴더 안에 있는 build 폴더 전체

프로젝트 최상위 폴더에 있는 server.js 파일

프로젝트 최상위 폴더에 있는 package.json 파일

(주의: PC의 node_modules 폴더는 절대 업로드하지 마세요!)

3단계: 우분투 서버에서 실행
서버에 pdf_viewer_project 폴더를 만들고, 그 안에 client 라는 하위 폴더를 만듭니다.

업로드한 파일들을 아래 위치에 맞게 넣어줍니다.

server.js와 package.json은 pdf_viewer_project/ 에 위치

build 폴더는 pdf_viewer_project/client/ 안에 위치 (/pdf_viewer_project/client/build/ 형태가 됩니다)

서버에서 백엔드용 패키지만 설치합니다. 이것은 용량이 작아 서버에서도 10초 안에 끝납니다.

Bash

# pdf_viewer_project 폴더로 이동
cd ~/pdf_viewer_project

# 백엔드 패키지 설치
npm install
서버를 실행합니다.

Bash
