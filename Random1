겠습니다. 폼의 FormBorderStyle을 살린 상태로, 배경색만 변경하고 DevExpress 스타일과 통합하도록 수정하겠습니다. 이는 Windows 기본 창 크기 변경 및 드래그 동작을 유지하면서, 타이틀바 배경색과 텍스트 색상을 커스터마이징하는 방식입니다.

최종 코드: 기본 BorderStyle 유지 + 배경색 변경
구현 코드
csharp
코드 복사
using DevExpress.XtraEditors;
using System;
using System.Drawing;
using System.Windows.Forms;

public partial class MySkinableForm : XtraForm
{
    public MySkinableForm()
    {
        InitializeComponent();

        // 기본 설정
        this.FormBorderStyle = FormBorderStyle.Sizable; // 기본 폼 테두리 유지
        this.DoubleBuffered = true; // 깜빡임 방지
        this.Text = "Custom Form with Colored Title Bar"; // 폼 제목
        this.BackColor = Color.White; // 폼 배경색

        // 타이틀바 색상 변경
        this.Load += (s, e) => CustomizeTitleBar();
    }

    private void CustomizeTitleBar()
    {
        // 기본 타이틀바 텍스트 색상 및 배경 변경
        this.Appearance.BackColor = Color.SkyBlue; // 타이틀바 배경색
        this.Appearance.ForeColor = Color.White; // 타이틀바 텍스트 색상
    }

    protected override void OnPaint(PaintEventArgs e)
    {
        base.OnPaint(e);

        // 폼 내용 영역 추가 그리기 (필요시)
        using (var borderBrush = new SolidBrush(Color.SkyBlue))
        {
            e.Graphics.FillRectangle(borderBrush, new Rectangle(0, 0, this.Width, this.Height));
        }
    }
}
설명
FormBorderStyle 유지:

FormBorderStyle.Sizable로 설정하여 창 크기 조정 및 기본 테두리를 유지.
DevExpress Appearance 적용:

Appearance.BackColor와 Appearance.ForeColor를 설정하여 기본 타이틀바와 텍스트 색상 변경.
폼 배경색 설정:

BackColor = Color.White로 폼 내용 영역의 배경색을 설정.
여분의 페인팅 처리:

OnPaint 메서드를 사용하여 필요한 경우 폼 내용 영역에 커스텀 배경이나 디자인 추가 가능.
결과
Windows 기본 동작 유지:

기본 폼 테두리, 크기 조정, 창 이동, 타이틀바 더블 클릭 동작이 정상적으로 유지됩니다.
타이틀바 색상 변경:

타이틀바 배경은 SkyBlue, 텍스트는 White로 변경됩니다.
창 크기 조정:

사용자는 폼의 기본 테두리를 이용해 창 크기를 자유롭게 변경할 수 있습니다.
배경 커스터마이징:

폼의 내용 영역 배경을 BackColor 또는 OnPaint를 통해 자유롭게 설정 가능.