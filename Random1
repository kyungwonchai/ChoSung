WPF에서는 Storyboard와 DoubleAnimation을 사용하여 창이 부드럽게 나타나고 사라지도록 애니메이션을 쉽게 적용할 수 있습니다. 가장 많이 사용되는 애니메이션 효과는 페이드 인/아웃과 슬라이드 인/아웃입니다. 아래에서는 각각의 애니메이션을 구현하는 방법을 설명하겠습니다.

1. 페이드 인/아웃 애니메이션
페이드 인: 창이 서서히 나타나도록 Opacity를 0에서 1로 변경하는 애니메이션입니다.
페이드 아웃: 창이 서서히 사라지도록 Opacity를 1에서 0으로 변경하는 애니메이션입니다.

WarningWindowPop1.xaml에 페이드 인/아웃 애니메이션 추가
페이드 인/아웃 애니메이션을 적용하려면 Window의 트리거에 애니메이션을 추가합니다.

WarningWindowPop1.xaml
xml
코드 복사
<Window x:Class="YourNamespace.WarningWindowPop1"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="WarningPop1" Height="500" Width="500"
        WindowStyle="None" AllowsTransparency="True" Background="#AAFF0000"
        ShowInTaskbar="False" Topmost="True" ResizeMode="NoResize"
        WindowStartupLocation="Manual"
        Opacity="0" Loaded="Window_Loaded" Closing="Window_Closing">
    
    <Window.Resources>
        <!-- 페이드 인 애니메이션 -->
        <Storyboard x:Key="FadeInStoryboard">
            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                             From="0" To="1" Duration="0:0:1" />
        </Storyboard>
        
        <!-- 페이드 아웃 애니메이션 -->
        <Storyboard x:Key="FadeOutStoryboard">
            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                             From="1" To="0" Duration="0:0:1" />
        </Storyboard>
    </Window.Resources>

    <Grid>
        <ScrollViewer VerticalScrollBarVisibility="Auto">
            <ItemsControl ItemsSource="{Binding ErrorMessagesPop1}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding ContentPop1}"
                                   FontSize="15"
                                   Foreground="{Binding ColorPop1}"
                                   TextAlignment="Center"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Center"/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>
        
        <!-- 10초 동안 경고 안 보이기 버튼 -->
        <Button Content="10초간 경고 안 보이기" 
                HorizontalAlignment="Right" 
                VerticalAlignment="Bottom" 
                Margin="10"
                Click="HideFor10SecondsButton_Click"/>
    </Grid>
</Window>
WarningWindowPop1.xaml.cs
Loaded 이벤트에서 페이드 인 애니메이션을 시작합니다.
Closing 이벤트에서 페이드 아웃 애니메이션을 시작하고, 애니메이션이 완료된 후 창을 닫습니다.
csharp
코드 복사
using System.Collections.ObjectModel;
using System.Windows;
using System.Windows.Media.Animation;

namespace YourNamespace
{
    public partial class WarningWindowPop1 : Window
    {
        public ObservableCollection<ErrorMessagePop1> ErrorMessagesPop1 { get; }

        public WarningWindowPop1(ObservableCollection<ErrorMessagePop1> errorMessagesPop1)
        {
            InitializeComponent();
            ErrorMessagesPop1 = errorMessagesPop1;
            DataContext = this;
        }

        private void Window_Loaded(object sender, RoutedEventArgs e)
        {
            // 창이 로드될 때 페이드 인 애니메이션 실행
            var fadeInStoryboard = (Storyboard)Resources["FadeInStoryboard"];
            fadeInStoryboard.Begin();
        }

        private void Window_Closing(object sender, System.ComponentModel.CancelEventArgs e)
        {
            // 창이 닫힐 때 페이드 아웃 애니메이션 실행
            e.Cancel = true; // 창 닫힘을 취소하고 애니메이션 후 닫음
            var fadeOutStoryboard = (Storyboard)Resources["FadeOutStoryboard"];
            fadeOutStoryboard.Completed += (s, _) => this.Close(); // 애니메이션 후 창 닫기
            fadeOutStoryboard.Begin();
        }

        private void HideFor10SecondsButton_Click(object sender, RoutedEventArgs e)
        {
            // 창을 닫기 전에 페이드 아웃 애니메이션 실행
            this.Close();
        }

        private void Window_MouseDownPop1(object sender, System.Windows.Input.MouseButtonEventArgs e)
        {
            this.Close();
        }
    }
}
설명
페이드 인 애니메이션: 창이 로드될 때 Opacity가 0에서 1로 변경되어 부드럽게 나타납니다.
페이드 아웃 애니메이션: 창이 닫힐 때 Opacity가 1에서 0으로 변경되어 부드럽게 사라집니다.