셀 데이터를 MSSQL 2014에 업로드하는 작업을 위해, Office.Interop.Excel을 사용하는 C# 코드와 VBA 코드를 모두 제공하겠습니다. 두 방식의 속도는 다양한 요인에 따라 달라질 수 있으며, 상황에 따라 다른 방식이 더 적합할 수 있습니다.

1. C# 사용 (Office.Interop.Excel)
이 C# 예제에서는 Microsoft.Office.Interop.Excel 라이브러리를 사용해 엑셀 파일을 읽고, 데이터를 MSSQL 데이터베이스에 업로드하는 과정을 보여줍니다. 데이터베이스 연결 및 명령 실행을 위해 ADO.NET을 사용합니다.

csharp
Copy code
using System;
using System.Data.SqlClient;
using Excel = Microsoft.Office.Interop.Excel;

namespace ExcelToMssql
{
    class Program
    {
        static void Main(string[] args)
        {
            // 엑셀 파일 열기
            Excel.Application excelApp = new Excel.Application();
            Excel.Workbook workbook = excelApp.Workbooks.Open("파일경로");
            Excel.Worksheet worksheet = workbook.Sheets[1];
            Excel.Range range = worksheet.UsedRange;

            // 데이터베이스 연결 설정
            string connectionString = "Server=서버주소;Database=데이터베이스명;User Id=사용자명;Password=비밀번호;";
            SqlConnection conn = new SqlConnection(connectionString);

            try
            {
                conn.Open();

                // 엑셀 파일 읽기 및 데이터베이스에 업로드
                for (int row = 3; row <= range.Rows.Count; row++)
                {
                    if ((range.Cells[row, 5] as Excel.Range).Value2.ToString() != "자재코드")
                    {
                        throw new Exception("파일 형식 오류");
                    }

                    string bValue = (range.Cells[row, 2] as Excel.Range).Value2.ToString();
                    string cValue = (range.Cells[row, 3] as Excel.Range).Value2.ToString();
                    string dValue = (range.Cells[row, 4] as Excel.Range).Value2.ToString();
                    string eValue = (range.Cells[row, 5] as Excel.Range).Value2.ToString();

                    // 데이터베이스에 데이터 업데이트 또는 삽입
                    string query = $"IF EXISTS (SELECT * FROM 테이블명 WHERE B열='{bValue}') " +
                                   $"UPDATE 테이블명 SET C열='{cValue}', D열='{dValue}', E열='{eValue}' WHERE B열='{bValue}' " +
                                   $"ELSE " +
                                   $"INSERT INTO 테이블명 (B열, C열, D열, E열) VALUES ('{bValue}', '{cValue}', '{dValue}', '{eValue}')";

                    SqlCommand command = new SqlCommand(query, conn);
                    command.ExecuteNonQuery();
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message);
            }
            finally
            {
                conn.Close();
                workbook.Close();
                excelApp.Quit();
            }
        }
    }
}
2. VBA 사용
VBA 코드는 엑셀 내부에서 작성되며, 직접 MSSQL 서버에 연결하여 데이터를 업데이트하거나 삽입합니다. ADO를 사용하여 데이터베이스 작업을 수행합니다.

vba
Copy code
Sub UploadDataToMSSQL()
    Dim conn As Object
    Set conn = CreateObject("ADODB.Connection")
    Dim cmd As Object
    Set cmd = CreateObject("ADODB.Command")
    Dim rs As Object
    Set rs = CreateObject("ADODB.Recordset")

    ' 데이터베이스 연결
    conn.Open "Provider=SQLOLEDB;Data Source=서버주소;Initial Catalog=데이터베이스명;User ID=사용자명;Password=비밀번호;"

    Dim ws As Worksheet
    Set ws = ThisWorkbook.Sheets("시트명")
    
    Dim lastRow As Long
    lastRow = ws.Cells(ws.Rows.Count, "E").End(xlUp).Row

    ' 데이터 처리 및 업로드
    Dim i As Long
    For i = 3 To lastRow
        If ws.Cells(i, 5).Value <> "자재코드" Then
            MsgBox "파일 형식 오류"
            Exit Sub
        End If

        Dim bValue As String, cValue As String, dValue As String, eValue As String
        bValue = ws.Cells(i, 2).Value
        cValue = ws.Cells(i, 3).Value
        dValue = ws.Cells(i, 4).Value
        eValue = ws.Cells(i, 5).Value

        ' 쿼리 작성 및 실행
        Dim query As String
        query = "IF EXISTS (SELECT * FROM 테이블명 WHERE B열='" & bValue & "') " & _
                "UPDATE 테이블명 SET C열='" & cValue & "', D열='" & dValue & "', E열='" & eValue & "' WHERE B열='" & bValue & "' " & _
                "ELSE " & _
                "INSERT INTO 테이블명 (B열, C열, D열, E열) VALUES ('" & bValue & "', '" & cValue & "', '" & dValue & "', '" & eValue & "')"
        
        conn.Execute query
    Next i

    ' 연결 종료
    conn.Close
    Set conn = Nothing
    Set cmd = Nothing
    Set rs = Nothing
End Sub
두 코드 모두 엑셀의 특정 열 값을 기반으로 데이터를 읽고 MSSQL 데이터베이스에 업데이트하거나 삽입합니다. C#과 VBA 각각의 장단점을 고려하