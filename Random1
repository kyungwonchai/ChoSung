니다.

먼저, 이미지의 크기를 읽어오는 부분입니다:

csharp
Copy code
using System.Drawing;

// 이미지 파일 경로
string imagePath = "path/to/your/image.jpg";

// 이미지를 로드합니다.
using (Image image = Image.FromFile(imagePath))
{
    // 이미지의 너비와 높이를 가져옵니다.
    int width = image.Width;
    int height = image.Height;

    // 여기에서 데이터베이스에 너비와 높이를 저장하는 코드를 추가합니다.
    // 예를 들어, width와 height 값을 데이터베이스에 저장합니다.
}
다음으로, 데이터베이스에 크기 정보를 저장하는 부분입니다. 여기에서는 SQL Server를 사용하는 예를 들겠습니다:

csharp
Copy code
using System.Data.SqlClient;

// 데이터베이스 연결 문자열
string connectionString = "Your Connection String";

// SQL 쿼리
string query = "INSERT INTO ImageInfo (Width, Height) VALUES (@width, @height)";

using (SqlConnection connection = new SqlConnection(connectionString))
{
    using (SqlCommand command = new SqlCommand(query, connection))
    {
        // 매개변수를 쿼리에 추가합니다.
        command.Parameters.AddWithValue("@width", width);
        command.Parameters.AddWithValue("@height", height);

        connection.Open();
        command.ExecuteNonQuery();
    }
}
이 코드는 이미지의 크기를 읽고, SQL Server 데이터베이스에 ImageInfo라는 테이블에 너비와 높이를 저장합니다. 실제 사용 환경에 맞게 데이터베이스 연결 문자열, 테이블 이름, 필드 이름 등을 수정해