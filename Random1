import bpy
import random
from math import radians

# 씬 초기화
bpy.ops.wm.read_factory_settings(use_empty=True)

# 씬 배경 색상 설정
bpy.context.scene.world.use_nodes = True
bg_nodes = bpy.context.scene.world.node_tree.nodes
bg_nodes["Background"].inputs[0].default_value = (0, 0, 0, 1)  # 검은색 배경

# 카메라 생성 및 위치 설정
camera = bpy.data.objects.new("Camera", bpy.data.cameras.new("Camera"))
bpy.context.collection.objects.link(camera)
camera.location = (0, -10, 5)
camera.rotation_euler = (radians(90), 0, radians(90))
bpy.context.scene.camera = camera

# 기본 조명 설정 (빛의 깊이감 강조)
bpy.ops.object.light_add(type='SUN')
sun = bpy.context.object
sun.rotation_euler = (radians(60), radians(0), radians(60))
sun.data.energy = 5

# 컬러 큐브 설정
def create_colored_cube(location, scale, color):
    bpy.ops.mesh.primitive_cube_add(size=scale, location=location)
    cube = bpy.context.object
    mat = bpy.data.materials.new(name="CubeMaterial")
    mat.use_nodes = True
    bsdf = mat.node_tree.nodes["Principled BSDF"]
    bsdf.inputs["Emission"].default_value = (*color, 1)  # 색상과 발광 설정
    bsdf.inputs["Emission Strength"].default_value = 10  # 발광 강도
    cube.data.materials.append(mat)

# 여러 개의 컬러 큐브 생성
colors = [
    (1, 0, 0),  # 빨강
    (0, 1, 0),  # 초록
    (0, 0, 1),  # 파랑
    (1, 0.5, 0),  # 주황
    (0.5, 0, 1),  # 보라
    (0, 1, 1),  # 청록
]

for i in range(30):  # 랜덤하게 큐브 생성
    loc_x = random.uniform(-5, 5)
    loc_y = random.uniform(-5, 5)
    loc_z = random.uniform(-1, 5)
    scale = random.uniform(0.3, 0.8)
    color = random.choice(colors)
    create_colored_cube((loc_x, loc_y, loc_z), scale, color)

# 블룸 효과 적용 (미래지향적인 발광 표현)
bpy.context.scene.eevee.use_bloom = True
bpy.context.scene.eevee.bloom_threshold = 0.1
bpy.context.scene.eevee.bloom_intensity = 0.5

# 카메라 피사계 심도 적용
bpy.context.scene.camera.data.dof.use_dof = True
bpy.context.scene.camera.data.dof.focus_distance = 10
bpy.context.scene.camera.data.dof.aperture_fstop = 0.5

# 렌더링 설정
bpy.context.scene.render.engine = 'BLENDER_EEVEE'
bpy.context.scene.render.image_settings.file_format = 'PNG'
bpy.context.scene.render.filepath = "/tmp/futuristic_render.png"

# 렌더링 실행
bpy.ops.render.render(write_still=True)
