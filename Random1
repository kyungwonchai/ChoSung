Shell 또는 Python을 사용하여 파일 인코딩을 지정할 수 있습니다. 이 과정을 통해 파일을 항상 UTF-8로 저장하여 다른 PC에서도 인코딩 문제 없이 열리도록 할 수 있습니다.

방법 1: PowerShell 스크립트
PowerShell을 사용하여 파일을 UTF-8로 강제 저장합니다.

스크립트 명령어:
powershell
코드 복사
# 기존 텍스트 파일을 UTF-8로 강제 변환하여 저장
$sourceFile = "C:\경로\원본파일.txt"
$targetFile = "C:\경로\변환된파일.txt"

# 파일 내용을 읽어 UTF-8로 저장
Get-Content -Path $sourceFile | Out-File -FilePath $targetFile -Encoding UTF8

Write-Host "파일이 UTF-8 형식으로 저장되었습니다: $targetFile"
실행 방법:
PowerShell 실행

Windows + X → Windows PowerShell (관리자) 선택.
명령어 실행

위 코드를 PowerShell에 붙여넣습니다.
$sourceFile과 $targetFile 경로를 적절히 수정합니다.
방법 2: Python 스크립트
Python을 사용하여 파일을 UTF-8로 저장합니다. 이 방법은 특히 여러 파일을 한 번에 변환할 때 유용합니다.

Python 스크립트:
python
코드 복사
# 텍스트 파일을 UTF-8로 강제 변환
def convert_to_utf8(source_file, target_file):
    with open(source_file, 'r', encoding='utf-8', errors='replace') as infile:
        content = infile.read()
    with open(target_file, 'w', encoding='utf-8') as outfile:
        outfile.write(content)

# 파일 경로 설정
source_file = r"C:\경로\원본파일.txt"
target_file = r"C:\경로\변환된파일.txt"

# 변환 실행
convert_to_utf8(source_file, target_file)
print(f"파일이 UTF-8로 저장되었습니다: {target_file}")
실행 방법:
Python이 설치되어 있는지 확인하세요.

없다면 Python 공식 사이트에서 설치합니다.
스크립트를 저장한 후 실행:

위 코드를 convert_utf8.py로 저장합니다.
명령 프롬프트를 열고 다음을 실행:
cmd
코드 복사
python convert_utf8.py
방법 3: 명령 프롬프트에서 PowerShell 사용
Windows 명령 프롬프트(CMD)에서도 PowerShell 명령어를 사용할 수 있습니다.

명령어:
cmd
코드 복사
powershell -Command "Get-Content -Path 'C:\경로\원본파일.txt' | Out-File -FilePath 'C:\경로\변환된파일.txt' -Encoding UTF8"
추가 옵션: UTF-8 BOM 포함 강제 저장
UTF-8 BOM(Byte Order Mark)을 포함하도록 저장하려면 -Encoding UTF8BOM 옵션을 사용합니다.

PowerShell 명령어 (UTF-8 BOM 포함):
powershell
코드 복사
Get-Content -Path "C:\경로\원본파일.txt" | Out-File -FilePath "C:\경로\변환된파일.txt" -Encoding UTF8BOM
Python 코드 (UTF-8 BOM 포함):
python
코드 복사
# 텍스트 파일을 UTF-8 BOM으로 저장
def convert_to_utf8_bom(source_file, target_file):
    with open(source_file, 'r', encoding='utf-8', errors='replace') as infile:
        content = infile.read()
    with open(target_file, 'w', encoding='utf-8-sig') as outfile:
        outfile.write(content)

# 파일 경로 설정
source_file = r"C:\경로\원본파일.txt"
target_file = r"C:\경로\변환된파일_utf8_bom.txt"

convert_to_utf8_bom(source_file, target_file)
print(f"파일이 UTF-8 BOM으로 저장되었습니다: {target_file}")
자동화 옵션
여러 파일을 한 번에 UTF-8로 저장하려면 위 코드를 디렉토리 전체에 적용할 수 있습니다.

Python 예제 (폴더 내 모든 파일 변환):
python
코드 복사
import os

# 폴더 내 모든 파일을 UTF-8로 변환
def convert_folder_to_utf8(folder_path):
    for filename in os.listdir(folder_path):
        source_file = os.path.join(folder_path, filename)
        target_file = os.path.join(folder_path, f"utf8_{filename}")
        with open(source_file, 'r', encoding='utf-8', errors='replace') as infile:
            content = infile.read()
        with open(target_file, 'w', encoding='utf-8') as outfile:
            outfile.write(content)
        print(f"파일 변환 완료: {target_file}")

# 변환 실행
folder_path = r"C:\경로\폴더"
convert_folder_to_utf8(folder_path)
결론
PowerShell: 간단한 UTF-8 변환 명령.