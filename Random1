하려면 아래의 단계를 따르시면 됩니다. 여기에서는 간단한 MVVM 패턴을 사용하여 이 작업을 수행합니다.

    필요한 네임스페이스를 참조합니다:

csharp

using System;
using System.Collections.ObjectModel;
using System.Windows.Input;
using DevExpress.Xpf.Core;

    RelayCommand 클래스를 구현합니다:

csharp

public class RelayCommand : ICommand
{
    private readonly Action<object> execute;
    private readonly Func<object, bool> canExecute;

    public event EventHandler CanExecuteChanged
    {
        add { CommandManager.RequerySuggested += value; }
        remove { CommandManager.RequerySuggested -= value; }
    }

    public RelayCommand(Action<object> execute, Func<object, bool> canExecute = null)
    {
        this.execute = execute;
        this.canExecute = canExecute;
    }

    public bool CanExecute(object parameter)
    {
        return this.canExecute == null || this.canExecute(parameter);
    }

    public void Execute(object parameter)
    {
        this.execute(parameter);
    }
}

    ViewModel 클래스를 구현합니다:

csharp

public class ViewModel
{
    public ObservableCollection<ButtonModel> Buttons { get; set; }

    public ViewModel()
    {
        Buttons = new ObservableCollection<ButtonModel>
        {
            new ButtonModel { Content = "Button1", Command = new RelayCommand(OnButtonClicked) },
            new ButtonModel { Content = "Button2", Command = new RelayCommand(OnButtonClicked) },
            // ...더 많은 버튼
        };
    }

    private void OnButtonClicked(object obj)
    {
        var buttonContent = obj as string;
        if (buttonContent != null)
        {
            // 여기에 버튼 클릭에 대한 로직을 추가합니다.
            Console.WriteLine($"{buttonContent} 클릭됨");
        }
    }
}

    ButtonModel 클래스를 구현합니다:

csharp

public class ButtonModel
{
    public string Content { get; set; }
    public ICommand Command { get; set; }
}

    XAML에서 ListBox를 설정하고 버튼 목록을 바인딩합니다:

xml

<Window x:Class="YourNamespace.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
        xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid">
    <Grid>
        <ListBox ItemsSource="{Binding Buttons}">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Button Content="{Binding Content}" Command="{Binding Command}" CommandParameter="{Binding Content}" />
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
    </Grid>
</Window>

    MainWindow.xaml.cs 파일에서 ViewModel 인스턴스를 만들고 DataContext를 설정합니다:

csharp

public MainWindow()
{
    InitializeComponent();
    DataContext = new ViewModel();
}

이 설정을 사용하면, DevExpress WPF 22.2 버전에서 버튼 목록을 만들고 각 버튼 클릭 시 특정 함수를 실행할 수 있습니다. 각 버튼의 내용은 OnButtonClicked 함수로