네, VBA에서 사용자 정의 함수(Function)를 만들 때 명시적으로 반환 값을 지정하지 않고 단순히 특정 동작만 실행하도록 만들 수는 있습니다. 하지만 이런 경우에는 일반적으로 Sub 프로시저를 사용하는 것이 더 적절하며, 둘 사이에는 몇 가지 중요한 차이점이 있습니다.

1. Function (함수)의 경우

목적: Function은 특정 계산을 수행하고 그 결과 값을 반환하는 것이 주된 목적입니다.
반환 값: Function 이름 자체에 값을 할당하여 반환 값을 지정합니다 (예: MyFunction = 결과값).
만약 Function 내에서 반환 값을 명시적으로 지정하지 않으면, 해당 함수의 데이터 형식에 따른 기본값이 반환됩니다.
Variant (기본값): Empty
Integer, Long, Double 등 숫자형: 0
String: 빈 문자열 ("")
Boolean: False
Object: Nothing
호출:
VBA 코드 내에서는 변수에 할당하거나 식의 일부로 사용될 수 있습니다: myValue = MyFunction(arg1)
워크시트 셀에서 직접 호출 가능: =MyFunction(A1) 처럼 셀 수식으로 사용할 수 있습니다. 이 경우 함수가 반환하는 값이 셀에 표시됩니다. 만약 동작만 수행하고 값을 반환하지 않으면 (또는 기본값이 반환되면) 셀에는 0, FALSE 등이 표시될 수 있어 의도치 않은 결과가 나올 수 있습니다.
예시 (Function으로 동작만 실행하려는 경우 - 권장하지 않음):

VBA

Function ChangeCellColor(targetCell As Range) As Boolean '반환 타입을 명시해도 되고, 안해도 Variant로 처리됨
    targetCell.Interior.Color = vbRed
    ' 반환 값을 명시적으로 설정하지 않으면 기본값(여기서는 False)이 반환됨
    ' ChangeCellColor = True ' 이렇게 하면 True가 반환됨
End Function

Sub TestFunction()
    Dim result As Boolean
    result = ChangeCellColor(Range("A1")) ' result에는 False (또는 명시적 반환값)가 담김
    ' 또는 Call ChangeCellColor(Range("A1")) / ChangeCellColor Range("A1")
    MsgBox "A1셀 색상 변경 완료. 함수 반환값: " & result
End Sub
만약 위 ChangeCellColor 함수를 워크시트 셀에 =ChangeCellColor(A1) 이렇게 쓰면, A1셀 색이 바뀌고 해당 셀에는 FALSE (또는 명시적 반환값)가 표시됩니다.

2. Sub (서브 프로시저)의 경우

목적: Sub는 특정 동작이나 작업을 수행하는 것이 주된 목적이며, 값을 반환하지 않습니다.
반환 값: 값을 반환할 수 없습니다.
호출:
VBA 코드 내에서 직접 호출합니다: MySub arg1 또는 Call MySub(arg1).
워크시트 셀에서 직접 호출 불가능: 셀 수식으로 사용할 수 없습니다. (버튼 클릭 이벤트 등에 연결하여 사용)
예시 (Sub로 동작만 실행하는 경우 - 권장):

VBA

Sub ChangeCellColorSub(targetCell As Range)
    targetCell.Interior.Color = vbBlue
End Sub

Sub TestSub()
    ChangeCellColorSub Range("B1") ' 또는 Call ChangeCellColorSub(Range("B1"))
    MsgBox "B1셀 색상 변경 완료 (Sub 사용)"
End Sub
Function과 Sub의 차이점 요약 (동작 실행 목적일 때):

특징	Function (동작만 수행 시)	Sub
주 목적	값 반환 (동작만 하면 목적에 어긋남)	동작 수행
반환 값	있음 (명시하지 않으면 데이터 타입 기본값)	없음
워크시트 호출	가능 (셀에 반환값/기본값 표시)	불가능
코드 가독성	혼란 유발 가능 (값을 반환할 것으로 예상)	명확함 (동작만 수행할 것으로 예상)
권장 사용	비권장 (동작만 할 거면 Sub 사용)	권장
결론:

VBA에서 단순히 특정 동작(예: 셀 서식 변경, 파일 저장, 메시지 박스 표시 등)만 실행하고 별도의 결과 값을 반환할 필요가 없다면, Sub 프로시저를 사용하는 것이 훨씬 명확하고 올바른 방법입니다.