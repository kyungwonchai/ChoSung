녕하세요. .exe로 패키징된 PyQt5 애플리케이션을 다시 .py 소스 코드로 디버깅할 때 자주 발생하는 환경 설정 문제입니다. 다른 개발 환경에서 만들어진 .exe 파일은 현재 사용하고 계신 파이참(PyCharm)의 파이썬 환경과 라이브러리 버전이 일치하지 않아 오류가 나는 경우가 대부분입니다.

가장 가능성이 높은 원인은 파이참이 사용하는 파이썬 인터프리터(가상환경 등)에 PyQt5가 제대로 설치되지 않았기 때문입니다.

아래 단계를 순서대로 따라 해보시면 문제를 해결하실 수 있을 겁니다.

해결 단계
1. 파이참(PyCharm)의 파이썬 인터프리터 확인 및 패키지 설치
가장 먼저 현재 프로젝트가 어떤 파이썬 환경을 사용하고 있는지 확인하고, 그곳에 PyQt5를 설치해야 합니다.

파이참에서 File > Settings (또는 Ctrl+Alt+S) 로 들어갑니다.

Project: [프로젝트 이름] > Python Interpreter 로 이동합니다.

오른쪽 패키지 목록(Package)에 PyQt5가 있는지 확인합니다.

만약 없다면, **+ 버튼 (Install)**을 누르고 PyQt5를 검색하여 설치합니다.

터미널을 이용하는 것을 선호하신다면, 파이참 하단의 Terminal 탭을 열고 아래 명령어를 직접 입력하여 설치할 수도 있습니다. 이 터미널은 현재 프로젝트의 인터프리터 환경에 맞춰져 있습니다.

Bash

pip install PyQt5
(중요) pyqt5-tools도 함께 설치해 주세요. UI 디자인 파일(.ui)을 파이썬 코드로 변환하거나 다른 Qt 도구를 사용할 때 필요하며, 종종 이 패키지가 없어 문제가 되기도 합니다.

Bash

pip install pyqt5-tools
2. Qt 플랫폼 플러그인 오류 해결 (가장 흔한 경우)
만약 설치 후에도 아래와 비슷한 오류가 발생한다면, Qt 플랫폼 플러그인 경로 문제입니다.

qt.qpa.plugin: Could not find the Qt platform plugin "windows" in ""
This application failed to start because no Qt platform plugin could be initialized.
이것은 PyQt5가 자신의 필수 구성 요소(플랫폼 플러그인)를 어디서 찾아야 할지 몰라서 생기는 문제입니다. 아래와 같이 환경 변수를 설정하여 해결할 수 있습니다.

platforms 폴더 위치 찾기:

파이참 터미널에서 아래 명령어를 실행하여 PyQt5가 설치된 경로를 찾습니다.

Bash

pip show PyQt5
출력된 Location: 경로(예: c:\...\lib\site-packages)로 탐색기를 열어 이동합니다.

해당 폴더 안에서 PyQt5\Qt5\plugins\platforms 폴더를 찾습니다. 이 폴더 안에는 qwindows.dll과 같은 파일이 있어야 합니다.

이 platforms 폴더의 전체 경로를 복사합니다. (예: C:\Users\YourUser\PycharmProjects\MyProject\venv\Lib\site-packages\PyQt5\Qt5\plugins\platforms)

파이참 실행 설정에 환경 변수 추가:

파이참 오른쪽 상단의 실행 설정(보통 main 또는 현재 파일 이름)을 클릭하고 **Edit Configurations...**를 선택합니다.

왼쪽에서 현재 실행하려는 파이썬 스크립트(main.py)를 선택합니다.

Environment variables 항목 옆의 폴더 아이콘을 클릭합니다.

+ 버튼을 눌러 새 환경 변수를 추가합니다.

Name: QT_QPA_PLATFORM_PLUGIN_PATH

Value: 위에서 복사한 platforms 폴더의 전체 경로

OK를 눌러 저장하고 다시 스크립트를 실행합니다.

체크리스트 및 요약
위 과정이 복잡하게 느껴지신다면, 아래 체크리스트를 통해 다시 한번 확인해 보세요.

✅ 1. 올바른 인터프리터 확인: 파이참의 Settings > Python Interpreter에서 프로젝트가 사용하는 가상환경(venv)이 맞는지 확인했나요?

✅ 2. PyQt5 설치: 현재 인터프리터 환경에 PyQt5가 설치되어 있나요? (pip install PyQt5)

✅ 3. PyQt5-tools 설치: 보조 도구인 pyqt5-tools를 설치했나요? (pip install pyqt5-tools)

✅ 4. 환경 변수 설정 (필요시): "platform plugin" 오류가 발생하면, Run/Debug Configurations에 QT_QPA_PLATFORM_PLUGIN_PATH 환경 변수를 올바르게 추가했나요?

만약 이 방법으로도 해결되지 않는다면, 정확히 어떤 오류 메시지가 출력되는지 알려주시면 추가적으로 더 자세한 원인을 파악하는 데 도움이 됩니다.






동영상
