주어진 요구 사항에 따라 RecyclerView의 데이터를 CSV로 내보내는 기능을 구현하겠습니다. 이 기능은 다음과 같은 단계를 포함합니다:

데이터 정렬: SentValue 컬럼의 값을 기준으로 데이터를 시간순으로 정렬합니다.
SentValue 컬럼에서 첫 14자리 추출: 이 값을 colpart로 저장하고, 알파벳 순으로 정렬합니다.
CSV 파일 생성 및 저장: c:\text\csv2 디렉토리에 파일 이름에 현재 날짜와 시간을 포함하여 저장합니다.
단계별 구현
데이터 모델 확장: 기존 데이터 모델에 colpart를 추가합니다.
데이터 정렬 및 가공: 데이터를 SentValue 컬럼의 첫 14자리 값으로 가공한 후 정렬합니다.
CSV 파일 생성 및 내보내기: 알파벳 순으로 정렬한 후, 시간순으로 데이터를 나열하여 CSV로 내보냅니다.
코드 구현
먼저 데이터 모델과 어댑터를 수정한 다음, 데이터를 가공하고 CSV로 내보내는 기능을 추가하겠습니다.

1. TableData 모델 확장
kotlin
코드 복사
// app/src/main/java/com/dxmxsmd/routeracralarm/TableData.kt
package com.dxmxsmd.routeracralarm

data class TableData(
    val column1: String,
    val column2: String,
    val sentValue: String,
    val timestamp: String // 시간을 나타내는 컬럼 추가
) {
    val colpart: String
        get() = sentValue.take(14) // SentValue의 처음 14자리 추출
}
colpart 프로퍼티를 추가하여, SentValue의 첫 14자리를 추출합니다.
2. CSV 내보내기 함수 구현
아래는 데이터를 정렬하고 CSV 파일로 내보내는 함수입니다.

kotlin
코드 복사
package com.dxmxsmd.routeracralarm

import android.os.Environment
import android.util.Log
import java.io.File
import java.io.FileWriter
import java.text.SimpleDateFormat
import java.util.Date
import java.util.Locale

class CsvExporter {

    fun exportToCsv(dataList: List<TableData>) {
        // SentValue의 첫 14자를 추출한 후 알파벳 순으로 정렬하고, 시간순으로 정렬
        val sortedData = dataList.sortedWith(compareBy({ it.colpart }, { it.timestamp }))

        // 현재 날짜와 시간을 가져와 파일 이름에 사용
        val dateFormat = SimpleDateFormat("yyyyMMddHHmmss", Locale.getDefault())
        val currentTime = dateFormat.format(Date())
        val fileName = "c:\\text\\csv2\\$currentTime.csv"

        try {
            val file = File(fileName)
            if (!file.parentFile.exists()) {
                file.parentFile.mkdirs() // 디렉토리가 없으면 생성
            }
            val writer = FileWriter(file)

            // CSV 헤더 작성
            writer.append("colpart, column1, column2, sentValue, timestamp\n")

            // 데이터 작성
            for (data in sortedData) {
                writer.append("${data.colpart}, ${data.column1}, ${data.column2}, ${data.sentValue}, ${data.timestamp}\n")
            }

            writer.flush()
            writer.close()
            Log.d("CsvExporter", "CSV 파일이 성공적으로 저장되었습니다: $fileName")
        } catch (e: Exception) {
            Log.e("CsvExporter", "CSV 파일 저장 실패", e)
        }
    }
}
정렬: colpart를 기준으로 알파벳 순으로 정렬하고, 이후 timestamp를 기준으로 시간순으로 정렬합니다.
파일 이름: yyyyMMddHHmmss 형식의 현재 날짜와 시간을 포함하여 파일 이름을 지정합니다.
파일 저장 경로: 파일은 c:\text\csv2 경로에 저장됩니다. 디렉토리가 존재하지 않으면 자동으로 생성됩니다.
3. CSV 내보내기 호출
MainActivity 또는 원하는 위치에서 CSV 내보내기 기능을 호출합니다.

kotlin
코드 복사
// 예: MainActivity에서 데이터 리스트를 가져온 후 CSV로 내보내기
val dataList = listOf(
    TableData("ERR1", "Sample", "12345678901234ABCDE", "2024-10-21 10:30:00"),
    TableData("ERR2", "Sample", "12345678901234XYZAB", "2024-10-21 11:30:00")
    // 더 많은 데이터를 여기에 추가
)

val exporter = CsvExporter()
exporter.exportToCsv(dataList)
주의 사항
디렉토리 및 파일 권한:

Android에서는 파일 시스템 접근 권한이 필요합니다. Android 11(API 30) 이상에서는 앱의 외부 저장소 접근이 제한되므로, 이를 감안하여 디렉토리를 설정해야 합니다.
파일 저장 위치와 권한이 문제가 될 수 있으므로, 파일을 앱의 내부 저장소에 저장하거나 사용자에게 권한을 요청해야 합니다.
정렬 및 가공:

데이터는 colpart를 기준으로 알파벳 순으로 정렬되고, 그 다음에 시간순으로 정렬됩니다.
CSV 형식:
