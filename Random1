YourHub는 예시에 사용한 임의의 클래스 이름입니다. 실제로 구현할 때는 YourHub를 당신이 작성할 실제 SignalR Hub 클래스의 이름으로 바꾸면 됩니다. 이 클래스는 클라이언트와 서버간에 메시지를 주고받을 수 있게 해주는 역할을 합니다.

예를 들면, 아래와 같이 SignalR Hub를 구현할 수 있습니다.

csharp

using Microsoft.AspNetCore.SignalR;

public class EditHub : Hub
{
    public async Task UpdateEditStatus(string key1, string username, string column)
    {
        await Clients.Others.SendAsync("ReceiveEditStatus", key1, username, column);
    }
}

위 코드에서 EditHub는 SignalR Hub의 역할을 하는 클래스입니다. UpdateEditStatus는 클라이언트에서 호출할 수 있는 메서드입니다. 이 메서드가 호출되면, ReceiveEditStatus 이라는 클라이언트 측 메서드가 호출되고, 다른 클라이언트들에게 key1, username, column 정보를 보냅니다.

그리고 이 EditHub를 사용하기 위해서는 Program.cs에 다음과 같이 추가합니다.

csharp

var builder = WebApplication.CreateBuilder(args);
// ... 기존 코드
builder.Services.AddSignalR();

var app = builder.Build();

app.MapHub<EditHub>("/editHub"); // EditHub를 "/editHub" URL에 맵핑
// ... 기존 코드

app.Run();

이렇게 설정하면, 서버 측에 EditHub라는 SignalR Hub가 준비됩니다. 클라이언트에서 이 Hub와 통신할 수 있게 됩니다.