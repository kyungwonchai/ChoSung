클립보드 이미지 비율(50~100%) 조절하여 리사이징하는 C# 코드
네, 사용자가 지정하는 비율(50% ~ 100%)에 따라 클립보드 이미지를 동적으로 리사이징하여 System.Drawing.Image 변수 aa에 저장하도록 코드를 수정할 수 있습니다.

비율을 저장할 변수를 추가하고, 이 변수를 사용하여 새로운 이미지 크기를 계산하는 로직을 적용하면 됩니다.

핵심 코드
resizeRatioPercent 변수를 사용하여 50에서 100 사이의 값으로 이미지 크기를 조절하는 코드입니다.

C#

using System;
using System.Drawing;
using System.Drawing.Drawing2D;
using System.Windows.Forms;

// ... 클래스 및 메서드 내부

// 1. 이미지 리사이징 비율을 변수로 선언 (50 ~ 100 사이의 정수 값)
int resizeRatioPercent = 75; // 예시로 75%로 설정. 이 값을 변경하여 비율 조절.

// 최종 리사이징된 이미지를 저장할 변수
System.Drawing.Image aa = null;

// 2. 비율 값 유효성 검사 (50 미만은 50으로, 100 초과는 100으로 처리)
// C# 7.0 이상에서는 Math.Clamp를 사용하여 간결하게 표현할 수 있습니다.
// resizeRatioPercent = Math.Clamp(resizeRatioPercent, 50, 100);
if (resizeRatioPercent < 50) resizeRatioPercent = 50;
if (resizeRatioPercent > 100) resizeRatioPercent = 100;

// 클립보드에 이미지 데이터가 있는지 확인합니다.
if (Clipboard.ContainsImage())
{
    // 클립보드에서 원본 이미지를 가져옵니다.
    using (Image clipboardImage = Clipboard.GetImage())
    {
        if (clipboardImage != null)
        {
            // 3. 설정된 비율로 새로운 크기를 계산합니다.
            //    정확한 계산을 위해 double형으로 비율을 먼저 계산 후 int로 변환합니다.
            double ratio = resizeRatioPercent / 100.0;
            int newWidth = (int)(clipboardImage.Width * ratio);
            int newHeight = (int)(clipboardImage.Height * ratio);

            // 새로운 크기를 갖는 Bitmap 객체를 생성합니다.
            var resizedBitmap = new Bitmap(newWidth, newHeight);

            // Graphics 객체를 사용하여 이미지 품질 및 렌더링 옵션을 설정합니다.
            using (Graphics graphics = Graphics.FromImage(resizedBitmap))
            {
                // 고품질 리사이징을 위한 보간법 설정
                graphics.InterpolationMode = InterpolationMode.HighQualityBicubic;
                graphics.PixelOffsetMode = PixelOffsetMode.HighQuality;
                graphics.SmoothingMode = SmoothingMode.HighQuality;

                // 원본 이미지를 새로운 크기의 Bitmap에 그립니다.
                graphics.DrawImage(clipboardImage, new Rectangle(0, 0, newWidth, newHeight));
            }

            // 리사이징된 Bitmap을 최종 변수 aa에 할당합니다.
            aa = resizedBitmap;
        }
    }
}


if (aa != null)
{
    Console.WriteLine($"이미지가 {resizeRatioPercent}% 비율로 리사이징되었습니다. 새로운 크기: {aa.Width}x{aa.Height}");
    // 예: PictureBox에 이미지 표시
    // pictureBox1.Image = aa;
}
else
{
    Console.WriteLine("클립보드에 이미지가 없거나 가져오는 데 실패했습니다.");
}
코드 변경점 및 해설
resizeRatioPercent 변수 선언

int resizeRatioPercent = 75;

이미지 크기를 조절할 비율을 저장하는 정수형 변수를 선언합니다. 이 변수의 값을 50에서 100 사이로 변경하면 해당 비율로 이미지가 리사이징됩니다.

비율 유효성 검사

if (resizeRatioPercent < 50) resizeRatioPercent = 50;

if (resizeRatioPercent > 100) resizeRatioPercent = 100;

사용자가 설정한 비율이 50~100 범위를 벗어나는 경우를 대비하여, 최소값인 50과 최대값인 100으로 강제 조정하는 방어 코드입니다. 이를 통해 예외적인 상황을 방지하고 안정성을 높일 수 있습니다.

팁: .NET Core 2.0 / .NET Standard 2.1 / C# 7.2 이상 환경이라면 resizeRatioPercent = Math.Clamp(resizeRatioPercent, 50, 100); 한 줄로 더 간결하게 표현할 수 있습니다.

새로운 크기 계산 로직 변경

double ratio = resizeRatioPercent / 100.0;

int newWidth = (int)(clipboardImage.Width * ratio);

int newHeight = (int)(clipboardImage.Height * ratio);

기존의 / 2 로직 대신, resizeRatioPercent 변수를 사용하여 비율을 계산합니다.

중요: 100.0으로 나누어 double (실수) 연산을 수행해야 합니다. 만약 100으로 나누면 정수 나눗셈이 되어 75 / 100의 결과가 0이 되어버리므로, 반드시 소수점을 포함하여 실수 연산을 하도록 해야 합니다.

계산된 실수 결과값을 최종적으로 (int)로 형변환하여 픽셀 크기를 정합니다.

사용 예시
위 코드에서 resizeRatioPercent 변수 값만 변경하면 원하는 결과물을 얻을 수 있습니다.

원본 크기의 90%로 리사이징하고 싶을 때:

C#

int resizeRatioPercent = 90;
리사이징 없이 원본 그대로 사용하고 싶을 때 (100%):

C#

int resizeRatioPercent = 100;
최소 비율인 50%로 리사이징하고 싶을 때:

C#