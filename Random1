위 폴더까지 모든 .txt 파일을 찾기 위해 os.walk() 함수를 사용하면 됩니다. os.walk() 함수는 특정 폴더 안에 있는 모든 하위 폴더를 순회하며 파일을 검색할 수 있어, c:\abcd 폴더 내부의 모든 하위 폴더에서 .txt 파일을 쉽게 찾을 수 있습니다.

다음과 같이 코드를 수정해 드리겠습니다:

python
코드 복사
import os
import re
from datetime import datetime

# 원본 폴더와 저장할 폴더 경로
source_folder = r"c:\abcd"
destination_folder = r"c:\bbbb"

# 저장할 폴더가 없으면 생성
if not os.path.exists(destination_folder):
    os.makedirs(destination_folder)

# 정규식을 이용해 필요한 정보를 추출할 준비
pattern = r"\[(.*?)\]\s+\[(.*?)\]\s+Barcode\s*:\s*(\w+)\s+Measure:\s*(-?\d+\.\d+)"

# 모든 하위 폴더를 순회하며 .txt 파일 찾기
for root, dirs, files in os.walk(source_folder):
    for filename in files:
        if filename.endswith(".txt"):
            # 파일 열기
            file_path = os.path.join(root, filename)
            with open(file_path, 'r', encoding='utf-8') as file:
                for line in file:
                    # 정규식 매칭
                    match = re.search(pattern, line)
                    if match:
                        # 필요한 정보를 추출
                        time_str1, time_str2, BB, CC = match.groups()

                        # AA 생성 (첫 번째 시간 값 사용)
                        AA = datetime.strptime(time_str1, "%y-%m-%d %H:%M:%S").strftime("%Y%m%d%H%M%S")

                        # 파일 이름 및 내용 생성
                        file_name = f"{AA}_{BB}_{CC}.txt"
                        file_content = f"{AA}_{BB}_{CC}"

                        # 새로운 파일 작성
                        with open(os.path.join(destination_folder, file_name), 'w', encoding='utf-8') as new_file:
                            new_file.write(file_content)
변경 사항 요약
os.walk(source_folder)를 사용하여 c:\abcd 폴더의 모든 하위 폴더를 순회합니다.