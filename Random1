 설명 드리겠습니다. DevExpress WPF GridControl에서 버튼을 누르면 해당 행의 특정 열 값을 가져오는 것은 간단합니다. 예를 들어, 버튼이 있는 열과 'sortname' 값을 가져오고 싶다면, 다음과 같이 할 수 있습니다.

ButtonEditSettings를 사용하여 버튼을 열에 추가합니다.
버튼의 클릭 이벤트를 처리하는 메소드를 만듭니다.
이벤트 처리 메소드 내에서, 클릭된 행의 sortname 값을 가져옵니다.
아래는 이 과정을 구현한 코드 예시입니다.

csharp
Copy code
// XAML 코드
<dxg:GridControl x:Name="gridControl">
    <dxg:GridControl.Columns>
        <dxg:GridColumn FieldName="sortname" Header="이름" />
        <dxg:GridColumn FieldName="makeby" Header="등록자" />
        <dxg:GridColumn>
            <dxg:GridColumn.EditSettings>
                <dxe:ButtonEditSettings ButtonClick="OnApplyButtonClick"/>
            </dxg:GridColumn.EditSettings>
        </dxg:GridColumn>
    </dxg:GridControl.Columns>
</dxg:GridControl>

// C# 코드 (Code-behind)
private void OnApplyButtonClick(object sender, RoutedEventArgs e)
{
    ButtonEdit btnEdit = sender as ButtonEdit;
    int rowHandle = gridControl.View.GetRowHandleByMouseEventArgs(e as MouseEventArgs);
    string sortNameValue = gridControl.GetCellValue(rowHandle, "sortname").ToString();
    Debug.WriteLine(sortNameValue);
}
위 코드에서 OnApplyButtonClick 메소드는 버튼이 클릭된 행의 sortname 열의 값을 가져와서 디버그 콘솔에 출력합니다. GetCellValue 메소드는 지정된 행과 열의 값을 가져옵니다.

이 코드를 사용하면, 각 행에 있는 버튼을 누를 때마다 해당 행의 'sortname' 값을 디버그로 출력할 수