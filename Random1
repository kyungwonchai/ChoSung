하여 클릭하는 간단한 코드 예시입니다.

csharp

using System;
using System.Drawing;
using System.Threading;
using System.Windows.Forms;
using OpenCvSharp;
using OpenCvSharp.Extensions;

public class Program
{
    public static void Main()
    {
        // 팝업 윈도우의 틀 이미지 경로
        string windowFrameImagePath = "window_frame.png";

        // OpenCV를 사용하여 팝업 윈도우의 틀 이미지 로드
        Mat windowFrameImage = Cv2.ImRead(windowFrameImagePath);

        // 스크린 이미지 캡처
        Bitmap screenCapture = CaptureScreen();

        // 틀 이미지로 팝업 윈도우 검색
        Point? windowPosition = FindWindowByFrame(screenCapture, windowFrameImage);

        if (windowPosition != null)
        {
            // 팝업 윈도우의 닫기 버튼 클릭
            int closeButtonX = windowPosition.Value.X + windowFrameImage.Width - 10;
            int closeButtonY = windowPosition.Value.Y;
            ClickMouse(closeButtonX, closeButtonY);
        }
        else
        {
            Console.WriteLine("팝업 윈도우를 찾을 수 없습니다.");
        }
    }

    public static Bitmap CaptureScreen()
    {
        Rectangle screenBounds = Screen.PrimaryScreen.Bounds;

        using (Bitmap bitmap = new Bitmap(screenBounds.Width, screenBounds.Height))
        {
            using (Graphics graphics = Graphics.FromImage(bitmap))
            {
                graphics.CopyFromScreen(screenBounds.Left, screenBounds.Top, 0, 0, screenBounds.Size);
            }

            return bitmap.Clone() as Bitmap;
        }
    }

    public static Point? FindWindowByFrame(Bitmap screenCapture, Mat windowFrameImage)
    {
        using (Mat screenMat = BitmapConverter.ToMat(screenCapture))
        {
            using (Mat resultMat = new Mat())
            {
                Cv2.MatchTemplate(screenMat, windowFrameImage, resultMat, TemplateMatchModes.CCoeffNormed);

                Cv2.MinMaxLoc(resultMat, out _, out double maxVal, out _, out Point maxLoc);

                // 일치도 임계값 설정 (0.8 이상은 윈도우로 간주)
                double threshold = 0.8;

                if (maxVal >= threshold)
                {
                    return maxLoc;
                }
            }
        }

        return null;
    }

    public static void ClickMouse(int x, int y)
    {
        Cursor.Position = new Point(x, y);
        Thread.Sleep(100);

        // 마우스 왼쪽 버튼 클릭
        mouse_event(MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0);
        Thread.Sleep(100);
        mouse_event(MOUSEEVENTF_LEFTUP, 0, 0, 0, 0);
    }

    private const int MOUSEEVENTF_LEFTDOWN = 0x02;
    private const int MOUSEEVENTF_LEFTUP = 0x04;
    [System.Runtime.InteropServices.DllImport("user32.dll")]
    public static extern void mouse_event(int dwFlags, int dx, int dy, int cButtons, int dwExtraInfo);
}

위의 코드는 주어진 이미지(window_frame.png)로 팝업 윈도우의