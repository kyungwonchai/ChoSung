용한 예시 코드입니다.

csharp

using System;
using System.Threading;

namespace SafeThreadExample
{
    class Program
    {
        static AutoResetEvent resetEvent = new AutoResetEvent(false);

        static void Main(string[] args)
        {
            while (true)
            {
                Thread firstThread = new Thread(() => SafeExecute(FirstFunction));
                Thread secondThread = new Thread(() => SafeExecute(SecondFunction));

                firstThread.Start();
                secondThread.Start();

                resetEvent.WaitOne(); // 에러가 발생할 때까지 기다림

                // 에러 발생 시 스레드 리셋
                firstThread.Abort();
                secondThread.Abort();

                Console.WriteLine("스레드를 재시작합니다.");
            }
        }

        static void SafeExecute(Action action)
        {
            try
            {
                action();
            }
            catch (Exception e)
            {
                Console.WriteLine($"예외 발생: {e.Message}");
                resetEvent.Set(); // 메인 스레드에 에러 발생을 알림
            }
        }

        static void FirstFunction()
        {
            // 첫 번째 함수 로직
            Console.WriteLine("첫 번째 함수 실행");
            Thread.Sleep(1000);
            // throw new Exception("첫 번째 함수에서 에러"); // 에러를 테스트하려면 주석 해제
        }

        static void SecondFunction()
        {
            // 두 번째 함수 로직
            Console.WriteLine("두 번째 함수 실행");
            Thread.Sleep(1000);
            // throw new Exception("두 번째 함수에서 에러"); // 에러를 테스트하려면 주석 해제
        }
    }
}

이 코드는 AutoResetEvent 객체를 사용하여 두 개의 스레드에서 실행되는 함수가 에러를 일으킬 경우 이를 감지하고 스레드를 종료시킨 후 재시작합니다. 이렇게 하면 프로그램이 중단되지 않고 지속적으로 실행될 수 있습니