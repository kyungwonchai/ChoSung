아래는 C# Windows 서비스로 구현한 코드입니다. 이 서비스는 F 드라이브에 Time 폴더와 Time.txt 파일을 생성하고, 매시간 최신 시간 값을 작성하도록 구현되어 있습니다. 최신 값만 유지됩니다.

전체 코드
Windows 서비스 프로젝트 생성 Visual Studio에서 Windows 서비스 프로젝트를 생성하고 MyService.cs를 기본 서비스 클래스 파일로 사용합니다.

MyService.cs 코드

csharp
코드 복사
using System;
using System.IO;
using System.ServiceProcess;
using System.Threading.Tasks;
using System.Timers;

namespace TimeService
{
    public partial class MyService : ServiceBase
    {
        private Timer _timer;
        private readonly string _filePath = @"F:\Time\Time.txt";

        public MyService()
        {
            InitializeComponent();
        }

        protected override void OnStart(string[] args)
        {
            // 타이머 초기화 (1시간마다 실행)
            _timer = new Timer(3600000);
            _timer.Elapsed += async (sender, e) => await WriteCurrentTimeAsync();
            _timer.Start();

            // 서비스 시작 시 즉시 실행
            Task.Run(async () => await WriteCurrentTimeAsync());
        }

        protected override void OnStop()
        {
            _timer?.Stop();
            _timer?.Dispose();
        }

        private async Task WriteCurrentTimeAsync()
        {
            try
            {
                // 폴더 존재 여부 확인 후 생성
                string directoryPath = Path.GetDirectoryName(_filePath);
                if (!Directory.Exists(directoryPath))
                {
                    Directory.CreateDirectory(directoryPath);
                }

                // 현재 시간 포맷
                string currentTime = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");

                // 파일에 최신 값만 기록
                await File.WriteAllTextAsync(_filePath, currentTime);
            }
            catch (Exception ex)
            {
                // 예외 처리 (필요 시 로그를 남길 수 있음)
                // 예: EventLog.WriteEntry("TimeService Error: " + ex.Message, EventLogEntryType.Error);
            }
        }
    }
}
Program.cs 코드
csharp
코드 복사
using System.ServiceProcess;

namespace TimeService
{
    static class Program
    {
        static void Main()
        {
            ServiceBase[] ServicesToRun;
            ServicesToRun = new ServiceBase[]
            {
                new MyService()
            };
            ServiceBase.Run(ServicesToRun);
        }
    }
}
MyService.Designer.cs
Visual Studio가 자동으로 생성하는 디자이너 파일에서 ServiceName을 설정합니다.

csharp
코드 복사
namespace TimeService
{
    partial class MyService
    {
        private void InitializeComponent()
        {
            this.ServiceName = "TimeService";
        }
    }
}
설치 및 실행
Windows 서비스 설치

sc create TimeService binPath= "C:\경로\TimeService.exe" 명령으로 서비스 등록.
또는 InstallUtil.exe 도구를 사용.
서비스 시작

services.msc를 열고 TimeService를 시작.
주요 포인트
비동기 방식: WriteCurrentTimeAsync 메서드는 비동기 파일 작성을 수행합니다.