인별로 'T'와 'B' 구분에 해당하는 여러 차트를 표시하기 위해서는, 각 라인에 대한 차트를 동적으로 생성하고 관리하는 방식으로 접근해야 합니다. 이를 위해 각 라인의 데이터를 별도로 관리할 수 있는 구조가 필요하며, XAML에서는 차트를 동적으로 생성하여 표시해야 합니다.

이 과정은 다음 단계로 구성됩니다:

데이터 구조 설정: 각 라인별로 데이터를 관리하기 위한 구조를 설정합니다.
차트 동적 생성: 필요한 수의 차트를 동적으로 생성합니다.
데이터 바인딩 및 업데이트: 각 차트에 해당하는 데이터를 바인딩하고, 실시간으로 데이터를 업데이트합니다.
1. 데이터 구조 설정
먼저, 각 라인과 그에 해당하는 데이터를 관리할 구조를 설정합니다.

csharp
Copy code
public class ChartData
{
    public DateTime FileTime { get; set; }
    public double CTValue { get; set; }
    public string Type { get; set; }
    public string Line { get; set; }
}
2. 차트 동적 생성 및 데이터 바인딩
다음으로, 각 라인별로 차트를 동적으로 생성하고 데이터를 바인딩하는 로직을 작성합니다.

csharp
Copy code
// 각 라인별 차트와 데이터 소스 매핑
Dictionary<string, ObservableCollection<ChartData>> lineDataSources = new Dictionary<string, ObservableCollection<ChartData>>();

void CreateChartsForLines(List<string> lines)
{
    foreach (var line in lines)
    {
        // 각 라인별 데이터 소스 생성
        lineDataSources[line] = new ObservableCollection<ChartData>();

        // T 타입 차트 생성
        var chartT = CreateChart(line, "T");
        MainStackPanel.Children.Add(chartT);

        // B 타입 차트 생성
        var chartB = CreateChart(line, "B");
        MainStackPanel.Children.Add(chartB);
    }
}

ChartControl CreateChart(string line, string type)
{
    var chart = new ChartControl();
    var series = new LineSeries2D { DisplayName = $"{line}-{type}" };
    series.ArgumentDataMember = "FileTime";
    series.ValueDataMember = "CTValue";
    series.DataSource = lineDataSources[line].Where(item => item.Type == type);

    var diagram = new XYDiagram2D();
    diagram.Series.Add(series);
    chart.Diagram = diagram;

    return chart;
}
3. 데이터 업데이트 로직
csharp
Copy code
void UpdateData(ChartData newData)
{
    var lineDataSource = lineDataSources[newData.Line];
    lineDataSource.Add(newData);
    if (lineDataSource.Count > 1000)
    {
        lineDataSource.RemoveAt(0);
    }
}
4. XAML 수정
xml
Copy code
<Window xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/charts">
    <ScrollViewer>
        <StackPanel x:Name="MainStackPanel">
            <!-- 동적으로 차트가 추가됩니다 -->
        </StackPanel>
    </ScrollViewer>
</Window>
5. 초기화 및 차트 생성
어플리케이션 시작 시나 필요한 시점에 CreateChartsForLines 메소드를 호출하여 차트를 생성합니다. 라인의 목록(List<string> lines)은 어플리케이션의 요구사항에 따라 설정합니다.

csharp
Copy code
CreateChartsForLines(new List<string> { "Line1", "Line2", "Line3" });  // 예시 라인 목록
이 코드는 각 라인별로 'T'와 'B' 구분의 차트를 생성하고, 실시간으로 데이터를 업데이트하는 기본적인 구조를 제공합니다. 각 라인과 타입에 따라 데이터를 분리하여 관리하고, 필요한 만큼의 차트를 동적으