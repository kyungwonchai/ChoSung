LC의 뮤토(Mewtocol) 프로토콜을 통해 데이터를 전송할 때, WDD 명령어를 사용하여 PLC의 특정 레지스터에 데이터를 기록할 수 있습니다. 이때, 값은 10진수 Unsigned 형식의 숫자를 전송하게 되며, 각 데이터는 1word로 기록됩니다.

PLC에서 사용하는 데이터 형식은 보통 숫자 데이터가 10진수로 표현되며, 이는 Unsigned 즉, 부호 없는 정수로 해석됩니다. 반면, ASCII는 문자 인코딩 방식으로, 데이터가 문자로 해석될 수 있도록 각 문자에 해당하는 숫자를 전송하게 됩니다.

차이점 설명:
10진수 Unsigned: 0부터 시작하여 음수가 없는 정수 데이터. 예를 들어, 12345라는 숫자는 10진수로 그대로 전송됩니다.
ASCII: 각 문자를 나타내는 표준 인코딩 방식으로, 문자 'A'는 65, 'B'는 66, 'C'는 67 등으로 변환되어 전송됩니다. 숫자 12345를 ASCII로 전송하면, 각 문자 '1', '2', '3', '4', '5'가 각각 49, 50, 51, 52, 53로 변환됩니다.
PLC에 숫자를 쓸 때는 일반적으로 10진수 Unsigned 형식을 사용합니다. ASCII 방식은 문자 데이터를 PLC로 보낼 때 사용됩니다.

코드 예제 (C#):
이 코드는 WDD 명령어를 사용하여 0230502305 주소에 10진수 Unsigned 데이터를 쓰는 예제입니다.

csharp
코드 복사
using System;
using System.IO.Ports;

public class PlcCommunication
{
    private SerialPort _serialPort;

    public PlcCommunication(string portName, int baudRate)
    {
        _serialPort = new SerialPort(portName, baudRate, Parity.None, 8, StopBits.One);
        _serialPort.Open();
    }

    public void WriteWordToPlc(int address, ushort value)
    {
        // Mewtocol WDD 명령어 포맷
        // 예: %01#WDD0230502305로 쓰기 (10진수 값을 Unsigned로 전송)
        string plcCommand = string.Format("%01#WDD{0:D7}{1:D5}", address, value);

        // BCC 계산 (Checksum)
        byte checksum = CalculateChecksum(plcCommand);
        plcCommand += checksum.ToString("X2");

        // 명령어 끝에 CR 추가
        plcCommand += "\r";

        // PLC에 명령어 전송
        _serialPort.Write(plcCommand);
    }

    // BCC 체크섬 계산
    private byte CalculateChecksum(string command)
    {
        byte checksum = 0;
        foreach (char c in command)
        {
            checksum ^= (byte)c;
        }
        return checksum;
    }

    // 리소스 해제
    public void Close()
    {
        if (_serialPort != null && _serialPort.IsOpen)
        {
            _serialPort.Close();
        }
    }
}

public class Program
{
    public static void Main()
    {
        // COM 포트 설정 (필요에 맞게 설정)
        PlcCommunication plcComm = new PlcCommunication("COM3", 9600);

        // PLC에 10진수 unsigned 값 전송 (예: 12345를 0230502305 주소에 기록)
        plcComm.WriteWordToPlc(230502305, 12345);

        // 통신 종료
        plcComm.Close();
    }
}
코드 설명:
WriteWordToPlc 메서드:

%01#WDD 명령어를 사용하여 0230502305 주소에 10진수 Unsigned로 값을 기록합니다.
address는 7자리 주소 형식으로 포맷되며, value는 5자리 10진수 Unsigned로 포맷됩니다.
이 예에서는 12345라는 숫자를 WDD 명령어로 PLC에 전송합니다.
Checksum 계산:

PLC와 통신할 때 명령어의 무결성을 보장하기 위해 BCC(Binary Coded Checksum)를 계산하여 메시지 끝에 추가합니다.
시리얼 통신:

SerialPort 클래스를 사용하여 PLC와 시리얼 통신을 설정하고, 명령어를 전송합니다.
ASCII 방식 비교:
만약 값을 ASCII로 전송하려면, 위에서 value를 ASCII 값으로 변환해야 합니다. 예를 들어, 12345를 ASCII로 보내려면 '1', '2', '3', '4', '5'가 각각 ASCII 값인 49, 50, 51, 52, 53으로 전송됩니다.

10진수 방식과 ASCII 방식의 주요 차이점은 숫자가 그대로 전송되는지, 아니면 각 문자가 인코딩되어 전송되는지의 차이입니다.