알겠습니다, 형님. 바로 그 IP와 포트로 서비스하는 방법을 알려드리겠습니다. 아주 간단합니다.

결론부터 말씀드리면, docker run 명령어의 -p 옵션만 살짝 바꿔주면 됩니다.

## docker run 명령어 수정하기
1. 이전에 실행했던 컨테이너 중지 (만약 실행 중이라면)

혹시 이전에 docker run -p 8080:80 ... 명령어로 실행했던 컨테이너가 아직 돌아가고 있다면, 포트가 겹쳐서 에러가 날 수 있습니다. 먼저 그걸 중지해야 합니다.

1-1. 실행 중인 컨테이너 확인

Bash

docker ps
이 명령어를 치면 현재 실행 중인 컨테이너 목록이 나옵니다. CONTAINER ID 부분의 긴 문자열을 확인하세요.

1-2. 컨테이너 중지

Bash

# docker stop [방금 확인한 컨테이너 ID 앞부분 몇 글자]
docker stop a1b2c3d4e5
2. 새로운 명령어로 실행하기

이제 형님이 원하시는 IP와 포트를 지정해서 실행할 차례입니다. 터미널에 아래 명령어를 그대로 입력하세요.
(터미널 위치는 이전과 같이 /home/kw/docker1/react1 이어야 합니다.)

Bash

docker run -d -p 10.222.222.222:9999:80 my-react-app
## 명령어 해설
docker run -d -p 10.222.222.222:9999:80 my-react-app

docker run: 컨테이너를 실행하라는 기본 명령어입니다.

-d: 백그라운드에서 실행하라는 옵션입니다. 이걸 추가하면 터미널을 계속 붙잡고 있지 않아서 다른 작업을 할 수 있습니다.

-p: 포트를 연결(publish)하라는 옵션입니다.

10.222.222.222: **"이 IP 주소로 들어오는 요청만 받겠다"**는 의미입니다.

9999: 형님의 우분투 서버가 사용할 외부 포트 번호입니다. 즉, 형님이나 다른 사용자가 접속할 때 사용하는 문 번호입니다.

80: 도커 컨테이너 내부에서 Nginx 웹서버가 사용하고 있는 포트입니다. 이건 Dockerfile에서 정해둔 것이라 바뀌지 않습니다.

my-react-app: 우리가 docker build로 만들었던 이미지 이름입니다.

한마디로, "10.222.222.222 IP의 9999번 문으로 들어온 손님을, 도커 컨테이너 안의 80번 문으로 안내해라!" 라는 뜻입니다.

## 🚨 매우 중요한 주의사항
IP 주소 확인: 10.222.222.222는 반드시 도커가 실행되고 있는 컴퓨터(형님의 우분투 서버)의 IP 주소여야 합니다. 만약 다른 IP를 입력하면 "bind: cannot assign requested address" 같은 에러가 발생하며 실행되지 않습니다.

방화벽 확인: 만약 우분투 서버에 방화벽(UFW 등)이 켜져 있다면, 9999번 포트를 열어줘야 외부에서 접속할 수 있습니다.

sudo ufw allow 9999/tcp 명령어로 포트를 열 수 있습니다.

이제 웹 브라우저에서 http://10.222.222.222:9999 로 접속하시면 형님의 react1 프로젝트가 정상적으로 보일 겁니다.

