? CUDA Version이 표시되면 정상 설치됨.
? "command not found"가 나오면 CUDA 드라이버가 설치되지 않음 → 설치 필요!

?? Windows에서 CUDA 버전 확인 (CMD/Powershell)

powershell
복사
편집
nvcc --version
출력 예시:

arduino
복사
편집
Cuda compilation tools, release 12.1, V12.1.105
? PyTorch가 GPU를 인식하는지 확인
Python에서 아래 코드를 실행하세요.

python
복사
편집
import torch
print("PyTorch 버전:", torch.__version__)
print("CUDA 사용 가능 여부:", torch.cuda.is_available())
if torch.cuda.is_available():
    print("사용 중인 GPU:", torch.cuda.get_device_name(0))
    print("CUDA 버전:", torch.version.cuda)
    print("GPU 개수:", torch.cuda.device_count())
? 출력 예시 (정상 작동 시)

yaml
복사
편집
PyTorch 버전: 2.1.0
CUDA 사용 가능 여부: True
사용 중인 GPU: NVIDIA GeForce RTX 3050
CUDA 버전: 12.1
GPU 개수: 1
? 만약 False 또는 None이면 CUDA가 인식되지 않는 상태 → 해결 필요!

?? 2. CUDA 드라이버와 PyTorch 버전 호환 확인
? CUDA 버전과 PyTorch가 맞지 않을 경우, 다시 설치해야 합니다!
CUDA 12.1이 설치된 경우

bash
복사
편집
pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu121
CUDA 11.8이 설치된 경우

bash
복사
편집
pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118
?? 3. PyTorch가 GPU를 사용하지 않는 경우
PyTorch가 CPU 모드에서 실행될 가능성이 있습니다.

? PyTorch에서 강제로 GPU 사용 설정
python
복사
편집
import torch

device = torch.device("cuda" if torch.cuda.is_available() else "cpu")
print("사용 중인 장치:", device)

# Tensor를 GPU에서 실행
x = torch.randn(3, 3).to(device)
print("GPU에서 실행된 Tensor:", x)
? 출력이 cuda이면 정상 작동!
? 만약 cpu이면, PyTorch가 GPU를 사용하지 않고 있음 → 해결 필요!

?? 4. GPU 사용률 0% 문제 해결 (PyTorch가 GPU를 제대로 활용하지 않을 때)
PyTorch에서 GPU 사용률이 0%일 때는, GPU가 "할당"만 되었을 뿐 연산을 수행하지 않기 때문입니다.

? GPU 연산을 강제로 실행
python
복사
편집
import torch
import time

device = torch.device("cuda" if torch.cuda.is_available() else "cpu")

# 대량의 연산 수행하여 GPU 사용률 증가
a = torch.randn(5000, 5000, device=device)
b = torch.randn(5000, 5000, device=device)

start_time = time.time()
for _ in range(100):
    c = torch.matmul(a, b)
torch.cuda.synchronize()  # GPU 연산 완료 대기
print("연산 완료:", time.time() - start_time, "초")
? 이 코드를 실행하면 GPU 사용률이 증가하는지 확인하세요