vExpress 22.2 WinForms의 RibbonControl에서 기존 디자이너를 통해 구성된 메뉴에 동적으로 BarButtonItem을 추가하고, 체크박스의 상태에 따라 해당 버튼들의 표시 여부를 제어하는 방법을 설명하겠습니다.

1. BarButtonItem 동적 추가 및 구성:

아래 코드는 RibbonControl에 새로운 BarButtonItem을 동적으로 추가하는 방법을 보여줍니다. 지정된 RibbonPage와 RibbonPageGroup이 존재하지 않을 경우, 이를 생성하여 추가합니다.

csharp
코드 복사
// RibbonControl 인스턴스가 'ribbonControl'이라고 가정합니다.

// 새로운 BarButtonItem 생성
BarButtonItem newButton = new BarButtonItem();
newButton.Caption = "새 버튼"; // 버튼의 캡션 설정
newButton.Tag = "CustomButton"; // 버튼의 태그 설정
newButton.Id = ribbonControl.Manager.GetNewItemId(); // 고유한 ID 설정
newButton.ImageOptions.SvgImage = svgImageCollection1["new"]; // 아이콘 설정 (svgImageCollection1은 미리 정의된 이미지 컬렉션)

// RibbonPage와 RibbonPageGroup 이름 정의
string pageName = "CustomPage";
string groupName = "CustomGroup";

// RibbonPage 찾기
RibbonPage page = ribbonControl.Pages.FirstOrDefault(p => p.Name == pageName);
if (page == null)
{
    // 페이지가 없으면 생성하여 추가
    page = new RibbonPage(pageName) { Text = "사용자 정의 페이지" };
    ribbonControl.Pages.Add(page);
}

// RibbonPageGroup 찾기
RibbonPageGroup group = page.Groups.FirstOrDefault(g => g.Name == groupName);
if (group == null)
{
    // 그룹이 없으면 생성하여 추가
    group = new RibbonPageGroup(groupName) { Text = "사용자 정의 그룹" };
    page.Groups.Add(group);
}

// 그룹에 새로운 버튼 추가
group.ItemLinks.Add(newButton);
2. 체크박스를 통한 버튼 표시/숨김 제어:

체크박스를 사용하여 동적으로 추가된 버튼들의 표시 여부를 제어할 수 있습니다. 체크박스의 기본 상태를 체크(숨김)로 설정하고, 체크 상태가 변경될 때마다 버튼들의 가시성을 토글합니다.

csharp
코드 복사
// CheckBox 인스턴스가 'toggleButtonVisibilityCheckBox'라고 가정합니다.

// CheckBox의 기본 상태를 체크로 설정 (버튼 숨김)
toggleButtonVisibilityCheckBox.Checked = true;

// CheckBox의 체크 상태 변경 이벤트 핸들러 등록
toggleButtonVisibilityCheckBox.CheckedChanged += (s, e) =>
{
    bool isChecked = toggleButtonVisibilityCheckBox.Checked;

    // 'CustomButton' 태그를 가진 모든 BarButtonItem의 가시성 설정
    foreach (BarItem item in ribbonControl.Items)
    {
        if (item is BarButtonItem button && button.Tag?.ToString() == "CustomButton")
        {
            button.Visibility = isChecked ? BarItemVisibility.Never : BarItemVisibility.Always;
        }
    }
};
전체 코드 예제:

아래는 위의 내용을 통합한 전체 코드입니다.

csharp
코드 복사
using DevExpress.XtraBars;
using DevExpress.XtraBars.Ribbon;
using System.Linq;
using System.Windows.Forms;

public partial class MainForm : RibbonForm
{
    public MainForm()
    {
        InitializeComponent();

        // 새로운 BarButtonItem 생성 및 추가
        AddCustomButton();

        // CheckBox 생성 및 설정
        CheckBox toggleButtonVisibilityCheckBox = new CheckBox
        {
            Text = "사용자 정의 버튼 표시",
            Checked = true, // 기본적으로 체크 상태 (버튼 숨김)
            AutoSize = true,
            Dock = DockStyle.Top
        };

        // CheckBox의 체크 상태 변경 이벤트 핸들러 등록
        toggleButtonVisibilityCheckBox.CheckedChanged += ToggleButtonVisibilityCheckBox_CheckedChanged;

        // CheckBox를 폼에 추가
        this.Controls.Add(toggleButtonVisibilityCheckBox);
    }

    private void AddCustomButton()
    {
        // RibbonControl 인스턴스가 'ribbonControl'이라고 가정합니다.

        // 새로운 BarButtonItem 생성
        BarButtonItem newButton = new BarButtonItem
        {
            Caption = "새 버튼", // 버튼의 캡션 설정
            Tag = "CustomButton", // 버튼의 태그 설정
            Id = ribbonControl.Manager.GetNewItemId(), // 고유한 ID 설정
            ImageOptions = { SvgImage = svgImageCollection1["new"] } // 아이콘 설정 (svgImageCollection1은 미리 정의된 이미지 컬렉션)
        };

        // RibbonPage와 RibbonPageGroup 이름 정의
        string pageName = "CustomPage";
        string groupName = "CustomGroup";

        // RibbonPage 찾기
        RibbonPage page = ribbonControl.Pages.FirstOrDefault(p => p.Name == pageName);
        if (page == null)
        {
            // 페이지가 없으면 생성하여 추가
            page = new RibbonPage(pageName) { Text = "사용자 정의 페이지" };
            ribbonControl.Pages.Add(page);
        }

        // RibbonPageGroup 찾기
        RibbonPageGroup group = page.Groups.FirstOrDefault(g => g.Name == groupName);
        if (group == null)
        {
            // 그룹이 없으면 생성하여 추가
            group = new RibbonPageGroup(groupName) { Text = "사용자 정의 그룹" };
            page.Groups.Add(group);
        }

        // 그룹에 새로운 버튼 추가
        group.ItemLinks.Add(newButton);

        // 초기에는 버튼을 숨김 처리
        newButton.Visibility = BarItemVisibility.Never;
    }

    private void ToggleButtonVisibilityCheckBox_CheckedChanged(object sender, System.EventArgs e)
    {
        CheckBox checkBox = sender as CheckBox;
        bool isChecked = checkBox.Checked;

        // 'CustomButton' 태그를 가진 모든 BarButtonItem의 가시성 설정
        foreach (BarItem item in ribbonControl.Items)
        {
            if (item is BarButtonItem button && button.Tag?.ToString() == "CustomButton")
            {
                button.Visibility = isChecked ? BarItemVisibility.Never : BarItemVisibility.Always;
            }
        }
    }
}
참고 자료:

BarButtonItem Class | WinForms Controls