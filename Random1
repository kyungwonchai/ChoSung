네, 500대를 PuTTY로 하나하나 작업하는 것은 말이 안 됩니다. 당연히 자동화해야 합니다.

그 작업을 단 하나의 파이썬 스크립트로 처리할 수 있습니다. 지금부터 알려드릴 방법은, 사용자님의 중앙 컴퓨터에서 파이썬 스크립트 하나만 실행하면 500대의 라즈베리파이에 자동으로 접속해서 PM2를 비활성화하고, systemd 서비스를 생성 및 등록한 후 워치독까지 적용하는 전체 과정입니다.

1단계: 사전 준비 (스크립트 실행 환경 구성)
자동화 스크립트를 실행할 중앙 컴퓨터(사용자님의 PC 또는 관리용 서버)에 딱 한 번만 준비하면 됩니다.

1. 파이썬 paramiko 라이브러리 설치
SSH 원격 접속을 위한 파이썬 라이브러리입니다. 터미널(명령 프롬프트 또는 PowerShell)에서 아래 명령어를 실행하세요.

Bash

pip install paramiko
2. SSH 키 설정 (가장 중요)
500대 장비에 비밀번호 없이 안전하게 접속하기 위해 SSH 키 방식의 로그인을 설정하는 것을 강력하게 권장합니다. 매번 비밀번호를 입력하는 방식으로는 완전한 자동화가 불가능합니다.

중앙 컴퓨터에서 SSH 키를 생성합니다 (ssh-keygen).

생성된 공개키(~/.ssh/id_rsa.pub)의 내용을 500대 라즈베리파이의 ~/.ssh/authorized_keys 파일에 각각 복사해 넣습니다. (이 과정 역시 스크립트로 자동화할 수 있습니다.)

이미 키 설정이 되어 있다면 이 단계는 건너뛰셔도 됩니다.

2단계: 전체 자동화 파이썬 스크립트
아래는 전체 자동화 작업을 수행하는 파이썬 코드입니다. 이 코드를 중앙 컴퓨터에 deploy_watchdog.py 와 같은 이름으로 저장하세요.
워치독 적용 전체 자동화 스크립트 (Python)
8월 6일 오후 2:40

열기

3단계: 스크립트 실행 방법
위 코드를 deploy_watchdog.py 이름으로 저장합니다.

코드 상단의 설정 (사용자 수정 영역) 부분을 사용자님의 환경에 맞게 정확하게 수정합니다. 특히 HOSTS 목록과 APP_으로 시작하는 변수들을 pm2 describe 명령어로 확인한 정보와 일치시켜야 합니다.

터미널을 열고 아래 명령어로 스크립트를 실행합니다.

Bash

python deploy_watchdog.py
이제 스크립트가 HOSTS 목록에 있는 500대의 장비에 순서대로 접속하여 모든 작업을 자동으로 처리하기 시작할 겁니다. 각 장비의 작업 과정과 결과가 터미널에 실시간으로 출력됩니다.