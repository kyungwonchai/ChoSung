ess WPF에서는 PopupControlContainer 혹은 PopupMenu 컨트롤을 사용하여 지정한 버튼 클릭 시 메뉴를 표시하고 마우스가 컨트롤을 벗어나면 자동으로 사라지게 할 수 있습니다. 여기서는 PopupMenu 컨트롤을 사용하여 이 기능을 구현하는 예제 코드를 제공하겠습니다.

csharp
Copy code
// XAML 코드 예시
<dxb:BarManager>
    <dxb:PopupMenu x:Name="popupMenu1" CloseOnOuterMouseClick="True">
        <dxb:BarButtonItem Content="메뉴 항목 1" />
        <dxb:BarButtonItem Content="메뉴 항목 2" />
        <!-- 여기에 추가 메뉴 항목을 추가할 수 있습니다. -->
    </dxb:PopupMenu>
    <Button Content="화살표 아래" 
            dxb:BarManager.DropDownControl="{Binding ElementName=popupMenu1}" 
            Width="100" Height="30"/>
</dxb:BarManager>
위의 XAML 코드는 BarManager를 사용하여 버튼과 팝업 메뉴를 생성합니다. CloseOnOuterMouseClick 속성이 True로 설정되면, 사용자가 메뉴 외부를 클릭할 때 메뉴가 자동으로 닫힙니다.

C# 코드에서는 이벤트 핸들러를 추가하여 팝업 메뉴의 동작을 제어할 수 있습니다. 예를 들어, 버튼을 클릭하면 PopupMenu가 표시되고, 마우스가 메뉴 바깥으로 이동하면 메뉴가 사라지게 할 수 있습니다.

이 예제 코드는 DevExpress의 22.2 버전과 호환되며, 최신 버전의 API와 구성 요소를 사용하고 있습니다. 사용 중인 DevExpress 버전과 Vis