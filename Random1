indows에서 현재 사용 중인 COM 포트와 각 포트가 어떤 프로그램에서 사용 중인지 확인하는 코드를 작성하겠습니다. 이 코드에서는 pyserial 라이브러리와 psutil 라이브러리를 사용하여 COM 포트 정보를 가져옵니다. 아래는 클래스 형태로 구현한 예제입니다.

먼저, 필요한 라이브러리를 설치해야 합니다.

bash
코드 복사
pip install pyserial psutil
그리고 코드를 작성합니다:

python
코드 복사
import serial.tools.list_ports
import psutil

class COMPortChecker:
    def __init__(self):
        self.ports_info = self.get_all_ports_info()

    def get_all_ports_info(self):
        ports = serial.tools.list_ports.comports()
        ports_info = {}
        for port in ports:
            ports_info[port.device] = {
                'description': port.description,
                'hwid': port.hwid,
                'is_in_use': self.is_port_in_use(port.device)
            }
        return ports_info

    def is_port_in_use(self, port_name):
        for proc in psutil.process_iter(['pid', 'name', 'connections']):
            for conn in proc.info['connections']:
                if conn.laddr.port == int(port_name.replace('COM', '')):
                    return proc.info['name']
        return None

    def display_ports_info(self):
        for port, info in self.ports_info.items():
            status = f"In Use by {info['is_in_use']}" if info['is_in_use'] else "Available"
            print(f"Port: {port}, Description: {info['description']}, HWID: {info['hwid']}, Status: {status}")

if __name__ == "__main__":
    checker = COMPortChecker()
    checker.display_ports_info()
코드 설명
COMPortChecker 클래스: COM 포트 정보를 관리하는 클래스입니다.
__init__ 메서드에서 get_all_ports_info 메서드를 호출하여 모든 COM 포트 정보를 가져옵니다.
get_all_ports_info 메서드는 pyserial 라이브러리를 사용하여 모든 COM 포트의 정보를 수집합니다.
is_port_in_use 메서드는 psutil 라이브러리를 사용하여 특정 포트가 현재 사용 중인지 확인하고, 사용 중인 경우 해당 프로세스의 이름을 반환합니다.
display_ports_info 메서드는 수집된 COM 포트 정보를 출력합니다.
사용 방법
위 코드를 Python 파일로 저장합니다.
메인 함수에서 COMPortChecker 객체를 생성하고 display_ports_info 메서드를 호출하여 COM 포트 정보를 출력합니다.
이 코드를 실행하면 현재 PC에서 사용 가능한 모든 COM 포트와 각 포트가 사용 중인지, 사용 중이라면 어떤 프로세스에서 사용 중인지 확인할 수 있습니다.