아래는 AutoRefreshCheckbox가 체크되었을 때 1분마다 자동 갱신이 동작하도록 구현한 코드입니다. **갱신 함수 ddd1**을 호출하며, 체크 해제 시 자동 갱신이 중단됩니다. 1분 후 첫 실행이 아닌, 체크 시 즉시 실행 후 1분 간격으로 동작합니다.

수정된 XAML 코드
추가된 체크박스를 표시합니다.

xml
코드 복사
<Window x:Class="TreeViewCheckboxExample.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="TreeView with Auto Refresh" Height="600" Width="400">
    <Grid>
        <StackPanel>
            <!-- Auto Refresh CheckBox -->
            <CheckBox x:Name="AutoRefreshCheckbox" Content="Auto Refresh" 
                      Checked="AutoRefreshCheckbox_Checked" Unchecked="AutoRefreshCheckbox_Unchecked" />
            
            <!-- 기존 TreeView -->
            <TreeView x:Name="treeView" ItemsSource="{Binding Groups}" Margin="10">
                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Lines}">
                        <StackPanel Orientation="Horizontal">
                            <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay}" 
                                      Checked="CheckBox_Checked" Unchecked="CheckBox_Unchecked" />
                            <TextBlock Text="{Binding Name}" Margin="5,0,0,0" />
                        </StackPanel>
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
            </TreeView>
        </StackPanel>
    </Grid>
</Window>
수정된 C# 코드
csharp
코드 복사
using System;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Linq;
using System.Timers;
using System.Windows;

namespace TreeViewCheckboxExample
{
    public partial class MainWindow : Window
    {
        public ObservableCollection<Group> Groups { get; set; }
        private Timer autoRefreshTimer;

        public MainWindow()
        {
            InitializeComponent();
            DataContext = this;

            // 데이터 로드 및 초기 설정
            LoadData();
            SetAllChecked(true);
            ExpandAllGroups();

            // 타이머 초기화
            autoRefreshTimer = new Timer(60000); // 1분 (60,000ms)
            autoRefreshTimer.Elapsed += AutoRefreshTimer_Elapsed;
        }

        /// <summary>
        /// 데이터를 로드합니다.
        /// </summary>
        private void LoadData()
        {
            Groups = new ObservableCollection<Group>
            {
                new Group
                {
                    Name = "Group A",
                    Lines = new ObservableCollection<Line>
                    {
                        new Line { Name = "Line 1.1" },
                        new Line { Name = "Line 1.2" }
                    }
                },
                new Group
                {
                    Name = "Group B",
                    Lines = new ObservableCollection<Line>
                    {
                        new Line { Name = "Line 2.1" },
                        new Line { Name = "Line 2.2" }
                    }
                }
            };
        }

        /// <summary>
        /// 모든 그룹과 라인을 체크 상태로 설정합니다.
        /// </summary>
        private void SetAllChecked(bool isChecked)
        {
            foreach (var group in Groups)
            {
                group.IsChecked = isChecked;
                foreach (var line in group.Lines)
                {
                    line.IsChecked = isChecked;
                }
            }
        }

        /// <summary>
        /// 모든 그룹을 확장 상태로 설정합니다.
        /// </summary>
        private void ExpandAllGroups()
        {
            foreach (var group in Groups)
            {
                group.IsExpanded = true;
            }
        }

        /// <summary>
        /// AutoRefreshCheckbox가 체크되었을 때 동작
        /// </summary>
        private void AutoRefreshCheckbox_Checked(object sender, RoutedEventArgs e)
        {
            ddd1(); // 첫 동작 실행
            autoRefreshTimer.Start(); // 타이머 시작
        }

        /// <summary>
        /// AutoRefreshCheckbox가 해제되었을 때 동작
        /// </summary>
        private void AutoRefreshCheckbox_Unchecked(object sender, RoutedEventArgs e)
        {
            autoRefreshTimer.Stop(); // 타이머 중지
        }

        /// <summary>
        /// 타이머가 1분마다 실행할 동작
        /// </summary>
        private void AutoRefreshTimer_Elapsed(object sender, ElapsedEventArgs e)
        {
            Application.Current.Dispatcher.Invoke(() =>
            {
                ddd1(); // 메인 스레드에서 실행
            });
        }

        /// <summary>
        /// 갱신 함수
        /// </summary>
        private void ddd1()
        {
            // 갱신 로직 구현 (여기에 실제 갱신 동작 추가)
            MessageBox.Show("데이터 갱신 완료!");
        }
    }

    public class Group : INotifyPropertyChanged
    {
        private bool _isChecked;
        private bool _isExpanded;
        public string Name { get; set; }
        public ObservableCollection<Line> Lines { get; set; } = new ObservableCollection<Line>();

        public bool IsChecked
        {
            get => _isChecked;
            set
            {
                if (_isChecked != value)
                {
                    _isChecked = value;
                    OnPropertyChanged(nameof(IsChecked));
                }
            }
        }

        public bool IsExpanded
        {
            get => _isExpanded;
            set
            {
                if (_isExpanded != value)
                {
                    _isExpanded = value;
                    OnPropertyChanged(nameof(IsExpanded));
                }
            }
        }

        public event PropertyChangedEventHandler PropertyChanged;
        protected void OnPropertyChanged(string propertyName)
        {
            PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    public class Line : INotifyPropertyChanged
    {
        private bool _isChecked;
        public string Name { get; set; }

        public bool IsChecked
        {
            get => _isChecked;
            set
            {
                if (_isChecked != value)
                {
                    _isChecked = value;
                    OnPropertyChanged(nameof(IsChecked));
                }
            }
        }

        public event PropertyChangedEventHandler PropertyChanged;
        protected void OnPropertyChanged(string propertyName)
        {
            PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}
코드 설명
타이머 설정:

Timer를 사용하여 1분(60초) 간격으로 갱신 함수(ddd1)를 호출.
타이머는 AutoRefreshCheckbox_Checked에서 시작되고, AutoRefreshCheckbox_Unchecked에서 중지됩니다.
즉시 실행:

체크박스를 선택하면 ddd1()이 즉시 호출됩니다.
스레드 동기화:

타이머 콜백은 별도 스레드에서 실행되므로, UI 업데이트는 Dispatcher.Invoke를 통해 메인 스레드에서 처리합니다.
갱신 함수 (ddd1):

실제 데이터를 갱신하는 코드는 ddd1에 작성.
예제로 메시지 박스를 표시하도록 구현되었습니다.
실행 흐름
체크박스 체크:

AutoRefreshCheckbox를 선택하면 ddd1 함수가 즉시 실행되고, 이후 1분 간격으로 호출됩니다.
체크박스 해제:
