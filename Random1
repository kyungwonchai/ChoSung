using System;
using System.Data.SqlClient;
using System.IO;
using System.Linq;
using System.Threading;

class Program
{
    static void Main()
    {
        string connString = "Data Source=your_server;Initial Catalog=your_database;User ID=your_username;Password=your_password";
        string folderPath = @"C:\folderC";  // 폴더 경로

        while (true)
        {
            string query = "SELECT TOP 1 * FROM PAOI_ChangeDetect WHERE complete10 < 10 ORDER BY logtime1 ASC";

            using (SqlConnection conn = new SqlConnection(connString))
            {
                conn.Open();
                SqlCommand cmd = new SqlCommand(query, conn);

                using (SqlDataReader reader = cmd.ExecuteReader())
                {
                    if (reader.Read())
                    {
                        DateTime logtime1 = reader.GetDateTime(reader.GetOrdinal("logtime1"));
                        int findCount = reader.GetInt32(reader.GetOrdinal("findcount"));
                        string lastFile = reader.GetString(reader.GetOrdinal("lastFile"));
                        long lastRowPos = reader.GetInt64(reader.GetOrdinal("lastRowPos"));

                        FindLogsAndUpdateDB(folderPath, logtime1, findCount, lastFile, lastRowPos, conn);
                    }
                }
            }

            // 5분 대기
            Thread.Sleep(TimeSpan.FromMinutes(5));
        }
    }

    static void FindLogsAndUpdateDB(string folderPath, DateTime logtime1, int findCount, string lastFile, long lastRowPos, SqlConnection conn)
    {
        var files = Directory.GetFiles(folderPath, "InspData_*.log").OrderBy(f => f).ToArray();
        if (string.IsNullOrEmpty(lastFile))
        {
            lastFile = files[0];
        }

        for (int i = Array.IndexOf(files, lastFile); i < files.Length; i++)
        {
            using (FileStream fs = new FileStream(files[i], FileMode.Open, FileAccess.Read, FileShare.ReadWrite))
            {
                fs.Seek(lastRowPos, SeekOrigin.Begin);
                using (StreamReader sr = new StreamReader(fs))
                {
                    string line;
                    while ((line = sr.ReadLine()) != null)
                    {
                        lastRowPos = fs.Position;

                        if (CheckLogCondition(line, logtime1))
                        {
                            findCount++;
                            UpdateDB(conn, findCount, files[i], lastRowPos);
                            
                            if (findCount >= 10)
                            {
                                return;
                            }
                        }
                    }
                }
            }
        }
    }

    static bool CheckLogCondition(string line, DateTime logtime1)
    {
        // 여기에 로그 조건 체크 로직 구현
        // 예시: DateTime 포맷 체크 및 "COMPLETE" 문자열이 있는지 체크
        return true;  // 임시로 true 리턴
    }

    static void UpdateDB(SqlConnection conn, int findCount, string lastFile, long lastRowPos)
    {
        string updateQuery = $"UPDATE PAOI_ChangeDetect SET findcount = @findCount, lastFile = @lastFile, lastRowPos = @lastRowPos WHERE complete10 < 10";
        SqlCommand updateCmd = new SqlCommand(updateQuery, conn);
        updateCmd.Parameters.AddWithValue("@findCount", findCount);
        updateCmd.Parameters.AddWithValue("@lastFile", lastFile);
        updateCmd.Parameters.AddWithValue("@lastRowPos", lastRowPos);

        updateCmd.ExecuteNonQuery();
    }
}
