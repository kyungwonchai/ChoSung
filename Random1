ess WinForms GridControl에서 각 행마다 개별적으로 번호를 클릭하여 선택하고, 선택된 번호의 색상이 변경되는 기능을 구현하려면, 커스텀 드로잉을 사용해야 할 수 있습니다. 이 경우 RepositoryItemButtonEdit를 사용하고, 각 버튼에 번호를 할당한 다음, 클릭 이벤트와 셀의 커스텀 드로잉을 통해 이 기능을 구현할 수 있습니다.

1. RepositoryItemButtonEdit 설정 및 버튼 추가
csharp
Copy code
private DevExpress.XtraEditors.Repository.RepositoryItemButtonEdit repositoryItemButtonEdit1;

// ...

private void InitializeComponent()
{
    // ...
    this.repositoryItemButtonEdit1 = new DevExpress.XtraEditors.Repository.RepositoryItemButtonEdit();
    // ...
    this.gridControl1.RepositoryItems.AddRange(new DevExpress.XtraEditors.Repository.RepositoryItem[] {
    this.repositoryItemButtonEdit1});

    // repositoryItemButtonEdit1 설정
    this.repositoryItemButtonEdit1.AutoHeight = false;
    this.repositoryItemButtonEdit1.Buttons.Clear();
    this.repositoryItemButtonEdit1.Buttons.AddRange(new DevExpress.XtraEditors.Controls.EditorButton[] {
        new DevExpress.XtraEditors.Controls.EditorButton(DevExpress.XtraEditors.Controls.ButtonPredefines.Glyph, "1", -1, true, true, false, null),
        new DevExpress.XtraEditors.Controls.EditorButton(DevExpress.XtraEditors.Controls.ButtonPredefines.Glyph, "2", -1, true, true, false, null),
        new DevExpress.XtraEditors.Controls.EditorButton(DevExpress.XtraEditors.Controls.ButtonPredefines.Glyph, "3", -1, true, true, false, null),
        new DevExpress.XtraEditors.Controls.EditorButton(DevExpress.XtraEditors.Controls.ButtonPredefines.Glyph, "4", -1, true, true, false, null)});
    this.repositoryItemButtonEdit1.Name = "repositoryItemButtonEdit1";
    this.repositoryItemButtonEdit1.TextEditStyle = DevExpress.XtraEditors.Controls.TextEditStyles.HideTextEditor;
    
    // gridView1의 특정 컬럼에 repositoryItemButtonEdit1 할당
    this.gridView1.Columns["YourColumn"].ColumnEdit = this.repositoryItemButtonEdit1;
    // ...
}
2. ButtonClick 이벤트 핸들러 구현
클릭된 버튼에 따라 행의 데이터를 업데이트하고, 선택된 버튼의 스타일을 변경합니다.

csharp
Copy code
// ButtonClick 이벤트 핸들러
this.repositoryItemButtonEdit1.ButtonClick += (sender, e) =>
{
    GridView view = this.gridControl1.MainView as GridView;
    int rowHandle = view.FocusedRowHandle;
    string selectedNumber = e.Button.Caption;

    // 선택된 번호를 해당 행의 데이터에 저장
    // 예: view.SetRowCellValue(rowHandle, "YourDataColumn", selectedNumber);

    // 선택된 버튼의 스타일 변경
    // 예: e.Button.Appearance.BackColor = Color.Blue; // 선택된 버튼의 배경색 변경
};
3. CustomDrawCell 이벤트를 사용하여 셀 드로잉 커스터마이즈
선택된 버튼에 따라 셀의 드로잉을 커스터마이즈합니다.

csharp
Copy code
// CustomDrawCell 이벤트 핸들러
gridView1.CustomDrawCell += (sender, e) =>
{
    if (e.Column.FieldName == "YourColumn")
    {
        // 행의 데이터를 기반으로 선택된 번호 확인
        // 예: string selectedNumber = (string)view.GetRowCellValue(e.RowHandle, "YourDataColumn");

        // 선택된 번호에 따라 셀의 드로잉을 커스터마이즈
        // 예: if (selectedNumber == "1") { e.Appearance.BackColor = Color.Blue; }
    }
};
중요 사항
YourColumn은 GridView의 버튼이 있는 컬럼의 이름입니다.