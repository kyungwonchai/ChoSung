튼이 항상 보이도록 설정하고, 컬럼의 폭을 80으로 고정하는 코드를 추가하겠습니다. 다음 코드를 사용하면 버튼이 눈에 보이고, 컬럼의 폭이 고정됩니다.

csharp
코드 복사
using System;
using System.Data;
using System.Data.SqlClient;
using System.Windows.Forms;
using DevExpress.XtraGrid;
using DevExpress.XtraGrid.Views.Grid;
using DevExpress.XtraEditors.Repository;

namespace YourNamespace
{
    public partial class YourForm : Form
    {
        private GridControl gridControl;
        private GridView gridView;
        private string connectionString = "Your_Connection_String_Here";
        private string query = "SELECT Column1 FROM TableA";

        public YourForm()
        {
            InitializeComponent();
            InitializeGridControl();
            LoadData();
        }

        private void InitializeComponent()
        {
            this.gridControl = new GridControl();
            this.gridView = new GridView(gridControl);
            this.SuspendLayout();
            // 
            // gridControl
            // 
            this.gridControl.Dock = DockStyle.Fill;
            this.gridControl.MainView = this.gridView;
            this.gridControl.ViewCollection.AddRange(new DevExpress.XtraGrid.Views.Base.BaseView[] {
            this.gridView});
            this.Controls.Add(this.gridControl);
            // 
            // gridView
            // 
            this.gridView.GridControl = this.gridControl;
            this.gridView.Name = "gridView";
            this.ResumeLayout(false);
        }

        private void InitializeGridControl()
        {
            gridView.OptionsBehavior.Editable = true;
            gridView.OptionsSelection.EnableAppearanceFocusedCell = false;
            gridView.FocusRectStyle = DevExpress.XtraGrid.Views.Grid.DrawFocusRectStyle.RowFocus;

            // Create button editors
            RepositoryItemButtonEdit buttonEditVAL1 = new RepositoryItemButtonEdit();
            buttonEditVAL1.Buttons[0].Caption = "Q1";
            buttonEditVAL1.Buttons[0].Kind = DevExpress.XtraEditors.Controls.ButtonPredefines.Glyph;
            buttonEditVAL1.TextEditStyle = DevExpress.XtraEditors.Controls.TextEditStyles.HideTextEditor;
            buttonEditVAL1.ButtonClick += ButtonEditVAL1_ButtonClick;

            RepositoryItemButtonEdit buttonEditAN2 = new RepositoryItemButtonEdit();
            buttonEditAN2.Buttons[0].Caption = "A1";
            buttonEditAN2.Buttons[0].Kind = DevExpress.XtraEditors.Controls.ButtonPredefines.Glyph;
            buttonEditAN2.TextEditStyle = DevExpress.XtraEditors.Controls.TextEditStyles.HideTextEditor;
            buttonEditAN2.ButtonClick += ButtonEditAN2_ButtonClick;

            gridControl.RepositoryItems.Add(buttonEditVAL1);
            gridControl.RepositoryItems.Add(buttonEditAN2);

            // Add columns to grid
            var column1 = gridView.Columns.AddVisible("Column1", "Column1");
            var val1Column = gridView.Columns.AddVisible("VAL1", "VAL1");
            var an2Column = gridView.Columns.AddVisible("AN2", "AN2");

            val1Column.ColumnEdit = buttonEditVAL1;
            an2Column.ColumnEdit = buttonEditAN2;

            val1Column.Width = 80;
            an2Column.Width = 80;
        }

        private void LoadData()
        {
            using (SqlConnection connection = new SqlConnection(connectionString))
            {
                SqlDataAdapter dataAdapter = new SqlDataAdapter(query, connection);
                DataTable dataTable = new DataTable();
                dataAdapter.Fill(dataTable);

                // Add extra columns
                dataTable.Columns.Add("VAL1", typeof(string));
                dataTable.Columns.Add("AN2", typeof(string));

                gridControl.DataSource = dataTable;
            }
        }

        private void ButtonEditVAL1_ButtonClick(object sender, DevExpress.XtraEditors.Controls.ButtonPressedEventArgs e)
        {
            GridView view = gridControl.FocusedView as GridView;
            if (view != null)
            {
                DataRow row = view.GetDataRow(view.FocusedRowHandle);
                if (row != null)
                {
                    string column1Value = row["Column1"].ToString();
                    MessageBox.Show("VAL1 Button Clicked, Column1 Value: " + column1Value);
                }
            }
        }

        private void ButtonEditAN2_ButtonClick(object sender, DevExpress.XtraEditors.Controls.ButtonPressedEventArgs e)
        {
            GridView view = gridControl.FocusedView as GridView;
            if (view != null)
            {
                DataRow row = view.GetDataRow(view.FocusedRowHandle);
                if (row != null)
                {
                    string column1Value = row["Column1"].ToString();
                    MessageBox.Show("AN2 Button Clicked, Column1 Value: " + column1Value);
                }
            }
        }

        [STAThread]
        static void Main()
        {
            Application.EnableVisualStyles();
            Application.SetCompatibleTextRenderingDefault(false);
            Application.Run(new YourForm());
        }
    }
}
이 코드에서 중요한 변경 사항은 다음과 같습니다:

buttonEditVAL1 및 buttonEditAN2의 TextEditStyle을 HideTextEditor로 설정하여 버튼이 항상 보이도록 설정했습니다.
컬럼의 폭을 80으로 고정했습니다.
이렇게 하면 VAL1 및 AN2 컬럼에 버튼이 항상 표시되고, 컬럼의 폭이 80으로 설정됩니