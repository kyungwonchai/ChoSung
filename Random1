, 죄송합니다. 제가 쓴 my-project라는 말이 헷갈리게 만들었네요.

my-project는 예시를 위한 일반적인 폴더 이름일 뿐입니다. 잊어버리셔도 됩니다.

사용자님 상황에 맞춰서, 사용자님이 이전에 만드셨던 실제 폴더 이름으로 다시 설명해 드릴게요.

my-project -> /var/www/alpha-project/react-app

my-project -> /var/www/alpha-project/streamlit-dashboard

... 등등 실제 개별 프로젝트 폴더를 의미하는 것이었습니다.

## 404 Not Found 에러 해결: 사용자님 환경 맞춤형 체크리스트
404 Not Found는 Nginx가 요청받은 파일이나 경로를 찾지 못했다는 뜻입니다. 지금 여러 프로젝트를 하나로 묶고 계시기 때문에, 어떤 주소에서 404가 뜨는지에 따라 원인이 완전히 다릅니다.

F12 개발자 도구를 켜서 어떤 URL이 404 에러를 받는지 먼저 확인해주세요.

Case 1: React 앱의 CSS/JS 파일이나 서브 경로에서 404가 뜰 때
에러 URL 예시:

http://10.244.222.222/app/static/js/main.js

http://10.244.222.222/app/login (새로고침 시)

이건 React 앱을 위한 Nginx 설정에 문제가 있을 확률이 99%입니다.

✅ 해결책:
Nginx 설정 파일(alpha-project.conf)에서 location /app/ 블록을 확인하세요.

Nginx

# /etc/nginx/sites-available/alpha-project.conf

location /app/ {
    # 1. 'root' 대신 'alias'를 사용해야 합니다.
    # 'alias'는 URL의 '/app/' 부분을 떼어내고 실제 경로에 매핑해줍니다.
    # 여기가 '/var/www/alpha-project/react-app/build' 가 맞는지 확인하세요.
    alias /var/www/alpha-project/react-app/build/;

    # 2. React Router를 위한 설정입니다. 이 줄이 꼭 있어야 합니다.
    try_files $uri $uri/ /app/index.html;

    # ... proxy_pass는 정적 파일을 서비스할 땐 필요 없습니다. 제거하세요.
}
가장 중요한 수정 사항:
React처럼 빌드된 정적 파일을 서빙할 때는 proxy_pass가 아니라 alias를 사용하고, try_files로 라우팅을 처리해야 합니다. root를 사용하면 경로 문제가 발생할 수 있습니다.

Case 2: /dashboard/ 또는 /service/ 경로 자체에서 404가 뜰 때
에러 URL 예시:

http://10.244.222.222/dashboard/

http://10.244.222.222/service/api/v1/users

이건 Nginx가 요청을 Streamlit이나 Flask 앱으로 성공적으로 전달했지만, 그 앱이 "해당 경로를 처리할 수 없다"고 404를 응답한 경우입니다. Nginx 설정 문제가 아닐 가능성이 높습니다.

✅ 해결책:

백엔드 앱 로그 확인: 각 앱을 실행한 터미널이나 systemd 로그를 확인해서 에러 메시지가 없는지 보세요.

Bash

# 예시: streamlit-dashboard 서비스의 로그 확인
sudo journalctl -u streamlit-dashboard.service -f
경로 접두사(Prefix) 문제: Nginx가 /dashboard/ 부분을 떼고 요청을 전달하도록 설정했기 때문에, Streamlit이나 Flask 앱은 / 경로로 요청을 받게 됩니다. 앱 코드에 /dashboard 같은 경로가 하드코딩되어 있다면 문제가 생길 수 있습니다. (이전 답변의 "🚨 매우 중요: 경로 기반 라우팅을 위한 앱 수정" 부분을 참고하세요.)

Case 3: 메인 페이지(http://10.244.222.222/)에서 404가 뜰 때
이건 메인 포털 페이지의 경로 설정이 잘못된 것입니다.

✅ 해결책:
location / 블록의 root 경로가 정확한지, 그리고 해당 폴더 안에 index.html 파일이 있는지 확인하세요.

Nginx

# /etc/nginx/sites-available/alpha-project.conf

location / {
    # 1. 이 경로가 맞는지 확인: /var/www/main-portal
    root /var/www/main-portal;

    # 2. 이 폴더 안에 index.html 파일이 있는지 확인
    index index.html index.htm;
}
그리고 폴더/파일 권한 문제일 수도 있으니 아래 명령어를 실행해서 권한을 다시 한번 확인해주세요.

Bash

sudo chown -R www-data:www-data /var/www/main-portal
sudo chmod -R 755 /var/www/main-portal
핵심 요약
어떤 주소에서 404가 나는지 F12로 확인하는 것이 첫 번째입니다.

React 같은 정적 파일이 문제라면 Nginx의 location /app/ 블록에 alias와 try_files 설정을 확인하세요.