string connString = "your_connection_string";
string query = "SELECT [최근1개월성공율], [수행횟수], [실패횟수], [IPAddress], [날짜], [성공율], [시도횟수] FROM your_table";

DataTable dt = new DataTable();

using(SqlConnection conn = new SqlConnection(connString))
{
    conn.Open();
    using(SqlCommand cmd = new SqlCommand(query, conn))
    {
        SqlDataAdapter da = new SqlDataAdapter(cmd);
        da.Fill(dt);
    }
}

// Doughnut 차트 컨트롤 초기화
ChartControl doughnutChart = new ChartControl();

// 데이터 소스 설정
doughnutChart.DataSource = dt;

// 도넛 차트 시리즈 생성
Series DDSeries1 = new Series("DDSeries 1", ViewType.Doughnut);

// 시리즈의 인수와 값을 설정합니다.
DDSeries1.ArgumentDataMember = "IPAddress";
DDSeries1.ValueDataMembers.AddRange(new string[] { "수행횟수" , "실패횟수"});

// 차트에 도넛 차트 시리즈 추가
doughnutChart.Series.Add(DDSeries1);

// 차트를 컨트롤에 추가
this.Controls.Add(doughnutChart);

// Bar and Line 차트 컨트롤 초기화
ChartControl barLineChart = new ChartControl();

// 데이터 소스 설정
barLineChart.DataSource = dt;

// 막대 그래프와 선 그래프를 생성합니다.
Series DDSeries2 = new Series("DDSeries 2", ViewType.Bar);
Series DDSeries3 = new Series("DDSeries 3", ViewType.Line);

// 시리즈의 인수와 값을 설정합니다.
DDSeries2.ArgumentDataMember = "날짜";
DDSeries2.ValueDataMembers.AddRange(new string[] { "시도횟수" });

DDSeries3.ArgumentDataMember = "날짜";
DDSeries3.ValueDataMembers.AddRange(new string[] { "성공율" });

// 차트에 막대 그래프와 선 그래프 추가
barLineChart.Series.Add(DDSeries2);
barLineChart.Series.Add(DDSeries3);

// 각 시리즈에 대한 축을 설정합니다.
((DevExpress.XtraCharts.XYDiagram)barLineChart.Diagram).SecondaryAxesY.Add(new DevExpress.XtraCharts.SecondaryAxisY("성공율"));
((DevExpress.XtraCharts.LineSeriesView)DDSeries3.View).AxisY = ((DevExpress.XtraCharts.XYDiagram)barLineChart.Diagram).SecondaryAxesY[0];

// 차트를 컨트롤에 추가
this.Controls.Add(barLineChart);
