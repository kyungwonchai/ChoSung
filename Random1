Streamlit + PyMSSQL로 웹 구현 (Ubuntu, Python 기반)
목표:

좌측: 특정 라인 선택 ListBox
우측: BCT1_1 ~ BCT1_8, TCT1_1 ~ TCT1_8 데이터를 표 (Streamlit DataFrame)로 표시
헤더: 1호기 ~ 8호기
상단: 선택한 모델명과 time1 값 표시
Streamlit + PyMSSQL (MSSQL 연결)
Ubuntu에서 실행 가능
✅ 🔹 Python (Streamlit) 코드
python
코드 복사
import streamlit as st
import pymssql
import pandas as pd

# 📌 MSSQL 연결 설정
DB_CONFIG = {
    "server": "서버주소",
    "user": "사용자명",
    "password": "비밀번호",
    "database": "DB이름"
}

# 📌 특정 라인의 데이터를 가져오는 함수
def get_line_data(line_name):
    conn = pymssql.connect(**DB_CONFIG)
    cursor = conn.cursor(as_dict=True)

    # 최신 모델과 시간 가져오기
    cursor.execute(f"""
        SELECT TOP 1 모델, time1 
        FROM ExcelData 
        WHERE 라인 = %s
        ORDER BY time1 DESC
    """, (line_name,))
    latest = cursor.fetchone()

    if not latest:
        conn.close()
        return None, None, None

    latest_model, latest_time = latest["모델"], latest["time1"]

    # 해당 모델의 최신 10개 데이터 가져오기
    cursor.execute(f"""
        WITH RecentData AS (
            SELECT TOP 10 * FROM ExcelData
            WHERE 라인 = %s AND 모델 = %s
            ORDER BY time1 DESC
        )
        SELECT 
            MIN(CASE WHEN BCT1_1 >= 1 THEN BCT1_1 ELSE NULL END) AS BCT1_1,
            MIN(CASE WHEN BCT1_2 >= 1 THEN BCT1_2 ELSE NULL END) AS BCT1_2,
            MIN(CASE WHEN BCT1_3 >= 1 THEN BCT1_3 ELSE NULL END) AS BCT1_3,
            MIN(CASE WHEN BCT1_4 >= 1 THEN BCT1_4 ELSE NULL END) AS BCT1_4,
            MIN(CASE WHEN BCT1_5 >= 1 THEN BCT1_5 ELSE NULL END) AS BCT1_5,
            MIN(CASE WHEN BCT1_6 >= 1 THEN BCT1_6 ELSE NULL END) AS BCT1_6,
            MIN(CASE WHEN BCT1_7 >= 1 THEN BCT1_7 ELSE NULL END) AS BCT1_7,
            MIN(CASE WHEN BCT1_8 >= 1 THEN BCT1_8 ELSE NULL END) AS BCT1_8,

            MIN(CASE WHEN TCT1_1 >= 1 THEN TCT1_1 ELSE NULL END) AS TCT1_1,
            MIN(CASE WHEN TCT1_2 >= 1 THEN TCT1_2 ELSE NULL END) AS TCT1_2,
            MIN(CASE WHEN TCT1_3 >= 1 THEN TCT1_3 ELSE NULL END) AS TCT1_3,
            MIN(CASE WHEN TCT1_4 >= 1 THEN TCT1_4 ELSE NULL END) AS TCT1_4,
            MIN(CASE WHEN TCT1_5 >= 1 THEN TCT1_5 ELSE NULL END) AS TCT1_5,
            MIN(CASE WHEN TCT1_6 >= 1 THEN TCT1_6 ELSE NULL END) AS TCT1_6,
            MIN(CASE WHEN TCT1_7 >= 1 THEN TCT1_7 ELSE NULL END) AS TCT1_7,
            MIN(CASE WHEN TCT1_8 >= 1 THEN TCT1_8 ELSE NULL END) AS TCT1_8
        FROM RecentData;
    """, (line_name, latest_model))

    data = cursor.fetchone()
    conn.close()

    return latest_model, latest_time, data

# 📌 라인 목록 가져오기
def get_lines():
    conn = pymssql.connect(**DB_CONFIG)
    cursor = conn.cursor()
    cursor.execute("SELECT DISTINCT 라인 FROM ExcelData ORDER BY 라인")
    lines = [row[0] for row in cursor.fetchall()]
    conn.close()
    return lines

# 📌 Streamlit UI
st.title("라인 데이터 조회")

# 📌 라인 선택
lines = get_lines()
selected_line = st.sidebar.selectbox("라인 선택", lines)

# 📌 데이터 조회
if selected_line:
    latest_model, latest_time, table_data = get_line_data(selected_line)

    if latest_model:
        st.subheader(f"모델명: {latest_model}")
        st.subheader(f"최신 시간: {latest_time}")

        # 📌 데이터 변환 (딕셔너리를 DataFrame으로 변환)
        if table_data:
            df = pd.DataFrame([table_data], index=["BCT & TCT"])
            df.columns = ["1호기", "2호기", "3호기", "4호기", "5호기", "6호기", "7호기", "8호기"]
            st.table(df)
        else:
            st.warning("해당 라인에 대한 데이터가 없습니다.")
    else:
        st.warning("해당 라인에 대한 데이터가 없습니다.")
✅ 설치 및 실행
bash
코드 복사
pip install streamlit pymssql pandas
streamlit run app.py
➡ 브라우저에서 http://localhost:8501 접속하면 실행됨! 🚀

✅ 구현 화면
1️⃣ 좌측 → 라인 선택 (ListBox)
2️⃣ 상단 → 모델명 & 최신 시간