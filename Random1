CroppedBitmap에서 "값이 예상 범위를 벗어났습니다"라는 ArgumentException이 발생하는 것은, 생성자에 전달된 cropArea (Int32Rect)가 원본 BitmapImage의 크기를 벗어났기 때문입니다. 버튼을 두 번 클릭했을 때 이 문제가 발생하는 일반적인 원인은 다음과 같습니다.

주요 원인
잘못된 좌표 계산: cropArea를 정의하는 Int32Rect(x, y, width, height)의 값 중 하나라도 비트맵의 경계를 침범하면 오류가 발생합니다.

x 또는 y 좌표가 음수일 경우

x + width가 비트맵의 전체 너비(PixelWidth)를 초과할 경우

y + height가 비트맵의 전체 높이(PixelHeight)를 초과할 경우

좌표 정보의 누적 또는 잘못된 갱신: 버튼을 처음 클릭했을 때 사용된 좌표 값이 변경되지 않거나, 두 번째 클릭 시 잘못된 값으로 계산될 수 있습니다. 예를 들어, 이미 잘라낸 비트맵을 기준으로 다시 좌표를 계산하려 하거나, 마우스 위치와 같은 동적인 값을 사용하는데 이 값이 비트맵 영역 밖을 가리키는 경우가 해당됩니다.

DPI(Dots Per Inch) 불일치: 원본 BitmapImage의 DPI와 화면의 DPI 설정이 다를 경우, 좌표 계산에 오차가 발생하여 실제 픽셀 경계를 벗어날 수 있습니다. 이로 인해 계산된 cropArea가 유효하지 않게 됩니다.

해결 방안
문제를 해결하기 위해 CroppedBitmap을 생성하기 전에 cropArea 값이 유효한지 확인하는 로직을 추가해야 합니다.

C#

try
{
    // 원본 비트맵 소스
    BitmapSource sourceImage = yourBitmapImage;

    // 자를 영역 (Int32Rect)
    Int32Rect cropArea = new Int32Rect(x, y, width, height);

    // ## 방어 코드: cropArea가 원본 이미지의 경계 내에 있는지 확인 ##
    if (cropArea.X < 0 ||
        cropArea.Y < 0 ||
        cropArea.X + cropArea.Width > sourceImage.PixelWidth ||
        cropArea.Y + cropArea.Height > sourceImage.PixelHeight)
    {
        // 에러 처리: 사용자에게 알리거나, 영역을 최대 크기로 조정
        MessageBox.Show("자르기 영역이 이미지 범위를 벗어났습니다.");
        return;
    }

    // CroppedBitmap 생성
    CroppedBitmap croppedBitmap = new CroppedBitmap(sourceImage, cropArea);

    // 이후 로직 처리...
    yourImageControl.Source = croppedBitmap;
}
catch (Exception ex)
{
    // 예외 처리
    MessageBox.Show($"오류가 발생했습니다: {ex.Message}");
}
체크리스트
좌표 값 확인: CroppedBitmap 생성 직전에 x, y, width, height 변수 값이 어떻게 계산되고 있는지 디버깅을 통해 확인해 보세요.

원본 이미지 상태: 버튼을 두 번째 클릭했을 때 yourBitmapImage 변수가 여전히 유효한 원본 BitmapImage를 참조하고 있는지 확인합니다. 이미 잘라낸 이미지(CroppedBitmap)를 원본으로 사용하려고 하면 좌표 계산이 꼬일 수 있습니다.