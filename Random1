ET 4.8에서는 SignalR을 사용할 수 있습니다만, 이 경우는 ASP.NET SignalR을 사용하게 될 것입니다. 여기서 주의할 점은 ASP.NET SignalR과 ASP.NET Core SignalR은 다르다는 것입니다.

SignalR for .NET 4.x에는 Microsoft.AspNet.SignalR 라이브러리를 사용할 수 있습니다. 이 라이브러리는 NuGet 패키지 관리자를 통해 설치할 수 있습니다.

여기에 따르면 기본적인 로직은 동일하지만, 구현 방법에는 약간의 차이가 있을 수 있습니다. 예를 들어, Hub 연결 및 메서드 호출에 사용되는 API가 다를 수 있습니다.

csharp

// 서버 측
public class EditHub : Hub
{
    public void UpdateEditStatus(string key1, string username, string column)
    {
        Clients.Others.receiveEditStatus(key1, username, column);
    }
}

클라이언트 측에서는 다음과 같이 작성할 수 있습니다.

csharp

var hubConnection = new HubConnection("http://yourserver");
IHubProxy hubProxy = hubConnection.CreateHubProxy("EditHub");

hubProxy.On<string, string, string>("receiveEditStatus", (key1, username, column) => 
{
    // 편집 상태 처리
});

await hubConnection.Start();

이렇게 하면 .NET 4.8에서도 SignalR을 활용하여 실시간 업데이트를 수행할 수 있습니다. 이 외에도 이벤트 처리나 데이터 업데이트 등의 구현 방법은 위에서 언급한 것과 크게 다르지 않을 것입니다.