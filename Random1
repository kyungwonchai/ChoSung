using System.ComponentModel;
using System.Runtime.CompilerServices;
using System.Windows.Media;

public class TaskModel : INotifyPropertyChanged
{
    private string _cellColor = "#FFFFFF"; // 기본값은 흰색
    private bool _isCompleted;

    // 컬러 값 저장을 위한 문자열 속성
    public string CellColor
    {
        get => _cellColor;
        set
        {
            if (_cellColor != value)
            {
                _cellColor = value;
                OnPropertyChanged(); // CellColor 변경 시 UI 업데이트
                OnPropertyChanged(nameof(ColorValue)); // ColorValue도 변경되었음을 알림
            }
        }
    }

    // 컬러 값을 사용하기 위한 Color 형식의 속성
    public Color ColorValue
    {
        get
        {
            // CellColor 문자열을 Color 형식으로 변환
            return (Color)ColorConverter.ConvertFromString(CellColor ?? "#FFFFFF");
        }
        set
        {
            // Color 형식을 문자열로 변환하여 저장
            CellColor = value.ToString();
            OnPropertyChanged(); // CellColor 변경 시 UI 업데이트
            OnPropertyChanged(nameof(ColorValue));
        }
    }

    // 작업 완료 여부
    public bool IsCompleted
    {
        get => _isCompleted;
        set
        {
            if (_isCompleted != value)
            {
                _isCompleted = value;
                OnPropertyChanged(); // IsCompleted 변경 시 UI 업데이트
            }
        }
    }

    // PropertyChanged 이벤트 정의
    public event PropertyChangedEventHandler PropertyChanged;

    protected void OnPropertyChanged([CallerMemberName] string propertyName = null)
    {
        PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
    }
}
