import bpy

# 텍스트 오브젝트 선택
text_obj = bpy.context.object

# 재질 생성 및 설정
material = bpy.data.materials.new(name="RainbowMaterial")
material.use_nodes = True
text_obj.data.materials.append(material)

# 노드 참조
nodes = material.node_tree.nodes
links = material.node_tree.links

# 기본 Principled BSDF 노드 가져오기
bsdf = nodes.get("Principled BSDF")

# Color Ramp 노드 추가 (무지개 색상 그라데이션)
color_ramp = nodes.new(type="ShaderNodeValToRGB")
color_ramp.color_ramp.interpolation = 'EASE'  # 부드러운 색상 전환

# 무지개 색상 설정
colors = [
    (1.0, 0.0, 0.0, 1.0),   # 빨강
    (1.0, 0.5, 0.0, 1.0),   # 주황
    (1.0, 1.0, 0.0, 1.0),   # 노랑
    (0.0, 1.0, 0.0, 1.0),   # 초록
    (0.0, 0.0, 1.0, 1.0),   # 파랑
    (0.5, 0.0, 1.0, 1.0),   # 남색
    (1.0, 0.0, 1.0, 1.0)    # 보라
]

# Color Ramp에 색상 추가
for i, color in enumerate(colors):
    color_ramp.color_ramp.elements.new(i / (len(colors) - 1)).color = color

# Texture Coordinate 노드 추가 (UV 맵 기반으로 무지개 색상 분포)
tex_coord = nodes.new(type="ShaderNodeTexCoord")

# Mapping 노드 추가 (무지개 그라데이션 위치 조정)
mapping = nodes.new(type="ShaderNodeMapping")

# 노드 연결
links.new(tex_coord.outputs["Generated"], mapping.inputs["Vector"])
links.new(mapping.outputs["Vector"], color_ramp.inputs["Fac"])
links.new(color_ramp.outputs["Color"], bsdf.inputs["Base Color"])

# 광택 효과 조정
bsdf.inputs["Roughness"].default_value = 0.2  # 표면을 약간 반짝이게 설정
bsdf.inputs["Metallic"].default_value = 0.5   # 금속성 효과 추가

# 광원 추가
bpy.ops.object.light_add(type='POINT', location=(5, -5, 5))
point_light = bpy.context.object
point_light.data.energy = 1000  # 광원의 강도 설정
point_light.data.color = (1.0, 0.9, 0.7)  # 따뜻한 색상

# 추가한 광원 텍스트 주변에 반사 효과 생성
