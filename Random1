이해했습니다. 다음과 같은 조건을 만족하는 정규식을 제공하겠습니다:

rf-로 시작하는 문자열이 있어야 합니다.
rf- 뒤에 어떤 문자들이 오고, 그 뒤에 공백 4개가 있어야 합니다.
공백 4개 뒤에는 바로 세미콜론(;)이 와야 합니다.
이 조건을 만족하는 정규식은 다음과 같습니다:

csharp
코드 복사
string pattern = @"\brf-.*[\s]{4};";
이 정규식의 의미는 다음과 같습니다:

\b: 단어 경계를 의미합니다. rf-가 단어의 시작에서만 매칭되도록 합니다.
rf-: rf-로 시작함을 의미합니다.
.*: rf- 뒤에 어떤 문자들이 와도 상관없음을 의미합니다.
[\s]{4}: 공백 문자가 4번 연속으로 오는 경우를 의미합니다.
;: 공백 4개 뒤에 세미콜론이 바로 와야 한다는 것을 의미합니다.
예제 코드:
csharp
코드 복사
using System;
using System.Text.RegularExpressions;

class Program
{
    static void Main()
    {
        string input1 = "tewtwt   rf-gds-gd-sgs-gs-g    ;fdsfdsf"; // 패턴에 일치해야 함
        string input2 = "scgfsg    rf-sc-frsrf-rewt-;sg-gds-gsd-gdsg-"; // 패턴에 일치하지 않음
        
        string pattern = @"\brf-.*[\s]{4};";
        
        Console.WriteLine("첫 번째 문자열 검사 결과: " + (Regex.IsMatch(input1, pattern) ? "패턴에 일치합니다." : "패턴에 일치하지 않습니다."));
        Console.WriteLine("두 번째 문자열 검사 결과: " + (Regex.IsMatch(input2, pattern) ? "패턴에 일치합니다." : "패턴에 일치하지 않습니다."));
    }
}
출력 결과:
첫 번째 문자열: "tewtwt rf-gds-gd-sgs-gs-g ;fdsfdsf"는 패턴에 일치합니다. rf- 뒤에 문자가 있고, 그 뒤에 공백 4칸과 세미콜론이 바로 붙어있기 때문입니다.
두 번째 문자열: "scgfsg rf-sc-frsrf-rewt-;sg-gds-gsd-gdsg-"는 패턴에 일치하지 않습니다. rf- 뒤에 공백 4칸과 세미콜론이 바로 붙어있지 않기 때문입니다.
이 정규식은 정확히 당신이 요청한 조건을 충족시킬 것입니다