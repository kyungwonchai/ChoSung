서 토글 버튼의 상태를 저장하고, 프로그램 로딩 시 그 값을 읽어오는 예제 코드를 제공하겠습니다. 이 예제는 C#과 WinForms를 사용하여 구현됩니다. 또한, 설정을 저장하고 불러오기 위해 Properties.Settings를 사용할 것입니다.

프로젝트 설정

Visual Studio에서 새로운 WinForms 프로젝트를 생성합니다.
토글 버튼 추가

폼에 CheckBox 컨트롤을 추가하고, 이름을 toggleButton으로 설정합니다.
Label 컨트롤을 추가하여 토글 버튼의 상태를 표시하도록 합니다. 이 Label의 이름은 statusLabel로 설정합니다.
설정 저장을 위한 설정 추가

Project > Properties > Settings로 이동하여 Settings를 추가합니다.
이름을 ToggleState, 형식을 bool, 범위를 User로 설정합니다.
코드 작성

csharp
코드 복사
using System;
using System.Windows.Forms;

namespace ToggleButtonApp
{
    public partial class MainForm : Form
    {
        public MainForm()
        {
            InitializeComponent();
            LoadToggleState();
        }

        private void toggleButton_CheckedChanged(object sender, EventArgs e)
        {
            // 토글 버튼의 상태를 저장합니다.
            Properties.Settings.Default.ToggleState = toggleButton.Checked;
            Properties.Settings.Default.Save();
            UpdateStatusLabel();
        }

        private void LoadToggleState()
        {
            // 저장된 토글 상태를 불러옵니다.
            toggleButton.Checked = Properties.Settings.Default.ToggleState;
            UpdateStatusLabel();
        }

        private void UpdateStatusLabel()
        {
            // 라벨에 현재 상태를 표시합니다.
            statusLabel.Text = toggleButton.Checked ? "On" : "Off";
        }
    }
}
디자이너 코드 (MainForm.Designer.cs)
자동 생성된 부분이며, 폼 디자인에서 추가한 컨트롤들의 초기 설정이 포함되어 있습니다.
csharp
코드 복사
namespace ToggleButtonApp
{
    partial class MainForm
    {
        /// <summary>
        /// 필수 디자이너 변수입니다.
        /// </summary>
        private System.ComponentModel.IContainer components = null;

        /// <summary>
        /// 사용 중인 모든 리소스를 정리합니다.
        /// </summary>
        /// <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        protected override void Dispose(bool disposing)
        {
            if (disposing && (components != null))
            {
                components.Dispose();
            }
            base.Dispose(disposing);
        }

        #region Windows Form 디자이너에서 생성한 코드

        /// <summary>
        /// 디자이너 지원에 필요한 메서드입니다. 
        /// 이 메서드의 내용을 코드 편집기로 수정하지 마십시오.
        /// </summary>
        private void InitializeComponent()
        {
            this.toggleButton = new System.Windows.Forms.CheckBox();
            this.statusLabel = new System.Windows.Forms.Label();
            this.SuspendLayout();
            // 
            // toggleButton
            // 
            this.toggleButton.AutoSize = true;
            this.toggleButton.Location = new System.Drawing.Point(12, 12);
            this.toggleButton.Name = "toggleButton";
            this.toggleButton.Size = new System.Drawing.Size(58, 17);
            this.toggleButton.TabIndex = 0;
            this.toggleButton.Text = "Toggle";
            this.toggleButton.UseVisualStyleBackColor = true;
            this.toggleButton.CheckedChanged += new System.EventHandler(this.toggleButton_CheckedChanged);
            // 
            // statusLabel
            // 
            this.statusLabel.AutoSize = true;
            this.statusLabel.Location = new System.Drawing.Point(12, 41);
            this.statusLabel.Name = "statusLabel";
            this.statusLabel.Size = new System.Drawing.Size(37, 13);
            this.statusLabel.TabIndex = 1;
            this.statusLabel.Text = "Status";
            // 
            // MainForm
            // 
            this.AutoScaleDimensions = new System.Drawing.SizeF(6F, 13F);
            this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;
            this.ClientSize = new System.Drawing.Size(284, 61);
            this.Controls.Add(this.statusLabel);
            this.Controls.Add(this.toggleButton);
            this.Name = "MainForm";
            this.Text = "Toggle Button App";
            this.ResumeLayout(false);
            this.PerformLayout();

        }

        #endregion

        private System.Windows.Forms.CheckBox toggleButton;
        private System.Windows.Forms.Label statusLabel;
    }
}
이 코드에서는 토글 버튼(CheckBox)의 상태가 변경될 때마다 Properties.Settings.Default에 현재 상태를 저장합니다. 프로그램이 로딩될 때 저장된 상태를 불러와 토글 버튼과 라벨에 반영합니다.

이제 프로그램을 실행하면 토글 버튼의 상태가 저장되고, 프로그램을 다시 시작해도 이전에 저장된 상태를 유지하는 것을 확인할 수 있습니다.






