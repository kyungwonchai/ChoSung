서 숫자값도 문자로 인식되도록 CSV에 기록하는 방법은 값 앞에 따옴표 (')를 추가하는 것입니다. 이렇게 하면 엑셀에서 해당 값이 문자로 인식됩니다. 아래는 이를 반영한 수정된 코드입니다.

python
코드 복사
import os
import csv
from datetime import datetime

# Log file directory
log_directory = "c:/test"

# Dictionary to store unique SentValue prefixes
unique_prefixes = {}

# List to store the parsed log data
log_data = []

# Read all files in the directory
for filename in os.listdir(log_directory):
    if "commandqueue" in filename.lower():
        file_path = os.path.join(log_directory, filename)
        
        # Open and read the file
        with open(file_path, 'r', encoding='utf-8') as file:
            lines = file.readlines()
            for line in lines:
                # Split the line by '|'
                parts = line.strip().split('|')
                if len(parts) == 7:  # Only process if all required fields are present
                    # Extract the first 14 characters of SentValue as a prefix
                    prefix = parts[1][:14]
                    unique_prefixes[prefix] = None  # Store as a key for uniqueness
                    log_data.append(parts)

# Sort the unique prefixes alphabetically and convert to a list
sorted_prefixes = sorted(unique_prefixes.keys())

# Sort the log data by time (assuming the time format is consistent for sorting)
log_data.sort(key=lambda x: x[0])

# Prepare the output directory
output_directory = "c:/test/csv2"
os.makedirs(output_directory, exist_ok=True)

# Create the output file name with the current timestamp
timestamp = datetime.now().strftime("%Y%m%d%H%M%S")
output_file = os.path.join(output_directory, f"{timestamp}_output.csv")

# Save the sorted data to a CSV file with dynamic columns based on SentValue prefixes
with open(output_file, 'w', newline='', encoding='utf-8') as csvfile:
    csvwriter = csv.writer(csvfile)
    
    # Write column headers
    headers = ["Time", "SentValue", "ResponseValue", "Result", "Result2", "Retry", "Speed"] + sorted_prefixes
    csvwriter.writerow(headers)
    
    # Write data rows
    for row in log_data:
        # Initialize row with existing columns
        data_row = [f"'{value}" for value in row[:7]]  # Ensure all initial values are treated as text
        
        # Create a list for prefix columns, initialized to empty strings
        prefix_values = [''] * len(sorted_prefixes)
        
        # Find the prefix for the current SentValue and set its corresponding column
        current_prefix = row[1][:14]
        if current_prefix in sorted_prefixes:
            prefix_index = sorted_prefixes.index(current_prefix)
            if "WDD" in current_prefix:
                # Extract SentValue from the 20th character onward
                sent_value = row[1]
                extracted_value = sent_value[19:] if len(sent_value) >= 20 else ""
            else:
                # Extract the rightmost 7 characters of ResponseValue
                response_value = row[2]
                extracted_value = response_value[-7:] if len(response_value) >= 7 else response_value
            
            # Remove the last 2 characters from the extracted value
            extracted_value = extracted_value[:-2] if len(extracted_value) > 2 else ""
            
            # Add a single quote to ensure Excel treats the value as text
            prefix_values[prefix_index] = f"'{extracted_value}"
        
        # Combine the base data with the prefix values
        full_row = data_row + prefix_values
        csvwriter.writerow(full_row)

print(f"CSV file has been saved as '{output_file}'.")
수정 사항 설명
따옴표 추가:
모든 기본 데이터(Time, SentValue, ResponseValue, Result, Result2, Retry, Speed) 및 우측 컬럼 값에 앞에 '를 추가하여 엑셀에서 문자로 인식되도록 했습니다.
우측 2글자 제거 후 문자로 처리: