이전에 발생한 DefaultDecoderFactory 오류는 라이브러리의 버전 또는 특정 클래스의 접근 방식이 변경되어 발생할 수 있습니다. JourneyApps의 ZXing 라이브러리에서 QR 코드 및 바코드 스캔을 제대로 설정하는 방법을 다시 안내해드리겠습니다.

1. activity_main.xml 파일
먼저 XML 파일은 문제가 없으므로 그대로 유지합니다.

xml
코드 복사
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <com.journeyapps.barcodescanner.DecoratedBarcodeView
        android:id="@+id/camera_preview"
        android:layout_width="0dp"
        android:layout_height="0dp"
        app:layout_constraintWidth_percent="0.5"
        app:layout_constraintHeight_percent="0.5"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"/>

    <TextView
        android:id="@+id/text_view_result"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginBottom="16dp"
        android:text="Scan Result"
        android:textSize="18sp"
        android:textColor="#FFFFFF"
        android:background="#000000"
        android:padding="16dp"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent" />
</androidx.constraintlayout.widget.ConstraintLayout>
2. MainActivity.kt 수정
아래 코드는 DefaultDecoderFactory를 사용하지 않고, 기본적으로 QR 코드와 바코드 모두를 인식하도록 설정한 코드입니다.

kotlin
코드 복사
package com.dxmxsmd.mobilechecker

import android.Manifest
import android.content.pm.PackageManager
import android.os.Bundle
import android.widget.TextView
import androidx.activity.ComponentActivity
import androidx.activity.result.contract.ActivityResultContracts
import androidx.core.content.ContextCompat
import com.journeyapps.barcodescanner.DecoratedBarcodeView
import com.journeyapps.barcodescanner.BarcodeCallback
import com.journeyapps.barcodescanner.BarcodeResult

class MainActivity : ComponentActivity() {

    private lateinit var barcodeView: DecoratedBarcodeView

    private val requestPermissionLauncher =
        registerForActivityResult(ActivityResultContracts.RequestPermission()) { isGranted: Boolean ->
            if (isGranted) {
                setupBarcodeView()
            } else {
                // 권한이 거부된 경우 처리
            }
        }

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        if (ContextCompat.checkSelfPermission(this, Manifest.permission.CAMERA)
            != PackageManager.PERMISSION_GRANTED) {
            requestPermissionLauncher.launch(Manifest.permission.CAMERA)
        } else {
            setupBarcodeView()
        }
    }

    private fun setupBarcodeView() {
        barcodeView = findViewById(R.id.camera_preview)
        barcodeView.decodeContinuous(object : BarcodeCallback {
            override fun barcodeResult(result: BarcodeResult?) {
                result?.let {
                    findViewById<TextView>(R.id.text_view_result).text =
                        "Scanned: ${it.text} (${it.barcodeFormat})"
                }
            }

            override fun possibleResultPoints(resultPoints: List<com.google.zxing.ResultPoint>) {
                // Optional: handle potential result points here
            }
        })
    }

    override fun onResume() {
        super.onResume()
        barcodeView.resume()
    }

    override fun onPause() {
        super.onPause()
        barcodeView.pause()
    }
}
주요 변경 사항:
DefaultDecoderFactory 제거: 직접적으로 QR 코드와 바코드를 인식할 수 있도록 별도의 DecoderFactory 설정 없이 기본 설정을 사용합니다.
decodeContinuous 설정: BarcodeCallback을 직접 구현하여 QR 코드와 바코드를 인식합니다.
이제 이 코드를 사용하면 DefaultDecoderFactory 없이 QR 코드와 바코드를 모두 인식할 수 있습니다. 문제 없이 작동해야 합니다