정확히 이해했습니다. 요청하신 것은 다음과 같습니다:

정확히 4칸의 공백만으로 이루어진 문자열.
하나 이상의 문자(영문자, 숫자, 하이픈)와 공백의 조합이 가능한 문자열.
즉, 문자열은 정확히 4칸의 공백이거나, 공백이 포함된 하나 이상의 문자 조합이어야 합니다. 이를 매칭하기 위한 정규식을 만들려면 아래와 같은 패턴을 사용할 수 있습니다:

정규식 패턴
\s{4}: 정확히 4개의 공백을 매칭합니다.
([a-zA-Z0-9-]*\s+[a-zA-Z0-9-]*)+: 문자와 공백이 섞인 문자열을 매칭합니다. 여기서 공백이 1개 이상 포함된 문자 조합을 의미합니다.
전체적인 정규식 패턴은 다음과 같습니다:

csharp
코드 복사
string pattern = @"(\s{4}|([a-zA-Z0-9-]*\s+[a-zA-Z0-9-]*))";
예제 코드
아래는 위의 정규식을 사용하여 조건에 맞는 문자열을 찾는 C# 코드입니다:

csharp
코드 복사
using System;
using System.Text.RegularExpressions;

class Program
{
    static void Main()
    {
        string input = "abcd    12 34 xyz-123  12-abc   "; // 테스트 문자열
        string pattern = @"(\s{4}|([a-zA-Z0-9-]*\s+[a-zA-Z0-9-]*))"; // 정규식 패턴

        MatchCollection matches = Regex.Matches(input, pattern);

        foreach (Match match in matches)
        {
            if (!string.IsNullOrEmpty(match.Value.Trim()))
            {
                Console.WriteLine($"매칭된 문자열: '{match.Value}'");
            }
        }
    }
}
코드 설명
string input: 테스트할 입력 문자열입니다.
string pattern: 정규식 패턴으로, 정확히 4칸의 공백이거나 문자