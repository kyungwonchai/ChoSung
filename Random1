1. 프로젝트 설정
build.gradle (프로젝트 수준) 파일:

gradle
코드 복사
buildscript {
    ext.kotlin_version = "1.8.21"
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:8.0.2"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
build.gradle (앱 수준) 파일:

gradle
코드 복사
plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    compileSdk 34

    defaultConfig {
        applicationId "com.example.yourapp"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.compose.ui:ui:1.4.3'
    implementation 'androidx.compose.material:material:1.4.3'
    implementation 'androidx.compose.ui:ui-tooling-preview:1.4.3'
    implementation 'androidx.activity:activity-compose:1.6.1'
    implementation 'com.github.bbougot:j-cifs-ng:2.1.10'
}
2. MainActivity 설정
이제 MainActivity 파일을 수정하여 Jetpack Compose와 jcifs-ng 라이브러리를 사용하여 네트워크 폴더에 파일을 쓰도록 하겠습니다.

MainActivity.kt 파일:

kotlin
코드 복사
package com.example.yourapp

import android.os.Bundle
import android.util.Log
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.compose.foundation.layout.Arrangement
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.Row
import androidx.compose.foundation.layout.padding
import androidx.compose.material.Button
import androidx.compose.material.Text
import androidx.compose.runtime.Composable
import androidx.compose.ui.Modifier
import androidx.compose.ui.unit.dp
import kotlinx.coroutines.Dispatchers
import kotlinx.coroutines.GlobalScope
import kotlinx.coroutines.launch
import jcifs.CIFSContext
import jcifs.context.BaseContext
import jcifs.smb.NtlmPasswordAuthenticator
import jcifs.smb.SmbFile
import java.io.OutputStreamWriter

class MainActivity : ComponentActivity() {

    private lateinit var baseContext: CIFSContext

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContent {
            MyApp()
        }
        configureSmbClient()
    }

    @Composable
    fun MyApp() {
        Column(
            verticalArrangement = Arrangement.spacedBy(8.dp),
            modifier = Modifier.padding(16.dp)
        ) {
            for (i in 0..1) {
                Row(
                    horizontalArrangement = Arrangement.spacedBy(8.dp)
                ) {
                    for (j in 1..8) {
                        val label = "${i + 1}T$j"
                        Button(onClick = { writeToFile(label) }) {
                            Text(text = label)
                        }
                    }
                }
            }
        }
    }

    private fun configureSmbClient() {
        val auth = NtlmPasswordAuthenticator("username", "password")
        baseContext = BaseContext().withCredentials(auth)
    }

    private fun writeToFile(content: String) {
        GlobalScope.launch(Dispatchers.IO) {
            try {
                val url = "smb://192.168.102.1/sfolder/1.txt"
                val smbFile = SmbFile(url, baseContext)
                smbFile.outputStream.use { output ->
                    OutputStreamWriter(output).use { writer ->
                        writer.write(content)
                        writer.flush()
                    }
                }
            } catch (e: Exception) {
                Log.e("SMB", "File write error: ${e.message}")
            }
        }
    }
}
이 코드는 jcifs-ng 라이브러리를 사용하여 SMB 공유 폴더에 접근하고, 파일을 작성하는 예제입니다. Jetpack Compose를 사용하여 UI를 구성하고, 각 버튼 클릭 시 1.txt 파일에 해당 값을 기록합니다.

이제 Android Studio에서 프로젝트를 빌드하고 실행해 보세요. 문제가 발생하면 구체적인 오류 메시지를 알려주시면 추가로 도와드리겠습니다.