using System;
using System.IO;
using System.Threading.Tasks;
using System.Windows.Input;
using System.Windows;

namespace BackupApp.MVVM
{
    public class BackupCommand : ICommand
    {
        public event EventHandler CanExecuteChanged;

        public bool CanExecute(object parameter)
        {
            return true;
        }

        public async void Execute(object parameter)
        {
            await ExecuteBackupAsync();
        }

        private async Task ExecuteBackupAsync()
        {
            try
            {
                // 폴더 선택 창을 띄워 사용자에게 폴더를 선택하게 함
                using (var folderDialog = new System.Windows.Forms.FolderBrowserDialog())
                {
                    folderDialog.Description = "백업할 최종 폴더를 선택하세요.";
                    if (folderDialog.ShowDialog() == System.Windows.Forms.DialogResult.OK)
                    {
                        string sourcePath = folderDialog.SelectedPath;
                        string parentDirectory = Path.GetDirectoryName(sourcePath);
                        string folderName = Path.GetFileName(sourcePath);

                        // 현재 날짜와 시간을 yyyyMMdd_HHmmss 형식으로 가져옴
                        string timestamp = DateTime.Now.ToString("yyyyMMdd_HHmmss");

                        // 백업 폴더명 생성: 원래 폴더명 + 언더바 + 타임스탬프
                        string backupFolderName = folderName + "_" + timestamp;
                        string destinationPath = Path.Combine(parentDirectory, backupFolderName);

                        // 폴더 복사 수행
                        await CopyDirectoryAsync(sourcePath, destinationPath);

                        MessageBox.Show("폴더가 성공적으로 백업되었습니다!", "성공", MessageBoxButton.OK, MessageBoxImage.Information);
                    }
                }
            }
            catch (Exception ex)
            {
                // 에러 발생 시 에러 메시지 창 띄우기
                MessageBox.Show("에러가 발생했습니다: " + ex.Message, "에러", MessageBoxButton.OK, MessageBoxImage.Error);
            }
        }

        private async Task CopyDirectoryAsync(string sourceDir, string destinationDir)
        {
            await Task.Run(() =>
            {
                // 원본 디렉토리 정보 가져오기
                DirectoryInfo dir = new DirectoryInfo(sourceDir);

                if (!dir.Exists)
                {
                    throw new DirectoryNotFoundException("소스 디렉토리를 찾을 수 없습니다: " + sourceDir);
                }

                // 대상 디렉토리가 없으면 생성
                Directory.CreateDirectory(destinationDir);

                // 파일 복사
                FileInfo[] files = dir.GetFiles();
                foreach (FileInfo file in files)
                {
                    string tempPath = Path.Combine(destinationDir, file.Name);
                    file.CopyTo(tempPath, false);
                }

                // 하위 디렉토리 복사
                DirectoryInfo[] dirs = dir.GetDirectories();
                foreach (DirectoryInfo subdir in dirs)
                {
                    string tempPath = Path.Combine(destinationDir, subdir.Name);
                    CopyDirectoryAsync(subdir.FullName, tempPath).Wait();
                }
            });
        }
    }
}

// ViewModel에서 BackupCommand를 사용하는 예시
namespace BackupApp.MVVM
{
    public class MainViewModel
    {
        public ICommand BackupCommand { get; }

        public MainViewModel()
        {
            BackupCommand = new BackupCommand();
        }
    }