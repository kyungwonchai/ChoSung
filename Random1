ML에 신규 작업 추가 버튼을 추가하고, 버튼 클릭 시 MainViewModel의 AddNewTask 메서드를 호출하도록 설정합니다.

MainWindow.xaml - 신규 작업 추가 버튼
xml
코드 복사
<Window x:Class="SwiftAIMaster.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        Title="SwiftAIMaster" Height="450" Width="800">
    <Grid>
        <Button Content="작업 추가" HorizontalAlignment="Left" Margin="10" VerticalAlignment="Top" Width="100" Click="AddTaskButton_Click"/>

        <dxg:GridControl Name="taskGrid" ItemsSource="{Binding TaskManager.Tasks}" MouseDown="taskGrid_MouseDown" MouseMove="taskGrid_MouseMove" MouseUp="taskGrid_MouseUp">
            <dxg:GridControl.View>
                <dxg:TableView AllowPerPixelScrolling="True" />
            </dxg:GridControl.View>
            <dxg:GridControl.Columns>
                <dxg:GridColumn FieldName="Priority" Header="순위" />
                <dxg:GridColumn FieldName="CreatedTime" Header="생성시간" />
                <dxg:GridColumn FieldName="UpdateCount" Header="수정횟수" />
                <dxg:GridColumn FieldName="LastUpdateTime" Header="수정시간" />
                <dxg:GridColumn FieldName="FolderPath" Header="폴더 경로" />
                <dxg:GridColumn FieldName="CellColor" Header="셀 색상">
                    <dxg:GridColumn.CellTemplate>
                        <DataTemplate>
                            <Border Background="{Binding CellColor}" />
                        </DataTemplate>
                    </dxg:GridColumn.CellTemplate>
                </dxg:GridColumn>
                <dxg:GridColumn FieldName="Assignee" Header="담당자" />
                <dxg:GridColumn FieldName="IsCompleted" Header="완료 여부" />
            </dxg:GridControl.Columns>
        </dxg:GridControl>
    </Grid>
</Window>
2. AddTaskButton_Click 이벤트 핸들러 추가
버튼 클릭 시 MainViewModel의 AddNewTask 메서드를 호출하여 작업을 추가합니다.

csharp
코드 복사
private void AddTaskButton_Click(object sender, RoutedEventArgs e)
{
    // 예제 데이터로 새로운 작업 추가
    ViewModel.AddNewTask("새로운 폴더", "Red", "담당자");
}
3. MainViewModel.cs - AddNewTask 메서드 수정
기본적인 데이터(폴더명, 색상, 담당자)를 전달하여 신규 작업을 추가하도록 AddNewTask 메서드를 구현합니다.

csharp
코드 복사
public void AddNewTask(string folderName, string color, string assignee)
{
    var task = new TaskModel
    {
        FolderPath = folderName,
        CellColor = color,
        Assignee = assignee,
        CreatedTime = DateTime.Now,
        Priority = TaskManager.Tasks.Count + 1 // 새 작업의 우선순위 설정
    };
    
    FolderManager.AddFolder(task, folderName, color); // 폴더 중복 검사 및 추가
    TaskManager.AddTask(task);                        // 작업 추가
}
4. 초기 데이터 없는 상태에서의 오류 방지 코드
MouseDown, MouseMove, MouseUp 이벤트에서 유효한 행이 선택되었는지 확인하여 데이터가 없을 때 오류가 발생하지 않도록 설정합니다.

csharp
코드 복사
private void taskGrid_MouseDown(object sender, MouseButtonEventArgs e)
{
    var rowHandle = taskGrid.View.GetRowHandleByMouseEventArgs(e);
    if (rowHandle >= 0 && rowHandle < ViewModel.TaskManager.Tasks.Count) // 유효한 인덱스인지 확인
    {
        ViewModel.OnMouseDown(rowHandle);
    }
}

private void taskGrid_MouseMove(object sender, MouseEventArgs e)
{
    if (e.LeftButton == MouseButtonState.Pressed)
    {
        ViewModel.OnMouseMove();
    }
}

private void taskGrid_MouseUp(object sender, MouseButtonEventArgs e)
{
    var rowHandle = taskGrid.View.GetRowHandleByMouseEventArgs(e);
    if (rowHandle >= 0 && rowHandle < ViewModel.TaskManager.Tasks.Count) // 유효한 인덱스인지 확인
    {
        ViewModel.OnMouseUp(rowHandle);
    }
}
설명
AddTaskButton_Click: 버튼 클릭 시 MainViewModel의 AddNewTask 메서드를 호출하여 신규 작업을 추가합니다.
AddNewTask 메서드: 기본 데이터를 사용하여 새 작업을 추가하고 FolderManager와 TaskManager를 통해 데이터를 업데이트합니다.
Mouse 이벤트 수정: 유효한 인덱스(rowHandle >= 0 && rowHandle < Tasks.Count)인지 확인하여 데이터가 없는 상태에서도 오류가 발생하지 않도록 합니다.
이제 AddNewTask를 통해 새로운 작업을 추가할 수 있으며, 데이터가 없는 초기 상태에서도 오류가 발생하지 않을 것입니다. 추가로 궁금한 점이나 수