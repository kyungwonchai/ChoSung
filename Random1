Express의 WPF 날짜 선택기(DateEdit)를 사용하여 시작일과 종료일을 선택하고, 검색 버튼을 클릭했을 때 선택된 날짜를 메시지 박스에 표시하는 예제 코드를 제공하겠습니다. 코드는 XAML과 C# 두 부분으로 나누어 설명하겠습니다.

XAML 코드
XAML 부분에서는 두 개의 DateEdit 컨트롤과 하나의 버튼을 배치합니다.

xml
Copy code
<Window x:Class="YourNamespace.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
        Title="MainWindow" Height="350" Width="525">
    <Grid>
        <StackPanel>
            <dxe:DateEdit x:Name="startDateEdit" EditValue="{Binding StartDate}"/>
            <dxe:DateEdit x:Name="endDateEdit" EditValue="{Binding EndDate}"/>
            <Button Content="검색" Click="OnSearchButtonClick"/>
        </StackPanel>
    </Grid>
</Window>
C# 코드
C# 부분에서는 버튼의 클릭 이벤트를 처리하여 메시지 박스에 날짜를 표시합니다.

csharp
Copy code
using System;
using System.Windows;
using DevExpress.Xpf.Editors;

namespace YourNamespace
{
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
        }

        private void OnSearchButtonClick(object sender, RoutedEventArgs e)
        {
            var startDate = startDateEdit.EditValue as DateTime?;
            var endDate = endDateEdit.EditValue as DateTime?;

            string message = $"시작일: {startDate?.ToShortDateString() ?? "선택되지 않음"}, " +
                             $"종료일: {endDate?.ToShortDateString() ?? "선택되지 않음"}";
            MessageBox.Show(message);
        }
    }
}
이 코드에서는 startDateEdit와 endDateEdit를 통해 시작일과 종료일을 가져옵니다. 이후, MessageBox.Show를 사용하여 선택된 날짜를 사용자에게 표시합니다.

위 코드를 사용하기 전에, DevExpress WPF 라이브러리가 프로젝트에 추가되어 있어야 하며, YourNamespace 부분은 실제 프로젝트의 네임스페이스로 변경해야 합니다.





