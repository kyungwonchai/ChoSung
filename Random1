배경색을 변경하려면, 단일 lockedKeyValue 대신 List<int> 또는 HashSet<int>를 사용할 수 있습니다. 그리고 해당 키 값들을 포함하는 모든 행의 배경색을 변경할 수 있습니다.

아래는 그에 대한 예입니다:

csharp

using System.Collections.Generic;
using System.Windows.Media;
using DevExpress.Xpf.Grid;

// 클래스 필드로 HashSet 정의
private HashSet<int> lockedKeyValues = new HashSet<int>();

// 여러 키를 받아와서 HashSet에 저장
private void LockAndChangeColors(List<int> keyValues)
{
    lockedKeyValues = new HashSet<int>(keyValues);
    (gridControl1.View as TableView).RefreshData();
}

// RowStyle 이벤트 핸들러
private void OnRowStyle(object sender, RowStyleEventArgs e)
{
    if (e.RowHandle == GridControl.InvalidRowHandle)
        return;

    TableView view = sender as TableView;
    object cellValue = view.Grid.GetCellValue(e.RowHandle, "key1");

    if (cellValue != null && lockedKeyValues.Contains((int)cellValue))
    {
        e.Style = new Style(typeof(RowControl));
        e.Style.Setters.Add(new Setter(RowControl.BackgroundProperty, new SolidColorBrush(Colors.Yellow)));
    }
}

SignalR에서 받은 키 리스트를 LockAndChangeColors 함수에 전달하면 해당 키 값에 맞는 모든 행의 배경색이 노란색으로 변경될 것입니다.

예를 들어 SignalR에서 [511162, 511163]와 같은 리스트를 받으면, 이 두 키 값에 해당하는 행 모두가 노란색으로 바뀔 것입